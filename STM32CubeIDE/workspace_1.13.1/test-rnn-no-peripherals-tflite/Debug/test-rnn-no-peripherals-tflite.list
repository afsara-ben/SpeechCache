
test-rnn-no-peripherals-tflite.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000114e8  08000200  08000200  00010200  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000257e8  08011700  08011700  00021700  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08036ee8  08036ee8  00051ef4  2**0
                  CONTENTS
  4 .ARM          00000008  08036ee8  08036ee8  00046ee8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08036ef0  08036ef0  00051ef4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08036ef0  08036ef0  00046ef0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08036ef4  08036ef4  00046ef4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00001ef4  20000000  08036ef8  00050000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0001bb14  20001f00  08038dec  00051f00  2**5
                  ALLOC
 10 ._user_heap_stack 00001004  2001da14  08038dec  0005da14  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  00051ef4  2**0
                  CONTENTS, READONLY
 12 .comment      00000093  00000000  00000000  00051f22  2**0
                  CONTENTS, READONLY
 13 .debug_info   0001767d  00000000  00000000  00051fb5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00003bf0  00000000  00000000  00069632  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_loclists 000060f1  00000000  00000000  0006d222  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 000009c8  00000000  00000000  00073318  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00000ba2  00000000  00000000  00073ce0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  000316a2  00000000  00000000  00074882  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00016046  00000000  00000000  000a5f24  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    001212a2  00000000  00000000  000bbf6a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00002b48  00000000  00000000  001dd20c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000077  00000000  00000000  001dfd54  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000200 <__do_global_dtors_aux>:
 8000200:	b510      	push	{r4, lr}
 8000202:	4c05      	ldr	r4, [pc, #20]	; (8000218 <__do_global_dtors_aux+0x18>)
 8000204:	7823      	ldrb	r3, [r4, #0]
 8000206:	b933      	cbnz	r3, 8000216 <__do_global_dtors_aux+0x16>
 8000208:	4b04      	ldr	r3, [pc, #16]	; (800021c <__do_global_dtors_aux+0x1c>)
 800020a:	b113      	cbz	r3, 8000212 <__do_global_dtors_aux+0x12>
 800020c:	4804      	ldr	r0, [pc, #16]	; (8000220 <__do_global_dtors_aux+0x20>)
 800020e:	f3af 8000 	nop.w
 8000212:	2301      	movs	r3, #1
 8000214:	7023      	strb	r3, [r4, #0]
 8000216:	bd10      	pop	{r4, pc}
 8000218:	20001f00 	.word	0x20001f00
 800021c:	00000000 	.word	0x00000000
 8000220:	080116d0 	.word	0x080116d0

08000224 <frame_dummy>:
 8000224:	b508      	push	{r3, lr}
 8000226:	4b03      	ldr	r3, [pc, #12]	; (8000234 <frame_dummy+0x10>)
 8000228:	b11b      	cbz	r3, 8000232 <frame_dummy+0xe>
 800022a:	4903      	ldr	r1, [pc, #12]	; (8000238 <frame_dummy+0x14>)
 800022c:	4803      	ldr	r0, [pc, #12]	; (800023c <frame_dummy+0x18>)
 800022e:	f3af 8000 	nop.w
 8000232:	bd08      	pop	{r3, pc}
 8000234:	00000000 	.word	0x00000000
 8000238:	20001f04 	.word	0x20001f04
 800023c:	080116d0 	.word	0x080116d0

08000240 <memchr>:
 8000240:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000244:	2a10      	cmp	r2, #16
 8000246:	db2b      	blt.n	80002a0 <memchr+0x60>
 8000248:	f010 0f07 	tst.w	r0, #7
 800024c:	d008      	beq.n	8000260 <memchr+0x20>
 800024e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000252:	3a01      	subs	r2, #1
 8000254:	428b      	cmp	r3, r1
 8000256:	d02d      	beq.n	80002b4 <memchr+0x74>
 8000258:	f010 0f07 	tst.w	r0, #7
 800025c:	b342      	cbz	r2, 80002b0 <memchr+0x70>
 800025e:	d1f6      	bne.n	800024e <memchr+0xe>
 8000260:	b4f0      	push	{r4, r5, r6, r7}
 8000262:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000266:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800026a:	f022 0407 	bic.w	r4, r2, #7
 800026e:	f07f 0700 	mvns.w	r7, #0
 8000272:	2300      	movs	r3, #0
 8000274:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000278:	3c08      	subs	r4, #8
 800027a:	ea85 0501 	eor.w	r5, r5, r1
 800027e:	ea86 0601 	eor.w	r6, r6, r1
 8000282:	fa85 f547 	uadd8	r5, r5, r7
 8000286:	faa3 f587 	sel	r5, r3, r7
 800028a:	fa86 f647 	uadd8	r6, r6, r7
 800028e:	faa5 f687 	sel	r6, r5, r7
 8000292:	b98e      	cbnz	r6, 80002b8 <memchr+0x78>
 8000294:	d1ee      	bne.n	8000274 <memchr+0x34>
 8000296:	bcf0      	pop	{r4, r5, r6, r7}
 8000298:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800029c:	f002 0207 	and.w	r2, r2, #7
 80002a0:	b132      	cbz	r2, 80002b0 <memchr+0x70>
 80002a2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002a6:	3a01      	subs	r2, #1
 80002a8:	ea83 0301 	eor.w	r3, r3, r1
 80002ac:	b113      	cbz	r3, 80002b4 <memchr+0x74>
 80002ae:	d1f8      	bne.n	80002a2 <memchr+0x62>
 80002b0:	2000      	movs	r0, #0
 80002b2:	4770      	bx	lr
 80002b4:	3801      	subs	r0, #1
 80002b6:	4770      	bx	lr
 80002b8:	2d00      	cmp	r5, #0
 80002ba:	bf06      	itte	eq
 80002bc:	4635      	moveq	r5, r6
 80002be:	3803      	subeq	r0, #3
 80002c0:	3807      	subne	r0, #7
 80002c2:	f015 0f01 	tst.w	r5, #1
 80002c6:	d107      	bne.n	80002d8 <memchr+0x98>
 80002c8:	3001      	adds	r0, #1
 80002ca:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ce:	bf02      	ittt	eq
 80002d0:	3001      	addeq	r0, #1
 80002d2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002d6:	3001      	addeq	r0, #1
 80002d8:	bcf0      	pop	{r4, r5, r6, r7}
 80002da:	3801      	subs	r0, #1
 80002dc:	4770      	bx	lr
 80002de:	bf00      	nop

080002e0 <strlen>:
 80002e0:	4603      	mov	r3, r0
 80002e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002e6:	2a00      	cmp	r2, #0
 80002e8:	d1fb      	bne.n	80002e2 <strlen+0x2>
 80002ea:	1a18      	subs	r0, r3, r0
 80002ec:	3801      	subs	r0, #1
 80002ee:	4770      	bx	lr

080002f0 <__aeabi_drsub>:
 80002f0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002f4:	e002      	b.n	80002fc <__adddf3>
 80002f6:	bf00      	nop

080002f8 <__aeabi_dsub>:
 80002f8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002fc <__adddf3>:
 80002fc:	b530      	push	{r4, r5, lr}
 80002fe:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000302:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000306:	ea94 0f05 	teq	r4, r5
 800030a:	bf08      	it	eq
 800030c:	ea90 0f02 	teqeq	r0, r2
 8000310:	bf1f      	itttt	ne
 8000312:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000316:	ea55 0c02 	orrsne.w	ip, r5, r2
 800031a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800031e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000322:	f000 80e2 	beq.w	80004ea <__adddf3+0x1ee>
 8000326:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800032a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800032e:	bfb8      	it	lt
 8000330:	426d      	neglt	r5, r5
 8000332:	dd0c      	ble.n	800034e <__adddf3+0x52>
 8000334:	442c      	add	r4, r5
 8000336:	ea80 0202 	eor.w	r2, r0, r2
 800033a:	ea81 0303 	eor.w	r3, r1, r3
 800033e:	ea82 0000 	eor.w	r0, r2, r0
 8000342:	ea83 0101 	eor.w	r1, r3, r1
 8000346:	ea80 0202 	eor.w	r2, r0, r2
 800034a:	ea81 0303 	eor.w	r3, r1, r3
 800034e:	2d36      	cmp	r5, #54	; 0x36
 8000350:	bf88      	it	hi
 8000352:	bd30      	pophi	{r4, r5, pc}
 8000354:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000358:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800035c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000360:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000364:	d002      	beq.n	800036c <__adddf3+0x70>
 8000366:	4240      	negs	r0, r0
 8000368:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800036c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000370:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000374:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000378:	d002      	beq.n	8000380 <__adddf3+0x84>
 800037a:	4252      	negs	r2, r2
 800037c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000380:	ea94 0f05 	teq	r4, r5
 8000384:	f000 80a7 	beq.w	80004d6 <__adddf3+0x1da>
 8000388:	f1a4 0401 	sub.w	r4, r4, #1
 800038c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000390:	db0d      	blt.n	80003ae <__adddf3+0xb2>
 8000392:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000396:	fa22 f205 	lsr.w	r2, r2, r5
 800039a:	1880      	adds	r0, r0, r2
 800039c:	f141 0100 	adc.w	r1, r1, #0
 80003a0:	fa03 f20e 	lsl.w	r2, r3, lr
 80003a4:	1880      	adds	r0, r0, r2
 80003a6:	fa43 f305 	asr.w	r3, r3, r5
 80003aa:	4159      	adcs	r1, r3
 80003ac:	e00e      	b.n	80003cc <__adddf3+0xd0>
 80003ae:	f1a5 0520 	sub.w	r5, r5, #32
 80003b2:	f10e 0e20 	add.w	lr, lr, #32
 80003b6:	2a01      	cmp	r2, #1
 80003b8:	fa03 fc0e 	lsl.w	ip, r3, lr
 80003bc:	bf28      	it	cs
 80003be:	f04c 0c02 	orrcs.w	ip, ip, #2
 80003c2:	fa43 f305 	asr.w	r3, r3, r5
 80003c6:	18c0      	adds	r0, r0, r3
 80003c8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80003cc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003d0:	d507      	bpl.n	80003e2 <__adddf3+0xe6>
 80003d2:	f04f 0e00 	mov.w	lr, #0
 80003d6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003da:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003de:	eb6e 0101 	sbc.w	r1, lr, r1
 80003e2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003e6:	d31b      	bcc.n	8000420 <__adddf3+0x124>
 80003e8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003ec:	d30c      	bcc.n	8000408 <__adddf3+0x10c>
 80003ee:	0849      	lsrs	r1, r1, #1
 80003f0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003f4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003f8:	f104 0401 	add.w	r4, r4, #1
 80003fc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000400:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000404:	f080 809a 	bcs.w	800053c <__adddf3+0x240>
 8000408:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800040c:	bf08      	it	eq
 800040e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000412:	f150 0000 	adcs.w	r0, r0, #0
 8000416:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800041a:	ea41 0105 	orr.w	r1, r1, r5
 800041e:	bd30      	pop	{r4, r5, pc}
 8000420:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000424:	4140      	adcs	r0, r0
 8000426:	eb41 0101 	adc.w	r1, r1, r1
 800042a:	3c01      	subs	r4, #1
 800042c:	bf28      	it	cs
 800042e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000432:	d2e9      	bcs.n	8000408 <__adddf3+0x10c>
 8000434:	f091 0f00 	teq	r1, #0
 8000438:	bf04      	itt	eq
 800043a:	4601      	moveq	r1, r0
 800043c:	2000      	moveq	r0, #0
 800043e:	fab1 f381 	clz	r3, r1
 8000442:	bf08      	it	eq
 8000444:	3320      	addeq	r3, #32
 8000446:	f1a3 030b 	sub.w	r3, r3, #11
 800044a:	f1b3 0220 	subs.w	r2, r3, #32
 800044e:	da0c      	bge.n	800046a <__adddf3+0x16e>
 8000450:	320c      	adds	r2, #12
 8000452:	dd08      	ble.n	8000466 <__adddf3+0x16a>
 8000454:	f102 0c14 	add.w	ip, r2, #20
 8000458:	f1c2 020c 	rsb	r2, r2, #12
 800045c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000460:	fa21 f102 	lsr.w	r1, r1, r2
 8000464:	e00c      	b.n	8000480 <__adddf3+0x184>
 8000466:	f102 0214 	add.w	r2, r2, #20
 800046a:	bfd8      	it	le
 800046c:	f1c2 0c20 	rsble	ip, r2, #32
 8000470:	fa01 f102 	lsl.w	r1, r1, r2
 8000474:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000478:	bfdc      	itt	le
 800047a:	ea41 010c 	orrle.w	r1, r1, ip
 800047e:	4090      	lslle	r0, r2
 8000480:	1ae4      	subs	r4, r4, r3
 8000482:	bfa2      	ittt	ge
 8000484:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000488:	4329      	orrge	r1, r5
 800048a:	bd30      	popge	{r4, r5, pc}
 800048c:	ea6f 0404 	mvn.w	r4, r4
 8000490:	3c1f      	subs	r4, #31
 8000492:	da1c      	bge.n	80004ce <__adddf3+0x1d2>
 8000494:	340c      	adds	r4, #12
 8000496:	dc0e      	bgt.n	80004b6 <__adddf3+0x1ba>
 8000498:	f104 0414 	add.w	r4, r4, #20
 800049c:	f1c4 0220 	rsb	r2, r4, #32
 80004a0:	fa20 f004 	lsr.w	r0, r0, r4
 80004a4:	fa01 f302 	lsl.w	r3, r1, r2
 80004a8:	ea40 0003 	orr.w	r0, r0, r3
 80004ac:	fa21 f304 	lsr.w	r3, r1, r4
 80004b0:	ea45 0103 	orr.w	r1, r5, r3
 80004b4:	bd30      	pop	{r4, r5, pc}
 80004b6:	f1c4 040c 	rsb	r4, r4, #12
 80004ba:	f1c4 0220 	rsb	r2, r4, #32
 80004be:	fa20 f002 	lsr.w	r0, r0, r2
 80004c2:	fa01 f304 	lsl.w	r3, r1, r4
 80004c6:	ea40 0003 	orr.w	r0, r0, r3
 80004ca:	4629      	mov	r1, r5
 80004cc:	bd30      	pop	{r4, r5, pc}
 80004ce:	fa21 f004 	lsr.w	r0, r1, r4
 80004d2:	4629      	mov	r1, r5
 80004d4:	bd30      	pop	{r4, r5, pc}
 80004d6:	f094 0f00 	teq	r4, #0
 80004da:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004de:	bf06      	itte	eq
 80004e0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004e4:	3401      	addeq	r4, #1
 80004e6:	3d01      	subne	r5, #1
 80004e8:	e74e      	b.n	8000388 <__adddf3+0x8c>
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf18      	it	ne
 80004f0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004f4:	d029      	beq.n	800054a <__adddf3+0x24e>
 80004f6:	ea94 0f05 	teq	r4, r5
 80004fa:	bf08      	it	eq
 80004fc:	ea90 0f02 	teqeq	r0, r2
 8000500:	d005      	beq.n	800050e <__adddf3+0x212>
 8000502:	ea54 0c00 	orrs.w	ip, r4, r0
 8000506:	bf04      	itt	eq
 8000508:	4619      	moveq	r1, r3
 800050a:	4610      	moveq	r0, r2
 800050c:	bd30      	pop	{r4, r5, pc}
 800050e:	ea91 0f03 	teq	r1, r3
 8000512:	bf1e      	ittt	ne
 8000514:	2100      	movne	r1, #0
 8000516:	2000      	movne	r0, #0
 8000518:	bd30      	popne	{r4, r5, pc}
 800051a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800051e:	d105      	bne.n	800052c <__adddf3+0x230>
 8000520:	0040      	lsls	r0, r0, #1
 8000522:	4149      	adcs	r1, r1
 8000524:	bf28      	it	cs
 8000526:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800052a:	bd30      	pop	{r4, r5, pc}
 800052c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000530:	bf3c      	itt	cc
 8000532:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000536:	bd30      	popcc	{r4, r5, pc}
 8000538:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800053c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000540:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000544:	f04f 0000 	mov.w	r0, #0
 8000548:	bd30      	pop	{r4, r5, pc}
 800054a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800054e:	bf1a      	itte	ne
 8000550:	4619      	movne	r1, r3
 8000552:	4610      	movne	r0, r2
 8000554:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000558:	bf1c      	itt	ne
 800055a:	460b      	movne	r3, r1
 800055c:	4602      	movne	r2, r0
 800055e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000562:	bf06      	itte	eq
 8000564:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000568:	ea91 0f03 	teqeq	r1, r3
 800056c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000570:	bd30      	pop	{r4, r5, pc}
 8000572:	bf00      	nop

08000574 <__aeabi_ui2d>:
 8000574:	f090 0f00 	teq	r0, #0
 8000578:	bf04      	itt	eq
 800057a:	2100      	moveq	r1, #0
 800057c:	4770      	bxeq	lr
 800057e:	b530      	push	{r4, r5, lr}
 8000580:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000584:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000588:	f04f 0500 	mov.w	r5, #0
 800058c:	f04f 0100 	mov.w	r1, #0
 8000590:	e750      	b.n	8000434 <__adddf3+0x138>
 8000592:	bf00      	nop

08000594 <__aeabi_i2d>:
 8000594:	f090 0f00 	teq	r0, #0
 8000598:	bf04      	itt	eq
 800059a:	2100      	moveq	r1, #0
 800059c:	4770      	bxeq	lr
 800059e:	b530      	push	{r4, r5, lr}
 80005a0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005a4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005a8:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80005ac:	bf48      	it	mi
 80005ae:	4240      	negmi	r0, r0
 80005b0:	f04f 0100 	mov.w	r1, #0
 80005b4:	e73e      	b.n	8000434 <__adddf3+0x138>
 80005b6:	bf00      	nop

080005b8 <__aeabi_f2d>:
 80005b8:	0042      	lsls	r2, r0, #1
 80005ba:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80005be:	ea4f 0131 	mov.w	r1, r1, rrx
 80005c2:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80005c6:	bf1f      	itttt	ne
 80005c8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80005cc:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005d0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005d4:	4770      	bxne	lr
 80005d6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005da:	bf08      	it	eq
 80005dc:	4770      	bxeq	lr
 80005de:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005e2:	bf04      	itt	eq
 80005e4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005e8:	4770      	bxeq	lr
 80005ea:	b530      	push	{r4, r5, lr}
 80005ec:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005f0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005f4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005f8:	e71c      	b.n	8000434 <__adddf3+0x138>
 80005fa:	bf00      	nop

080005fc <__aeabi_ul2d>:
 80005fc:	ea50 0201 	orrs.w	r2, r0, r1
 8000600:	bf08      	it	eq
 8000602:	4770      	bxeq	lr
 8000604:	b530      	push	{r4, r5, lr}
 8000606:	f04f 0500 	mov.w	r5, #0
 800060a:	e00a      	b.n	8000622 <__aeabi_l2d+0x16>

0800060c <__aeabi_l2d>:
 800060c:	ea50 0201 	orrs.w	r2, r0, r1
 8000610:	bf08      	it	eq
 8000612:	4770      	bxeq	lr
 8000614:	b530      	push	{r4, r5, lr}
 8000616:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800061a:	d502      	bpl.n	8000622 <__aeabi_l2d+0x16>
 800061c:	4240      	negs	r0, r0
 800061e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000622:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000626:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800062a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800062e:	f43f aed8 	beq.w	80003e2 <__adddf3+0xe6>
 8000632:	f04f 0203 	mov.w	r2, #3
 8000636:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800063a:	bf18      	it	ne
 800063c:	3203      	addne	r2, #3
 800063e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000642:	bf18      	it	ne
 8000644:	3203      	addne	r2, #3
 8000646:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800064a:	f1c2 0320 	rsb	r3, r2, #32
 800064e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000652:	fa20 f002 	lsr.w	r0, r0, r2
 8000656:	fa01 fe03 	lsl.w	lr, r1, r3
 800065a:	ea40 000e 	orr.w	r0, r0, lr
 800065e:	fa21 f102 	lsr.w	r1, r1, r2
 8000662:	4414      	add	r4, r2
 8000664:	e6bd      	b.n	80003e2 <__adddf3+0xe6>
 8000666:	bf00      	nop

08000668 <__aeabi_uldivmod>:
 8000668:	b953      	cbnz	r3, 8000680 <__aeabi_uldivmod+0x18>
 800066a:	b94a      	cbnz	r2, 8000680 <__aeabi_uldivmod+0x18>
 800066c:	2900      	cmp	r1, #0
 800066e:	bf08      	it	eq
 8000670:	2800      	cmpeq	r0, #0
 8000672:	bf1c      	itt	ne
 8000674:	f04f 31ff 	movne.w	r1, #4294967295
 8000678:	f04f 30ff 	movne.w	r0, #4294967295
 800067c:	f000 b9c4 	b.w	8000a08 <__aeabi_idiv0>
 8000680:	f1ad 0c08 	sub.w	ip, sp, #8
 8000684:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000688:	f000 f85a 	bl	8000740 <__udivmoddi4>
 800068c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000690:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000694:	b004      	add	sp, #16
 8000696:	4770      	bx	lr

08000698 <__aeabi_f2lz>:
 8000698:	ee07 0a90 	vmov	s15, r0
 800069c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80006a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80006a4:	d401      	bmi.n	80006aa <__aeabi_f2lz+0x12>
 80006a6:	f000 b80b 	b.w	80006c0 <__aeabi_f2ulz>
 80006aa:	eef1 7a67 	vneg.f32	s15, s15
 80006ae:	b508      	push	{r3, lr}
 80006b0:	ee17 0a90 	vmov	r0, s15
 80006b4:	f000 f804 	bl	80006c0 <__aeabi_f2ulz>
 80006b8:	4240      	negs	r0, r0
 80006ba:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80006be:	bd08      	pop	{r3, pc}

080006c0 <__aeabi_f2ulz>:
 80006c0:	ed9f 6b0b 	vldr	d6, [pc, #44]	; 80006f0 <__aeabi_f2ulz+0x30>
 80006c4:	ee07 0a90 	vmov	s15, r0
 80006c8:	ed9f 5b0b 	vldr	d5, [pc, #44]	; 80006f8 <__aeabi_f2ulz+0x38>
 80006cc:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80006d0:	ee27 6b06 	vmul.f64	d6, d7, d6
 80006d4:	eebc 6bc6 	vcvt.u32.f64	s12, d6
 80006d8:	eeb8 4b46 	vcvt.f64.u32	d4, s12
 80006dc:	eea4 7b45 	vfms.f64	d7, d4, d5
 80006e0:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 80006e4:	ee16 1a10 	vmov	r1, s12
 80006e8:	ee17 0a90 	vmov	r0, s15
 80006ec:	4770      	bx	lr
 80006ee:	bf00      	nop
 80006f0:	00000000 	.word	0x00000000
 80006f4:	3df00000 	.word	0x3df00000
 80006f8:	00000000 	.word	0x00000000
 80006fc:	41f00000 	.word	0x41f00000

08000700 <__aeabi_d2ulz>:
 8000700:	ed9f 6b0b 	vldr	d6, [pc, #44]	; 8000730 <__aeabi_d2ulz+0x30>
 8000704:	ec41 0b17 	vmov	d7, r0, r1
 8000708:	ed9f 5b0b 	vldr	d5, [pc, #44]	; 8000738 <__aeabi_d2ulz+0x38>
 800070c:	ee27 6b06 	vmul.f64	d6, d7, d6
 8000710:	eebc 6bc6 	vcvt.u32.f64	s12, d6
 8000714:	eeb8 4b46 	vcvt.f64.u32	d4, s12
 8000718:	eea4 7b45 	vfms.f64	d7, d4, d5
 800071c:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8000720:	ee16 1a10 	vmov	r1, s12
 8000724:	ee17 0a90 	vmov	r0, s15
 8000728:	4770      	bx	lr
 800072a:	bf00      	nop
 800072c:	f3af 8000 	nop.w
 8000730:	00000000 	.word	0x00000000
 8000734:	3df00000 	.word	0x3df00000
 8000738:	00000000 	.word	0x00000000
 800073c:	41f00000 	.word	0x41f00000

08000740 <__udivmoddi4>:
 8000740:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000744:	9e08      	ldr	r6, [sp, #32]
 8000746:	460d      	mov	r5, r1
 8000748:	4604      	mov	r4, r0
 800074a:	460f      	mov	r7, r1
 800074c:	2b00      	cmp	r3, #0
 800074e:	d14a      	bne.n	80007e6 <__udivmoddi4+0xa6>
 8000750:	428a      	cmp	r2, r1
 8000752:	4694      	mov	ip, r2
 8000754:	d965      	bls.n	8000822 <__udivmoddi4+0xe2>
 8000756:	fab2 f382 	clz	r3, r2
 800075a:	b143      	cbz	r3, 800076e <__udivmoddi4+0x2e>
 800075c:	fa02 fc03 	lsl.w	ip, r2, r3
 8000760:	f1c3 0220 	rsb	r2, r3, #32
 8000764:	409f      	lsls	r7, r3
 8000766:	fa20 f202 	lsr.w	r2, r0, r2
 800076a:	4317      	orrs	r7, r2
 800076c:	409c      	lsls	r4, r3
 800076e:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000772:	fa1f f58c 	uxth.w	r5, ip
 8000776:	fbb7 f1fe 	udiv	r1, r7, lr
 800077a:	0c22      	lsrs	r2, r4, #16
 800077c:	fb0e 7711 	mls	r7, lr, r1, r7
 8000780:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000784:	fb01 f005 	mul.w	r0, r1, r5
 8000788:	4290      	cmp	r0, r2
 800078a:	d90a      	bls.n	80007a2 <__udivmoddi4+0x62>
 800078c:	eb1c 0202 	adds.w	r2, ip, r2
 8000790:	f101 37ff 	add.w	r7, r1, #4294967295
 8000794:	f080 811c 	bcs.w	80009d0 <__udivmoddi4+0x290>
 8000798:	4290      	cmp	r0, r2
 800079a:	f240 8119 	bls.w	80009d0 <__udivmoddi4+0x290>
 800079e:	3902      	subs	r1, #2
 80007a0:	4462      	add	r2, ip
 80007a2:	1a12      	subs	r2, r2, r0
 80007a4:	b2a4      	uxth	r4, r4
 80007a6:	fbb2 f0fe 	udiv	r0, r2, lr
 80007aa:	fb0e 2210 	mls	r2, lr, r0, r2
 80007ae:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80007b2:	fb00 f505 	mul.w	r5, r0, r5
 80007b6:	42a5      	cmp	r5, r4
 80007b8:	d90a      	bls.n	80007d0 <__udivmoddi4+0x90>
 80007ba:	eb1c 0404 	adds.w	r4, ip, r4
 80007be:	f100 32ff 	add.w	r2, r0, #4294967295
 80007c2:	f080 8107 	bcs.w	80009d4 <__udivmoddi4+0x294>
 80007c6:	42a5      	cmp	r5, r4
 80007c8:	f240 8104 	bls.w	80009d4 <__udivmoddi4+0x294>
 80007cc:	4464      	add	r4, ip
 80007ce:	3802      	subs	r0, #2
 80007d0:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80007d4:	1b64      	subs	r4, r4, r5
 80007d6:	2100      	movs	r1, #0
 80007d8:	b11e      	cbz	r6, 80007e2 <__udivmoddi4+0xa2>
 80007da:	40dc      	lsrs	r4, r3
 80007dc:	2300      	movs	r3, #0
 80007de:	e9c6 4300 	strd	r4, r3, [r6]
 80007e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80007e6:	428b      	cmp	r3, r1
 80007e8:	d908      	bls.n	80007fc <__udivmoddi4+0xbc>
 80007ea:	2e00      	cmp	r6, #0
 80007ec:	f000 80ed 	beq.w	80009ca <__udivmoddi4+0x28a>
 80007f0:	2100      	movs	r1, #0
 80007f2:	e9c6 0500 	strd	r0, r5, [r6]
 80007f6:	4608      	mov	r0, r1
 80007f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80007fc:	fab3 f183 	clz	r1, r3
 8000800:	2900      	cmp	r1, #0
 8000802:	d149      	bne.n	8000898 <__udivmoddi4+0x158>
 8000804:	42ab      	cmp	r3, r5
 8000806:	d302      	bcc.n	800080e <__udivmoddi4+0xce>
 8000808:	4282      	cmp	r2, r0
 800080a:	f200 80f8 	bhi.w	80009fe <__udivmoddi4+0x2be>
 800080e:	1a84      	subs	r4, r0, r2
 8000810:	eb65 0203 	sbc.w	r2, r5, r3
 8000814:	2001      	movs	r0, #1
 8000816:	4617      	mov	r7, r2
 8000818:	2e00      	cmp	r6, #0
 800081a:	d0e2      	beq.n	80007e2 <__udivmoddi4+0xa2>
 800081c:	e9c6 4700 	strd	r4, r7, [r6]
 8000820:	e7df      	b.n	80007e2 <__udivmoddi4+0xa2>
 8000822:	b902      	cbnz	r2, 8000826 <__udivmoddi4+0xe6>
 8000824:	deff      	udf	#255	; 0xff
 8000826:	fab2 f382 	clz	r3, r2
 800082a:	2b00      	cmp	r3, #0
 800082c:	f040 8090 	bne.w	8000950 <__udivmoddi4+0x210>
 8000830:	1a8a      	subs	r2, r1, r2
 8000832:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000836:	fa1f fe8c 	uxth.w	lr, ip
 800083a:	2101      	movs	r1, #1
 800083c:	fbb2 f5f7 	udiv	r5, r2, r7
 8000840:	fb07 2015 	mls	r0, r7, r5, r2
 8000844:	0c22      	lsrs	r2, r4, #16
 8000846:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800084a:	fb0e f005 	mul.w	r0, lr, r5
 800084e:	4290      	cmp	r0, r2
 8000850:	d908      	bls.n	8000864 <__udivmoddi4+0x124>
 8000852:	eb1c 0202 	adds.w	r2, ip, r2
 8000856:	f105 38ff 	add.w	r8, r5, #4294967295
 800085a:	d202      	bcs.n	8000862 <__udivmoddi4+0x122>
 800085c:	4290      	cmp	r0, r2
 800085e:	f200 80cb 	bhi.w	80009f8 <__udivmoddi4+0x2b8>
 8000862:	4645      	mov	r5, r8
 8000864:	1a12      	subs	r2, r2, r0
 8000866:	b2a4      	uxth	r4, r4
 8000868:	fbb2 f0f7 	udiv	r0, r2, r7
 800086c:	fb07 2210 	mls	r2, r7, r0, r2
 8000870:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000874:	fb0e fe00 	mul.w	lr, lr, r0
 8000878:	45a6      	cmp	lr, r4
 800087a:	d908      	bls.n	800088e <__udivmoddi4+0x14e>
 800087c:	eb1c 0404 	adds.w	r4, ip, r4
 8000880:	f100 32ff 	add.w	r2, r0, #4294967295
 8000884:	d202      	bcs.n	800088c <__udivmoddi4+0x14c>
 8000886:	45a6      	cmp	lr, r4
 8000888:	f200 80bb 	bhi.w	8000a02 <__udivmoddi4+0x2c2>
 800088c:	4610      	mov	r0, r2
 800088e:	eba4 040e 	sub.w	r4, r4, lr
 8000892:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000896:	e79f      	b.n	80007d8 <__udivmoddi4+0x98>
 8000898:	f1c1 0720 	rsb	r7, r1, #32
 800089c:	408b      	lsls	r3, r1
 800089e:	fa22 fc07 	lsr.w	ip, r2, r7
 80008a2:	ea4c 0c03 	orr.w	ip, ip, r3
 80008a6:	fa05 f401 	lsl.w	r4, r5, r1
 80008aa:	fa20 f307 	lsr.w	r3, r0, r7
 80008ae:	40fd      	lsrs	r5, r7
 80008b0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80008b4:	4323      	orrs	r3, r4
 80008b6:	fbb5 f8f9 	udiv	r8, r5, r9
 80008ba:	fa1f fe8c 	uxth.w	lr, ip
 80008be:	fb09 5518 	mls	r5, r9, r8, r5
 80008c2:	0c1c      	lsrs	r4, r3, #16
 80008c4:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 80008c8:	fb08 f50e 	mul.w	r5, r8, lr
 80008cc:	42a5      	cmp	r5, r4
 80008ce:	fa02 f201 	lsl.w	r2, r2, r1
 80008d2:	fa00 f001 	lsl.w	r0, r0, r1
 80008d6:	d90b      	bls.n	80008f0 <__udivmoddi4+0x1b0>
 80008d8:	eb1c 0404 	adds.w	r4, ip, r4
 80008dc:	f108 3aff 	add.w	sl, r8, #4294967295
 80008e0:	f080 8088 	bcs.w	80009f4 <__udivmoddi4+0x2b4>
 80008e4:	42a5      	cmp	r5, r4
 80008e6:	f240 8085 	bls.w	80009f4 <__udivmoddi4+0x2b4>
 80008ea:	f1a8 0802 	sub.w	r8, r8, #2
 80008ee:	4464      	add	r4, ip
 80008f0:	1b64      	subs	r4, r4, r5
 80008f2:	b29d      	uxth	r5, r3
 80008f4:	fbb4 f3f9 	udiv	r3, r4, r9
 80008f8:	fb09 4413 	mls	r4, r9, r3, r4
 80008fc:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000900:	fb03 fe0e 	mul.w	lr, r3, lr
 8000904:	45a6      	cmp	lr, r4
 8000906:	d908      	bls.n	800091a <__udivmoddi4+0x1da>
 8000908:	eb1c 0404 	adds.w	r4, ip, r4
 800090c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000910:	d26c      	bcs.n	80009ec <__udivmoddi4+0x2ac>
 8000912:	45a6      	cmp	lr, r4
 8000914:	d96a      	bls.n	80009ec <__udivmoddi4+0x2ac>
 8000916:	3b02      	subs	r3, #2
 8000918:	4464      	add	r4, ip
 800091a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800091e:	fba3 9502 	umull	r9, r5, r3, r2
 8000922:	eba4 040e 	sub.w	r4, r4, lr
 8000926:	42ac      	cmp	r4, r5
 8000928:	46c8      	mov	r8, r9
 800092a:	46ae      	mov	lr, r5
 800092c:	d356      	bcc.n	80009dc <__udivmoddi4+0x29c>
 800092e:	d053      	beq.n	80009d8 <__udivmoddi4+0x298>
 8000930:	b156      	cbz	r6, 8000948 <__udivmoddi4+0x208>
 8000932:	ebb0 0208 	subs.w	r2, r0, r8
 8000936:	eb64 040e 	sbc.w	r4, r4, lr
 800093a:	fa04 f707 	lsl.w	r7, r4, r7
 800093e:	40ca      	lsrs	r2, r1
 8000940:	40cc      	lsrs	r4, r1
 8000942:	4317      	orrs	r7, r2
 8000944:	e9c6 7400 	strd	r7, r4, [r6]
 8000948:	4618      	mov	r0, r3
 800094a:	2100      	movs	r1, #0
 800094c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000950:	f1c3 0120 	rsb	r1, r3, #32
 8000954:	fa02 fc03 	lsl.w	ip, r2, r3
 8000958:	fa20 f201 	lsr.w	r2, r0, r1
 800095c:	fa25 f101 	lsr.w	r1, r5, r1
 8000960:	409d      	lsls	r5, r3
 8000962:	432a      	orrs	r2, r5
 8000964:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000968:	fa1f fe8c 	uxth.w	lr, ip
 800096c:	fbb1 f0f7 	udiv	r0, r1, r7
 8000970:	fb07 1510 	mls	r5, r7, r0, r1
 8000974:	0c11      	lsrs	r1, r2, #16
 8000976:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 800097a:	fb00 f50e 	mul.w	r5, r0, lr
 800097e:	428d      	cmp	r5, r1
 8000980:	fa04 f403 	lsl.w	r4, r4, r3
 8000984:	d908      	bls.n	8000998 <__udivmoddi4+0x258>
 8000986:	eb1c 0101 	adds.w	r1, ip, r1
 800098a:	f100 38ff 	add.w	r8, r0, #4294967295
 800098e:	d22f      	bcs.n	80009f0 <__udivmoddi4+0x2b0>
 8000990:	428d      	cmp	r5, r1
 8000992:	d92d      	bls.n	80009f0 <__udivmoddi4+0x2b0>
 8000994:	3802      	subs	r0, #2
 8000996:	4461      	add	r1, ip
 8000998:	1b49      	subs	r1, r1, r5
 800099a:	b292      	uxth	r2, r2
 800099c:	fbb1 f5f7 	udiv	r5, r1, r7
 80009a0:	fb07 1115 	mls	r1, r7, r5, r1
 80009a4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80009a8:	fb05 f10e 	mul.w	r1, r5, lr
 80009ac:	4291      	cmp	r1, r2
 80009ae:	d908      	bls.n	80009c2 <__udivmoddi4+0x282>
 80009b0:	eb1c 0202 	adds.w	r2, ip, r2
 80009b4:	f105 38ff 	add.w	r8, r5, #4294967295
 80009b8:	d216      	bcs.n	80009e8 <__udivmoddi4+0x2a8>
 80009ba:	4291      	cmp	r1, r2
 80009bc:	d914      	bls.n	80009e8 <__udivmoddi4+0x2a8>
 80009be:	3d02      	subs	r5, #2
 80009c0:	4462      	add	r2, ip
 80009c2:	1a52      	subs	r2, r2, r1
 80009c4:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 80009c8:	e738      	b.n	800083c <__udivmoddi4+0xfc>
 80009ca:	4631      	mov	r1, r6
 80009cc:	4630      	mov	r0, r6
 80009ce:	e708      	b.n	80007e2 <__udivmoddi4+0xa2>
 80009d0:	4639      	mov	r1, r7
 80009d2:	e6e6      	b.n	80007a2 <__udivmoddi4+0x62>
 80009d4:	4610      	mov	r0, r2
 80009d6:	e6fb      	b.n	80007d0 <__udivmoddi4+0x90>
 80009d8:	4548      	cmp	r0, r9
 80009da:	d2a9      	bcs.n	8000930 <__udivmoddi4+0x1f0>
 80009dc:	ebb9 0802 	subs.w	r8, r9, r2
 80009e0:	eb65 0e0c 	sbc.w	lr, r5, ip
 80009e4:	3b01      	subs	r3, #1
 80009e6:	e7a3      	b.n	8000930 <__udivmoddi4+0x1f0>
 80009e8:	4645      	mov	r5, r8
 80009ea:	e7ea      	b.n	80009c2 <__udivmoddi4+0x282>
 80009ec:	462b      	mov	r3, r5
 80009ee:	e794      	b.n	800091a <__udivmoddi4+0x1da>
 80009f0:	4640      	mov	r0, r8
 80009f2:	e7d1      	b.n	8000998 <__udivmoddi4+0x258>
 80009f4:	46d0      	mov	r8, sl
 80009f6:	e77b      	b.n	80008f0 <__udivmoddi4+0x1b0>
 80009f8:	3d02      	subs	r5, #2
 80009fa:	4462      	add	r2, ip
 80009fc:	e732      	b.n	8000864 <__udivmoddi4+0x124>
 80009fe:	4608      	mov	r0, r1
 8000a00:	e70a      	b.n	8000818 <__udivmoddi4+0xd8>
 8000a02:	4464      	add	r4, ip
 8000a04:	3802      	subs	r0, #2
 8000a06:	e742      	b.n	800088e <__udivmoddi4+0x14e>

08000a08 <__aeabi_idiv0>:
 8000a08:	4770      	bx	lr
 8000a0a:	bf00      	nop

08000a0c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000a0c:	b510      	push	{r4, lr}
 8000a0e:	b094      	sub	sp, #80	; 0x50
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000a10:	2210      	movs	r2, #16
 8000a12:	2100      	movs	r1, #0
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000a14:	2402      	movs	r4, #2
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000a16:	a809      	add	r0, sp, #36	; 0x24
 8000a18:	f00e fee9 	bl	800f7ee <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000a1c:	2214      	movs	r2, #20
 8000a1e:	2100      	movs	r1, #0
 8000a20:	a802      	add	r0, sp, #8
 8000a22:	f00e fee4 	bl	800f7ee <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8000a26:	4b22      	ldr	r3, [pc, #136]	; (8000ab0 <SystemClock_Config+0xa4>)
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000a28:	2101      	movs	r1, #1
  RCC_OscInitStruct.PLL.PLLM = 25;
  RCC_OscInitStruct.PLL.PLLN = 432;
 8000a2a:	2019      	movs	r0, #25
  __HAL_RCC_PWR_CLK_ENABLE();
 8000a2c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000a2e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8000a32:	641a      	str	r2, [r3, #64]	; 0x40
 8000a34:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000a36:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000a3a:	9300      	str	r3, [sp, #0]
 8000a3c:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000a3e:	4b1d      	ldr	r3, [pc, #116]	; (8000ab4 <SystemClock_Config+0xa8>)
 8000a40:	681a      	ldr	r2, [r3, #0]
 8000a42:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8000a46:	601a      	str	r2, [r3, #0]
 8000a48:	681b      	ldr	r3, [r3, #0]
  RCC_OscInitStruct.PLL.PLLP = 2;
 8000a4a:	9411      	str	r4, [sp, #68]	; 0x44
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000a4c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000a50:	9301      	str	r3, [sp, #4]
 8000a52:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000a54:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000a58:	e9cd 1307 	strd	r1, r3, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000a5c:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8000a60:	e9cd 430d 	strd	r4, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLN = 432;
 8000a64:	f44f 73d8 	mov.w	r3, #432	; 0x1b0
 8000a68:	e9cd 030f 	strd	r0, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLQ = 9;
 8000a6c:	2309      	movs	r3, #9
  RCC_OscInitStruct.PLL.PLLR = 2;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000a6e:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000a70:	e9cd 3412 	strd	r3, r4, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000a74:	f000 fea2 	bl	80017bc <HAL_RCC_OscConfig>
 8000a78:	b108      	cbz	r0, 8000a7e <SystemClock_Config+0x72>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000a7a:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000a7c:	e7fe      	b.n	8000a7c <SystemClock_Config+0x70>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8000a7e:	f000 fe65 	bl	800174c <HAL_PWREx_EnableOverDrive>
 8000a82:	b108      	cbz	r0, 8000a88 <SystemClock_Config+0x7c>
 8000a84:	b672      	cpsid	i
  while (1)
 8000a86:	e7fe      	b.n	8000a86 <SystemClock_Config+0x7a>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000a88:	230f      	movs	r3, #15
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000a8a:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000a8e:	9004      	str	r0, [sp, #16]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 8000a90:	2107      	movs	r1, #7
 8000a92:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000a94:	e9cd 3402 	strd	r3, r4, [sp, #8]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000a98:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000a9c:	e9cd 2305 	strd	r2, r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 8000aa0:	f001 f87c 	bl	8001b9c <HAL_RCC_ClockConfig>
 8000aa4:	b108      	cbz	r0, 8000aaa <SystemClock_Config+0x9e>
 8000aa6:	b672      	cpsid	i
  while (1)
 8000aa8:	e7fe      	b.n	8000aa8 <SystemClock_Config+0x9c>
}
 8000aaa:	b014      	add	sp, #80	; 0x50
 8000aac:	bd10      	pop	{r4, pc}
 8000aae:	bf00      	nop
 8000ab0:	40023800 	.word	0x40023800
 8000ab4:	40007000 	.word	0x40007000

08000ab8 <main>:
{
 8000ab8:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
	char ch = 'X';		// xzl
 8000abc:	2358      	movs	r3, #88	; 0x58
{
 8000abe:	b093      	sub	sp, #76	; 0x4c
	char ch = 'X';		// xzl
 8000ac0:	f88d 3007 	strb.w	r3, [sp, #7]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000ac4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000ac8:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8000acc:	4ac5      	ldr	r2, [pc, #788]	; (8000de4 <main+0x32c>)
 8000ace:	2100      	movs	r1, #0
 8000ad0:	f8c2 1250 	str.w	r1, [r2, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8000ad4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000ad8:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8000adc:	6953      	ldr	r3, [r2, #20]
 8000ade:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000ae2:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8000ae4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000ae8:	f3bf 8f6f 	isb	sy
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 8000aec:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8000af0:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 8000af4:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000af8:	f643 74e0 	movw	r4, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000afc:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8000b00:	f3c3 334e 	ubfx	r3, r3, #13, #15
 8000b04:	015b      	lsls	r3, r3, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000b06:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000b0a:	4601      	mov	r1, r0
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000b0c:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 8000b10:	3901      	subs	r1, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000b12:	f8c2 5260 	str.w	r5, [r2, #608]	; 0x260
      } while (ways-- != 0U);
 8000b16:	d2f9      	bcs.n	8000b0c <main+0x54>
    } while(sets-- != 0U);
 8000b18:	3b20      	subs	r3, #32
 8000b1a:	f113 0f20 	cmn.w	r3, #32
 8000b1e:	d1f2      	bne.n	8000b06 <main+0x4e>
 8000b20:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 8000b24:	6953      	ldr	r3, [r2, #20]
 8000b26:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000b2a:	6153      	str	r3, [r2, #20]
 8000b2c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000b30:	f3bf 8f6f 	isb	sy
  HAL_Init();
 8000b34:	f000 fc2a 	bl	800138c <HAL_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000b38:	2502      	movs	r5, #2
  SystemClock_Config();
 8000b3a:	f7ff ff67 	bl	8000a0c <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b3e:	2214      	movs	r2, #20
 8000b40:	2100      	movs	r1, #0
 8000b42:	a80d      	add	r0, sp, #52	; 0x34
 8000b44:	f00e fe53 	bl	800f7ee <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b48:	4ba7      	ldr	r3, [pc, #668]	; (8000de8 <main+0x330>)
  HAL_GPIO_WritePin(GPIOJ, LD_USER1_Pin|LD_USER2_Pin, GPIO_PIN_RESET);
 8000b4a:	f242 0120 	movw	r1, #8224	; 0x2020
 8000b4e:	48a7      	ldr	r0, [pc, #668]	; (8000dec <main+0x334>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b50:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b52:	2400      	movs	r4, #0
  GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8000b54:	2603      	movs	r6, #3
  GPIO_InitStruct.Pin = QSPI_D2_Pin;
 8000b56:	2704      	movs	r7, #4
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b58:	f042 0210 	orr.w	r2, r2, #16
  GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8000b5c:	f04f 0b09 	mov.w	fp, #9
  GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 8000b60:	f04f 0a0b 	mov.w	sl, #11
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000b64:	f04f 090c 	mov.w	r9, #12
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b68:	631a      	str	r2, [r3, #48]	; 0x30
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 8000b6a:	f04f 080a 	mov.w	r8, #10
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b6e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000b70:	f002 0210 	and.w	r2, r2, #16
 8000b74:	9202      	str	r2, [sp, #8]
 8000b76:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000b78:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000b7a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8000b7e:	631a      	str	r2, [r3, #48]	; 0x30
 8000b80:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000b82:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8000b86:	9203      	str	r2, [sp, #12]
 8000b88:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000b8a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000b8c:	f042 0202 	orr.w	r2, r2, #2
 8000b90:	631a      	str	r2, [r3, #48]	; 0x30
 8000b92:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000b94:	f002 0202 	and.w	r2, r2, #2
 8000b98:	9204      	str	r2, [sp, #16]
 8000b9a:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000b9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000b9e:	f042 0208 	orr.w	r2, r2, #8
 8000ba2:	631a      	str	r2, [r3, #48]	; 0x30
 8000ba4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000ba6:	f002 0208 	and.w	r2, r2, #8
 8000baa:	9205      	str	r2, [sp, #20]
 8000bac:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000bae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000bb0:	f042 0204 	orr.w	r2, r2, #4
 8000bb4:	631a      	str	r2, [r3, #48]	; 0x30
 8000bb6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000bb8:	f002 0204 	and.w	r2, r2, #4
 8000bbc:	9206      	str	r2, [sp, #24]
 8000bbe:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000bc0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000bc2:	f042 0201 	orr.w	r2, r2, #1
 8000bc6:	631a      	str	r2, [r3, #48]	; 0x30
 8000bc8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000bca:	f002 0201 	and.w	r2, r2, #1
 8000bce:	9207      	str	r2, [sp, #28]
 8000bd0:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8000bd2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000bd4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8000bd8:	631a      	str	r2, [r3, #48]	; 0x30
 8000bda:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000bdc:	f402 7200 	and.w	r2, r2, #512	; 0x200
 8000be0:	9208      	str	r2, [sp, #32]
 8000be2:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8000be4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000be6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8000bea:	631a      	str	r2, [r3, #48]	; 0x30
 8000bec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000bee:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8000bf2:	9209      	str	r2, [sp, #36]	; 0x24
 8000bf4:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8000bf6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000bf8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8000bfc:	631a      	str	r2, [r3, #48]	; 0x30
 8000bfe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000c00:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8000c04:	920a      	str	r2, [sp, #40]	; 0x28
 8000c06:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000c08:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000c0a:	f042 0220 	orr.w	r2, r2, #32
 8000c0e:	631a      	str	r2, [r3, #48]	; 0x30
 8000c10:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000c12:	f002 0220 	and.w	r2, r2, #32
 8000c16:	920b      	str	r2, [sp, #44]	; 0x2c
 8000c18:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000c1a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000c1c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8000c20:	631a      	str	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOJ, LD_USER1_Pin|LD_USER2_Pin, GPIO_PIN_RESET);
 8000c22:	2200      	movs	r2, #0
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000c24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c26:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000c2a:	930c      	str	r3, [sp, #48]	; 0x30
 8000c2c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOJ, LD_USER1_Pin|LD_USER2_Pin, GPIO_PIN_RESET);
 8000c2e:	f000 fd87 	bl	8001740 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c32:	2378      	movs	r3, #120	; 0x78
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c34:	a90d      	add	r1, sp, #52	; 0x34
 8000c36:	486e      	ldr	r0, [pc, #440]	; (8000df0 <main+0x338>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c38:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Alternate = GPIO_AF6_SAI1;
 8000c3c:	2306      	movs	r3, #6
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c3e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF6_SAI1;
 8000c42:	9311      	str	r3, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c44:	f000 fc9a 	bl	800157c <HAL_GPIO_Init>
  HAL_GPIO_Init(QSPI_D2_GPIO_Port, &GPIO_InitStruct);
 8000c48:	a90d      	add	r1, sp, #52	; 0x34
 8000c4a:	4869      	ldr	r0, [pc, #420]	; (8000df0 <main+0x338>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c4c:	940f      	str	r4, [sp, #60]	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c4e:	e9cd 750d 	strd	r7, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8000c52:	e9cd 6b10 	strd	r6, fp, [sp, #64]	; 0x40
  HAL_GPIO_Init(QSPI_D2_GPIO_Port, &GPIO_InitStruct);
 8000c56:	f000 fc91 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = RMII_TXD1_Pin|RMII_TXD0_Pin|RMII_TX_EN_Pin;
 8000c5a:	f44f 43d0 	mov.w	r3, #26624	; 0x6800
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000c5e:	a90d      	add	r1, sp, #52	; 0x34
 8000c60:	4864      	ldr	r0, [pc, #400]	; (8000df4 <main+0x33c>)
  GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 8000c62:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c66:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c6a:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000c6e:	f000 fc85 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FMC_NBL1_Pin|FMC_NBL0_Pin|FMC_D5_Pin|FMC_D6_Pin
 8000c72:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c76:	a90d      	add	r1, sp, #52	; 0x34
 8000c78:	485d      	ldr	r0, [pc, #372]	; (8000df0 <main+0x338>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000c7a:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c7e:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c82:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c86:	f000 fc79 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000c8a:	f44f 7240 	mov.w	r2, #768	; 0x300
 8000c8e:	2312      	movs	r3, #18
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c90:	a90d      	add	r1, sp, #52	; 0x34
 8000c92:	4859      	ldr	r0, [pc, #356]	; (8000df8 <main+0x340>)
  GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8000c94:	9711      	str	r7, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000c96:	e9cd 230d 	strd	r2, r3, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c9a:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c9e:	f000 fc6d 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = ULPI_D7_Pin|ULPI_D6_Pin|ULPI_D5_Pin|ULPI_D3_Pin
 8000ca2:	f643 4323 	movw	r3, #15395	; 0x3c23
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ca6:	a90d      	add	r1, sp, #52	; 0x34
 8000ca8:	4853      	ldr	r0, [pc, #332]	; (8000df8 <main+0x340>)
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 8000caa:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cae:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000cb2:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cb6:	f000 fc61 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = uSD_D3_Pin|uSD_D2_Pin;
 8000cba:	2318      	movs	r3, #24
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cbc:	a90d      	add	r1, sp, #52	; 0x34
 8000cbe:	484e      	ldr	r0, [pc, #312]	; (8000df8 <main+0x340>)
  GPIO_InitStruct.Alternate = GPIO_AF10_SDMMC2;
 8000cc0:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cc4:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000cc8:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ccc:	f000 fc56 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = uSD_CMD_Pin|uSD_CLK_Pin;
 8000cd0:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cd2:	a90d      	add	r1, sp, #52	; 0x34
 8000cd4:	4849      	ldr	r0, [pc, #292]	; (8000dfc <main+0x344>)
  GPIO_InitStruct.Alternate = GPIO_AF11_SDMMC2;
 8000cd6:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cda:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000cde:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000ce2:	f000 fc4b 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = WIFI_RX_Pin;
 8000ce6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(WIFI_RX_GPIO_Port, &GPIO_InitStruct);
 8000cea:	a90d      	add	r1, sp, #52	; 0x34
 8000cec:	4844      	ldr	r0, [pc, #272]	; (8000e00 <main+0x348>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cee:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 8000cf2:	2308      	movs	r3, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000cf4:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 8000cf8:	9311      	str	r3, [sp, #68]	; 0x44
  HAL_GPIO_Init(WIFI_RX_GPIO_Port, &GPIO_InitStruct);
 8000cfa:	f000 fc3f 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000cfe:	2312      	movs	r3, #18
 8000d00:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  HAL_GPIO_Init(CEC_GPIO_Port, &GPIO_InitStruct);
 8000d04:	483f      	ldr	r0, [pc, #252]	; (8000e04 <main+0x34c>)
  GPIO_InitStruct.Alternate = GPIO_AF4_CEC;
 8000d06:	9711      	str	r7, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000d08:	e9cd 130d 	strd	r1, r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(CEC_GPIO_Port, &GPIO_InitStruct);
 8000d0c:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d0e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(CEC_GPIO_Port, &GPIO_InitStruct);
 8000d12:	f000 fc33 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000d16:	2312      	movs	r3, #18
 8000d18:	2080      	movs	r0, #128	; 0x80
  HAL_GPIO_Init(AUDIO_SDA_GPIO_Port, &GPIO_InitStruct);
 8000d1a:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Alternate = GPIO_AF11_I2C4;
 8000d1c:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000d20:	e9cd 030d 	strd	r0, r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(AUDIO_SDA_GPIO_Port, &GPIO_InitStruct);
 8000d24:	4834      	ldr	r0, [pc, #208]	; (8000df8 <main+0x340>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000d26:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(AUDIO_SDA_GPIO_Port, &GPIO_InitStruct);
 8000d2a:	f000 fc27 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = QSPI_NCS_Pin;
 8000d2e:	2340      	movs	r3, #64	; 0x40
  HAL_GPIO_Init(QSPI_NCS_GPIO_Port, &GPIO_InitStruct);
 8000d30:	a90d      	add	r1, sp, #52	; 0x34
 8000d32:	4831      	ldr	r0, [pc, #196]	; (8000df8 <main+0x340>)
  GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 8000d34:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d38:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000d3c:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(QSPI_NCS_GPIO_Port, &GPIO_InitStruct);
 8000d40:	f000 fc1c 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FMC_SDNCAS_Pin|FMC_SDCLK_Pin|FMC_A11_Pin|FMC_A12_Pin
 8000d44:	f248 1337 	movw	r3, #33079	; 0x8137
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000d48:	a90d      	add	r1, sp, #52	; 0x34
 8000d4a:	482a      	ldr	r0, [pc, #168]	; (8000df4 <main+0x33c>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000d4c:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d50:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000d54:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000d58:	f000 fc10 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d5c:	f242 0c20 	movw	ip, #8224	; 0x2020
 8000d60:	2301      	movs	r3, #1
  HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000d62:	a90d      	add	r1, sp, #52	; 0x34
 8000d64:	4821      	ldr	r0, [pc, #132]	; (8000dec <main+0x334>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d66:	e9cd c30d 	strd	ip, r3, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d6a:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000d6e:	f000 fc05 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = Audio_INT_Pin|WIFI_RST_Pin|DSI_RESET_Pin|ARD_D8_Pin
 8000d72:	f24d 031b 	movw	r3, #53275	; 0xd01b
  HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000d76:	a90d      	add	r1, sp, #52	; 0x34
 8000d78:	481c      	ldr	r0, [pc, #112]	; (8000dec <main+0x334>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d7a:	940f      	str	r4, [sp, #60]	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000d7c:	e9cd 340d 	strd	r3, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000d80:	f000 fbfc 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FMC_D2_Pin|FMC_D3_Pin|FMC_D1_Pin|FMC_D15_Pin
 8000d84:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000d88:	a90d      	add	r1, sp, #52	; 0x34
 8000d8a:	481c      	ldr	r0, [pc, #112]	; (8000dfc <main+0x344>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000d8c:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d90:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000d94:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000d98:	f000 fbf0 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DFSDM_DATIN5_Pin|DFSDM_DATIN1_Pin;
 8000d9c:	f640 0308 	movw	r3, #2056	; 0x808
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000da0:	a90d      	add	r1, sp, #52	; 0x34
 8000da2:	4817      	ldr	r0, [pc, #92]	; (8000e00 <main+0x348>)
  GPIO_InitStruct.Alternate = GPIO_AF3_DFSDM1;
 8000da4:	9611      	str	r6, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000da6:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000daa:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000dae:	f000 fbe5 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = QSPI_D1_Pin|QSPI_D0_Pin;
 8000db2:	f44f 63c0 	mov.w	r3, #1536	; 0x600
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000db6:	a90d      	add	r1, sp, #52	; 0x34
 8000db8:	4811      	ldr	r0, [pc, #68]	; (8000e00 <main+0x348>)
  GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8000dba:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000dbe:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000dc2:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000dc6:	f000 fbd9 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = NC4_Pin|NC5_Pin|uSD_Detect_Pin|LCD_BL_CTRL_Pin;
 8000dca:	f44f 4251 	mov.w	r2, #53504	; 0xd100
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000dce:	a90d      	add	r1, sp, #52	; 0x34
 8000dd0:	480d      	ldr	r0, [pc, #52]	; (8000e08 <main+0x350>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000dd2:	940f      	str	r4, [sp, #60]	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000dd4:	e9cd 240d 	strd	r2, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000dd8:	f000 fbd0 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FMC_NBL2_Pin|D27_Pin|D26_Pin|FMC_NBL3_Pin
 8000ddc:	f240 62ff 	movw	r2, #1791	; 0x6ff
 8000de0:	e014      	b.n	8000e0c <main+0x354>
 8000de2:	bf00      	nop
 8000de4:	e000ed00 	.word	0xe000ed00
 8000de8:	40023800 	.word	0x40023800
 8000dec:	40022400 	.word	0x40022400
 8000df0:	40021000 	.word	0x40021000
 8000df4:	40021800 	.word	0x40021800
 8000df8:	40020400 	.word	0x40020400
 8000dfc:	40020c00 	.word	0x40020c00
 8000e00:	40020800 	.word	0x40020800
 8000e04:	40020000 	.word	0x40020000
 8000e08:	40022000 	.word	0x40022000
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000e0c:	a90d      	add	r1, sp, #52	; 0x34
 8000e0e:	48c6      	ldr	r0, [pc, #792]	; (8001128 <main+0x670>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000e10:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e14:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000e18:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000e1c:	f000 fbae 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = NC3_Pin|NC2_Pin|NC1_Pin|NC8_Pin
 8000e20:	22f8      	movs	r2, #248	; 0xf8
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8000e22:	a90d      	add	r1, sp, #52	; 0x34
 8000e24:	48c1      	ldr	r0, [pc, #772]	; (800112c <main+0x674>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e26:	940f      	str	r4, [sp, #60]	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000e28:	e9cd 240d 	strd	r2, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8000e2c:	f000 fba6 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Alternate = GPIO_AF7_SPDIFRX;
 8000e30:	2207      	movs	r2, #7
  GPIO_InitStruct.Pin = SPDIF_RX_Pin;
 8000e32:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(SPDIF_RX_GPIO_Port, &GPIO_InitStruct);
 8000e36:	a90d      	add	r1, sp, #52	; 0x34
 8000e38:	48bd      	ldr	r0, [pc, #756]	; (8001130 <main+0x678>)
  GPIO_InitStruct.Alternate = GPIO_AF7_SPDIFRX;
 8000e3a:	9211      	str	r2, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e3c:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e40:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(SPDIF_RX_GPIO_Port, &GPIO_InitStruct);
 8000e44:	f000 fb9a 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = uSD_D1_Pin|uSD_D0_Pin;
 8000e48:	f44f 63c0 	mov.w	r3, #1536	; 0x600
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000e4c:	a90d      	add	r1, sp, #52	; 0x34
 8000e4e:	48b8      	ldr	r0, [pc, #736]	; (8001130 <main+0x678>)
  GPIO_InitStruct.Alternate = GPIO_AF11_SDMMC2;
 8000e50:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e54:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000e58:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000e5c:	f000 fb8e 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = RMII_RXER_Pin|OTG_FS_OverCurrent_Pin;
 8000e60:	2330      	movs	r3, #48	; 0x30
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000e62:	a90d      	add	r1, sp, #52	; 0x34
 8000e64:	48b3      	ldr	r0, [pc, #716]	; (8001134 <main+0x67c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e66:	940f      	str	r4, [sp, #60]	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000e68:	e9cd 340d 	strd	r3, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000e6c:	f000 fb86 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DFSDM_CKOUT_Pin;
 8000e70:	2308      	movs	r3, #8
  HAL_GPIO_Init(DFSDM_CKOUT_GPIO_Port, &GPIO_InitStruct);
 8000e72:	a90d      	add	r1, sp, #52	; 0x34
 8000e74:	48af      	ldr	r0, [pc, #700]	; (8001134 <main+0x67c>)
  GPIO_InitStruct.Alternate = GPIO_AF3_DFSDM1;
 8000e76:	9611      	str	r6, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e78:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e7c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DFSDM_CKOUT_GPIO_Port, &GPIO_InitStruct);
 8000e80:	f000 fb7c 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 8000e84:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000e88:	a90d      	add	r1, sp, #52	; 0x34
 8000e8a:	48ab      	ldr	r0, [pc, #684]	; (8001138 <main+0x680>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e8c:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e90:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000e94:	f000 fb72 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FMC_A0_Pin|FMC_A1_Pin|FMC_A2_Pin|FMC_A3_Pin
 8000e98:	f64f 023f 	movw	r2, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000e9c:	a90d      	add	r1, sp, #52	; 0x34
 8000e9e:	48a7      	ldr	r0, [pc, #668]	; (800113c <main+0x684>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000ea0:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ea4:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000ea8:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000eac:	f000 fb66 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 8000eb0:	2308      	movs	r3, #8
  HAL_GPIO_Init(WIFI_TX_GPIO_Port, &GPIO_InitStruct);
 8000eb2:	a90d      	add	r1, sp, #52	; 0x34
 8000eb4:	489f      	ldr	r0, [pc, #636]	; (8001134 <main+0x67c>)
  GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 8000eb6:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000eb8:	e9cd 750d 	strd	r7, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000ebc:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(WIFI_TX_GPIO_Port, &GPIO_InitStruct);
 8000ec0:	f000 fb5c 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = D23_Pin|D21_Pin|D22_Pin|FMC_SDNME_Pin
 8000ec4:	f64f 722c 	movw	r2, #65324	; 0xff2c
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000ec8:	a90d      	add	r1, sp, #52	; 0x34
 8000eca:	489d      	ldr	r0, [pc, #628]	; (8001140 <main+0x688>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000ecc:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ed0:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000ed4:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000ed8:	f000 fb50 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = ULPI_DIR_Pin;
 8000edc:	f44f 6300 	mov.w	r3, #2048	; 0x800
  HAL_GPIO_Init(ULPI_DIR_GPIO_Port, &GPIO_InitStruct);
 8000ee0:	a90d      	add	r1, sp, #52	; 0x34
 8000ee2:	4891      	ldr	r0, [pc, #580]	; (8001128 <main+0x670>)
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 8000ee4:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ee8:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000eec:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(ULPI_DIR_GPIO_Port, &GPIO_InitStruct);
 8000ef0:	f000 fb44 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = CEC_CLK_Pin;
 8000ef4:	f44f 7280 	mov.w	r2, #256	; 0x100
  HAL_GPIO_Init(CEC_CLK_GPIO_Port, &GPIO_InitStruct);
 8000ef8:	a90d      	add	r1, sp, #52	; 0x34
 8000efa:	4892      	ldr	r0, [pc, #584]	; (8001144 <main+0x68c>)
  GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 8000efc:	9411      	str	r4, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000efe:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f02:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(CEC_CLK_GPIO_Port, &GPIO_InitStruct);
 8000f06:	f000 fb39 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 8000f0a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000f0e:	f44f 1190 	mov.w	r1, #1179648	; 0x120000
  HAL_GPIO_Init(LCD_INT_GPIO_Port, &GPIO_InitStruct);
 8000f12:	4885      	ldr	r0, [pc, #532]	; (8001128 <main+0x670>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f14:	940f      	str	r4, [sp, #60]	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 8000f16:	e9cd 310d 	strd	r3, r1, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_INT_GPIO_Port, &GPIO_InitStruct);
 8000f1a:	a90d      	add	r1, sp, #52	; 0x34
 8000f1c:	f000 fb2e 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = ARD_D5_PWM_Pin;
 8000f20:	f44f 7280 	mov.w	r2, #256	; 0x100
  HAL_GPIO_Init(ARD_D5_PWM_GPIO_Port, &GPIO_InitStruct);
 8000f24:	a90d      	add	r1, sp, #52	; 0x34
 8000f26:	4884      	ldr	r0, [pc, #528]	; (8001138 <main+0x680>)
  GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8000f28:	9511      	str	r5, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f2a:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f2e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(ARD_D5_PWM_GPIO_Port, &GPIO_InitStruct);
 8000f32:	f000 fb23 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = ARD_D0_RX_Pin|ARDUINO_TX_D1_Pin;
 8000f36:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000f38:	a90d      	add	r1, sp, #52	; 0x34
 8000f3a:	487f      	ldr	r0, [pc, #508]	; (8001138 <main+0x680>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f3c:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Alternate = GPIO_AF8_USART6;
 8000f40:	2308      	movs	r3, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f42:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF8_USART6;
 8000f46:	9311      	str	r3, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000f48:	f000 fb18 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = ULPI_NXT_Pin;
 8000f4c:	2210      	movs	r2, #16
  HAL_GPIO_Init(ULPI_NXT_GPIO_Port, &GPIO_InitStruct);
 8000f4e:	a90d      	add	r1, sp, #52	; 0x34
 8000f50:	487b      	ldr	r0, [pc, #492]	; (8001140 <main+0x688>)
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 8000f52:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f56:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f5a:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(ULPI_NXT_GPIO_Port, &GPIO_InitStruct);
 8000f5e:	f000 fb0d 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = SAI1_MCLKA_Pin;
 8000f62:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(SAI1_MCLKA_GPIO_Port, &GPIO_InitStruct);
 8000f64:	a90d      	add	r1, sp, #52	; 0x34
 8000f66:	4872      	ldr	r0, [pc, #456]	; (8001130 <main+0x678>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f68:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Alternate = GPIO_AF6_SAI1;
 8000f6c:	2306      	movs	r3, #6
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f6e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF6_SAI1;
 8000f72:	9311      	str	r3, [sp, #68]	; 0x44
  HAL_GPIO_Init(SAI1_MCLKA_GPIO_Port, &GPIO_InitStruct);
 8000f74:	f000 fb02 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = EXT_SDA_Pin|EXT_SCL_Pin;
 8000f78:	2248      	movs	r2, #72	; 0x48
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000f7a:	a90d      	add	r1, sp, #52	; 0x34
 8000f7c:	486c      	ldr	r0, [pc, #432]	; (8001130 <main+0x678>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f7e:	940f      	str	r4, [sp, #60]	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000f80:	e9cd 240d 	strd	r2, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000f84:	f000 fafa 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = ARD_D6_PWM_Pin;
 8000f88:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(ARD_D6_PWM_GPIO_Port, &GPIO_InitStruct);
 8000f8a:	a90d      	add	r1, sp, #52	; 0x34
 8000f8c:	486b      	ldr	r0, [pc, #428]	; (800113c <main+0x684>)
  GPIO_InitStruct.Alternate = GPIO_AF3_TIM11;
 8000f8e:	9611      	str	r6, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f90:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f94:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(ARD_D6_PWM_GPIO_Port, &GPIO_InitStruct);
 8000f98:	f000 faf0 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = ARD_D3_PWM_Pin;
 8000f9c:	2340      	movs	r3, #64	; 0x40
  HAL_GPIO_Init(ARD_D3_PWM_GPIO_Port, &GPIO_InitStruct);
 8000f9e:	a90d      	add	r1, sp, #52	; 0x34
 8000fa0:	4866      	ldr	r0, [pc, #408]	; (800113c <main+0x684>)
  GPIO_InitStruct.Alternate = GPIO_AF3_TIM10;
 8000fa2:	9611      	str	r6, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fa4:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000fa8:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(ARD_D3_PWM_GPIO_Port, &GPIO_InitStruct);
 8000fac:	f000 fae6 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = ARDUINO_A1_Pin|ARDUINO_A2_Pin|ARDUINO_A3_Pin;
 8000fb0:	f44f 62e0 	mov.w	r2, #1792	; 0x700
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000fb4:	a90d      	add	r1, sp, #52	; 0x34
 8000fb6:	4861      	ldr	r0, [pc, #388]	; (800113c <main+0x684>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000fb8:	940f      	str	r4, [sp, #60]	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000fba:	e9cd 260d 	strd	r2, r6, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000fbe:	f000 fadd 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = ULPI_STP_Pin;
 8000fc2:	2301      	movs	r3, #1
  HAL_GPIO_Init(ULPI_STP_GPIO_Port, &GPIO_InitStruct);
 8000fc4:	a90d      	add	r1, sp, #52	; 0x34
 8000fc6:	485c      	ldr	r0, [pc, #368]	; (8001138 <main+0x680>)
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 8000fc8:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fcc:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000fd0:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(ULPI_STP_GPIO_Port, &GPIO_InitStruct);
 8000fd4:	f000 fad2 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = RMII_MDC_Pin|RMII_RXD0_Pin|RMII_RXD1_Pin;
 8000fd8:	2232      	movs	r2, #50	; 0x32
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000fda:	a90d      	add	r1, sp, #52	; 0x34
 8000fdc:	4856      	ldr	r0, [pc, #344]	; (8001138 <main+0x680>)
  GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 8000fde:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fe2:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000fe6:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000fea:	f000 fac7 	bl	800157c <HAL_GPIO_Init>
  HAL_GPIO_Init(ARD_A2_GPIO_Port, &GPIO_InitStruct);
 8000fee:	a90d      	add	r1, sp, #52	; 0x34
 8000ff0:	4851      	ldr	r0, [pc, #324]	; (8001138 <main+0x680>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ff2:	940f      	str	r4, [sp, #60]	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000ff4:	e9cd 760d 	strd	r7, r6, [sp, #52]	; 0x34
  HAL_GPIO_Init(ARD_A2_GPIO_Port, &GPIO_InitStruct);
 8000ff8:	f000 fac0 	bl	800157c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ffc:	a90d      	add	r1, sp, #52	; 0x34
 8000ffe:	4852      	ldr	r0, [pc, #328]	; (8001148 <main+0x690>)
  GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001000:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001004:	e9cd 750d 	strd	r7, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001008:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800100c:	f000 fab6 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001010:	f44f 5e80 	mov.w	lr, #4096	; 0x1000
 8001014:	2312      	movs	r3, #18
  HAL_GPIO_Init(AUDIO_SCL_GPIO_Port, &GPIO_InitStruct);
 8001016:	a90d      	add	r1, sp, #52	; 0x34
 8001018:	4846      	ldr	r0, [pc, #280]	; (8001134 <main+0x67c>)
  GPIO_InitStruct.Alternate = GPIO_AF4_I2C4;
 800101a:	9711      	str	r7, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800101c:	e9cd e30d 	strd	lr, r3, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001020:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(AUDIO_SCL_GPIO_Port, &GPIO_InitStruct);
 8001024:	f000 faaa 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = QSPI_D3_Pin;
 8001028:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  HAL_GPIO_Init(QSPI_D3_GPIO_Port, &GPIO_InitStruct);
 800102c:	a90d      	add	r1, sp, #52	; 0x34
 800102e:	4841      	ldr	r0, [pc, #260]	; (8001134 <main+0x67c>)
  GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001030:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001034:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001038:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(QSPI_D3_GPIO_Port, &GPIO_InitStruct);
 800103c:	f000 fa9e 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = RMII_REF_CLK_Pin|RMII_MDIO_Pin|RMII_CRS_DV_Pin;
 8001040:	2386      	movs	r3, #134	; 0x86
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001042:	a90d      	add	r1, sp, #52	; 0x34
 8001044:	483f      	ldr	r0, [pc, #252]	; (8001144 <main+0x68c>)
  GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 8001046:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800104a:	f04f 0a01 	mov.w	sl, #1
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800104e:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001052:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001056:	f000 fa91 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800105a:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(B_USER_GPIO_Port, &GPIO_InitStruct);
 800105e:	a90d      	add	r1, sp, #52	; 0x34
 8001060:	4838      	ldr	r0, [pc, #224]	; (8001144 <main+0x68c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001062:	940f      	str	r4, [sp, #60]	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001064:	e9cd a30d 	strd	sl, r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(B_USER_GPIO_Port, &GPIO_InitStruct);
 8001068:	f000 fa88 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = ARD_A1_Pin|ARD_A0_Pin;
 800106c:	2350      	movs	r3, #80	; 0x50
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800106e:	a90d      	add	r1, sp, #52	; 0x34
 8001070:	4834      	ldr	r0, [pc, #208]	; (8001144 <main+0x68c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001072:	940f      	str	r4, [sp, #60]	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001074:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001078:	f000 fa80 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = SPDIF_TX_Pin;
 800107c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  HAL_GPIO_Init(SPDIF_TX_GPIO_Port, &GPIO_InitStruct);
 8001080:	a90d      	add	r1, sp, #52	; 0x34
 8001082:	482c      	ldr	r0, [pc, #176]	; (8001134 <main+0x67c>)
  GPIO_InitStruct.Alternate = GPIO_AF10_SAI2;
 8001084:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001088:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800108c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(SPDIF_TX_GPIO_Port, &GPIO_InitStruct);
 8001090:	f000 fa74 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = EXT_RST_Pin;
 8001094:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(EXT_RST_GPIO_Port, &GPIO_InitStruct);
 8001096:	a90d      	add	r1, sp, #52	; 0x34
 8001098:	4829      	ldr	r0, [pc, #164]	; (8001140 <main+0x688>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800109a:	940f      	str	r4, [sp, #60]	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800109c:	e9cd 340d 	strd	r3, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(EXT_RST_GPIO_Port, &GPIO_InitStruct);
 80010a0:	f000 fa6c 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = ULPI_CLK_Pin|ULPI_D0_Pin;
 80010a4:	2328      	movs	r3, #40	; 0x28
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80010a6:	a90d      	add	r1, sp, #52	; 0x34
 80010a8:	4826      	ldr	r0, [pc, #152]	; (8001144 <main+0x68c>)
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 80010aa:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010ae:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80010b2:	e9cd 460f 	strd	r4, r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80010b6:	f000 fa61 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 80010ba:	230d      	movs	r3, #13
  HAL_GPIO_Init(DSIHOST_TE_GPIO_Port, &GPIO_InitStruct);
 80010bc:	a90d      	add	r1, sp, #52	; 0x34
 80010be:	4823      	ldr	r0, [pc, #140]	; (800114c <main+0x694>)
  GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 80010c0:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010c2:	e9cd 750d 	strd	r7, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80010c6:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DSIHOST_TE_GPIO_Port, &GPIO_InitStruct);
 80010ca:	f000 fa57 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = ARDUINO_PWM_D6_Pin;
 80010ce:	2340      	movs	r3, #64	; 0x40
  HAL_GPIO_Init(ARDUINO_PWM_D6_GPIO_Port, &GPIO_InitStruct);
 80010d0:	a90d      	add	r1, sp, #52	; 0x34
 80010d2:	481b      	ldr	r0, [pc, #108]	; (8001140 <main+0x688>)
  GPIO_InitStruct.Alternate = GPIO_AF9_TIM12;
 80010d4:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
  huart1.Init.BaudRate = 115200;
 80010d8:	f8df b078 	ldr.w	fp, [pc, #120]	; 8001154 <main+0x69c>
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010dc:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80010e0:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(ARDUINO_PWM_D6_GPIO_Port, &GPIO_InitStruct);
 80010e4:	f000 fa4a 	bl	800157c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = ARDUINO_MISO_D12_Pin|ARDUINO_MOSI_PWM_D11_Pin;
 80010e8:	f44f 4340 	mov.w	r3, #49152	; 0xc000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80010ec:	4816      	ldr	r0, [pc, #88]	; (8001148 <main+0x690>)
 80010ee:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010f0:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 80010f4:	2305      	movs	r3, #5
  huart1.Instance = USART1;
 80010f6:	4d16      	ldr	r5, [pc, #88]	; (8001150 <main+0x698>)
  GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 80010f8:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80010fa:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80010fe:	f000 fa3d 	bl	800157c <HAL_GPIO_Init>
  huart1.Init.BaudRate = 115200;
 8001102:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8001106:	4628      	mov	r0, r5
  huart1.Init.BaudRate = 115200;
 8001108:	e9c5 b300 	strd	fp, r3, [r5]
  huart1.Init.StopBits = UART_STOPBITS_1;
 800110c:	e9c5 4402 	strd	r4, r4, [r5, #8]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001110:	e9c5 4904 	strd	r4, r9, [r5, #16]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001114:	e9c5 4406 	strd	r4, r4, [r5, #24]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001118:	e9c5 4408 	strd	r4, r4, [r5, #32]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800111c:	f001 fb96 	bl	800284c <HAL_UART_Init>
 8001120:	b1d0      	cbz	r0, 8001158 <main+0x6a0>
  __ASM volatile ("cpsid i" : : : "memory");
 8001122:	b672      	cpsid	i
  while (1)
 8001124:	e7fe      	b.n	8001124 <main+0x66c>
 8001126:	bf00      	nop
 8001128:	40022000 	.word	0x40022000
 800112c:	40022800 	.word	0x40022800
 8001130:	40021800 	.word	0x40021800
 8001134:	40020c00 	.word	0x40020c00
 8001138:	40020800 	.word	0x40020800
 800113c:	40021400 	.word	0x40021400
 8001140:	40021c00 	.word	0x40021c00
 8001144:	40020000 	.word	0x40020000
 8001148:	40020400 	.word	0x40020400
 800114c:	40022400 	.word	0x40022400
 8001150:	20001f40 	.word	0x20001f40
 8001154:	40011000 	.word	0x40011000
  hcrc.Instance = CRC;
 8001158:	4b0f      	ldr	r3, [pc, #60]	; (8001198 <main+0x6e0>)
 800115a:	4a10      	ldr	r2, [pc, #64]	; (800119c <main+0x6e4>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 800115c:	8098      	strh	r0, [r3, #4]
  hcrc.Instance = CRC;
 800115e:	601a      	str	r2, [r3, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 8001160:	2201      	movs	r2, #1
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8001162:	e9c3 0005 	strd	r0, r0, [r3, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001166:	4618      	mov	r0, r3
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 8001168:	621a      	str	r2, [r3, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800116a:	f000 f9a9 	bl	80014c0 <HAL_CRC_Init>
 800116e:	b108      	cbz	r0, 8001174 <main+0x6bc>
 8001170:	b672      	cpsid	i
  while (1)
 8001172:	e7fe      	b.n	8001172 <main+0x6ba>
  MX_X_CUBE_AI_Init();
 8001174:	f002 fd48 	bl	8003c08 <MX_X_CUBE_AI_Init>
	  HAL_Delay(500);
 8001178:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800117c:	f000 f924 	bl	80013c8 <HAL_Delay>
	  HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 0xFFFF);
 8001180:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001184:	2201      	movs	r2, #1
 8001186:	f10d 0107 	add.w	r1, sp, #7
 800118a:	4628      	mov	r0, r5
 800118c:	f001 fa6f 	bl	800266e <HAL_UART_Transmit>
  MX_X_CUBE_AI_Process();
 8001190:	f002 fd3c 	bl	8003c0c <MX_X_CUBE_AI_Process>
  while (1)
 8001194:	e7f0      	b.n	8001178 <main+0x6c0>
 8001196:	bf00      	nop
 8001198:	20001f1c 	.word	0x20001f1c
 800119c:	40023000 	.word	0x40023000

080011a0 <Error_Handler>:
 80011a0:	b672      	cpsid	i
  while (1)
 80011a2:	e7fe      	b.n	80011a2 <Error_Handler+0x2>

080011a4 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 80011a4:	4b0a      	ldr	r3, [pc, #40]	; (80011d0 <HAL_MspInit+0x2c>)
{
 80011a6:	b082      	sub	sp, #8
  __HAL_RCC_PWR_CLK_ENABLE();
 80011a8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80011aa:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80011ae:	641a      	str	r2, [r3, #64]	; 0x40
 80011b0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80011b2:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 80011b6:	9200      	str	r2, [sp, #0]
 80011b8:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80011ba:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80011bc:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80011c0:	645a      	str	r2, [r3, #68]	; 0x44
 80011c2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80011c4:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80011c8:	9301      	str	r3, [sp, #4]
 80011ca:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80011cc:	b002      	add	sp, #8
 80011ce:	4770      	bx	lr
 80011d0:	40023800 	.word	0x40023800

080011d4 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80011d4:	6802      	ldr	r2, [r0, #0]
{
 80011d6:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80011d8:	4b08      	ldr	r3, [pc, #32]	; (80011fc <HAL_CRC_MspInit+0x28>)
 80011da:	429a      	cmp	r2, r3
 80011dc:	d10b      	bne.n	80011f6 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80011de:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 80011e2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80011e6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80011ea:	631a      	str	r2, [r3, #48]	; 0x30
 80011ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011ee:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80011f2:	9301      	str	r3, [sp, #4]
 80011f4:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80011f6:	b002      	add	sp, #8
 80011f8:	4770      	bx	lr
 80011fa:	bf00      	nop
 80011fc:	40023000 	.word	0x40023000

08001200 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001200:	b510      	push	{r4, lr}
 8001202:	b0ac      	sub	sp, #176	; 0xb0
 8001204:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001206:	2214      	movs	r2, #20
 8001208:	2100      	movs	r1, #0
 800120a:	a803      	add	r0, sp, #12
 800120c:	f00e faef 	bl	800f7ee <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001210:	2290      	movs	r2, #144	; 0x90
 8001212:	2100      	movs	r1, #0
 8001214:	a808      	add	r0, sp, #32
 8001216:	f00e faea 	bl	800f7ee <memset>
  if(huart->Instance==USART1)
 800121a:	6822      	ldr	r2, [r4, #0]
 800121c:	4b17      	ldr	r3, [pc, #92]	; (800127c <HAL_UART_MspInit+0x7c>)
 800121e:	429a      	cmp	r2, r3
 8001220:	d129      	bne.n	8001276 <HAL_UART_MspInit+0x76>

  /* USER CODE END USART1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 8001222:	2340      	movs	r3, #64	; 0x40
    PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001224:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 8001226:	9308      	str	r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001228:	f000 fd7c 	bl	8001d24 <HAL_RCCEx_PeriphCLKConfig>
 800122c:	b108      	cbz	r0, 8001232 <HAL_UART_MspInit+0x32>
    {
      Error_Handler();
 800122e:	f7ff ffb7 	bl	80011a0 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8001232:	4b13      	ldr	r3, [pc, #76]	; (8001280 <HAL_UART_MspInit+0x80>)
    PA9     ------> USART1_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001234:	2100      	movs	r1, #0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001236:	4813      	ldr	r0, [pc, #76]	; (8001284 <HAL_UART_MspInit+0x84>)
    __HAL_RCC_USART1_CLK_ENABLE();
 8001238:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800123a:	f042 0210 	orr.w	r2, r2, #16
 800123e:	645a      	str	r2, [r3, #68]	; 0x44
 8001240:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001242:	f002 0210 	and.w	r2, r2, #16
 8001246:	9201      	str	r2, [sp, #4]
 8001248:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800124a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800124c:	f042 0201 	orr.w	r2, r2, #1
 8001250:	631a      	str	r2, [r3, #48]	; 0x30
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001252:	f44f 62c0 	mov.w	r2, #1536	; 0x600
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001256:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001258:	f003 0301 	and.w	r3, r3, #1
 800125c:	9302      	str	r3, [sp, #8]
 800125e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001260:	2302      	movs	r3, #2
 8001262:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001266:	2303      	movs	r3, #3
 8001268:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 800126c:	2307      	movs	r3, #7
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800126e:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001270:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001272:	f000 f983 	bl	800157c <HAL_GPIO_Init>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 8001276:	b02c      	add	sp, #176	; 0xb0
 8001278:	bd10      	pop	{r4, pc}
 800127a:	bf00      	nop
 800127c:	40011000 	.word	0x40011000
 8001280:	40023800 	.word	0x40023800
 8001284:	40020000 	.word	0x40020000

08001288 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001288:	e7fe      	b.n	8001288 <NMI_Handler>

0800128a <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800128a:	e7fe      	b.n	800128a <HardFault_Handler>

0800128c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800128c:	e7fe      	b.n	800128c <MemManage_Handler>

0800128e <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800128e:	e7fe      	b.n	800128e <BusFault_Handler>

08001290 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001290:	e7fe      	b.n	8001290 <UsageFault_Handler>

08001292 <SVC_Handler>:

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001292:	4770      	bx	lr

08001294 <DebugMon_Handler>:
 8001294:	4770      	bx	lr

08001296 <PendSV_Handler>:
 8001296:	4770      	bx	lr

08001298 <SysTick_Handler>:
void SysTick_Handler(void)
{
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001298:	f000 b884 	b.w	80013a4 <HAL_IncTick>

0800129c <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800129c:	4a0b      	ldr	r2, [pc, #44]	; (80012cc <_sbrk+0x30>)
{
 800129e:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 80012a0:	6811      	ldr	r1, [r2, #0]
{
 80012a2:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 80012a4:	b909      	cbnz	r1, 80012aa <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 80012a6:	490a      	ldr	r1, [pc, #40]	; (80012d0 <_sbrk+0x34>)
 80012a8:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80012aa:	6810      	ldr	r0, [r2, #0]
 80012ac:	4909      	ldr	r1, [pc, #36]	; (80012d4 <_sbrk+0x38>)
 80012ae:	4c0a      	ldr	r4, [pc, #40]	; (80012d8 <_sbrk+0x3c>)
 80012b0:	4403      	add	r3, r0
 80012b2:	1b09      	subs	r1, r1, r4
 80012b4:	428b      	cmp	r3, r1
 80012b6:	d906      	bls.n	80012c6 <_sbrk+0x2a>
  {
    errno = ENOMEM;
 80012b8:	f00e fb0e 	bl	800f8d8 <__errno>
 80012bc:	230c      	movs	r3, #12
 80012be:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 80012c0:	f04f 30ff 	mov.w	r0, #4294967295

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 80012c4:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 80012c6:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 80012c8:	e7fc      	b.n	80012c4 <_sbrk+0x28>
 80012ca:	bf00      	nop
 80012cc:	20001fc8 	.word	0x20001fc8
 80012d0:	2001da18 	.word	0x2001da18
 80012d4:	20080000 	.word	0x20080000
 80012d8:	00000800 	.word	0x00000800

080012dc <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80012dc:	4a03      	ldr	r2, [pc, #12]	; (80012ec <SystemInit+0x10>)
 80012de:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 80012e2:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80012e6:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80012ea:	4770      	bx	lr
 80012ec:	e000ed00 	.word	0xe000ed00

080012f0 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 80012f0:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001328 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 80012f4:	480d      	ldr	r0, [pc, #52]	; (800132c <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 80012f6:	490e      	ldr	r1, [pc, #56]	; (8001330 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 80012f8:	4a0e      	ldr	r2, [pc, #56]	; (8001334 <LoopFillZerobss+0x1e>)
  movs r3, #0
 80012fa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80012fc:	e002      	b.n	8001304 <LoopCopyDataInit>

080012fe <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80012fe:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001300:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001302:	3304      	adds	r3, #4

08001304 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001304:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001306:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001308:	d3f9      	bcc.n	80012fe <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800130a:	4a0b      	ldr	r2, [pc, #44]	; (8001338 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 800130c:	4c0b      	ldr	r4, [pc, #44]	; (800133c <LoopFillZerobss+0x26>)
  movs r3, #0
 800130e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001310:	e001      	b.n	8001316 <LoopFillZerobss>

08001312 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001312:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001314:	3204      	adds	r2, #4

08001316 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001316:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001318:	d3fb      	bcc.n	8001312 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 800131a:	f7ff ffdf 	bl	80012dc <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800131e:	f00e fae1 	bl	800f8e4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001322:	f7ff fbc9 	bl	8000ab8 <main>
  bx  lr    
 8001326:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8001328:	20080000 	.word	0x20080000
  ldr r0, =_sdata
 800132c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001330:	20001ef4 	.word	0x20001ef4
  ldr r2, =_sidata
 8001334:	08036ef8 	.word	0x08036ef8
  ldr r2, =_sbss
 8001338:	20001f00 	.word	0x20001f00
  ldr r4, =_ebss
 800133c:	2001da14 	.word	0x2001da14

08001340 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001340:	e7fe      	b.n	8001340 <ADC_IRQHandler>
	...

08001344 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001344:	b538      	push	{r3, r4, r5, lr}
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8001346:	4b0e      	ldr	r3, [pc, #56]	; (8001380 <HAL_InitTick+0x3c>)
{
 8001348:	4605      	mov	r5, r0
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 800134a:	781a      	ldrb	r2, [r3, #0]
 800134c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001350:	fbb3 f3f2 	udiv	r3, r3, r2
 8001354:	4a0b      	ldr	r2, [pc, #44]	; (8001384 <HAL_InitTick+0x40>)
 8001356:	6810      	ldr	r0, [r2, #0]
 8001358:	fbb0 f0f3 	udiv	r0, r0, r3
 800135c:	f000 f89c 	bl	8001498 <HAL_SYSTICK_Config>
 8001360:	4604      	mov	r4, r0
 8001362:	b958      	cbnz	r0, 800137c <HAL_InitTick+0x38>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001364:	2d0f      	cmp	r5, #15
 8001366:	d809      	bhi.n	800137c <HAL_InitTick+0x38>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8001368:	4602      	mov	r2, r0
 800136a:	4629      	mov	r1, r5
 800136c:	f04f 30ff 	mov.w	r0, #4294967295
 8001370:	f000 f860 	bl	8001434 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8001374:	4b04      	ldr	r3, [pc, #16]	; (8001388 <HAL_InitTick+0x44>)
 8001376:	4620      	mov	r0, r4
 8001378:	601d      	str	r5, [r3, #0]
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
}
 800137a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800137c:	2001      	movs	r0, #1
 800137e:	e7fc      	b.n	800137a <HAL_InitTick+0x36>
 8001380:	20000004 	.word	0x20000004
 8001384:	20000000 	.word	0x20000000
 8001388:	20000008 	.word	0x20000008

0800138c <HAL_Init>:
{
 800138c:	b508      	push	{r3, lr}
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800138e:	2003      	movs	r0, #3
 8001390:	f000 f83e 	bl	8001410 <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
 8001394:	2000      	movs	r0, #0
 8001396:	f7ff ffd5 	bl	8001344 <HAL_InitTick>
  HAL_MspInit();
 800139a:	f7ff ff03 	bl	80011a4 <HAL_MspInit>
}
 800139e:	2000      	movs	r0, #0
 80013a0:	bd08      	pop	{r3, pc}
	...

080013a4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80013a4:	4a03      	ldr	r2, [pc, #12]	; (80013b4 <HAL_IncTick+0x10>)
 80013a6:	4b04      	ldr	r3, [pc, #16]	; (80013b8 <HAL_IncTick+0x14>)
 80013a8:	6811      	ldr	r1, [r2, #0]
 80013aa:	781b      	ldrb	r3, [r3, #0]
 80013ac:	440b      	add	r3, r1
 80013ae:	6013      	str	r3, [r2, #0]
}
 80013b0:	4770      	bx	lr
 80013b2:	bf00      	nop
 80013b4:	20001fcc 	.word	0x20001fcc
 80013b8:	20000004 	.word	0x20000004

080013bc <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80013bc:	4b01      	ldr	r3, [pc, #4]	; (80013c4 <HAL_GetTick+0x8>)
 80013be:	6818      	ldr	r0, [r3, #0]
}
 80013c0:	4770      	bx	lr
 80013c2:	bf00      	nop
 80013c4:	20001fcc 	.word	0x20001fcc

080013c8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80013c8:	b538      	push	{r3, r4, r5, lr}
 80013ca:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80013cc:	f7ff fff6 	bl	80013bc <HAL_GetTick>
 80013d0:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80013d2:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 80013d4:	bf1e      	ittt	ne
 80013d6:	4b04      	ldrne	r3, [pc, #16]	; (80013e8 <HAL_Delay+0x20>)
 80013d8:	781b      	ldrbne	r3, [r3, #0]
 80013da:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 80013dc:	f7ff ffee 	bl	80013bc <HAL_GetTick>
 80013e0:	1b43      	subs	r3, r0, r5
 80013e2:	42a3      	cmp	r3, r4
 80013e4:	d3fa      	bcc.n	80013dc <HAL_Delay+0x14>
  {
  }
}
 80013e6:	bd38      	pop	{r3, r4, r5, pc}
 80013e8:	20000004 	.word	0x20000004

080013ec <HAL_GetHalVersion>:
  * @retval version : 0xXYZR (8bits for each decimal, R for RC)
  */
uint32_t HAL_GetHalVersion(void)
{
  return __STM32F7xx_HAL_VERSION;
}
 80013ec:	4800      	ldr	r0, [pc, #0]	; (80013f0 <HAL_GetHalVersion+0x4>)
 80013ee:	4770      	bx	lr
 80013f0:	01030000 	.word	0x01030000

080013f4 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16U);
 80013f4:	4b01      	ldr	r3, [pc, #4]	; (80013fc <HAL_GetREVID+0x8>)
 80013f6:	6818      	ldr	r0, [r3, #0]
}
 80013f8:	0c00      	lsrs	r0, r0, #16
 80013fa:	4770      	bx	lr
 80013fc:	e0042000 	.word	0xe0042000

08001400 <HAL_GetDEVID>:
  * @brief  Returns the device identifier.
  * @retval Device identifier
  */
uint32_t HAL_GetDEVID(void)
{
   return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 8001400:	4b02      	ldr	r3, [pc, #8]	; (800140c <HAL_GetDEVID+0xc>)
 8001402:	6818      	ldr	r0, [r3, #0]
}
 8001404:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8001408:	4770      	bx	lr
 800140a:	bf00      	nop
 800140c:	e0042000 	.word	0xe0042000

08001410 <HAL_NVIC_SetPriorityGrouping>:
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8001410:	4907      	ldr	r1, [pc, #28]	; (8001430 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8001412:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8001414:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8001416:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800141a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800141e:	0412      	lsls	r2, r2, #16
 8001420:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8001422:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8001424:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001428:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800142c:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800142e:	4770      	bx	lr
 8001430:	e000ed00 	.word	0xe000ed00

08001434 <HAL_NVIC_SetPriority>:
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001434:	4b16      	ldr	r3, [pc, #88]	; (8001490 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8001436:	b530      	push	{r4, r5, lr}
 8001438:	68dc      	ldr	r4, [r3, #12]
 800143a:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800143e:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001442:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001444:	2b04      	cmp	r3, #4
 8001446:	bf28      	it	cs
 8001448:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800144a:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800144c:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001450:	bf8c      	ite	hi
 8001452:	3c03      	subhi	r4, #3
 8001454:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001456:	fa05 f303 	lsl.w	r3, r5, r3
  if ((int32_t)(IRQn) >= 0)
 800145a:	2800      	cmp	r0, #0
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800145c:	fa05 f504 	lsl.w	r5, r5, r4
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001460:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001464:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001468:	fa03 f304 	lsl.w	r3, r3, r4
 800146c:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001470:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8001474:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
 8001476:	db06      	blt.n	8001486 <HAL_NVIC_SetPriority+0x52>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001478:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 800147c:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8001480:	f880 3300 	strb.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8001484:	bd30      	pop	{r4, r5, pc}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001486:	f000 000f 	and.w	r0, r0, #15
 800148a:	4a02      	ldr	r2, [pc, #8]	; (8001494 <HAL_NVIC_SetPriority+0x60>)
 800148c:	5413      	strb	r3, [r2, r0]
 800148e:	e7f9      	b.n	8001484 <HAL_NVIC_SetPriority+0x50>
 8001490:	e000ed00 	.word	0xe000ed00
 8001494:	e000ed14 	.word	0xe000ed14

08001498 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001498:	3801      	subs	r0, #1
 800149a:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 800149e:	d20b      	bcs.n	80014b8 <HAL_SYSTICK_Config+0x20>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80014a0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80014a4:	4a05      	ldr	r2, [pc, #20]	; (80014bc <HAL_SYSTICK_Config+0x24>)
 80014a6:	21f0      	movs	r1, #240	; 0xf0
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80014a8:	6158      	str	r0, [r3, #20]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80014aa:	2000      	movs	r0, #0
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80014ac:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80014b0:	2207      	movs	r2, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80014b2:	6198      	str	r0, [r3, #24]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80014b4:	611a      	str	r2, [r3, #16]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80014b6:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 80014b8:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 80014ba:	4770      	bx	lr
 80014bc:	e000ed00 	.word	0xe000ed00

080014c0 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80014c0:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80014c2:	4604      	mov	r4, r0
 80014c4:	b908      	cbnz	r0, 80014ca <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 80014c6:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 80014c8:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 80014ca:	7f43      	ldrb	r3, [r0, #29]
 80014cc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80014d0:	b913      	cbnz	r3, 80014d8 <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 80014d2:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 80014d4:	f7ff fe7e 	bl	80011d4 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 80014d8:	2302      	movs	r3, #2
 80014da:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 80014dc:	7923      	ldrb	r3, [r4, #4]
 80014de:	b9e3      	cbnz	r3, 800151a <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 80014e0:	6823      	ldr	r3, [r4, #0]
 80014e2:	4a13      	ldr	r2, [pc, #76]	; (8001530 <HAL_CRC_Init+0x70>)
 80014e4:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 80014e6:	689a      	ldr	r2, [r3, #8]
 80014e8:	f022 0218 	bic.w	r2, r2, #24
 80014ec:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 80014ee:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 80014f0:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 80014f2:	b9d2      	cbnz	r2, 800152a <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 80014f4:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 80014f8:	611a      	str	r2, [r3, #16]
  return HAL_OK;
 80014fa:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 80014fc:	689a      	ldr	r2, [r3, #8]
 80014fe:	6961      	ldr	r1, [r4, #20]
 8001500:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8001504:	430a      	orrs	r2, r1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8001506:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8001508:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 800150a:	689a      	ldr	r2, [r3, #8]
 800150c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8001510:	430a      	orrs	r2, r1
 8001512:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 8001514:	2301      	movs	r3, #1
 8001516:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 8001518:	e7d6      	b.n	80014c8 <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 800151a:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 800151e:	4620      	mov	r0, r4
 8001520:	f000 f808 	bl	8001534 <HAL_CRCEx_Polynomial_Set>
 8001524:	2800      	cmp	r0, #0
 8001526:	d0e2      	beq.n	80014ee <HAL_CRC_Init+0x2e>
 8001528:	e7cd      	b.n	80014c6 <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 800152a:	6922      	ldr	r2, [r4, #16]
 800152c:	e7e4      	b.n	80014f8 <HAL_CRC_Init+0x38>
 800152e:	bf00      	nop
 8001530:	04c11db7 	.word	0x04c11db7

08001534 <HAL_CRCEx_Polynomial_Set>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8001534:	231f      	movs	r3, #31
{
 8001536:	b510      	push	{r4, lr}
   * definition. HAL_ERROR is reported if Pol degree is
   * larger than that indicated by PolyLength.
   * Look for MSB position: msb will contain the degree of
   *  the second to the largest polynomial member. E.g., for
   *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
  while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8001538:	3b01      	subs	r3, #1
 800153a:	d31c      	bcc.n	8001576 <HAL_CRCEx_Polynomial_Set+0x42>
 800153c:	fa21 f403 	lsr.w	r4, r1, r3
 8001540:	07e4      	lsls	r4, r4, #31
 8001542:	d5f9      	bpl.n	8001538 <HAL_CRCEx_Polynomial_Set+0x4>
  {
  }

  switch (PolyLength)
 8001544:	2a10      	cmp	r2, #16
 8001546:	d012      	beq.n	800156e <HAL_CRCEx_Polynomial_Set+0x3a>
 8001548:	d804      	bhi.n	8001554 <HAL_CRCEx_Polynomial_Set+0x20>
 800154a:	b13a      	cbz	r2, 800155c <HAL_CRCEx_Polynomial_Set+0x28>
 800154c:	2a08      	cmp	r2, #8
 800154e:	d010      	beq.n	8001572 <HAL_CRCEx_Polynomial_Set+0x3e>
      }
      break;
    case CRC_POLYLENGTH_8B:
      if (msb >= HAL_CRC_LENGTH_8B)
      {
        status =   HAL_ERROR;
 8001550:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 8001552:	e00b      	b.n	800156c <HAL_CRCEx_Polynomial_Set+0x38>
  switch (PolyLength)
 8001554:	2a18      	cmp	r2, #24
 8001556:	d1fb      	bne.n	8001550 <HAL_CRCEx_Polynomial_Set+0x1c>
      if (msb >= HAL_CRC_LENGTH_7B)
 8001558:	2b06      	cmp	r3, #6
      if (msb >= HAL_CRC_LENGTH_16B)
 800155a:	d8f9      	bhi.n	8001550 <HAL_CRCEx_Polynomial_Set+0x1c>
    WRITE_REG(hcrc->Instance->POL, Pol);
 800155c:	6800      	ldr	r0, [r0, #0]
 800155e:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 8001560:	6883      	ldr	r3, [r0, #8]
 8001562:	f023 0318 	bic.w	r3, r3, #24
 8001566:	4313      	orrs	r3, r2
 8001568:	6083      	str	r3, [r0, #8]
 800156a:	2000      	movs	r0, #0
}
 800156c:	bd10      	pop	{r4, pc}
      if (msb >= HAL_CRC_LENGTH_8B)
 800156e:	2b07      	cmp	r3, #7
 8001570:	e7f3      	b.n	800155a <HAL_CRCEx_Polynomial_Set+0x26>
      if (msb >= HAL_CRC_LENGTH_16B)
 8001572:	2b0f      	cmp	r3, #15
 8001574:	e7f1      	b.n	800155a <HAL_CRCEx_Polynomial_Set+0x26>
  switch (PolyLength)
 8001576:	2a00      	cmp	r2, #0
 8001578:	d1ea      	bne.n	8001550 <HAL_CRCEx_Polynomial_Set+0x1c>
 800157a:	e7ef      	b.n	800155c <HAL_CRCEx_Polynomial_Set+0x28>

0800157c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800157c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 8001580:	2300      	movs	r3, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001582:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 800173c <HAL_GPIO_Init+0x1c0>
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
        SYSCFG->EXTICR[position >> 2] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8001586:	4a6b      	ldr	r2, [pc, #428]	; (8001734 <HAL_GPIO_Init+0x1b8>)
    ioposition = ((uint32_t)0x01) << position;
 8001588:	2401      	movs	r4, #1
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800158a:	680d      	ldr	r5, [r1, #0]
    ioposition = ((uint32_t)0x01) << position;
 800158c:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800158e:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 8001592:	43ac      	bics	r4, r5
 8001594:	f040 80b4 	bne.w	8001700 <HAL_GPIO_Init+0x184>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8001598:	684d      	ldr	r5, [r1, #4]
 800159a:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 800159e:	2603      	movs	r6, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80015a0:	f005 0403 	and.w	r4, r5, #3
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 80015a4:	fa06 f608 	lsl.w	r6, r6, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80015a8:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 80015aa:	43f6      	mvns	r6, r6
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80015ac:	2f01      	cmp	r7, #1
 80015ae:	d834      	bhi.n	800161a <HAL_GPIO_Init+0x9e>
        temp = GPIOx->OSPEEDR; 
 80015b0:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 80015b2:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2));
 80015b6:	68cf      	ldr	r7, [r1, #12]
 80015b8:	fa07 f708 	lsl.w	r7, r7, r8
 80015bc:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 80015c0:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80015c2:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80015c4:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80015c8:	f3c5 1700 	ubfx	r7, r5, #4, #1
 80015cc:	409f      	lsls	r7, r3
 80015ce:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 80015d2:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 80015d4:	68c7      	ldr	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80015d6:	2c02      	cmp	r4, #2
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 80015d8:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2));
 80015dc:	688f      	ldr	r7, [r1, #8]
 80015de:	fa07 f708 	lsl.w	r7, r7, r8
 80015e2:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->PUPDR = temp;
 80015e6:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80015e8:	d119      	bne.n	800161e <HAL_GPIO_Init+0xa2>
        temp = GPIOx->AFR[position >> 3];
 80015ea:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 80015ee:	f003 0b07 	and.w	fp, r3, #7
 80015f2:	f04f 0e0f 	mov.w	lr, #15
 80015f6:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
 80015fa:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3];
 80015fe:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8001602:	fa0e fe0b 	lsl.w	lr, lr, fp
 8001606:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 800160a:	690f      	ldr	r7, [r1, #16]
 800160c:	fa07 f70b 	lsl.w	r7, r7, fp
 8001610:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3] = temp;
 8001614:	f8ca 7020 	str.w	r7, [sl, #32]
 8001618:	e001      	b.n	800161e <HAL_GPIO_Init+0xa2>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800161a:	2c03      	cmp	r4, #3
 800161c:	d1da      	bne.n	80015d4 <HAL_GPIO_Init+0x58>
      temp = GPIOx->MODER;
 800161e:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8001620:	fa04 f408 	lsl.w	r4, r4, r8
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8001624:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 8001628:	ea07 0706 	and.w	r7, r7, r6
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 800162c:	ea44 0407 	orr.w	r4, r4, r7
      GPIOx->MODER = temp;
 8001630:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8001632:	d065      	beq.n	8001700 <HAL_GPIO_Init+0x184>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001634:	f8d9 4044 	ldr.w	r4, [r9, #68]	; 0x44
 8001638:	f023 0603 	bic.w	r6, r3, #3
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 800163c:	f003 0703 	and.w	r7, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001640:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8001644:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8001648:	00bf      	lsls	r7, r7, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800164a:	f8c9 4044 	str.w	r4, [r9, #68]	; 0x44
 800164e:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
 8001652:	f8d9 4044 	ldr.w	r4, [r9, #68]	; 0x44
 8001656:	f404 4480 	and.w	r4, r4, #16384	; 0x4000
 800165a:	9401      	str	r4, [sp, #4]
 800165c:	9c01      	ldr	r4, [sp, #4]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 800165e:	240f      	movs	r4, #15
        temp = SYSCFG->EXTICR[position >> 2];
 8001660:	f8d6 e008 	ldr.w	lr, [r6, #8]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8001664:	40bc      	lsls	r4, r7
 8001666:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 800166a:	4c33      	ldr	r4, [pc, #204]	; (8001738 <HAL_GPIO_Init+0x1bc>)
 800166c:	42a0      	cmp	r0, r4
 800166e:	d04e      	beq.n	800170e <HAL_GPIO_Init+0x192>
 8001670:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8001674:	42a0      	cmp	r0, r4
 8001676:	d04c      	beq.n	8001712 <HAL_GPIO_Init+0x196>
 8001678:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800167c:	42a0      	cmp	r0, r4
 800167e:	d04a      	beq.n	8001716 <HAL_GPIO_Init+0x19a>
 8001680:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8001684:	42a0      	cmp	r0, r4
 8001686:	d048      	beq.n	800171a <HAL_GPIO_Init+0x19e>
 8001688:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800168c:	42a0      	cmp	r0, r4
 800168e:	d046      	beq.n	800171e <HAL_GPIO_Init+0x1a2>
 8001690:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8001694:	42a0      	cmp	r0, r4
 8001696:	d044      	beq.n	8001722 <HAL_GPIO_Init+0x1a6>
 8001698:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800169c:	42a0      	cmp	r0, r4
 800169e:	d042      	beq.n	8001726 <HAL_GPIO_Init+0x1aa>
 80016a0:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80016a4:	42a0      	cmp	r0, r4
 80016a6:	d040      	beq.n	800172a <HAL_GPIO_Init+0x1ae>
 80016a8:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80016ac:	42a0      	cmp	r0, r4
 80016ae:	d03e      	beq.n	800172e <HAL_GPIO_Init+0x1b2>
 80016b0:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80016b4:	42a0      	cmp	r0, r4
 80016b6:	bf0c      	ite	eq
 80016b8:	2409      	moveq	r4, #9
 80016ba:	240a      	movne	r4, #10
 80016bc:	40bc      	lsls	r4, r7
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 80016be:	02ef      	lsls	r7, r5, #11
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 80016c0:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2] = temp;
 80016c4:	60b4      	str	r4, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 80016c6:	ea6f 060c 	mvn.w	r6, ip
        temp = EXTI->RTSR;
 80016ca:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 80016cc:	bf54      	ite	pl
 80016ce:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80016d0:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;

        temp = EXTI->FTSR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 80016d4:	02af      	lsls	r7, r5, #10
        EXTI->RTSR = temp;
 80016d6:	6094      	str	r4, [r2, #8]
        temp = EXTI->FTSR;
 80016d8:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
 80016da:	bf54      	ite	pl
 80016dc:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80016de:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;

        temp = EXTI->EMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 80016e2:	03af      	lsls	r7, r5, #14
        EXTI->FTSR = temp;
 80016e4:	60d4      	str	r4, [r2, #12]
        temp = EXTI->EMR;
 80016e6:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
 80016e8:	bf54      	ite	pl
 80016ea:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80016ec:	ea4c 0404 	orrmi.w	r4, ip, r4
        EXTI->EMR = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 80016f0:	03ed      	lsls	r5, r5, #15
        EXTI->EMR = temp;
 80016f2:	6054      	str	r4, [r2, #4]
        temp = EXTI->IMR;
 80016f4:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 80016f6:	bf54      	ite	pl
 80016f8:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80016fa:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 80016fe:	6014      	str	r4, [r2, #0]
  for(position = 0; position < GPIO_NUMBER; position++)
 8001700:	3301      	adds	r3, #1
 8001702:	2b10      	cmp	r3, #16
 8001704:	f47f af40 	bne.w	8001588 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8001708:	b003      	add	sp, #12
 800170a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 800170e:	2400      	movs	r4, #0
 8001710:	e7d4      	b.n	80016bc <HAL_GPIO_Init+0x140>
 8001712:	2401      	movs	r4, #1
 8001714:	e7d2      	b.n	80016bc <HAL_GPIO_Init+0x140>
 8001716:	2402      	movs	r4, #2
 8001718:	e7d0      	b.n	80016bc <HAL_GPIO_Init+0x140>
 800171a:	2403      	movs	r4, #3
 800171c:	e7ce      	b.n	80016bc <HAL_GPIO_Init+0x140>
 800171e:	2404      	movs	r4, #4
 8001720:	e7cc      	b.n	80016bc <HAL_GPIO_Init+0x140>
 8001722:	2405      	movs	r4, #5
 8001724:	e7ca      	b.n	80016bc <HAL_GPIO_Init+0x140>
 8001726:	2406      	movs	r4, #6
 8001728:	e7c8      	b.n	80016bc <HAL_GPIO_Init+0x140>
 800172a:	2407      	movs	r4, #7
 800172c:	e7c6      	b.n	80016bc <HAL_GPIO_Init+0x140>
 800172e:	2408      	movs	r4, #8
 8001730:	e7c4      	b.n	80016bc <HAL_GPIO_Init+0x140>
 8001732:	bf00      	nop
 8001734:	40013c00 	.word	0x40013c00
 8001738:	40020000 	.word	0x40020000
 800173c:	40023800 	.word	0x40023800

08001740 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8001740:	b10a      	cbz	r2, 8001746 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 8001742:	6181      	str	r1, [r0, #24]
  }
}
 8001744:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 8001746:	0409      	lsls	r1, r1, #16
 8001748:	e7fb      	b.n	8001742 <HAL_GPIO_WritePin+0x2>
	...

0800174c <HAL_PWREx_EnableOverDrive>:
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
  uint32_t tickstart = 0;

  __HAL_RCC_PWR_CLK_ENABLE();
 800174c:	4b19      	ldr	r3, [pc, #100]	; (80017b4 <HAL_PWREx_EnableOverDrive+0x68>)
{
 800174e:	b537      	push	{r0, r1, r2, r4, r5, lr}
  __HAL_RCC_PWR_CLK_ENABLE();
 8001750:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 8001752:	4c19      	ldr	r4, [pc, #100]	; (80017b8 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001754:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001758:	641a      	str	r2, [r3, #64]	; 0x40
 800175a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800175c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001760:	9301      	str	r3, [sp, #4]
 8001762:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8001764:	6823      	ldr	r3, [r4, #0]
 8001766:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800176a:	6023      	str	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 800176c:	f7ff fe26 	bl	80013bc <HAL_GetTick>
 8001770:	4605      	mov	r5, r0

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8001772:	6863      	ldr	r3, [r4, #4]
 8001774:	03da      	lsls	r2, r3, #15
 8001776:	d50c      	bpl.n	8001792 <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8001778:	6823      	ldr	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800177a:	4d0f      	ldr	r5, [pc, #60]	; (80017b8 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800177c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001780:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 8001782:	f7ff fe1b 	bl	80013bc <HAL_GetTick>
 8001786:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8001788:	686b      	ldr	r3, [r5, #4]
 800178a:	039b      	lsls	r3, r3, #14
 800178c:	d50a      	bpl.n	80017a4 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 800178e:	2000      	movs	r0, #0
 8001790:	e006      	b.n	80017a0 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8001792:	f7ff fe13 	bl	80013bc <HAL_GetTick>
 8001796:	1b40      	subs	r0, r0, r5
 8001798:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800179c:	d9e9      	bls.n	8001772 <HAL_PWREx_EnableOverDrive+0x26>
      return HAL_TIMEOUT;
 800179e:	2003      	movs	r0, #3
}
 80017a0:	b003      	add	sp, #12
 80017a2:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80017a4:	f7ff fe0a 	bl	80013bc <HAL_GetTick>
 80017a8:	1b00      	subs	r0, r0, r4
 80017aa:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80017ae:	d9eb      	bls.n	8001788 <HAL_PWREx_EnableOverDrive+0x3c>
 80017b0:	e7f5      	b.n	800179e <HAL_PWREx_EnableOverDrive+0x52>
 80017b2:	bf00      	nop
 80017b4:	40023800 	.word	0x40023800
 80017b8:	40007000 	.word	0x40007000

080017bc <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80017bc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 80017c0:	4604      	mov	r4, r0
 80017c2:	b340      	cbz	r0, 8001816 <HAL_RCC_OscConfig+0x5a>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80017c4:	6803      	ldr	r3, [r0, #0]
 80017c6:	07db      	lsls	r3, r3, #31
 80017c8:	d410      	bmi.n	80017ec <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80017ca:	6823      	ldr	r3, [r4, #0]
 80017cc:	079f      	lsls	r7, r3, #30
 80017ce:	d461      	bmi.n	8001894 <HAL_RCC_OscConfig+0xd8>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80017d0:	6823      	ldr	r3, [r4, #0]
 80017d2:	0719      	lsls	r1, r3, #28
 80017d4:	f100 80a6 	bmi.w	8001924 <HAL_RCC_OscConfig+0x168>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80017d8:	6823      	ldr	r3, [r4, #0]
 80017da:	075a      	lsls	r2, r3, #29
 80017dc:	f100 80c7 	bmi.w	800196e <HAL_RCC_OscConfig+0x1b2>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80017e0:	69a2      	ldr	r2, [r4, #24]
 80017e2:	2a00      	cmp	r2, #0
 80017e4:	f040 8130 	bne.w	8001a48 <HAL_RCC_OscConfig+0x28c>
      {
        return HAL_ERROR;
      }
    }
  }
  return HAL_OK;
 80017e8:	2000      	movs	r0, #0
 80017ea:	e02c      	b.n	8001846 <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 80017ec:	4b94      	ldr	r3, [pc, #592]	; (8001a40 <HAL_RCC_OscConfig+0x284>)
 80017ee:	689a      	ldr	r2, [r3, #8]
 80017f0:	f002 020c 	and.w	r2, r2, #12
 80017f4:	2a04      	cmp	r2, #4
 80017f6:	d007      	beq.n	8001808 <HAL_RCC_OscConfig+0x4c>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80017f8:	689a      	ldr	r2, [r3, #8]
 80017fa:	f002 020c 	and.w	r2, r2, #12
 80017fe:	2a08      	cmp	r2, #8
 8001800:	d10b      	bne.n	800181a <HAL_RCC_OscConfig+0x5e>
 8001802:	685b      	ldr	r3, [r3, #4]
 8001804:	025e      	lsls	r6, r3, #9
 8001806:	d508      	bpl.n	800181a <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8001808:	4b8d      	ldr	r3, [pc, #564]	; (8001a40 <HAL_RCC_OscConfig+0x284>)
 800180a:	681b      	ldr	r3, [r3, #0]
 800180c:	039d      	lsls	r5, r3, #14
 800180e:	d5dc      	bpl.n	80017ca <HAL_RCC_OscConfig+0xe>
 8001810:	6863      	ldr	r3, [r4, #4]
 8001812:	2b00      	cmp	r3, #0
 8001814:	d1d9      	bne.n	80017ca <HAL_RCC_OscConfig+0xe>
        return HAL_ERROR;
 8001816:	2001      	movs	r0, #1
 8001818:	e015      	b.n	8001846 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800181a:	6863      	ldr	r3, [r4, #4]
 800181c:	4d88      	ldr	r5, [pc, #544]	; (8001a40 <HAL_RCC_OscConfig+0x284>)
 800181e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001822:	d113      	bne.n	800184c <HAL_RCC_OscConfig+0x90>
 8001824:	682b      	ldr	r3, [r5, #0]
 8001826:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800182a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800182c:	f7ff fdc6 	bl	80013bc <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001830:	4e83      	ldr	r6, [pc, #524]	; (8001a40 <HAL_RCC_OscConfig+0x284>)
        tickstart = HAL_GetTick();
 8001832:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001834:	6833      	ldr	r3, [r6, #0]
 8001836:	0398      	lsls	r0, r3, #14
 8001838:	d4c7      	bmi.n	80017ca <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800183a:	f7ff fdbf 	bl	80013bc <HAL_GetTick>
 800183e:	1b40      	subs	r0, r0, r5
 8001840:	2864      	cmp	r0, #100	; 0x64
 8001842:	d9f7      	bls.n	8001834 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 8001844:	2003      	movs	r0, #3
}
 8001846:	b002      	add	sp, #8
 8001848:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800184c:	b99b      	cbnz	r3, 8001876 <HAL_RCC_OscConfig+0xba>
 800184e:	682b      	ldr	r3, [r5, #0]
 8001850:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001854:	602b      	str	r3, [r5, #0]
 8001856:	682b      	ldr	r3, [r5, #0]
 8001858:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800185c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800185e:	f7ff fdad 	bl	80013bc <HAL_GetTick>
 8001862:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001864:	682b      	ldr	r3, [r5, #0]
 8001866:	0399      	lsls	r1, r3, #14
 8001868:	d5af      	bpl.n	80017ca <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800186a:	f7ff fda7 	bl	80013bc <HAL_GetTick>
 800186e:	1b80      	subs	r0, r0, r6
 8001870:	2864      	cmp	r0, #100	; 0x64
 8001872:	d9f7      	bls.n	8001864 <HAL_RCC_OscConfig+0xa8>
 8001874:	e7e6      	b.n	8001844 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001876:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800187a:	682b      	ldr	r3, [r5, #0]
 800187c:	d103      	bne.n	8001886 <HAL_RCC_OscConfig+0xca>
 800187e:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001882:	602b      	str	r3, [r5, #0]
 8001884:	e7ce      	b.n	8001824 <HAL_RCC_OscConfig+0x68>
 8001886:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800188a:	602b      	str	r3, [r5, #0]
 800188c:	682b      	ldr	r3, [r5, #0]
 800188e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001892:	e7ca      	b.n	800182a <HAL_RCC_OscConfig+0x6e>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8001894:	4b6a      	ldr	r3, [pc, #424]	; (8001a40 <HAL_RCC_OscConfig+0x284>)
 8001896:	689a      	ldr	r2, [r3, #8]
 8001898:	f012 0f0c 	tst.w	r2, #12
 800189c:	d007      	beq.n	80018ae <HAL_RCC_OscConfig+0xf2>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800189e:	689a      	ldr	r2, [r3, #8]
 80018a0:	f002 020c 	and.w	r2, r2, #12
 80018a4:	2a08      	cmp	r2, #8
 80018a6:	d111      	bne.n	80018cc <HAL_RCC_OscConfig+0x110>
 80018a8:	685b      	ldr	r3, [r3, #4]
 80018aa:	025a      	lsls	r2, r3, #9
 80018ac:	d40e      	bmi.n	80018cc <HAL_RCC_OscConfig+0x110>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80018ae:	4a64      	ldr	r2, [pc, #400]	; (8001a40 <HAL_RCC_OscConfig+0x284>)
 80018b0:	6813      	ldr	r3, [r2, #0]
 80018b2:	079b      	lsls	r3, r3, #30
 80018b4:	d502      	bpl.n	80018bc <HAL_RCC_OscConfig+0x100>
 80018b6:	68e3      	ldr	r3, [r4, #12]
 80018b8:	2b01      	cmp	r3, #1
 80018ba:	d1ac      	bne.n	8001816 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80018bc:	6813      	ldr	r3, [r2, #0]
 80018be:	6921      	ldr	r1, [r4, #16]
 80018c0:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80018c4:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80018c8:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80018ca:	e781      	b.n	80017d0 <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 80018cc:	68e3      	ldr	r3, [r4, #12]
 80018ce:	4d5c      	ldr	r5, [pc, #368]	; (8001a40 <HAL_RCC_OscConfig+0x284>)
 80018d0:	b1bb      	cbz	r3, 8001902 <HAL_RCC_OscConfig+0x146>
        __HAL_RCC_HSI_ENABLE();
 80018d2:	682b      	ldr	r3, [r5, #0]
 80018d4:	f043 0301 	orr.w	r3, r3, #1
 80018d8:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80018da:	f7ff fd6f 	bl	80013bc <HAL_GetTick>
 80018de:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80018e0:	682b      	ldr	r3, [r5, #0]
 80018e2:	079f      	lsls	r7, r3, #30
 80018e4:	d507      	bpl.n	80018f6 <HAL_RCC_OscConfig+0x13a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80018e6:	682b      	ldr	r3, [r5, #0]
 80018e8:	6922      	ldr	r2, [r4, #16]
 80018ea:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80018ee:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80018f2:	602b      	str	r3, [r5, #0]
 80018f4:	e76c      	b.n	80017d0 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80018f6:	f7ff fd61 	bl	80013bc <HAL_GetTick>
 80018fa:	1b80      	subs	r0, r0, r6
 80018fc:	2802      	cmp	r0, #2
 80018fe:	d9ef      	bls.n	80018e0 <HAL_RCC_OscConfig+0x124>
 8001900:	e7a0      	b.n	8001844 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 8001902:	682b      	ldr	r3, [r5, #0]
 8001904:	f023 0301 	bic.w	r3, r3, #1
 8001908:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800190a:	f7ff fd57 	bl	80013bc <HAL_GetTick>
 800190e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8001910:	682b      	ldr	r3, [r5, #0]
 8001912:	0798      	lsls	r0, r3, #30
 8001914:	f57f af5c 	bpl.w	80017d0 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8001918:	f7ff fd50 	bl	80013bc <HAL_GetTick>
 800191c:	1b80      	subs	r0, r0, r6
 800191e:	2802      	cmp	r0, #2
 8001920:	d9f6      	bls.n	8001910 <HAL_RCC_OscConfig+0x154>
 8001922:	e78f      	b.n	8001844 <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8001924:	6963      	ldr	r3, [r4, #20]
 8001926:	4d46      	ldr	r5, [pc, #280]	; (8001a40 <HAL_RCC_OscConfig+0x284>)
 8001928:	b183      	cbz	r3, 800194c <HAL_RCC_OscConfig+0x190>
      __HAL_RCC_LSI_ENABLE();
 800192a:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 800192c:	f043 0301 	orr.w	r3, r3, #1
 8001930:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
 8001932:	f7ff fd43 	bl	80013bc <HAL_GetTick>
 8001936:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8001938:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 800193a:	079b      	lsls	r3, r3, #30
 800193c:	f53f af4c 	bmi.w	80017d8 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8001940:	f7ff fd3c 	bl	80013bc <HAL_GetTick>
 8001944:	1b80      	subs	r0, r0, r6
 8001946:	2802      	cmp	r0, #2
 8001948:	d9f6      	bls.n	8001938 <HAL_RCC_OscConfig+0x17c>
 800194a:	e77b      	b.n	8001844 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 800194c:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 800194e:	f023 0301 	bic.w	r3, r3, #1
 8001952:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
 8001954:	f7ff fd32 	bl	80013bc <HAL_GetTick>
 8001958:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800195a:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 800195c:	079f      	lsls	r7, r3, #30
 800195e:	f57f af3b 	bpl.w	80017d8 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8001962:	f7ff fd2b 	bl	80013bc <HAL_GetTick>
 8001966:	1b80      	subs	r0, r0, r6
 8001968:	2802      	cmp	r0, #2
 800196a:	d9f6      	bls.n	800195a <HAL_RCC_OscConfig+0x19e>
 800196c:	e76a      	b.n	8001844 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 800196e:	4b34      	ldr	r3, [pc, #208]	; (8001a40 <HAL_RCC_OscConfig+0x284>)
 8001970:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001972:	00d0      	lsls	r0, r2, #3
 8001974:	d427      	bmi.n	80019c6 <HAL_RCC_OscConfig+0x20a>
      __HAL_RCC_PWR_CLK_ENABLE();
 8001976:	6c1a      	ldr	r2, [r3, #64]	; 0x40
      pwrclkchanged = SET;
 8001978:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 800197a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800197e:	641a      	str	r2, [r3, #64]	; 0x40
 8001980:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001982:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001986:	9301      	str	r3, [sp, #4]
 8001988:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 800198a:	4d2e      	ldr	r5, [pc, #184]	; (8001a44 <HAL_RCC_OscConfig+0x288>)
 800198c:	682b      	ldr	r3, [r5, #0]
 800198e:	05d9      	lsls	r1, r3, #23
 8001990:	d51b      	bpl.n	80019ca <HAL_RCC_OscConfig+0x20e>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001992:	68a3      	ldr	r3, [r4, #8]
 8001994:	4d2a      	ldr	r5, [pc, #168]	; (8001a40 <HAL_RCC_OscConfig+0x284>)
 8001996:	2b01      	cmp	r3, #1
 8001998:	d127      	bne.n	80019ea <HAL_RCC_OscConfig+0x22e>
 800199a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800199c:	f043 0301 	orr.w	r3, r3, #1
 80019a0:	672b      	str	r3, [r5, #112]	; 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80019a2:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 80019a6:	f7ff fd09 	bl	80013bc <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80019aa:	4e25      	ldr	r6, [pc, #148]	; (8001a40 <HAL_RCC_OscConfig+0x284>)
      tickstart = HAL_GetTick();
 80019ac:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80019ae:	6f33      	ldr	r3, [r6, #112]	; 0x70
 80019b0:	079b      	lsls	r3, r3, #30
 80019b2:	d53f      	bpl.n	8001a34 <HAL_RCC_OscConfig+0x278>
    if (pwrclkchanged == SET)
 80019b4:	2f00      	cmp	r7, #0
 80019b6:	f43f af13 	beq.w	80017e0 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 80019ba:	4a21      	ldr	r2, [pc, #132]	; (8001a40 <HAL_RCC_OscConfig+0x284>)
 80019bc:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80019be:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80019c2:	6413      	str	r3, [r2, #64]	; 0x40
 80019c4:	e70c      	b.n	80017e0 <HAL_RCC_OscConfig+0x24>
  FlagStatus pwrclkchanged = RESET;
 80019c6:	2700      	movs	r7, #0
 80019c8:	e7df      	b.n	800198a <HAL_RCC_OscConfig+0x1ce>
      PWR->CR1 |= PWR_CR1_DBP;
 80019ca:	682b      	ldr	r3, [r5, #0]
 80019cc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80019d0:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80019d2:	f7ff fcf3 	bl	80013bc <HAL_GetTick>
 80019d6:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 80019d8:	682b      	ldr	r3, [r5, #0]
 80019da:	05da      	lsls	r2, r3, #23
 80019dc:	d4d9      	bmi.n	8001992 <HAL_RCC_OscConfig+0x1d6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80019de:	f7ff fced 	bl	80013bc <HAL_GetTick>
 80019e2:	1b80      	subs	r0, r0, r6
 80019e4:	2864      	cmp	r0, #100	; 0x64
 80019e6:	d9f7      	bls.n	80019d8 <HAL_RCC_OscConfig+0x21c>
 80019e8:	e72c      	b.n	8001844 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80019ea:	b9ab      	cbnz	r3, 8001a18 <HAL_RCC_OscConfig+0x25c>
 80019ec:	6f2b      	ldr	r3, [r5, #112]	; 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80019ee:	f241 3888 	movw	r8, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80019f2:	f023 0301 	bic.w	r3, r3, #1
 80019f6:	672b      	str	r3, [r5, #112]	; 0x70
 80019f8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80019fa:	f023 0304 	bic.w	r3, r3, #4
 80019fe:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8001a00:	f7ff fcdc 	bl	80013bc <HAL_GetTick>
 8001a04:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001a06:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8001a08:	0798      	lsls	r0, r3, #30
 8001a0a:	d5d3      	bpl.n	80019b4 <HAL_RCC_OscConfig+0x1f8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001a0c:	f7ff fcd6 	bl	80013bc <HAL_GetTick>
 8001a10:	1b80      	subs	r0, r0, r6
 8001a12:	4540      	cmp	r0, r8
 8001a14:	d9f7      	bls.n	8001a06 <HAL_RCC_OscConfig+0x24a>
 8001a16:	e715      	b.n	8001844 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001a18:	2b05      	cmp	r3, #5
 8001a1a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8001a1c:	d103      	bne.n	8001a26 <HAL_RCC_OscConfig+0x26a>
 8001a1e:	f043 0304 	orr.w	r3, r3, #4
 8001a22:	672b      	str	r3, [r5, #112]	; 0x70
 8001a24:	e7b9      	b.n	800199a <HAL_RCC_OscConfig+0x1de>
 8001a26:	f023 0301 	bic.w	r3, r3, #1
 8001a2a:	672b      	str	r3, [r5, #112]	; 0x70
 8001a2c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8001a2e:	f023 0304 	bic.w	r3, r3, #4
 8001a32:	e7b5      	b.n	80019a0 <HAL_RCC_OscConfig+0x1e4>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001a34:	f7ff fcc2 	bl	80013bc <HAL_GetTick>
 8001a38:	1b40      	subs	r0, r0, r5
 8001a3a:	4540      	cmp	r0, r8
 8001a3c:	d9b7      	bls.n	80019ae <HAL_RCC_OscConfig+0x1f2>
 8001a3e:	e701      	b.n	8001844 <HAL_RCC_OscConfig+0x88>
 8001a40:	40023800 	.word	0x40023800
 8001a44:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8001a48:	4d3c      	ldr	r5, [pc, #240]	; (8001b3c <HAL_RCC_OscConfig+0x380>)
 8001a4a:	68ab      	ldr	r3, [r5, #8]
 8001a4c:	f003 030c 	and.w	r3, r3, #12
 8001a50:	2b08      	cmp	r3, #8
 8001a52:	d042      	beq.n	8001ada <HAL_RCC_OscConfig+0x31e>
        __HAL_RCC_PLL_DISABLE();
 8001a54:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8001a56:	2a02      	cmp	r2, #2
        __HAL_RCC_PLL_DISABLE();
 8001a58:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8001a5c:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8001a5e:	d12f      	bne.n	8001ac0 <HAL_RCC_OscConfig+0x304>
        tickstart = HAL_GetTick();
 8001a60:	f7ff fcac 	bl	80013bc <HAL_GetTick>
 8001a64:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001a66:	682b      	ldr	r3, [r5, #0]
 8001a68:	0199      	lsls	r1, r3, #6
 8001a6a:	d423      	bmi.n	8001ab4 <HAL_RCC_OscConfig+0x2f8>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8001a6c:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8001a70:	4313      	orrs	r3, r2
 8001a72:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8001a74:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8001a78:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8001a7a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8001a7e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8001a80:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8001a84:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8001a86:	0852      	lsrs	r2, r2, #1
 8001a88:	3a01      	subs	r2, #1
 8001a8a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8001a8e:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8001a90:	682b      	ldr	r3, [r5, #0]
 8001a92:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001a96:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8001a98:	f7ff fc90 	bl	80013bc <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001a9c:	4d27      	ldr	r5, [pc, #156]	; (8001b3c <HAL_RCC_OscConfig+0x380>)
        tickstart = HAL_GetTick();
 8001a9e:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001aa0:	682b      	ldr	r3, [r5, #0]
 8001aa2:	019a      	lsls	r2, r3, #6
 8001aa4:	f53f aea0 	bmi.w	80017e8 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001aa8:	f7ff fc88 	bl	80013bc <HAL_GetTick>
 8001aac:	1b00      	subs	r0, r0, r4
 8001aae:	2802      	cmp	r0, #2
 8001ab0:	d9f6      	bls.n	8001aa0 <HAL_RCC_OscConfig+0x2e4>
 8001ab2:	e6c7      	b.n	8001844 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001ab4:	f7ff fc82 	bl	80013bc <HAL_GetTick>
 8001ab8:	1b80      	subs	r0, r0, r6
 8001aba:	2802      	cmp	r0, #2
 8001abc:	d9d3      	bls.n	8001a66 <HAL_RCC_OscConfig+0x2aa>
 8001abe:	e6c1      	b.n	8001844 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 8001ac0:	f7ff fc7c 	bl	80013bc <HAL_GetTick>
 8001ac4:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001ac6:	682b      	ldr	r3, [r5, #0]
 8001ac8:	019b      	lsls	r3, r3, #6
 8001aca:	f57f ae8d 	bpl.w	80017e8 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001ace:	f7ff fc75 	bl	80013bc <HAL_GetTick>
 8001ad2:	1b00      	subs	r0, r0, r4
 8001ad4:	2802      	cmp	r0, #2
 8001ad6:	d9f6      	bls.n	8001ac6 <HAL_RCC_OscConfig+0x30a>
 8001ad8:	e6b4      	b.n	8001844 <HAL_RCC_OscConfig+0x88>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8001ada:	2a01      	cmp	r2, #1
      pll_config = RCC->PLLCFGR;
 8001adc:	686b      	ldr	r3, [r5, #4]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8001ade:	f43f ae9a 	beq.w	8001816 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001ae2:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8001ae6:	69e1      	ldr	r1, [r4, #28]
 8001ae8:	428a      	cmp	r2, r1
 8001aea:	f47f ae94 	bne.w	8001816 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8001aee:	f003 023f 	and.w	r2, r3, #63	; 0x3f
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001af2:	6a21      	ldr	r1, [r4, #32]
 8001af4:	428a      	cmp	r2, r1
 8001af6:	f47f ae8e 	bne.w	8001816 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8001afa:	f647 72c0 	movw	r2, #32704	; 0x7fc0
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8001afe:	6a61      	ldr	r1, [r4, #36]	; 0x24
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8001b00:	401a      	ands	r2, r3
 8001b02:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8001b06:	f47f ae86 	bne.w	8001816 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 8001b0a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8001b0c:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 8001b10:	0852      	lsrs	r2, r2, #1
 8001b12:	3a01      	subs	r2, #1
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8001b14:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8001b18:	f47f ae7d 	bne.w	8001816 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8001b1c:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8001b20:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 8001b22:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 8001b26:	f47f ae76 	bne.w	8001816 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 8001b2a:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
 8001b2e:	6b22      	ldr	r2, [r4, #48]	; 0x30
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8001b30:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 8001b34:	f43f ae58 	beq.w	80017e8 <HAL_RCC_OscConfig+0x2c>
 8001b38:	e66d      	b.n	8001816 <HAL_RCC_OscConfig+0x5a>
 8001b3a:	bf00      	nop
 8001b3c:	40023800 	.word	0x40023800

08001b40 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
  uint32_t sysclockfreq = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8001b40:	4913      	ldr	r1, [pc, #76]	; (8001b90 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8001b42:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8001b44:	688b      	ldr	r3, [r1, #8]
 8001b46:	f003 030c 	and.w	r3, r3, #12
 8001b4a:	2b04      	cmp	r3, #4
 8001b4c:	d01b      	beq.n	8001b86 <HAL_RCC_GetSysClockFreq+0x46>
 8001b4e:	2b08      	cmp	r3, #8
 8001b50:	d11b      	bne.n	8001b8a <HAL_RCC_GetSysClockFreq+0x4a>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8001b52:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 8001b54:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8001b56:	6849      	ldr	r1, [r1, #4]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8001b58:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 8001b5c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8001b60:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8001b64:	bf1a      	itte	ne
 8001b66:	480b      	ldrne	r0, [pc, #44]	; (8001b94 <HAL_RCC_GetSysClockFreq+0x54>)
 8001b68:	2300      	movne	r3, #0
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8001b6a:	480b      	ldreq	r0, [pc, #44]	; (8001b98 <HAL_RCC_GetSysClockFreq+0x58>)
 8001b6c:	fba1 0100 	umull	r0, r1, r1, r0
 8001b70:	f7fe fd7a 	bl	8000668 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8001b74:	4b06      	ldr	r3, [pc, #24]	; (8001b90 <HAL_RCC_GetSysClockFreq+0x50>)
 8001b76:	685b      	ldr	r3, [r3, #4]
 8001b78:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8001b7c:	3301      	adds	r3, #1
 8001b7e:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 8001b80:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8001b84:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8001b86:	4803      	ldr	r0, [pc, #12]	; (8001b94 <HAL_RCC_GetSysClockFreq+0x54>)
 8001b88:	e7fc      	b.n	8001b84 <HAL_RCC_GetSysClockFreq+0x44>
      sysclockfreq = HSI_VALUE;
 8001b8a:	4803      	ldr	r0, [pc, #12]	; (8001b98 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8001b8c:	e7fa      	b.n	8001b84 <HAL_RCC_GetSysClockFreq+0x44>
 8001b8e:	bf00      	nop
 8001b90:	40023800 	.word	0x40023800
 8001b94:	017d7840 	.word	0x017d7840
 8001b98:	00f42400 	.word	0x00f42400

08001b9c <HAL_RCC_ClockConfig>:
{
 8001b9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001ba0:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 8001ba2:	4604      	mov	r4, r0
 8001ba4:	b910      	cbnz	r0, 8001bac <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8001ba6:	2001      	movs	r0, #1
}
 8001ba8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8001bac:	4a45      	ldr	r2, [pc, #276]	; (8001cc4 <HAL_RCC_ClockConfig+0x128>)
 8001bae:	6813      	ldr	r3, [r2, #0]
 8001bb0:	f003 030f 	and.w	r3, r3, #15
 8001bb4:	428b      	cmp	r3, r1
 8001bb6:	d328      	bcc.n	8001c0a <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8001bb8:	6821      	ldr	r1, [r4, #0]
 8001bba:	078f      	lsls	r7, r1, #30
 8001bbc:	d430      	bmi.n	8001c20 <HAL_RCC_ClockConfig+0x84>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8001bbe:	07c8      	lsls	r0, r1, #31
 8001bc0:	d443      	bmi.n	8001c4a <HAL_RCC_ClockConfig+0xae>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8001bc2:	4a40      	ldr	r2, [pc, #256]	; (8001cc4 <HAL_RCC_ClockConfig+0x128>)
 8001bc4:	6813      	ldr	r3, [r2, #0]
 8001bc6:	f003 030f 	and.w	r3, r3, #15
 8001bca:	42ab      	cmp	r3, r5
 8001bcc:	d866      	bhi.n	8001c9c <HAL_RCC_ClockConfig+0x100>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001bce:	6822      	ldr	r2, [r4, #0]
 8001bd0:	0751      	lsls	r1, r2, #29
 8001bd2:	d46f      	bmi.n	8001cb4 <HAL_RCC_ClockConfig+0x118>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8001bd4:	0713      	lsls	r3, r2, #28
 8001bd6:	d507      	bpl.n	8001be8 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8001bd8:	4a3b      	ldr	r2, [pc, #236]	; (8001cc8 <HAL_RCC_ClockConfig+0x12c>)
 8001bda:	6921      	ldr	r1, [r4, #16]
 8001bdc:	6893      	ldr	r3, [r2, #8]
 8001bde:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8001be2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8001be6:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8001be8:	f7ff ffaa 	bl	8001b40 <HAL_RCC_GetSysClockFreq>
 8001bec:	4b36      	ldr	r3, [pc, #216]	; (8001cc8 <HAL_RCC_ClockConfig+0x12c>)
 8001bee:	4a37      	ldr	r2, [pc, #220]	; (8001ccc <HAL_RCC_ClockConfig+0x130>)
 8001bf0:	689b      	ldr	r3, [r3, #8]
 8001bf2:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8001bf6:	5cd3      	ldrb	r3, [r2, r3]
 8001bf8:	40d8      	lsrs	r0, r3
 8001bfa:	4b35      	ldr	r3, [pc, #212]	; (8001cd0 <HAL_RCC_ClockConfig+0x134>)
 8001bfc:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 8001bfe:	4b35      	ldr	r3, [pc, #212]	; (8001cd4 <HAL_RCC_ClockConfig+0x138>)
 8001c00:	6818      	ldr	r0, [r3, #0]
 8001c02:	f7ff fb9f 	bl	8001344 <HAL_InitTick>
  return HAL_OK;
 8001c06:	2000      	movs	r0, #0
 8001c08:	e7ce      	b.n	8001ba8 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001c0a:	6813      	ldr	r3, [r2, #0]
 8001c0c:	f023 030f 	bic.w	r3, r3, #15
 8001c10:	430b      	orrs	r3, r1
 8001c12:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8001c14:	6813      	ldr	r3, [r2, #0]
 8001c16:	f003 030f 	and.w	r3, r3, #15
 8001c1a:	428b      	cmp	r3, r1
 8001c1c:	d1c3      	bne.n	8001ba6 <HAL_RCC_ClockConfig+0xa>
 8001c1e:	e7cb      	b.n	8001bb8 <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001c20:	f011 0f04 	tst.w	r1, #4
 8001c24:	4b28      	ldr	r3, [pc, #160]	; (8001cc8 <HAL_RCC_ClockConfig+0x12c>)
 8001c26:	d003      	beq.n	8001c30 <HAL_RCC_ClockConfig+0x94>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8001c28:	689a      	ldr	r2, [r3, #8]
 8001c2a:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 8001c2e:	609a      	str	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8001c30:	070e      	lsls	r6, r1, #28
 8001c32:	d503      	bpl.n	8001c3c <HAL_RCC_ClockConfig+0xa0>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8001c34:	689a      	ldr	r2, [r3, #8]
 8001c36:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 8001c3a:	609a      	str	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8001c3c:	689a      	ldr	r2, [r3, #8]
 8001c3e:	68a0      	ldr	r0, [r4, #8]
 8001c40:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8001c44:	4302      	orrs	r2, r0
 8001c46:	609a      	str	r2, [r3, #8]
 8001c48:	e7b9      	b.n	8001bbe <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001c4a:	6861      	ldr	r1, [r4, #4]
 8001c4c:	4b1e      	ldr	r3, [pc, #120]	; (8001cc8 <HAL_RCC_ClockConfig+0x12c>)
 8001c4e:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001c50:	681a      	ldr	r2, [r3, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001c52:	d11b      	bne.n	8001c8c <HAL_RCC_ClockConfig+0xf0>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001c54:	f412 3f00 	tst.w	r2, #131072	; 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001c58:	d0a5      	beq.n	8001ba6 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8001c5a:	689a      	ldr	r2, [r3, #8]
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001c5c:	f241 3888 	movw	r8, #5000	; 0x1388
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001c60:	4f19      	ldr	r7, [pc, #100]	; (8001cc8 <HAL_RCC_ClockConfig+0x12c>)
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8001c62:	f022 0203 	bic.w	r2, r2, #3
 8001c66:	430a      	orrs	r2, r1
 8001c68:	609a      	str	r2, [r3, #8]
    tickstart = HAL_GetTick();
 8001c6a:	f7ff fba7 	bl	80013bc <HAL_GetTick>
 8001c6e:	4606      	mov	r6, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001c70:	68bb      	ldr	r3, [r7, #8]
 8001c72:	6862      	ldr	r2, [r4, #4]
 8001c74:	f003 030c 	and.w	r3, r3, #12
 8001c78:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8001c7c:	d0a1      	beq.n	8001bc2 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001c7e:	f7ff fb9d 	bl	80013bc <HAL_GetTick>
 8001c82:	1b80      	subs	r0, r0, r6
 8001c84:	4540      	cmp	r0, r8
 8001c86:	d9f3      	bls.n	8001c70 <HAL_RCC_ClockConfig+0xd4>
        return HAL_TIMEOUT;
 8001c88:	2003      	movs	r0, #3
 8001c8a:	e78d      	b.n	8001ba8 <HAL_RCC_ClockConfig+0xc>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8001c8c:	2902      	cmp	r1, #2
 8001c8e:	d102      	bne.n	8001c96 <HAL_RCC_ClockConfig+0xfa>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001c90:	f012 7f00 	tst.w	r2, #33554432	; 0x2000000
 8001c94:	e7e0      	b.n	8001c58 <HAL_RCC_ClockConfig+0xbc>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001c96:	f012 0f02 	tst.w	r2, #2
 8001c9a:	e7dd      	b.n	8001c58 <HAL_RCC_ClockConfig+0xbc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001c9c:	6813      	ldr	r3, [r2, #0]
 8001c9e:	f023 030f 	bic.w	r3, r3, #15
 8001ca2:	432b      	orrs	r3, r5
 8001ca4:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8001ca6:	6813      	ldr	r3, [r2, #0]
 8001ca8:	f003 030f 	and.w	r3, r3, #15
 8001cac:	42ab      	cmp	r3, r5
 8001cae:	f47f af7a 	bne.w	8001ba6 <HAL_RCC_ClockConfig+0xa>
 8001cb2:	e78c      	b.n	8001bce <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8001cb4:	4904      	ldr	r1, [pc, #16]	; (8001cc8 <HAL_RCC_ClockConfig+0x12c>)
 8001cb6:	68e0      	ldr	r0, [r4, #12]
 8001cb8:	688b      	ldr	r3, [r1, #8]
 8001cba:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8001cbe:	4303      	orrs	r3, r0
 8001cc0:	608b      	str	r3, [r1, #8]
 8001cc2:	e787      	b.n	8001bd4 <HAL_RCC_ClockConfig+0x38>
 8001cc4:	40023c00 	.word	0x40023c00
 8001cc8:	40023800 	.word	0x40023800
 8001ccc:	0801233c 	.word	0x0801233c
 8001cd0:	20000000 	.word	0x20000000
 8001cd4:	20000008 	.word	0x20000008

08001cd8 <HAL_RCC_GetHCLKFreq>:
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
  return SystemCoreClock;
}
 8001cd8:	4b01      	ldr	r3, [pc, #4]	; (8001ce0 <HAL_RCC_GetHCLKFreq+0x8>)
 8001cda:	6818      	ldr	r0, [r3, #0]
 8001cdc:	4770      	bx	lr
 8001cde:	bf00      	nop
 8001ce0:	20000000 	.word	0x20000000

08001ce4 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8001ce4:	4b04      	ldr	r3, [pc, #16]	; (8001cf8 <HAL_RCC_GetPCLK1Freq+0x14>)
 8001ce6:	4a05      	ldr	r2, [pc, #20]	; (8001cfc <HAL_RCC_GetPCLK1Freq+0x18>)
 8001ce8:	689b      	ldr	r3, [r3, #8]
 8001cea:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8001cee:	5cd3      	ldrb	r3, [r2, r3]
 8001cf0:	4a03      	ldr	r2, [pc, #12]	; (8001d00 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8001cf2:	6810      	ldr	r0, [r2, #0]
}
 8001cf4:	40d8      	lsrs	r0, r3
 8001cf6:	4770      	bx	lr
 8001cf8:	40023800 	.word	0x40023800
 8001cfc:	0801234c 	.word	0x0801234c
 8001d00:	20000000 	.word	0x20000000

08001d04 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8001d04:	4b04      	ldr	r3, [pc, #16]	; (8001d18 <HAL_RCC_GetPCLK2Freq+0x14>)
 8001d06:	4a05      	ldr	r2, [pc, #20]	; (8001d1c <HAL_RCC_GetPCLK2Freq+0x18>)
 8001d08:	689b      	ldr	r3, [r3, #8]
 8001d0a:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8001d0e:	5cd3      	ldrb	r3, [r2, r3]
 8001d10:	4a03      	ldr	r2, [pc, #12]	; (8001d20 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8001d12:	6810      	ldr	r0, [r2, #0]
}
 8001d14:	40d8      	lsrs	r0, r3
 8001d16:	4770      	bx	lr
 8001d18:	40023800 	.word	0x40023800
 8001d1c:	0801234c 	.word	0x0801234c
 8001d20:	20000000 	.word	0x20000000

08001d24 <HAL_RCCEx_PeriphCLKConfig>:

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8001d24:	6803      	ldr	r3, [r0, #0]
{
 8001d26:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8001d2a:	f013 0601 	ands.w	r6, r3, #1
{
 8001d2e:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8001d30:	d00b      	beq.n	8001d4a <HAL_RCCEx_PeriphCLKConfig+0x26>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 8001d32:	4ab1      	ldr	r2, [pc, #708]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001d34:	6891      	ldr	r1, [r2, #8]
 8001d36:	f421 0100 	bic.w	r1, r1, #8388608	; 0x800000
 8001d3a:	6091      	str	r1, [r2, #8]
 8001d3c:	6b46      	ldr	r6, [r0, #52]	; 0x34
 8001d3e:	6891      	ldr	r1, [r2, #8]
 8001d40:	4331      	orrs	r1, r6

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 8001d42:	fab6 f686 	clz	r6, r6
 8001d46:	0976      	lsrs	r6, r6, #5
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 8001d48:	6091      	str	r1, [r2, #8]
      plli2sused = 1;
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 8001d4a:	f413 2500 	ands.w	r5, r3, #524288	; 0x80000
 8001d4e:	d012      	beq.n	8001d76 <HAL_RCCEx_PeriphCLKConfig+0x52>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8001d50:	49a9      	ldr	r1, [pc, #676]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001d52:	6be5      	ldr	r5, [r4, #60]	; 0x3c
 8001d54:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 8001d58:	f5b5 1f80 	cmp.w	r5, #1048576	; 0x100000
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8001d5c:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
    {
      plli2sused = 1;
 8001d60:	bf08      	it	eq
 8001d62:	2601      	moveq	r6, #1
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8001d64:	ea42 0205 	orr.w	r2, r2, r5
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8001d68:	bf16      	itet	ne
 8001d6a:	fab5 f585 	clzne	r5, r5
  uint32_t pllsaiused = 0;
 8001d6e:	2500      	moveq	r5, #0
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8001d70:	096d      	lsrne	r5, r5, #5
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8001d72:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
      pllsaiused = 1;
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 8001d76:	02d9      	lsls	r1, r3, #11
 8001d78:	d510      	bpl.n	8001d9c <HAL_RCCEx_PeriphCLKConfig+0x78>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8001d7a:	489f      	ldr	r0, [pc, #636]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001d7c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8001d7e:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 8001d82:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8001d86:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8001d8a:	ea42 0201 	orr.w	r2, r2, r1
 8001d8e:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 8001d92:	f000 81aa 	beq.w	80020ea <HAL_RCCEx_PeriphCLKConfig+0x3c6>
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
    {
      pllsaiused = 1;
 8001d96:	2900      	cmp	r1, #0
 8001d98:	bf08      	it	eq
 8001d9a:	2501      	moveq	r5, #1
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
  {
      plli2sused = 1;
 8001d9c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
 8001da0:	bf18      	it	ne
 8001da2:	2601      	movne	r6, #1
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8001da4:	069a      	lsls	r2, r3, #26
 8001da6:	d532      	bpl.n	8001e0e <HAL_RCCEx_PeriphCLKConfig+0xea>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8001da8:	4b93      	ldr	r3, [pc, #588]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 8001daa:	4f94      	ldr	r7, [pc, #592]	; (8001ffc <HAL_RCCEx_PeriphCLKConfig+0x2d8>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8001dac:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001dae:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001db2:	641a      	str	r2, [r3, #64]	; 0x40
 8001db4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001db6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001dba:	9301      	str	r3, [sp, #4]
 8001dbc:	9b01      	ldr	r3, [sp, #4]
    PWR->CR1 |= PWR_CR1_DBP;
 8001dbe:	683b      	ldr	r3, [r7, #0]
 8001dc0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001dc4:	603b      	str	r3, [r7, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8001dc6:	f7ff faf9 	bl	80013bc <HAL_GetTick>
 8001dca:	4680      	mov	r8, r0

    /* Wait for Backup domain Write protection disable */
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8001dcc:	683b      	ldr	r3, [r7, #0]
 8001dce:	05db      	lsls	r3, r3, #23
 8001dd0:	f140 818d 	bpl.w	80020ee <HAL_RCCEx_PeriphCLKConfig+0x3ca>
        return HAL_TIMEOUT;
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified */
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8001dd4:	4f88      	ldr	r7, [pc, #544]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)

    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8001dd6:	6b22      	ldr	r2, [r4, #48]	; 0x30
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8001dd8:	6f3b      	ldr	r3, [r7, #112]	; 0x70
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8001dda:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8001dde:	f040 8191 	bne.w	8002104 <HAL_RCCEx_PeriphCLKConfig+0x3e0>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8001de2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001de4:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8001de8:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8001dec:	4a82      	ldr	r2, [pc, #520]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001dee:	f040 81ae 	bne.w	800214e <HAL_RCCEx_PeriphCLKConfig+0x42a>
 8001df2:	6891      	ldr	r1, [r2, #8]
 8001df4:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8001df8:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8001dfc:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8001e00:	4301      	orrs	r1, r0
 8001e02:	6091      	str	r1, [r2, #8]
 8001e04:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001e08:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8001e0a:	430b      	orrs	r3, r1
 8001e0c:	6713      	str	r3, [r2, #112]	; 0x70
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8001e0e:	6823      	ldr	r3, [r4, #0]
 8001e10:	06da      	lsls	r2, r3, #27
 8001e12:	d50c      	bpl.n	8001e2e <HAL_RCCEx_PeriphCLKConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8001e14:	4a78      	ldr	r2, [pc, #480]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001e16:	f8d2 108c 	ldr.w	r1, [r2, #140]	; 0x8c
 8001e1a:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
 8001e1e:	f8c2 108c 	str.w	r1, [r2, #140]	; 0x8c
 8001e22:	f8d2 108c 	ldr.w	r1, [r2, #140]	; 0x8c
 8001e26:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8001e28:	4301      	orrs	r1, r0
 8001e2a:	f8c2 108c 	str.w	r1, [r2, #140]	; 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8001e2e:	045f      	lsls	r7, r3, #17
 8001e30:	d508      	bpl.n	8001e44 <HAL_RCCEx_PeriphCLKConfig+0x120>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8001e32:	4971      	ldr	r1, [pc, #452]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001e34:	6e60      	ldr	r0, [r4, #100]	; 0x64
 8001e36:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001e3a:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8001e3e:	4302      	orrs	r2, r0
 8001e40:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8001e44:	0418      	lsls	r0, r3, #16
 8001e46:	d508      	bpl.n	8001e5a <HAL_RCCEx_PeriphCLKConfig+0x136>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 8001e48:	496b      	ldr	r1, [pc, #428]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001e4a:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 8001e4c:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001e50:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8001e54:	4302      	orrs	r2, r0
 8001e56:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8001e5a:	03d9      	lsls	r1, r3, #15
 8001e5c:	d508      	bpl.n	8001e70 <HAL_RCCEx_PeriphCLKConfig+0x14c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8001e5e:	4966      	ldr	r1, [pc, #408]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001e60:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8001e62:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001e66:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8001e6a:	4302      	orrs	r2, r0
 8001e6c:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8001e70:	039a      	lsls	r2, r3, #14
 8001e72:	d508      	bpl.n	8001e86 <HAL_RCCEx_PeriphCLKConfig+0x162>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8001e74:	4960      	ldr	r1, [pc, #384]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001e76:	6f20      	ldr	r0, [r4, #112]	; 0x70
 8001e78:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001e7c:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8001e80:	4302      	orrs	r2, r0
 8001e82:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8001e86:	065f      	lsls	r7, r3, #25
 8001e88:	d508      	bpl.n	8001e9c <HAL_RCCEx_PeriphCLKConfig+0x178>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8001e8a:	495b      	ldr	r1, [pc, #364]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001e8c:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8001e8e:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001e92:	f022 0203 	bic.w	r2, r2, #3
 8001e96:	4302      	orrs	r2, r0
 8001e98:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8001e9c:	0618      	lsls	r0, r3, #24
 8001e9e:	d508      	bpl.n	8001eb2 <HAL_RCCEx_PeriphCLKConfig+0x18e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8001ea0:	4955      	ldr	r1, [pc, #340]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001ea2:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8001ea4:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001ea8:	f022 020c 	bic.w	r2, r2, #12
 8001eac:	4302      	orrs	r2, r0
 8001eae:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8001eb2:	05d9      	lsls	r1, r3, #23
 8001eb4:	d508      	bpl.n	8001ec8 <HAL_RCCEx_PeriphCLKConfig+0x1a4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 8001eb6:	4950      	ldr	r1, [pc, #320]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001eb8:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8001eba:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001ebe:	f022 0230 	bic.w	r2, r2, #48	; 0x30
 8001ec2:	4302      	orrs	r2, r0
 8001ec4:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8001ec8:	059a      	lsls	r2, r3, #22
 8001eca:	d508      	bpl.n	8001ede <HAL_RCCEx_PeriphCLKConfig+0x1ba>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 8001ecc:	494a      	ldr	r1, [pc, #296]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001ece:	6d20      	ldr	r0, [r4, #80]	; 0x50
 8001ed0:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001ed4:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 8001ed8:	4302      	orrs	r2, r0
 8001eda:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8001ede:	055f      	lsls	r7, r3, #21
 8001ee0:	d508      	bpl.n	8001ef4 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 8001ee2:	4945      	ldr	r1, [pc, #276]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001ee4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001ee6:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001eea:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8001eee:	4302      	orrs	r2, r0
 8001ef0:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 8001ef4:	0518      	lsls	r0, r3, #20
 8001ef6:	d508      	bpl.n	8001f0a <HAL_RCCEx_PeriphCLKConfig+0x1e6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 8001ef8:	493f      	ldr	r1, [pc, #252]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001efa:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001efc:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001f00:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8001f04:	4302      	orrs	r2, r0
 8001f06:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 8001f0a:	04d9      	lsls	r1, r3, #19
 8001f0c:	d508      	bpl.n	8001f20 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 8001f0e:	493a      	ldr	r1, [pc, #232]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001f10:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8001f12:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001f16:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8001f1a:	4302      	orrs	r2, r0
 8001f1c:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 8001f20:	049a      	lsls	r2, r3, #18
 8001f22:	d508      	bpl.n	8001f36 <HAL_RCCEx_PeriphCLKConfig+0x212>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 8001f24:	4934      	ldr	r1, [pc, #208]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001f26:	6e20      	ldr	r0, [r4, #96]	; 0x60
 8001f28:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001f2c:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8001f30:	4302      	orrs	r2, r0
 8001f32:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8001f36:	025f      	lsls	r7, r3, #9
 8001f38:	d508      	bpl.n	8001f4c <HAL_RCCEx_PeriphCLKConfig+0x228>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8001f3a:	492f      	ldr	r1, [pc, #188]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001f3c:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 8001f3e:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001f42:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 8001f46:	4302      	orrs	r2, r0
 8001f48:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8001f4c:	0298      	lsls	r0, r3, #10
 8001f4e:	d50c      	bpl.n	8001f6a <HAL_RCCEx_PeriphCLKConfig+0x246>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8001f50:	4829      	ldr	r0, [pc, #164]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001f52:	6fe1      	ldr	r1, [r4, #124]	; 0x7c
 8001f54:	f8d0 2090 	ldr.w	r2, [r0, #144]	; 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
    {
      pllsaiused = 1;
 8001f58:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8001f5c:	f022 6200 	bic.w	r2, r2, #134217728	; 0x8000000
      pllsaiused = 1;
 8001f60:	bf08      	it	eq
 8001f62:	2501      	moveq	r5, #1
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8001f64:	430a      	orrs	r2, r1
 8001f66:	f8c0 2090 	str.w	r2, [r0, #144]	; 0x90

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
  {
    pllsaiused = 1;
 8001f6a:	f013 0f08 	tst.w	r3, #8
 8001f6e:	bf18      	it	ne
 8001f70:	2501      	movne	r5, #1
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8001f72:	0359      	lsls	r1, r3, #13
 8001f74:	d508      	bpl.n	8001f88 <HAL_RCCEx_PeriphCLKConfig+0x264>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8001f76:	4920      	ldr	r1, [pc, #128]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001f78:	6f60      	ldr	r0, [r4, #116]	; 0x74
 8001f7a:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001f7e:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8001f82:	4302      	orrs	r2, r0
 8001f84:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 8001f88:	021a      	lsls	r2, r3, #8
 8001f8a:	d509      	bpl.n	8001fa0 <HAL_RCCEx_PeriphCLKConfig+0x27c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));

    /* Configure the SDMMC1 clock source */
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 8001f8c:	491a      	ldr	r1, [pc, #104]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001f8e:	f8d4 0080 	ldr.w	r0, [r4, #128]	; 0x80
 8001f92:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001f96:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8001f9a:	4302      	orrs	r2, r0
 8001f9c:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

#if defined (STM32F765xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx)
  /*------------------------------------- SDMMC2 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC2) == RCC_PERIPHCLK_SDMMC2)
 8001fa0:	015f      	lsls	r7, r3, #5
 8001fa2:	d509      	bpl.n	8001fb8 <HAL_RCCEx_PeriphCLKConfig+0x294>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC2CLKSOURCE(PeriphClkInit->Sdmmc2ClockSelection));

    /* Configure the SDMMC2 clock source */
    __HAL_RCC_SDMMC2_CONFIG(PeriphClkInit->Sdmmc2ClockSelection);
 8001fa4:	4914      	ldr	r1, [pc, #80]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001fa6:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
 8001faa:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001fae:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8001fb2:	4302      	orrs	r2, r0
 8001fb4:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*------------------------------------- DFSDM1 Configuration -------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 8001fb8:	0118      	lsls	r0, r3, #4
 8001fba:	d509      	bpl.n	8001fd0 <HAL_RCCEx_PeriphCLKConfig+0x2ac>
  {
    /* Check the parameters */
    assert_param(IS_RCC_DFSDM1CLKSOURCE(PeriphClkInit->Dfsdm1ClockSelection));

    /* Configure the DFSDM1 interface clock source */
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
 8001fbc:	490e      	ldr	r1, [pc, #56]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001fbe:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8001fc2:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
 8001fc6:	f022 7200 	bic.w	r2, r2, #33554432	; 0x2000000
 8001fca:	4302      	orrs	r2, r0
 8001fcc:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
  }

  /*------------------------------------- DFSDM AUDIO Configuration -------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1_AUDIO) == RCC_PERIPHCLK_DFSDM1_AUDIO)
 8001fd0:	00d9      	lsls	r1, r3, #3
 8001fd2:	d509      	bpl.n	8001fe8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_DFSDM1AUDIOCLKSOURCE(PeriphClkInit->Dfsdm1AudioClockSelection));

    /* Configure the DFSDM interface clock source */
    __HAL_RCC_DFSDM1AUDIO_CONFIG(PeriphClkInit->Dfsdm1AudioClockSelection);
 8001fd4:	4908      	ldr	r1, [pc, #32]	; (8001ff8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8001fd6:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
 8001fda:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
 8001fde:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 8001fe2:	4302      	orrs	r2, r0
 8001fe4:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8001fe8:	2e01      	cmp	r6, #1
 8001fea:	f000 80b4 	beq.w	8002156 <HAL_RCCEx_PeriphCLKConfig+0x432>
 8001fee:	019a      	lsls	r2, r3, #6
 8001ff0:	f100 80b1 	bmi.w	8002156 <HAL_RCCEx_PeriphCLKConfig+0x432>
 8001ff4:	e004      	b.n	8002000 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
 8001ff6:	bf00      	nop
 8001ff8:	40023800 	.word	0x40023800
 8001ffc:	40007000 	.word	0x40007000
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 8002000:	2d01      	cmp	r5, #1
 8002002:	d170      	bne.n	80020e6 <HAL_RCCEx_PeriphCLKConfig+0x3c2>
  {
    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8002004:	4d9d      	ldr	r5, [pc, #628]	; (800227c <HAL_RCCEx_PeriphCLKConfig+0x558>)
 8002006:	682b      	ldr	r3, [r5, #0]
 8002008:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800200c:	602b      	str	r3, [r5, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800200e:	f7ff f9d5 	bl	80013bc <HAL_GetTick>
 8002012:	4606      	mov	r6, r0

    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8002014:	682b      	ldr	r3, [r5, #0]
 8002016:	009f      	lsls	r7, r3, #2
 8002018:	f100 8121 	bmi.w	800225e <HAL_RCCEx_PeriphCLKConfig+0x53a>

    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /*----------------- In Case of PLLSAI is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 800201c:	6821      	ldr	r1, [r4, #0]
 800201e:	030e      	lsls	r6, r1, #12
 8002020:	d501      	bpl.n	8002026 <HAL_RCCEx_PeriphCLKConfig+0x302>
 8002022:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8002024:	b11b      	cbz	r3, 800202e <HAL_RCCEx_PeriphCLKConfig+0x30a>
 8002026:	02cd      	lsls	r5, r1, #11
 8002028:	d51d      	bpl.n	8002066 <HAL_RCCEx_PeriphCLKConfig+0x342>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 800202a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800202c:	b9db      	cbnz	r3, 8002066 <HAL_RCCEx_PeriphCLKConfig+0x342>
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      /* check for PLLSAI/DIVQ Parameter */
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 800202e:	4a93      	ldr	r2, [pc, #588]	; (800227c <HAL_RCCEx_PeriphCLKConfig+0x558>)
 8002030:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8002034:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8002038:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800203c:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8002040:	4303      	orrs	r3, r0
 8002042:	6960      	ldr	r0, [r4, #20]
 8002044:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8002048:	69a0      	ldr	r0, [r4, #24]
 800204a:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 800204e:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8002052:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8002056:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8002058:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800205c:	3801      	subs	r0, #1
 800205e:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 8002062:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }

    /*----------------- In Case of PLLSAI is selected as source clock for CLK48 -------------------*/
    /* In Case of PLLI2S is selected as source clock for CK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 8002066:	0288      	lsls	r0, r1, #10
 8002068:	d515      	bpl.n	8002096 <HAL_RCCEx_PeriphCLKConfig+0x372>
 800206a:	6fe3      	ldr	r3, [r4, #124]	; 0x7c
 800206c:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8002070:	d111      	bne.n	8002096 <HAL_RCCEx_PeriphCLKConfig+0x372>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));
      /* Read PLLSAIQ and PLLSAIR value from PLLSAICFGR register (this value is not needed for CK48 configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8002072:	4a82      	ldr	r2, [pc, #520]	; (800227c <HAL_RCCEx_PeriphCLKConfig+0x558>)
 8002074:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8002078:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88

      /* Configure the PLLSAI division factors */
      /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) x (PLLI2SN/PLLM) */
      /* 48CLK = f(PLLSAI clock output) = f(VCO clock) / PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 800207c:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 8002080:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8002084:	4303      	orrs	r3, r0
 8002086:	6960      	ldr	r0, [r4, #20]
 8002088:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800208c:	6a20      	ldr	r0, [r4, #32]
 800208e:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8002092:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
    }

#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
    /*---------------------------- LTDC configuration -------------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8002096:	070a      	lsls	r2, r1, #28
 8002098:	d519      	bpl.n	80020ce <HAL_RCCEx_PeriphCLKConfig+0x3aa>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP and PLLSAIQ value from PLLSAICFGR register (these value are not needed for LTDC configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800209a:	4a78      	ldr	r2, [pc, #480]	; (800227c <HAL_RCCEx_PeriphCLKConfig+0x558>)
 800209c:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 80020a0:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88

      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 80020a4:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 80020a8:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80020ac:	430b      	orrs	r3, r1
 80020ae:	6961      	ldr	r1, [r4, #20]
 80020b0:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 80020b4:	69e1      	ldr	r1, [r4, #28]
 80020b6:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 80020ba:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80020be:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 80020c2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80020c4:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80020c8:	430b      	orrs	r3, r1
 80020ca:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx  */

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80020ce:	4c6b      	ldr	r4, [pc, #428]	; (800227c <HAL_RCCEx_PeriphCLKConfig+0x558>)
 80020d0:	6823      	ldr	r3, [r4, #0]
 80020d2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80020d6:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80020d8:	f7ff f970 	bl	80013bc <HAL_GetTick>
 80020dc:	4605      	mov	r5, r0

    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80020de:	6823      	ldr	r3, [r4, #0]
 80020e0:	009b      	lsls	r3, r3, #2
 80020e2:	f140 80c3 	bpl.w	800226c <HAL_RCCEx_PeriphCLKConfig+0x548>
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 80020e6:	2000      	movs	r0, #0
 80020e8:	e009      	b.n	80020fe <HAL_RCCEx_PeriphCLKConfig+0x3da>
      plli2sused = 1;
 80020ea:	2601      	movs	r6, #1
 80020ec:	e656      	b.n	8001d9c <HAL_RCCEx_PeriphCLKConfig+0x78>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80020ee:	f7ff f965 	bl	80013bc <HAL_GetTick>
 80020f2:	eba0 0008 	sub.w	r0, r0, r8
 80020f6:	2864      	cmp	r0, #100	; 0x64
 80020f8:	f67f ae68 	bls.w	8001dcc <HAL_RCCEx_PeriphCLKConfig+0xa8>
        return HAL_TIMEOUT;
 80020fc:	2003      	movs	r0, #3
}
 80020fe:	b003      	add	sp, #12
 8002100:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8002104:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8002108:	429a      	cmp	r2, r3
 800210a:	f43f ae6a 	beq.w	8001de2 <HAL_RCCEx_PeriphCLKConfig+0xbe>
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800210e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8002110:	6f3a      	ldr	r2, [r7, #112]	; 0x70
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8002112:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_FORCE();
 8002116:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800211a:	673a      	str	r2, [r7, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 800211c:	6f3a      	ldr	r2, [r7, #112]	; 0x70
 800211e:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8002122:	673a      	str	r2, [r7, #112]	; 0x70
      RCC->BDCR = tmpreg0;
 8002124:	673b      	str	r3, [r7, #112]	; 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8002126:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8002128:	07d8      	lsls	r0, r3, #31
 800212a:	f57f ae5a 	bpl.w	8001de2 <HAL_RCCEx_PeriphCLKConfig+0xbe>
        tickstart = HAL_GetTick();
 800212e:	f7ff f945 	bl	80013bc <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002132:	f241 3988 	movw	r9, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8002136:	4680      	mov	r8, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002138:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800213a:	0799      	lsls	r1, r3, #30
 800213c:	f53f ae51 	bmi.w	8001de2 <HAL_RCCEx_PeriphCLKConfig+0xbe>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002140:	f7ff f93c 	bl	80013bc <HAL_GetTick>
 8002144:	eba0 0008 	sub.w	r0, r0, r8
 8002148:	4548      	cmp	r0, r9
 800214a:	d9f5      	bls.n	8002138 <HAL_RCCEx_PeriphCLKConfig+0x414>
 800214c:	e7d6      	b.n	80020fc <HAL_RCCEx_PeriphCLKConfig+0x3d8>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800214e:	6891      	ldr	r1, [r2, #8]
 8002150:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8002154:	e655      	b.n	8001e02 <HAL_RCCEx_PeriphCLKConfig+0xde>
    __HAL_RCC_PLLI2S_DISABLE();
 8002156:	4e49      	ldr	r6, [pc, #292]	; (800227c <HAL_RCCEx_PeriphCLKConfig+0x558>)
 8002158:	6833      	ldr	r3, [r6, #0]
 800215a:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800215e:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 8002160:	f7ff f92c 	bl	80013bc <HAL_GetTick>
 8002164:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8002166:	6833      	ldr	r3, [r6, #0]
 8002168:	011b      	lsls	r3, r3, #4
 800216a:	d472      	bmi.n	8002252 <HAL_RCCEx_PeriphCLKConfig+0x52e>
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 800216c:	6822      	ldr	r2, [r4, #0]
 800216e:	07d7      	lsls	r7, r2, #31
 8002170:	d512      	bpl.n	8002198 <HAL_RCCEx_PeriphCLKConfig+0x474>
 8002172:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8002174:	b983      	cbnz	r3, 8002198 <HAL_RCCEx_PeriphCLKConfig+0x474>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8002176:	f8d6 3084 	ldr.w	r3, [r6, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 800217a:	f8d6 1084 	ldr.w	r1, [r6, #132]	; 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 800217e:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002182:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8002186:	430b      	orrs	r3, r1
 8002188:	6861      	ldr	r1, [r4, #4]
 800218a:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 800218e:	68a1      	ldr	r1, [r4, #8]
 8002190:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 8002194:	f8c6 3084 	str.w	r3, [r6, #132]	; 0x84
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8002198:	0316      	lsls	r6, r2, #12
 800219a:	d503      	bpl.n	80021a4 <HAL_RCCEx_PeriphCLKConfig+0x480>
 800219c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800219e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80021a2:	d005      	beq.n	80021b0 <HAL_RCCEx_PeriphCLKConfig+0x48c>
 80021a4:	02d0      	lsls	r0, r2, #11
 80021a6:	d51e      	bpl.n	80021e6 <HAL_RCCEx_PeriphCLKConfig+0x4c2>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 80021a8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80021aa:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80021ae:	d11a      	bne.n	80021e6 <HAL_RCCEx_PeriphCLKConfig+0x4c2>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 80021b0:	4932      	ldr	r1, [pc, #200]	; (800227c <HAL_RCCEx_PeriphCLKConfig+0x558>)
 80021b2:	f8d1 3084 	ldr.w	r3, [r1, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80021b6:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 80021ba:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80021be:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80021c2:	4303      	orrs	r3, r0
 80021c4:	6860      	ldr	r0, [r4, #4]
 80021c6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80021ca:	68e0      	ldr	r0, [r4, #12]
 80021cc:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 80021d0:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80021d4:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 80021d8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80021da:	f020 001f 	bic.w	r0, r0, #31
 80021de:	3b01      	subs	r3, #1
 80021e0:	4303      	orrs	r3, r0
 80021e2:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 80021e6:	01d1      	lsls	r1, r2, #7
 80021e8:	d511      	bpl.n	800220e <HAL_RCCEx_PeriphCLKConfig+0x4ea>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 80021ea:	4924      	ldr	r1, [pc, #144]	; (800227c <HAL_RCCEx_PeriphCLKConfig+0x558>)
 80021ec:	f8d1 3084 	ldr.w	r3, [r1, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80021f0:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 80021f4:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 80021f8:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80021fc:	4303      	orrs	r3, r0
 80021fe:	6860      	ldr	r0, [r4, #4]
 8002200:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8002204:	6920      	ldr	r0, [r4, #16]
 8002206:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800220a:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800220e:	0192      	lsls	r2, r2, #6
 8002210:	d50d      	bpl.n	800222e <HAL_RCCEx_PeriphCLKConfig+0x50a>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8002212:	6923      	ldr	r3, [r4, #16]
 8002214:	6862      	ldr	r2, [r4, #4]
 8002216:	041b      	lsls	r3, r3, #16
 8002218:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800221c:	68e2      	ldr	r2, [r4, #12]
 800221e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8002222:	68a2      	ldr	r2, [r4, #8]
 8002224:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8002228:	4a14      	ldr	r2, [pc, #80]	; (800227c <HAL_RCCEx_PeriphCLKConfig+0x558>)
 800222a:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800222e:	4e13      	ldr	r6, [pc, #76]	; (800227c <HAL_RCCEx_PeriphCLKConfig+0x558>)
 8002230:	6833      	ldr	r3, [r6, #0]
 8002232:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8002236:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 8002238:	f7ff f8c0 	bl	80013bc <HAL_GetTick>
 800223c:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800223e:	6833      	ldr	r3, [r6, #0]
 8002240:	011b      	lsls	r3, r3, #4
 8002242:	f53f aedd 	bmi.w	8002000 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8002246:	f7ff f8b9 	bl	80013bc <HAL_GetTick>
 800224a:	1bc0      	subs	r0, r0, r7
 800224c:	2864      	cmp	r0, #100	; 0x64
 800224e:	d9f6      	bls.n	800223e <HAL_RCCEx_PeriphCLKConfig+0x51a>
 8002250:	e754      	b.n	80020fc <HAL_RCCEx_PeriphCLKConfig+0x3d8>
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8002252:	f7ff f8b3 	bl	80013bc <HAL_GetTick>
 8002256:	1bc0      	subs	r0, r0, r7
 8002258:	2864      	cmp	r0, #100	; 0x64
 800225a:	d984      	bls.n	8002166 <HAL_RCCEx_PeriphCLKConfig+0x442>
 800225c:	e74e      	b.n	80020fc <HAL_RCCEx_PeriphCLKConfig+0x3d8>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 800225e:	f7ff f8ad 	bl	80013bc <HAL_GetTick>
 8002262:	1b80      	subs	r0, r0, r6
 8002264:	2864      	cmp	r0, #100	; 0x64
 8002266:	f67f aed5 	bls.w	8002014 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
 800226a:	e747      	b.n	80020fc <HAL_RCCEx_PeriphCLKConfig+0x3d8>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 800226c:	f7ff f8a6 	bl	80013bc <HAL_GetTick>
 8002270:	1b40      	subs	r0, r0, r5
 8002272:	2864      	cmp	r0, #100	; 0x64
 8002274:	f67f af33 	bls.w	80020de <HAL_RCCEx_PeriphCLKConfig+0x3ba>
 8002278:	e740      	b.n	80020fc <HAL_RCCEx_PeriphCLKConfig+0x3d8>
 800227a:	bf00      	nop
 800227c:	40023800 	.word	0x40023800

08002280 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 8002280:	b538      	push	{r3, r4, r5, lr}
 8002282:	4604      	mov	r4, r0
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8002284:	69c0      	ldr	r0, [r0, #28]
 8002286:	6921      	ldr	r1, [r4, #16]
 8002288:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 800228a:	6823      	ldr	r3, [r4, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 800228c:	430a      	orrs	r2, r1
 800228e:	6961      	ldr	r1, [r4, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8002290:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8002292:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8002294:	498e      	ldr	r1, [pc, #568]	; (80024d0 <UART_SetConfig+0x250>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8002296:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8002298:	4029      	ands	r1, r5
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;

  tmpreg |= huart->Init.OneBitSampling;
 800229a:	6a25      	ldr	r5, [r4, #32]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 800229c:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800229e:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80022a0:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80022a2:	685a      	ldr	r2, [r3, #4]
 80022a4:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 80022a8:	430a      	orrs	r2, r1
 80022aa:	605a      	str	r2, [r3, #4]
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 80022ac:	69a2      	ldr	r2, [r4, #24]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 80022ae:	6899      	ldr	r1, [r3, #8]
  tmpreg |= huart->Init.OneBitSampling;
 80022b0:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 80022b2:	f421 6130 	bic.w	r1, r1, #2816	; 0xb00
 80022b6:	430a      	orrs	r2, r1
 80022b8:	609a      	str	r2, [r3, #8]


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 80022ba:	4a86      	ldr	r2, [pc, #536]	; (80024d4 <UART_SetConfig+0x254>)
 80022bc:	4293      	cmp	r3, r2
 80022be:	d117      	bne.n	80022f0 <UART_SetConfig+0x70>
 80022c0:	4b85      	ldr	r3, [pc, #532]	; (80024d8 <UART_SetConfig+0x258>)
 80022c2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80022c6:	f003 0303 	and.w	r3, r3, #3
 80022ca:	3b01      	subs	r3, #1
 80022cc:	2b02      	cmp	r3, #2
 80022ce:	f200 80e2 	bhi.w	8002496 <UART_SetConfig+0x216>
 80022d2:	4a82      	ldr	r2, [pc, #520]	; (80024dc <UART_SetConfig+0x25c>)

  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80022d4:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 80022d8:	5cd3      	ldrb	r3, [r2, r3]
 80022da:	f040 80b3 	bne.w	8002444 <UART_SetConfig+0x1c4>
  {
    switch (clocksource)
 80022de:	2b08      	cmp	r3, #8
 80022e0:	d822      	bhi.n	8002328 <UART_SetConfig+0xa8>
 80022e2:	e8df f003 	tbb	[pc, r3]
 80022e6:	db90      	.short	0xdb90
 80022e8:	21d52198 	.word	0x21d52198
 80022ec:	2121      	.short	0x2121
 80022ee:	99          	.byte	0x99
 80022ef:	00          	.byte	0x00
  UART_GETCLOCKSOURCE(huart, clocksource);
 80022f0:	4a7b      	ldr	r2, [pc, #492]	; (80024e0 <UART_SetConfig+0x260>)
 80022f2:	4293      	cmp	r3, r2
 80022f4:	d106      	bne.n	8002304 <UART_SetConfig+0x84>
 80022f6:	4b78      	ldr	r3, [pc, #480]	; (80024d8 <UART_SetConfig+0x258>)
 80022f8:	4a7a      	ldr	r2, [pc, #488]	; (80024e4 <UART_SetConfig+0x264>)
 80022fa:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80022fe:	f003 030c 	and.w	r3, r3, #12
 8002302:	e7e7      	b.n	80022d4 <UART_SetConfig+0x54>
 8002304:	4a78      	ldr	r2, [pc, #480]	; (80024e8 <UART_SetConfig+0x268>)
 8002306:	4293      	cmp	r3, r2
 8002308:	d118      	bne.n	800233c <UART_SetConfig+0xbc>
 800230a:	4b73      	ldr	r3, [pc, #460]	; (80024d8 <UART_SetConfig+0x258>)
 800230c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002310:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8002314:	2b20      	cmp	r3, #32
 8002316:	f000 80b3 	beq.w	8002480 <UART_SetConfig+0x200>
 800231a:	d807      	bhi.n	800232c <UART_SetConfig+0xac>
 800231c:	2b00      	cmp	r3, #0
 800231e:	f000 80c0 	beq.w	80024a2 <UART_SetConfig+0x222>
 8002322:	2b10      	cmp	r3, #16
 8002324:	f000 80b1 	beq.w	800248a <UART_SetConfig+0x20a>
      }
    }
  }
  else
  {
    switch (clocksource)
 8002328:	2001      	movs	r0, #1
 800232a:	e070      	b.n	800240e <UART_SetConfig+0x18e>
  UART_GETCLOCKSOURCE(huart, clocksource);
 800232c:	2b30      	cmp	r3, #48	; 0x30
 800232e:	d1fb      	bne.n	8002328 <UART_SetConfig+0xa8>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8002330:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002334:	d070      	beq.n	8002418 <UART_SetConfig+0x198>
        break;
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
        break;
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8002336:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 800233a:	e0b9      	b.n	80024b0 <UART_SetConfig+0x230>
  UART_GETCLOCKSOURCE(huart, clocksource);
 800233c:	4a6b      	ldr	r2, [pc, #428]	; (80024ec <UART_SetConfig+0x26c>)
 800233e:	4293      	cmp	r3, r2
 8002340:	d10f      	bne.n	8002362 <UART_SetConfig+0xe2>
 8002342:	4b65      	ldr	r3, [pc, #404]	; (80024d8 <UART_SetConfig+0x258>)
 8002344:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002348:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800234c:	2b80      	cmp	r3, #128	; 0x80
 800234e:	f000 8097 	beq.w	8002480 <UART_SetConfig+0x200>
 8002352:	d804      	bhi.n	800235e <UART_SetConfig+0xde>
 8002354:	2b00      	cmp	r3, #0
 8002356:	f000 80a4 	beq.w	80024a2 <UART_SetConfig+0x222>
 800235a:	2b40      	cmp	r3, #64	; 0x40
 800235c:	e7e2      	b.n	8002324 <UART_SetConfig+0xa4>
 800235e:	2bc0      	cmp	r3, #192	; 0xc0
 8002360:	e7e5      	b.n	800232e <UART_SetConfig+0xae>
 8002362:	4a63      	ldr	r2, [pc, #396]	; (80024f0 <UART_SetConfig+0x270>)
 8002364:	4293      	cmp	r3, r2
 8002366:	d112      	bne.n	800238e <UART_SetConfig+0x10e>
 8002368:	4b5b      	ldr	r3, [pc, #364]	; (80024d8 <UART_SetConfig+0x258>)
 800236a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800236e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002372:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002376:	f000 8083 	beq.w	8002480 <UART_SetConfig+0x200>
 800237a:	d805      	bhi.n	8002388 <UART_SetConfig+0x108>
 800237c:	2b00      	cmp	r3, #0
 800237e:	f000 8090 	beq.w	80024a2 <UART_SetConfig+0x222>
 8002382:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002386:	e7cd      	b.n	8002324 <UART_SetConfig+0xa4>
 8002388:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800238c:	e7cf      	b.n	800232e <UART_SetConfig+0xae>
 800238e:	4a59      	ldr	r2, [pc, #356]	; (80024f4 <UART_SetConfig+0x274>)
 8002390:	4293      	cmp	r3, r2
 8002392:	d110      	bne.n	80023b6 <UART_SetConfig+0x136>
 8002394:	4b50      	ldr	r3, [pc, #320]	; (80024d8 <UART_SetConfig+0x258>)
 8002396:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800239a:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800239e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80023a2:	d06d      	beq.n	8002480 <UART_SetConfig+0x200>
 80023a4:	d804      	bhi.n	80023b0 <UART_SetConfig+0x130>
 80023a6:	2b00      	cmp	r3, #0
 80023a8:	d075      	beq.n	8002496 <UART_SetConfig+0x216>
 80023aa:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80023ae:	e7b9      	b.n	8002324 <UART_SetConfig+0xa4>
 80023b0:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 80023b4:	e7bb      	b.n	800232e <UART_SetConfig+0xae>
 80023b6:	4a50      	ldr	r2, [pc, #320]	; (80024f8 <UART_SetConfig+0x278>)
 80023b8:	4293      	cmp	r3, r2
 80023ba:	d110      	bne.n	80023de <UART_SetConfig+0x15e>
 80023bc:	4b46      	ldr	r3, [pc, #280]	; (80024d8 <UART_SetConfig+0x258>)
 80023be:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80023c2:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 80023c6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80023ca:	d059      	beq.n	8002480 <UART_SetConfig+0x200>
 80023cc:	d804      	bhi.n	80023d8 <UART_SetConfig+0x158>
 80023ce:	2b00      	cmp	r3, #0
 80023d0:	d067      	beq.n	80024a2 <UART_SetConfig+0x222>
 80023d2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80023d6:	e7a5      	b.n	8002324 <UART_SetConfig+0xa4>
 80023d8:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 80023dc:	e7a7      	b.n	800232e <UART_SetConfig+0xae>
 80023de:	4a47      	ldr	r2, [pc, #284]	; (80024fc <UART_SetConfig+0x27c>)
 80023e0:	4293      	cmp	r3, r2
 80023e2:	d1a1      	bne.n	8002328 <UART_SetConfig+0xa8>
 80023e4:	4b3c      	ldr	r3, [pc, #240]	; (80024d8 <UART_SetConfig+0x258>)
 80023e6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80023ea:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80023ee:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80023f2:	d045      	beq.n	8002480 <UART_SetConfig+0x200>
 80023f4:	d804      	bhi.n	8002400 <UART_SetConfig+0x180>
 80023f6:	2b00      	cmp	r3, #0
 80023f8:	d053      	beq.n	80024a2 <UART_SetConfig+0x222>
 80023fa:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80023fe:	e791      	b.n	8002324 <UART_SetConfig+0xa4>
 8002400:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8002404:	e793      	b.n	800232e <UART_SetConfig+0xae>
        pclk = HAL_RCC_GetPCLK1Freq();
 8002406:	f7ff fc6d 	bl	8001ce4 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 800240a:	b928      	cbnz	r0, 8002418 <UART_SetConfig+0x198>
 800240c:	2000      	movs	r0, #0
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 800240e:	2300      	movs	r3, #0
  huart->TxISR = NULL;
 8002410:	e9c4 331a 	strd	r3, r3, [r4, #104]	; 0x68

  return ret;
}
 8002414:	bd38      	pop	{r3, r4, r5, pc}
        pclk = (uint32_t) HSI_VALUE;
 8002416:	483a      	ldr	r0, [pc, #232]	; (8002500 <UART_SetConfig+0x280>)
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8002418:	6862      	ldr	r2, [r4, #4]
 800241a:	0853      	lsrs	r3, r2, #1
 800241c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8002420:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8002424:	f64f 72ef 	movw	r2, #65519	; 0xffef
 8002428:	f1a3 0110 	sub.w	r1, r3, #16
 800242c:	4291      	cmp	r1, r2
 800242e:	f63f af7b 	bhi.w	8002328 <UART_SetConfig+0xa8>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8002432:	f023 020f 	bic.w	r2, r3, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8002436:	f3c3 0342 	ubfx	r3, r3, #1, #3
        huart->Instance->BRR = brrtemp;
 800243a:	6821      	ldr	r1, [r4, #0]
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 800243c:	b292      	uxth	r2, r2
        huart->Instance->BRR = brrtemp;
 800243e:	4313      	orrs	r3, r2
 8002440:	60cb      	str	r3, [r1, #12]
 8002442:	e7e3      	b.n	800240c <UART_SetConfig+0x18c>
    switch (clocksource)
 8002444:	2b08      	cmp	r3, #8
 8002446:	f63f af6f 	bhi.w	8002328 <UART_SetConfig+0xa8>
 800244a:	a201      	add	r2, pc, #4	; (adr r2, 8002450 <UART_SetConfig+0x1d0>)
 800244c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002450:	080024a9 	.word	0x080024a9
 8002454:	08002475 	.word	0x08002475
 8002458:	08002487 	.word	0x08002487
 800245c:	08002329 	.word	0x08002329
 8002460:	0800247b 	.word	0x0800247b
 8002464:	08002329 	.word	0x08002329
 8002468:	08002329 	.word	0x08002329
 800246c:	08002329 	.word	0x08002329
 8002470:	08002337 	.word	0x08002337
        pclk = HAL_RCC_GetPCLK2Freq();
 8002474:	f7ff fc46 	bl	8001d04 <HAL_RCC_GetPCLK2Freq>
        break;
 8002478:	e018      	b.n	80024ac <UART_SetConfig+0x22c>
        pclk = HAL_RCC_GetSysClockFreq();
 800247a:	f7ff fb61 	bl	8001b40 <HAL_RCC_GetSysClockFreq>
        break;
 800247e:	e015      	b.n	80024ac <UART_SetConfig+0x22c>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8002480:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002484:	d0c7      	beq.n	8002416 <UART_SetConfig+0x196>
        pclk = (uint32_t) HSI_VALUE;
 8002486:	481e      	ldr	r0, [pc, #120]	; (8002500 <UART_SetConfig+0x280>)
 8002488:	e012      	b.n	80024b0 <UART_SetConfig+0x230>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800248a:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 800248e:	d1f4      	bne.n	800247a <UART_SetConfig+0x1fa>
        pclk = HAL_RCC_GetSysClockFreq();
 8002490:	f7ff fb56 	bl	8001b40 <HAL_RCC_GetSysClockFreq>
        break;
 8002494:	e7b9      	b.n	800240a <UART_SetConfig+0x18a>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8002496:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 800249a:	d1eb      	bne.n	8002474 <UART_SetConfig+0x1f4>
        pclk = HAL_RCC_GetPCLK2Freq();
 800249c:	f7ff fc32 	bl	8001d04 <HAL_RCC_GetPCLK2Freq>
        break;
 80024a0:	e7b3      	b.n	800240a <UART_SetConfig+0x18a>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80024a2:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 80024a6:	d0ae      	beq.n	8002406 <UART_SetConfig+0x186>
        pclk = HAL_RCC_GetPCLK1Freq();
 80024a8:	f7ff fc1c 	bl	8001ce4 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 80024ac:	2800      	cmp	r0, #0
 80024ae:	d0ad      	beq.n	800240c <UART_SetConfig+0x18c>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 80024b0:	6862      	ldr	r2, [r4, #4]
 80024b2:	eb00 0352 	add.w	r3, r0, r2, lsr #1
 80024b6:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 80024ba:	f64f 72ef 	movw	r2, #65519	; 0xffef
 80024be:	f1a3 0110 	sub.w	r1, r3, #16
 80024c2:	4291      	cmp	r1, r2
 80024c4:	f63f af30 	bhi.w	8002328 <UART_SetConfig+0xa8>
        huart->Instance->BRR = (uint16_t)usartdiv;
 80024c8:	6822      	ldr	r2, [r4, #0]
 80024ca:	60d3      	str	r3, [r2, #12]
 80024cc:	e79e      	b.n	800240c <UART_SetConfig+0x18c>
 80024ce:	bf00      	nop
 80024d0:	efff69f3 	.word	0xefff69f3
 80024d4:	40011000 	.word	0x40011000
 80024d8:	40023800 	.word	0x40023800
 80024dc:	08012354 	.word	0x08012354
 80024e0:	40004400 	.word	0x40004400
 80024e4:	08012357 	.word	0x08012357
 80024e8:	40004800 	.word	0x40004800
 80024ec:	40004c00 	.word	0x40004c00
 80024f0:	40005000 	.word	0x40005000
 80024f4:	40011400 	.word	0x40011400
 80024f8:	40007800 	.word	0x40007800
 80024fc:	40007c00 	.word	0x40007c00
 8002500:	00f42400 	.word	0x00f42400

08002504 <UART_AdvFeatureConfig>:
{
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8002504:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8002506:	07da      	lsls	r2, r3, #31
{
 8002508:	b510      	push	{r4, lr}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 800250a:	d506      	bpl.n	800251a <UART_AdvFeatureConfig+0x16>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 800250c:	6801      	ldr	r1, [r0, #0]
 800250e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8002510:	684a      	ldr	r2, [r1, #4]
 8002512:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8002516:	4322      	orrs	r2, r4
 8002518:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 800251a:	079c      	lsls	r4, r3, #30
 800251c:	d506      	bpl.n	800252c <UART_AdvFeatureConfig+0x28>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 800251e:	6801      	ldr	r1, [r0, #0]
 8002520:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 8002522:	684a      	ldr	r2, [r1, #4]
 8002524:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8002528:	4322      	orrs	r2, r4
 800252a:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 800252c:	0759      	lsls	r1, r3, #29
 800252e:	d506      	bpl.n	800253e <UART_AdvFeatureConfig+0x3a>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8002530:	6801      	ldr	r1, [r0, #0]
 8002532:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8002534:	684a      	ldr	r2, [r1, #4]
 8002536:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800253a:	4322      	orrs	r2, r4
 800253c:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 800253e:	071a      	lsls	r2, r3, #28
 8002540:	d506      	bpl.n	8002550 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8002542:	6801      	ldr	r1, [r0, #0]
 8002544:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8002546:	684a      	ldr	r2, [r1, #4]
 8002548:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800254c:	4322      	orrs	r2, r4
 800254e:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8002550:	06dc      	lsls	r4, r3, #27
 8002552:	d506      	bpl.n	8002562 <UART_AdvFeatureConfig+0x5e>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8002554:	6801      	ldr	r1, [r0, #0]
 8002556:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8002558:	688a      	ldr	r2, [r1, #8]
 800255a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800255e:	4322      	orrs	r2, r4
 8002560:	608a      	str	r2, [r1, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8002562:	0699      	lsls	r1, r3, #26
 8002564:	d506      	bpl.n	8002574 <UART_AdvFeatureConfig+0x70>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8002566:	6801      	ldr	r1, [r0, #0]
 8002568:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 800256a:	688a      	ldr	r2, [r1, #8]
 800256c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002570:	4322      	orrs	r2, r4
 8002572:	608a      	str	r2, [r1, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8002574:	065a      	lsls	r2, r3, #25
 8002576:	d510      	bpl.n	800259a <UART_AdvFeatureConfig+0x96>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8002578:	6801      	ldr	r1, [r0, #0]
 800257a:	6c04      	ldr	r4, [r0, #64]	; 0x40
 800257c:	684a      	ldr	r2, [r1, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 800257e:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8002582:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 8002586:	ea42 0204 	orr.w	r2, r2, r4
 800258a:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 800258c:	d105      	bne.n	800259a <UART_AdvFeatureConfig+0x96>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 800258e:	684a      	ldr	r2, [r1, #4]
 8002590:	6c44      	ldr	r4, [r0, #68]	; 0x44
 8002592:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
 8002596:	4322      	orrs	r2, r4
 8002598:	604a      	str	r2, [r1, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 800259a:	061b      	lsls	r3, r3, #24
 800259c:	d506      	bpl.n	80025ac <UART_AdvFeatureConfig+0xa8>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 800259e:	6802      	ldr	r2, [r0, #0]
 80025a0:	6c81      	ldr	r1, [r0, #72]	; 0x48
 80025a2:	6853      	ldr	r3, [r2, #4]
 80025a4:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 80025a8:	430b      	orrs	r3, r1
 80025aa:	6053      	str	r3, [r2, #4]
  }
}
 80025ac:	bd10      	pop	{r4, pc}

080025ae <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 80025ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80025b2:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80025b6:	4604      	mov	r4, r0
 80025b8:	460e      	mov	r6, r1
 80025ba:	4615      	mov	r5, r2
 80025bc:	461f      	mov	r7, r3
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80025be:	6822      	ldr	r2, [r4, #0]
 80025c0:	69d3      	ldr	r3, [r2, #28]
 80025c2:	ea36 0303 	bics.w	r3, r6, r3
 80025c6:	bf0c      	ite	eq
 80025c8:	2301      	moveq	r3, #1
 80025ca:	2300      	movne	r3, #0
 80025cc:	42ab      	cmp	r3, r5
 80025ce:	d001      	beq.n	80025d4 <UART_WaitOnFlagUntilTimeout+0x26>
          return HAL_TIMEOUT;
        }
      }
    }
  }
  return HAL_OK;
 80025d0:	2000      	movs	r0, #0
 80025d2:	e026      	b.n	8002622 <UART_WaitOnFlagUntilTimeout+0x74>
    if (Timeout != HAL_MAX_DELAY)
 80025d4:	f1b8 3fff 	cmp.w	r8, #4294967295
 80025d8:	d0f2      	beq.n	80025c0 <UART_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80025da:	f7fe feef 	bl	80013bc <HAL_GetTick>
 80025de:	1bc0      	subs	r0, r0, r7
 80025e0:	4540      	cmp	r0, r8
 80025e2:	6820      	ldr	r0, [r4, #0]
 80025e4:	d802      	bhi.n	80025ec <UART_WaitOnFlagUntilTimeout+0x3e>
 80025e6:	f1b8 0f00 	cmp.w	r8, #0
 80025ea:	d11c      	bne.n	8002626 <UART_WaitOnFlagUntilTimeout+0x78>
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80025ec:	e850 3f00 	ldrex	r3, [r0]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 80025f0:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80025f4:	e840 3200 	strex	r2, r3, [r0]
 80025f8:	2a00      	cmp	r2, #0
 80025fa:	d1f7      	bne.n	80025ec <UART_WaitOnFlagUntilTimeout+0x3e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80025fc:	f100 0308 	add.w	r3, r0, #8
 8002600:	e853 3f00 	ldrex	r3, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8002604:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8002608:	f100 0108 	add.w	r1, r0, #8
 800260c:	e841 3200 	strex	r2, r3, [r1]
 8002610:	2a00      	cmp	r2, #0
 8002612:	d1f3      	bne.n	80025fc <UART_WaitOnFlagUntilTimeout+0x4e>
        huart->gState = HAL_UART_STATE_READY;
 8002614:	2320      	movs	r3, #32
 8002616:	67e3      	str	r3, [r4, #124]	; 0x7c
        huart->RxState = HAL_UART_STATE_READY;
 8002618:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
          return HAL_TIMEOUT;
 800261c:	2003      	movs	r0, #3
          __HAL_UNLOCK(huart);
 800261e:	f884 2078 	strb.w	r2, [r4, #120]	; 0x78
}
 8002622:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8002626:	6803      	ldr	r3, [r0, #0]
 8002628:	075a      	lsls	r2, r3, #29
 800262a:	d5c8      	bpl.n	80025be <UART_WaitOnFlagUntilTimeout+0x10>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 800262c:	69c3      	ldr	r3, [r0, #28]
 800262e:	051b      	lsls	r3, r3, #20
 8002630:	d5c5      	bpl.n	80025be <UART_WaitOnFlagUntilTimeout+0x10>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8002632:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8002636:	6203      	str	r3, [r0, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8002638:	e850 3f00 	ldrex	r3, [r0]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 800263c:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8002640:	e840 3200 	strex	r2, r3, [r0]
 8002644:	2a00      	cmp	r2, #0
 8002646:	d1f7      	bne.n	8002638 <UART_WaitOnFlagUntilTimeout+0x8a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8002648:	f100 0308 	add.w	r3, r0, #8
 800264c:	e853 3f00 	ldrex	r3, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8002650:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8002654:	f100 0108 	add.w	r1, r0, #8
 8002658:	e841 3200 	strex	r2, r3, [r1]
 800265c:	2a00      	cmp	r2, #0
 800265e:	d1f3      	bne.n	8002648 <UART_WaitOnFlagUntilTimeout+0x9a>
          huart->gState = HAL_UART_STATE_READY;
 8002660:	2320      	movs	r3, #32
 8002662:	67e3      	str	r3, [r4, #124]	; 0x7c
          huart->RxState = HAL_UART_STATE_READY;
 8002664:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8002668:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 800266c:	e7d6      	b.n	800261c <UART_WaitOnFlagUntilTimeout+0x6e>

0800266e <HAL_UART_Transmit>:
{
 800266e:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8002672:	4698      	mov	r8, r3
  if (huart->gState == HAL_UART_STATE_READY)
 8002674:	6fc3      	ldr	r3, [r0, #124]	; 0x7c
{
 8002676:	4604      	mov	r4, r0
 8002678:	460e      	mov	r6, r1
  if (huart->gState == HAL_UART_STATE_READY)
 800267a:	2b20      	cmp	r3, #32
{
 800267c:	4617      	mov	r7, r2
  if (huart->gState == HAL_UART_STATE_READY)
 800267e:	d142      	bne.n	8002706 <HAL_UART_Transmit+0x98>
    if ((pData == NULL) || (Size == 0U))
 8002680:	2900      	cmp	r1, #0
 8002682:	d042      	beq.n	800270a <HAL_UART_Transmit+0x9c>
 8002684:	2a00      	cmp	r2, #0
 8002686:	d040      	beq.n	800270a <HAL_UART_Transmit+0x9c>
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8002688:	2321      	movs	r3, #33	; 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800268a:	2500      	movs	r5, #0
 800268c:	f8c0 5084 	str.w	r5, [r0, #132]	; 0x84
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8002690:	67c3      	str	r3, [r0, #124]	; 0x7c
    tickstart = HAL_GetTick();
 8002692:	f7fe fe93 	bl	80013bc <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8002696:	68a2      	ldr	r2, [r4, #8]
    tickstart = HAL_GetTick();
 8002698:	4603      	mov	r3, r0
    huart->TxXferSize  = Size;
 800269a:	f8a4 7050 	strh.w	r7, [r4, #80]	; 0x50
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800269e:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
    huart->TxXferCount = Size;
 80026a2:	f8a4 7052 	strh.w	r7, [r4, #82]	; 0x52
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80026a6:	d103      	bne.n	80026b0 <HAL_UART_Transmit+0x42>
 80026a8:	6922      	ldr	r2, [r4, #16]
 80026aa:	b90a      	cbnz	r2, 80026b0 <HAL_UART_Transmit+0x42>
 80026ac:	4635      	mov	r5, r6
      pdata8bits  = NULL;
 80026ae:	4616      	mov	r6, r2
    while (huart->TxXferCount > 0U)
 80026b0:	f8b4 2052 	ldrh.w	r2, [r4, #82]	; 0x52
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80026b4:	f8cd 8000 	str.w	r8, [sp]
    while (huart->TxXferCount > 0U)
 80026b8:	b292      	uxth	r2, r2
 80026ba:	b93a      	cbnz	r2, 80026cc <HAL_UART_Transmit+0x5e>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80026bc:	2140      	movs	r1, #64	; 0x40
 80026be:	4620      	mov	r0, r4
 80026c0:	f7ff ff75 	bl	80025ae <UART_WaitOnFlagUntilTimeout>
 80026c4:	b950      	cbnz	r0, 80026dc <HAL_UART_Transmit+0x6e>
    huart->gState = HAL_UART_STATE_READY;
 80026c6:	2320      	movs	r3, #32
 80026c8:	67e3      	str	r3, [r4, #124]	; 0x7c
    return HAL_OK;
 80026ca:	e008      	b.n	80026de <HAL_UART_Transmit+0x70>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80026cc:	2200      	movs	r2, #0
 80026ce:	2180      	movs	r1, #128	; 0x80
 80026d0:	4620      	mov	r0, r4
 80026d2:	9303      	str	r3, [sp, #12]
 80026d4:	f7ff ff6b 	bl	80025ae <UART_WaitOnFlagUntilTimeout>
 80026d8:	9b03      	ldr	r3, [sp, #12]
 80026da:	b118      	cbz	r0, 80026e4 <HAL_UART_Transmit+0x76>
        return HAL_TIMEOUT;
 80026dc:	2003      	movs	r0, #3
}
 80026de:	b004      	add	sp, #16
 80026e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 80026e4:	6821      	ldr	r1, [r4, #0]
      if (pdata8bits == NULL)
 80026e6:	b95e      	cbnz	r6, 8002700 <HAL_UART_Transmit+0x92>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 80026e8:	f835 2b02 	ldrh.w	r2, [r5], #2
 80026ec:	f3c2 0208 	ubfx	r2, r2, #0, #9
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 80026f0:	628a      	str	r2, [r1, #40]	; 0x28
      huart->TxXferCount--;
 80026f2:	f8b4 2052 	ldrh.w	r2, [r4, #82]	; 0x52
 80026f6:	3a01      	subs	r2, #1
 80026f8:	b292      	uxth	r2, r2
 80026fa:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 80026fe:	e7d7      	b.n	80026b0 <HAL_UART_Transmit+0x42>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8002700:	f816 2b01 	ldrb.w	r2, [r6], #1
 8002704:	e7f4      	b.n	80026f0 <HAL_UART_Transmit+0x82>
    return HAL_BUSY;
 8002706:	2002      	movs	r0, #2
 8002708:	e7e9      	b.n	80026de <HAL_UART_Transmit+0x70>
      return  HAL_ERROR;
 800270a:	2001      	movs	r0, #1
 800270c:	e7e7      	b.n	80026de <HAL_UART_Transmit+0x70>

0800270e <HAL_UART_Receive>:
{
 800270e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8002712:	4698      	mov	r8, r3
  if (huart->RxState == HAL_UART_STATE_READY)
 8002714:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
{
 8002718:	4604      	mov	r4, r0
 800271a:	460e      	mov	r6, r1
  if (huart->RxState == HAL_UART_STATE_READY)
 800271c:	2b20      	cmp	r3, #32
{
 800271e:	4617      	mov	r7, r2
  if (huart->RxState == HAL_UART_STATE_READY)
 8002720:	d159      	bne.n	80027d6 <HAL_UART_Receive+0xc8>
    if ((pData == NULL) || (Size == 0U))
 8002722:	2900      	cmp	r1, #0
 8002724:	d059      	beq.n	80027da <HAL_UART_Receive+0xcc>
 8002726:	2a00      	cmp	r2, #0
 8002728:	d057      	beq.n	80027da <HAL_UART_Receive+0xcc>
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 800272a:	2322      	movs	r3, #34	; 0x22
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800272c:	2500      	movs	r5, #0
 800272e:	f8c0 5084 	str.w	r5, [r0, #132]	; 0x84
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 8002732:	f8c0 3080 	str.w	r3, [r0, #128]	; 0x80
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8002736:	6605      	str	r5, [r0, #96]	; 0x60
    tickstart = HAL_GetTick();
 8002738:	f7fe fe40 	bl	80013bc <HAL_GetTick>
    UART_MASK_COMPUTATION(huart);
 800273c:	68a3      	ldr	r3, [r4, #8]
    tickstart = HAL_GetTick();
 800273e:	4681      	mov	r9, r0
    huart->RxXferSize  = Size;
 8002740:	f8a4 7058 	strh.w	r7, [r4, #88]	; 0x58
    UART_MASK_COMPUTATION(huart);
 8002744:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
    huart->RxXferCount = Size;
 8002748:	f8a4 705a 	strh.w	r7, [r4, #90]	; 0x5a
    UART_MASK_COMPUTATION(huart);
 800274c:	d118      	bne.n	8002780 <HAL_UART_Receive+0x72>
 800274e:	6922      	ldr	r2, [r4, #16]
 8002750:	42aa      	cmp	r2, r5
 8002752:	f240 15ff 	movw	r5, #511	; 0x1ff
 8002756:	bf18      	it	ne
 8002758:	25ff      	movne	r5, #255	; 0xff
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800275a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
    UART_MASK_COMPUTATION(huart);
 800275e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8002762:	d11d      	bne.n	80027a0 <HAL_UART_Receive+0x92>
 8002764:	6923      	ldr	r3, [r4, #16]
 8002766:	b9db      	cbnz	r3, 80027a0 <HAL_UART_Receive+0x92>
 8002768:	4637      	mov	r7, r6
      pdata8bits  = NULL;
 800276a:	461e      	mov	r6, r3
    while (huart->RxXferCount > 0U)
 800276c:	f8b4 205a 	ldrh.w	r2, [r4, #90]	; 0x5a
 8002770:	b290      	uxth	r0, r2
 8002772:	b9b8      	cbnz	r0, 80027a4 <HAL_UART_Receive+0x96>
    huart->RxState = HAL_UART_STATE_READY;
 8002774:	2320      	movs	r3, #32
 8002776:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
}
 800277a:	b003      	add	sp, #12
 800277c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    UART_MASK_COMPUTATION(huart);
 8002780:	b92b      	cbnz	r3, 800278e <HAL_UART_Receive+0x80>
 8002782:	6922      	ldr	r2, [r4, #16]
 8002784:	2a00      	cmp	r2, #0
 8002786:	bf14      	ite	ne
 8002788:	257f      	movne	r5, #127	; 0x7f
 800278a:	25ff      	moveq	r5, #255	; 0xff
 800278c:	e7e5      	b.n	800275a <HAL_UART_Receive+0x4c>
 800278e:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8002792:	d1e2      	bne.n	800275a <HAL_UART_Receive+0x4c>
 8002794:	6922      	ldr	r2, [r4, #16]
 8002796:	2a00      	cmp	r2, #0
 8002798:	bf0c      	ite	eq
 800279a:	257f      	moveq	r5, #127	; 0x7f
 800279c:	253f      	movne	r5, #63	; 0x3f
 800279e:	e7dc      	b.n	800275a <HAL_UART_Receive+0x4c>
      pdata16bits = NULL;
 80027a0:	2700      	movs	r7, #0
 80027a2:	e7e3      	b.n	800276c <HAL_UART_Receive+0x5e>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 80027a4:	464b      	mov	r3, r9
 80027a6:	2200      	movs	r2, #0
 80027a8:	2120      	movs	r1, #32
 80027aa:	4620      	mov	r0, r4
 80027ac:	f8cd 8000 	str.w	r8, [sp]
 80027b0:	f7ff fefd 	bl	80025ae <UART_WaitOnFlagUntilTimeout>
 80027b4:	b998      	cbnz	r0, 80027de <HAL_UART_Receive+0xd0>
        *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 80027b6:	6823      	ldr	r3, [r4, #0]
 80027b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027ba:	402b      	ands	r3, r5
      if (pdata8bits == NULL)
 80027bc:	b946      	cbnz	r6, 80027d0 <HAL_UART_Receive+0xc2>
        *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 80027be:	f827 3b02 	strh.w	r3, [r7], #2
      huart->RxXferCount--;
 80027c2:	f8b4 205a 	ldrh.w	r2, [r4, #90]	; 0x5a
 80027c6:	3a01      	subs	r2, #1
 80027c8:	b292      	uxth	r2, r2
 80027ca:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80027ce:	e7cd      	b.n	800276c <HAL_UART_Receive+0x5e>
        *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 80027d0:	f806 3b01 	strb.w	r3, [r6], #1
        pdata8bits++;
 80027d4:	e7f5      	b.n	80027c2 <HAL_UART_Receive+0xb4>
    return HAL_BUSY;
 80027d6:	2002      	movs	r0, #2
 80027d8:	e7cf      	b.n	800277a <HAL_UART_Receive+0x6c>
      return  HAL_ERROR;
 80027da:	2001      	movs	r0, #1
 80027dc:	e7cd      	b.n	800277a <HAL_UART_Receive+0x6c>
        return HAL_TIMEOUT;
 80027de:	2003      	movs	r0, #3
 80027e0:	e7cb      	b.n	800277a <HAL_UART_Receive+0x6c>

080027e2 <UART_CheckIdleState>:
{
 80027e2:	b530      	push	{r4, r5, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80027e4:	2500      	movs	r5, #0
{
 80027e6:	4604      	mov	r4, r0
 80027e8:	b085      	sub	sp, #20
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80027ea:	f8c0 5084 	str.w	r5, [r0, #132]	; 0x84
  tickstart = HAL_GetTick();
 80027ee:	f7fe fde5 	bl	80013bc <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 80027f2:	6822      	ldr	r2, [r4, #0]
  tickstart = HAL_GetTick();
 80027f4:	4603      	mov	r3, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 80027f6:	6812      	ldr	r2, [r2, #0]
 80027f8:	0711      	lsls	r1, r2, #28
 80027fa:	d417      	bmi.n	800282c <UART_CheckIdleState+0x4a>
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 80027fc:	6822      	ldr	r2, [r4, #0]
 80027fe:	6812      	ldr	r2, [r2, #0]
 8002800:	0752      	lsls	r2, r2, #29
 8002802:	d509      	bpl.n	8002818 <UART_CheckIdleState+0x36>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8002804:	f06f 427e 	mvn.w	r2, #4261412864	; 0xfe000000
 8002808:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 800280c:	4620      	mov	r0, r4
 800280e:	9200      	str	r2, [sp, #0]
 8002810:	2200      	movs	r2, #0
 8002812:	f7ff fecc 	bl	80025ae <UART_WaitOnFlagUntilTimeout>
 8002816:	b9b0      	cbnz	r0, 8002846 <UART_CheckIdleState+0x64>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8002818:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 800281a:	2320      	movs	r3, #32
  __HAL_UNLOCK(huart);
 800281c:	f884 0078 	strb.w	r0, [r4, #120]	; 0x78
  huart->gState = HAL_UART_STATE_READY;
 8002820:	67e3      	str	r3, [r4, #124]	; 0x7c
  huart->RxState = HAL_UART_STATE_READY;
 8002822:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8002826:	6620      	str	r0, [r4, #96]	; 0x60
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8002828:	6660      	str	r0, [r4, #100]	; 0x64
  return HAL_OK;
 800282a:	e00d      	b.n	8002848 <UART_CheckIdleState+0x66>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 800282c:	f06f 427e 	mvn.w	r2, #4261412864	; 0xfe000000
 8002830:	9003      	str	r0, [sp, #12]
 8002832:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8002836:	4620      	mov	r0, r4
 8002838:	9200      	str	r2, [sp, #0]
 800283a:	462a      	mov	r2, r5
 800283c:	f7ff feb7 	bl	80025ae <UART_WaitOnFlagUntilTimeout>
 8002840:	9b03      	ldr	r3, [sp, #12]
 8002842:	2800      	cmp	r0, #0
 8002844:	d0da      	beq.n	80027fc <UART_CheckIdleState+0x1a>
      return HAL_TIMEOUT;
 8002846:	2003      	movs	r0, #3
}
 8002848:	b005      	add	sp, #20
 800284a:	bd30      	pop	{r4, r5, pc}

0800284c <HAL_UART_Init>:
{
 800284c:	b510      	push	{r4, lr}
  if (huart == NULL)
 800284e:	4604      	mov	r4, r0
 8002850:	b340      	cbz	r0, 80028a4 <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 8002852:	6fc3      	ldr	r3, [r0, #124]	; 0x7c
 8002854:	b91b      	cbnz	r3, 800285e <HAL_UART_Init+0x12>
    huart->Lock = HAL_UNLOCKED;
 8002856:	f880 3078 	strb.w	r3, [r0, #120]	; 0x78
    HAL_UART_MspInit(huart);
 800285a:	f7fe fcd1 	bl	8001200 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 800285e:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8002860:	2324      	movs	r3, #36	; 0x24
  if (UART_SetConfig(huart) == HAL_ERROR)
 8002862:	4620      	mov	r0, r4
  huart->gState = HAL_UART_STATE_BUSY;
 8002864:	67e3      	str	r3, [r4, #124]	; 0x7c
  __HAL_UART_DISABLE(huart);
 8002866:	6813      	ldr	r3, [r2, #0]
 8002868:	f023 0301 	bic.w	r3, r3, #1
 800286c:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 800286e:	f7ff fd07 	bl	8002280 <UART_SetConfig>
 8002872:	2801      	cmp	r0, #1
 8002874:	d016      	beq.n	80028a4 <HAL_UART_Init+0x58>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8002876:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002878:	b113      	cbz	r3, 8002880 <HAL_UART_Init+0x34>
    UART_AdvFeatureConfig(huart);
 800287a:	4620      	mov	r0, r4
 800287c:	f7ff fe42 	bl	8002504 <UART_AdvFeatureConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8002880:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
 8002882:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8002884:	685a      	ldr	r2, [r3, #4]
 8002886:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800288a:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800288c:	689a      	ldr	r2, [r3, #8]
 800288e:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8002892:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 8002894:	681a      	ldr	r2, [r3, #0]
 8002896:	f042 0201 	orr.w	r2, r2, #1
}
 800289a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  __HAL_UART_ENABLE(huart);
 800289e:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
 80028a0:	f7ff bf9f 	b.w	80027e2 <UART_CheckIdleState>
}
 80028a4:	2001      	movs	r0, #1
 80028a6:	bd10      	pop	{r4, pc}

080028a8 <_mon_alloc_reset>:

#include <stdlib.h>

#pragma GCC push_options
#pragma GCC optimize ("O0")
static inline void _mon_alloc_reset(void) {
 80028a8:	b580      	push	{r7, lr}
 80028aa:	af00      	add	r7, sp, #0
    memset((void *)&io_malloc, 0, sizeof(struct io_malloc));
 80028ac:	221c      	movs	r2, #28
 80028ae:	2100      	movs	r1, #0
 80028b0:	4805      	ldr	r0, [pc, #20]	; (80028c8 <_mon_alloc_reset+0x20>)
 80028b2:	f00c ff9c 	bl	800f7ee <memset>
    /* force a call of wrap functions */\
    free(malloc(10));
 80028b6:	200a      	movs	r0, #10
 80028b8:	f000 fff2 	bl	80038a0 <__wrap_malloc>
 80028bc:	4603      	mov	r3, r0
 80028be:	4618      	mov	r0, r3
 80028c0:	f001 f816 	bl	80038f0 <__wrap_free>
}
 80028c4:	bf00      	nop
 80028c6:	bd80      	pop	{r7, pc}
 80028c8:	2000209c 	.word	0x2000209c

080028cc <cyclesCounterEnd>:
#endif
#endif
}

__STATIC_INLINE uint64_t cyclesCounterEnd(void)
{
 80028cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
#if USE_CORE_CLOCK_ONLY == 1
  return (uint64_t)(port_dwt_get_cycles() - cyclesCount.dwt_start);
#else
  uint64_t dwt_e;
  uint64_t tick_e;
  dwt_e = port_dwt_get_cycles() - cyclesCount.dwt_start;
 80028ce:	4b10      	ldr	r3, [pc, #64]	; (8002910 <cyclesCounterEnd+0x44>)
 80028d0:	4d10      	ldr	r5, [pc, #64]	; (8002914 <cyclesCounterEnd+0x48>)
 80028d2:	685c      	ldr	r4, [r3, #4]
 80028d4:	686b      	ldr	r3, [r5, #4]
 80028d6:	1ae4      	subs	r4, r4, r3
 80028d8:	2300      	movs	r3, #0
 80028da:	9301      	str	r3, [sp, #4]
  tick_e = port_hal_get_tick() - cyclesCount.tick_start;
 80028dc:	f7fe fd6e 	bl	80013bc <HAL_GetTick>
 80028e0:	68aa      	ldr	r2, [r5, #8]
  if (tick_e > cyclesCount.dwt_max) {
 80028e2:	9b01      	ldr	r3, [sp, #4]
  tick_e = port_hal_get_tick() - cyclesCount.tick_start;
 80028e4:	1a80      	subs	r0, r0, r2
  if (tick_e > cyclesCount.dwt_max) {
 80028e6:	682a      	ldr	r2, [r5, #0]
 80028e8:	4290      	cmp	r0, r2
 80028ea:	d90c      	bls.n	8002906 <cyclesCounterEnd+0x3a>
    /* overflow detected */
    dwt_e = ((tick_e/cyclesCount.dwt_max) * (uint64_t)UINT32_MAX + (uint64_t)dwt_e);
 80028ec:	4619      	mov	r1, r3
 80028ee:	f7fd febb 	bl	8000668 <__aeabi_uldivmod>
 80028f2:	f04f 33ff 	mov.w	r3, #4294967295
 80028f6:	fba0 0303 	umull	r0, r3, r0, r3
 80028fa:	1900      	adds	r0, r0, r4
 80028fc:	eba3 0301 	sub.w	r3, r3, r1
 8002900:	4604      	mov	r4, r0
 8002902:	f143 0300 	adc.w	r3, r3, #0
  }
  return dwt_e;
#endif
#endif
}
 8002906:	4620      	mov	r0, r4
 8002908:	4619      	mov	r1, r3
 800290a:	b003      	add	sp, #12
 800290c:	bd30      	pop	{r4, r5, pc}
 800290e:	bf00      	nop
 8002910:	e0001000 	.word	0xe0001000
 8002914:	20002090 	.word	0x20002090

08002918 <user_observer_cb>:
static struct u_observer_ctx u_observer_ctx;

/* User callback */
static ai_u32 user_observer_cb(const ai_handle cookie,
    const ai_u32 flags,
    const ai_observer_node *node) {
 8002918:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 800291c:	4604      	mov	r4, r0
 800291e:	460e      	mov	r6, r1
 8002920:	4615      	mov	r5, r2

  struct u_observer_ctx *u_obs;

  volatile uint64_t ts = cyclesCounterEnd(); /* time stamp entry */
 8002922:	f7ff ffd3 	bl	80028cc <cyclesCounterEnd>

  u_obs = (struct u_observer_ctx *)cookie;
  u_obs->n_cb += 1;
 8002926:	e9d4 3200 	ldrd	r3, r2, [r4]
  volatile uint64_t ts = cyclesCounterEnd(); /* time stamp entry */
 800292a:	e9cd 0100 	strd	r0, r1, [sp]
  u_obs->n_cb += 1;
 800292e:	3301      	adds	r3, #1
 8002930:	f142 0200 	adc.w	r2, r2, #0
 8002934:	e9c4 3200 	strd	r3, r2, [r4]

  if (flags & AI_OBSERVER_POST_EVT) {
 8002938:	0773      	lsls	r3, r6, #29
 800293a:	d51f      	bpl.n	800297c <user_observer_cb+0x64>
    const uint64_t end_t = ts - u_obs->start_t;
    u_obs->k_dur_t += end_t;
    u_obs->nodes[node->c_idx].dur += end_t;
 800293c:	6a26      	ldr	r6, [r4, #32]
    const uint64_t end_t = ts - u_obs->start_t;
 800293e:	e9d4 1002 	ldrd	r1, r0, [r4, #8]
 8002942:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002946:	1a51      	subs	r1, r2, r1
 8002948:	eb63 0000 	sbc.w	r0, r3, r0
    u_obs->k_dur_t += end_t;
 800294c:	e9d4 3206 	ldrd	r3, r2, [r4, #24]
 8002950:	185b      	adds	r3, r3, r1
 8002952:	eb40 0202 	adc.w	r2, r0, r2
 8002956:	e9c4 3206 	strd	r3, r2, [r4, #24]
    u_obs->nodes[node->c_idx].dur += end_t;
 800295a:	882b      	ldrh	r3, [r5, #0]
 800295c:	ea4f 1c03 	mov.w	ip, r3, lsl #4
 8002960:	eb06 1303 	add.w	r3, r6, r3, lsl #4
 8002964:	f856 200c 	ldr.w	r2, [r6, ip]
 8002968:	685d      	ldr	r5, [r3, #4]
 800296a:	1852      	adds	r2, r2, r1
 800296c:	f846 200c 	str.w	r2, [r6, ip]
 8002970:	eb40 0005 	adc.w	r0, r0, r5
    u_obs->nodes[node->c_idx].n_runs += 1;
 8002974:	689a      	ldr	r2, [r3, #8]
    u_obs->nodes[node->c_idx].dur += end_t;
 8002976:	6058      	str	r0, [r3, #4]
    u_obs->nodes[node->c_idx].n_runs += 1;
 8002978:	3201      	adds	r2, #1
 800297a:	609a      	str	r2, [r3, #8]
  }

  u_obs->start_t = cyclesCounterEnd();    /* time stamp exit */
 800297c:	f7ff ffa6 	bl	80028cc <cyclesCounterEnd>
  u_obs->u_dur_t += u_obs->start_t  - ts; /* accumulate cycles used by the CB */
 8002980:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 8002984:	e9dd 8900 	ldrd	r8, r9, [sp]
  u_obs->start_t = cyclesCounterEnd();    /* time stamp exit */
 8002988:	e9c4 0102 	strd	r0, r1, [r4, #8]
  u_obs->u_dur_t += u_obs->start_t  - ts; /* accumulate cycles used by the CB */
 800298c:	ebb3 0308 	subs.w	r3, r3, r8
 8002990:	eb62 0209 	sbc.w	r2, r2, r9
 8002994:	1818      	adds	r0, r3, r0
 8002996:	eb41 0102 	adc.w	r1, r1, r2
 800299a:	e9c4 0104 	strd	r0, r1, [r4, #16]
  return 0;
}
 800299e:	2000      	movs	r0, #0
 80029a0:	b002      	add	sp, #8
 80029a2:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
	...

080029a8 <aiDeInit>:
{
 80029a8:	b510      	push	{r4, lr}
    if (net_exec_ctx[idx].handle != AI_HANDLE_NULL) {
 80029aa:	4c09      	ldr	r4, [pc, #36]	; (80029d0 <aiDeInit+0x28>)
  LC_PRINT("Releasing the instance(s)...\r\n");
 80029ac:	4809      	ldr	r0, [pc, #36]	; (80029d4 <aiDeInit+0x2c>)
 80029ae:	f000 ff65 	bl	800387c <lc_print>
    if (net_exec_ctx[idx].handle != AI_HANDLE_NULL) {
 80029b2:	6820      	ldr	r0, [r4, #0]
 80029b4:	b150      	cbz	r0, 80029cc <aiDeInit+0x24>
      if (ai_mnetwork_destroy(net_exec_ctx[idx].handle)
 80029b6:	f001 f96b 	bl	8003c90 <ai_mnetwork_destroy>
 80029ba:	b128      	cbz	r0, 80029c8 <aiDeInit+0x20>
        err = ai_mnetwork_get_error(net_exec_ctx[idx].handle);
 80029bc:	6820      	ldr	r0, [r4, #0]
 80029be:	f001 f988 	bl	8003cd2 <ai_mnetwork_get_error>
        aiLogErr(err, "ai_mnetwork_destroy");
 80029c2:	4905      	ldr	r1, [pc, #20]	; (80029d8 <aiDeInit+0x30>)
 80029c4:	f000 fd44 	bl	8003450 <aiLogErr>
      net_exec_ctx[idx].handle = AI_HANDLE_NULL;
 80029c8:	2300      	movs	r3, #0
 80029ca:	6023      	str	r3, [r4, #0]
}
 80029cc:	bd10      	pop	{r4, pc}
 80029ce:	bf00      	nop
 80029d0:	20001fd0 	.word	0x20001fd0
 80029d4:	08011700 	.word	0x08011700
 80029d8:	0801171f 	.word	0x0801171f

080029dc <aiTestConsole>:
#define CONS_EVT_HIDE       (6)

#define CONS_EVT_UNDEFINED  (100)

static int aiTestConsole(void)
{
 80029dc:	b513      	push	{r0, r1, r4, lr}
  uint8_t c = 0;
 80029de:	2400      	movs	r4, #0

  if (ioRawGetUint8(&c, 5000) == -1) /* Timeout */
 80029e0:	f241 3188 	movw	r1, #5000	; 0x1388
 80029e4:	f10d 0007 	add.w	r0, sp, #7
  uint8_t c = 0;
 80029e8:	f88d 4007 	strb.w	r4, [sp, #7]
  if (ioRawGetUint8(&c, 5000) == -1) /* Timeout */
 80029ec:	f000 ff16 	bl	800381c <ioRawGetUint8>
 80029f0:	1c43      	adds	r3, r0, #1
 80029f2:	d02c      	beq.n	8002a4e <aiTestConsole+0x72>
    return CONS_EVT_TIMEOUT;

  if ((c == 'q') || (c == 'Q'))
 80029f4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80029f8:	2b71      	cmp	r3, #113	; 0x71
 80029fa:	d02a      	beq.n	8002a52 <aiTestConsole+0x76>
 80029fc:	2b52      	cmp	r3, #82	; 0x52
 80029fe:	d816      	bhi.n	8002a2e <aiTestConsole+0x52>
 8002a00:	2b43      	cmp	r3, #67	; 0x43
 8002a02:	d805      	bhi.n	8002a10 <aiTestConsole+0x34>
 8002a04:	2b3f      	cmp	r3, #63	; 0x3f
 8002a06:	bf0c      	ite	eq
 8002a08:	2003      	moveq	r0, #3
 8002a0a:	2064      	movne	r0, #100	; 0x64

  if ((c == 'x') || (c == 'X'))
    return CONS_EVT_PROF;

  return CONS_EVT_UNDEFINED;
}
 8002a0c:	b002      	add	sp, #8
 8002a0e:	bd10      	pop	{r4, pc}
 8002a10:	3b44      	subs	r3, #68	; 0x44
 8002a12:	2b0e      	cmp	r3, #14
 8002a14:	d809      	bhi.n	8002a2a <aiTestConsole+0x4e>
 8002a16:	e8df f003 	tbb	[pc, r3]
 8002a1a:	0820      	.short	0x0820
 8002a1c:	08220808 	.word	0x08220808
 8002a20:	08080808 	.word	0x08080808
 8002a24:	1c1e0808 	.word	0x1c1e0808
 8002a28:	24          	.byte	0x24
 8002a29:	00          	.byte	0x00
  if ((c == 'q') || (c == 'Q'))
 8002a2a:	2064      	movs	r0, #100	; 0x64
 8002a2c:	e7ee      	b.n	8002a0c <aiTestConsole+0x30>
 8002a2e:	2b70      	cmp	r3, #112	; 0x70
 8002a30:	d011      	beq.n	8002a56 <aiTestConsole+0x7a>
 8002a32:	d808      	bhi.n	8002a46 <aiTestConsole+0x6a>
 8002a34:	2b64      	cmp	r3, #100	; 0x64
 8002a36:	d010      	beq.n	8002a5a <aiTestConsole+0x7e>
 8002a38:	2b68      	cmp	r3, #104	; 0x68
 8002a3a:	d010      	beq.n	8002a5e <aiTestConsole+0x82>
    return CONS_EVT_PROF;
 8002a3c:	2b58      	cmp	r3, #88	; 0x58
 8002a3e:	bf14      	ite	ne
 8002a40:	2064      	movne	r0, #100	; 0x64
 8002a42:	2005      	moveq	r0, #5
 8002a44:	e7e2      	b.n	8002a0c <aiTestConsole+0x30>
 8002a46:	2b72      	cmp	r3, #114	; 0x72
 8002a48:	d00b      	beq.n	8002a62 <aiTestConsole+0x86>
 8002a4a:	2b78      	cmp	r3, #120	; 0x78
 8002a4c:	e7f7      	b.n	8002a3e <aiTestConsole+0x62>
    return CONS_EVT_TIMEOUT;
 8002a4e:	4620      	mov	r0, r4
 8002a50:	e7dc      	b.n	8002a0c <aiTestConsole+0x30>
    return CONS_EVT_QUIT;
 8002a52:	2001      	movs	r0, #1
 8002a54:	e7da      	b.n	8002a0c <aiTestConsole+0x30>
    return CONS_EVT_PAUSE;
 8002a56:	2004      	movs	r0, #4
 8002a58:	e7d8      	b.n	8002a0c <aiTestConsole+0x30>
  if ((c == 'q') || (c == 'Q'))
 8002a5a:	2006      	movs	r0, #6
 8002a5c:	e7d6      	b.n	8002a0c <aiTestConsole+0x30>
    return CONS_EVT_HELP;
 8002a5e:	2003      	movs	r0, #3
 8002a60:	e7d4      	b.n	8002a0c <aiTestConsole+0x30>
    return CONS_EVT_RESTART;
 8002a62:	2002      	movs	r0, #2
 8002a64:	e7d2      	b.n	8002a0c <aiTestConsole+0x30>
	...

08002a68 <aiObserverInit>:
{
 8002a68:	b530      	push	{r4, r5, lr}
  if (!net_ctx || (net_ctx->handle == AI_HANDLE_NULL) || !net_ctx->report.n_nodes)
 8002a6a:	4604      	mov	r4, r0
{
 8002a6c:	b093      	sub	sp, #76	; 0x4c
  if (!net_ctx || (net_ctx->handle == AI_HANDLE_NULL) || !net_ctx->report.n_nodes)
 8002a6e:	b1e0      	cbz	r0, 8002aaa <aiObserverInit+0x42>
 8002a70:	6800      	ldr	r0, [r0, #0]
 8002a72:	b1d0      	cbz	r0, 8002aaa <aiObserverInit+0x42>
 8002a74:	f8d4 3084 	ldr.w	r3, [r4, #132]	; 0x84
 8002a78:	b1bb      	cbz	r3, 8002aaa <aiObserverInit+0x42>
  memset((void *)&u_observer_ctx, 0, sizeof(struct u_observer_ctx));
 8002a7a:	4d17      	ldr	r5, [pc, #92]	; (8002ad8 <aiObserverInit+0x70>)
  ai_mnetwork_get_private_handle(net_ctx->handle, &net_hdl, &net_params);
 8002a7c:	aa04      	add	r2, sp, #16
 8002a7e:	a903      	add	r1, sp, #12
 8002a80:	f001 f964 	bl	8003d4c <ai_mnetwork_get_private_handle>
  memset((void *)&u_observer_ctx, 0, sizeof(struct u_observer_ctx));
 8002a84:	2228      	movs	r2, #40	; 0x28
 8002a86:	2100      	movs	r1, #0
 8002a88:	4628      	mov	r0, r5
 8002a8a:	f00c feb0 	bl	800f7ee <memset>
  sz = net_ctx->report.n_nodes * sizeof(struct u_node_stat);
 8002a8e:	f8d4 2084 	ldr.w	r2, [r4, #132]	; 0x84
 8002a92:	0112      	lsls	r2, r2, #4
  u_observer_ctx.nodes = (struct u_node_stat*)malloc(sz);
 8002a94:	4610      	mov	r0, r2
 8002a96:	9201      	str	r2, [sp, #4]
 8002a98:	f000 ff02 	bl	80038a0 <__wrap_malloc>
  if (!u_observer_ctx.nodes) {
 8002a9c:	9a01      	ldr	r2, [sp, #4]
  u_observer_ctx.nodes = (struct u_node_stat*)malloc(sz);
 8002a9e:	6228      	str	r0, [r5, #32]
  if (!u_observer_ctx.nodes) {
 8002aa0:	b928      	cbnz	r0, 8002aae <aiObserverInit+0x46>
    LC_PRINT("W: enable to allocate the u_node_stats (sz=%d) ..\r\n", sz);
 8002aa2:	4611      	mov	r1, r2
 8002aa4:	480d      	ldr	r0, [pc, #52]	; (8002adc <aiObserverInit+0x74>)
 8002aa6:	f000 fee9 	bl	800387c <lc_print>
}
 8002aaa:	b013      	add	sp, #76	; 0x4c
 8002aac:	bd30      	pop	{r4, r5, pc}
  memset(u_observer_ctx.nodes, 0, sz);
 8002aae:	2100      	movs	r1, #0
 8002ab0:	f00c fe9d 	bl	800f7ee <memset>
  res = ai_platform_observer_register(net_hdl, user_observer_cb,
 8002ab4:	2306      	movs	r3, #6
 8002ab6:	462a      	mov	r2, r5
 8002ab8:	4909      	ldr	r1, [pc, #36]	; (8002ae0 <aiObserverInit+0x78>)
 8002aba:	9803      	ldr	r0, [sp, #12]
 8002abc:	f004 fa52 	bl	8006f64 <ai_platform_observer_register>
  if (!res) {
 8002ac0:	4604      	mov	r4, r0
 8002ac2:	2800      	cmp	r0, #0
 8002ac4:	d1f1      	bne.n	8002aaa <aiObserverInit+0x42>
    LC_PRINT("W: unable to register the user CB\r\n");
 8002ac6:	4807      	ldr	r0, [pc, #28]	; (8002ae4 <aiObserverInit+0x7c>)
 8002ac8:	f000 fed8 	bl	800387c <lc_print>
    free(u_observer_ctx.nodes);
 8002acc:	6a28      	ldr	r0, [r5, #32]
 8002ace:	f000 ff0f 	bl	80038f0 <__wrap_free>
    u_observer_ctx.nodes = NULL;
 8002ad2:	622c      	str	r4, [r5, #32]
    return;
 8002ad4:	e7e9      	b.n	8002aaa <aiObserverInit+0x42>
 8002ad6:	bf00      	nop
 8002ad8:	20002068 	.word	0x20002068
 8002adc:	08011733 	.word	0x08011733
 8002ae0:	08002919 	.word	0x08002919
 8002ae4:	08011767 	.word	0x08011767

08002ae8 <aiObserverDone>:
{
 8002ae8:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
 8002aec:	ed2d 8b04 	vpush	{d8-d9}
 8002af0:	b0a0      	sub	sp, #128	; 0x80
  if (!net_ctx || (net_ctx->handle == AI_HANDLE_NULL) ||
 8002af2:	2800      	cmp	r0, #0
 8002af4:	f000 80d8 	beq.w	8002ca8 <aiObserverDone+0x1c0>
 8002af8:	6803      	ldr	r3, [r0, #0]
 8002afa:	2b00      	cmp	r3, #0
 8002afc:	f000 80d4 	beq.w	8002ca8 <aiObserverDone+0x1c0>
 8002b00:	f8d0 2084 	ldr.w	r2, [r0, #132]	; 0x84
 8002b04:	2a00      	cmp	r2, #0
 8002b06:	f000 80cf 	beq.w	8002ca8 <aiObserverDone+0x1c0>
      !net_ctx->report.n_nodes || !u_observer_ctx.nodes)
 8002b0a:	4c6d      	ldr	r4, [pc, #436]	; (8002cc0 <aiObserverDone+0x1d8>)
 8002b0c:	6a22      	ldr	r2, [r4, #32]
 8002b0e:	2a00      	cmp	r2, #0
 8002b10:	f000 80ca 	beq.w	8002ca8 <aiObserverDone+0x1c0>
  ai_mnetwork_get_private_handle(net_ctx->handle, &net_hdl, &net_params);
 8002b14:	4618      	mov	r0, r3
 8002b16:	aa12      	add	r2, sp, #72	; 0x48
 8002b18:	a909      	add	r1, sp, #36	; 0x24
  LC_PRINT("  kernel  : %d.%03dms (time passed in the c-kernel fcts)\r\n", t.s * 1000 + t.ms, t.us);
 8002b1a:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
  ai_mnetwork_get_private_handle(net_ctx->handle, &net_hdl, &net_params);
 8002b1e:	f001 f915 	bl	8003d4c <ai_mnetwork_get_private_handle>
  ai_platform_observer_unregister(net_hdl, user_observer_cb,
 8002b22:	4622      	mov	r2, r4
 8002b24:	4967      	ldr	r1, [pc, #412]	; (8002cc4 <aiObserverDone+0x1dc>)
 8002b26:	9809      	ldr	r0, [sp, #36]	; 0x24
 8002b28:	f004 fb62 	bl	80071f0 <ai_platform_observer_unregister>
  LC_PRINT("\r\n Inference time by c-node\r\n");
 8002b2c:	4866      	ldr	r0, [pc, #408]	; (8002cc8 <aiObserverDone+0x1e0>)
 8002b2e:	f000 fea5 	bl	800387c <lc_print>
  dwtCyclesToTime(u_observer_ctx.k_dur_t / u_observer_ctx.nodes[0].n_runs, &t);
 8002b32:	6a23      	ldr	r3, [r4, #32]
 8002b34:	e9d4 0106 	ldrd	r0, r1, [r4, #24]
 8002b38:	689a      	ldr	r2, [r3, #8]
 8002b3a:	2300      	movs	r3, #0
 8002b3c:	f7fd fd94 	bl	8000668 <__aeabi_uldivmod>
 8002b40:	aa0a      	add	r2, sp, #40	; 0x28
 8002b42:	f000 ff27 	bl	8003994 <dwtCyclesToTime>
  LC_PRINT("  kernel  : %d.%03dms (time passed in the c-kernel fcts)\r\n", t.s * 1000 + t.ms, t.us);
 8002b46:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8002b48:	4860      	ldr	r0, [pc, #384]	; (8002ccc <aiObserverDone+0x1e4>)
 8002b4a:	e9dd 130b 	ldrd	r1, r3, [sp, #44]	; 0x2c
    LC_PRINT(fmt, node_info.c_idx,
 8002b4e:	ed9f 9b5a 	vldr	d9, [pc, #360]	; 8002cb8 <aiObserverDone+0x1d0>
  LC_PRINT("  kernel  : %d.%03dms (time passed in the c-kernel fcts)\r\n", t.s * 1000 + t.ms, t.us);
 8002b52:	fb05 3101 	mla	r1, r5, r1, r3
 8002b56:	f000 fe91 	bl	800387c <lc_print>
  dwtCyclesToTime(u_observer_ctx.u_dur_t / u_observer_ctx.nodes[0].n_runs, &t);
 8002b5a:	6a23      	ldr	r3, [r4, #32]
 8002b5c:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
 8002b60:	689a      	ldr	r2, [r3, #8]
 8002b62:	2300      	movs	r3, #0
 8002b64:	f7fd fd80 	bl	8000668 <__aeabi_uldivmod>
 8002b68:	aa0a      	add	r2, sp, #40	; 0x28
 8002b6a:	f000 ff13 	bl	8003994 <dwtCyclesToTime>
  LC_PRINT("  user    : %d.%03dms (time passed in the user cb)\r\n", t.s * 1000 + t.ms, t.us);
 8002b6e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8002b70:	4857      	ldr	r0, [pc, #348]	; (8002cd0 <aiObserverDone+0x1e8>)
 8002b72:	e9dd 130b 	ldrd	r1, r3, [sp, #44]	; 0x2c
 8002b76:	fb05 3101 	mla	r1, r5, r1, r3
  LC_PRINT("\r\n %-6s%-20s%-7s  %s\r\n", "c_id", "type", "id", "time (ms)");
 8002b7a:	4d56      	ldr	r5, [pc, #344]	; (8002cd4 <aiObserverDone+0x1ec>)
  LC_PRINT("  user    : %d.%03dms (time passed in the user cb)\r\n", t.s * 1000 + t.ms, t.us);
 8002b7c:	f000 fe7e 	bl	800387c <lc_print>
  LC_PRINT("\r\n %-6s%-20s%-7s  %s\r\n", "c_id", "type", "id", "time (ms)");
 8002b80:	f1a5 0324 	sub.w	r3, r5, #36	; 0x24
 8002b84:	f1a5 0221 	sub.w	r2, r5, #33	; 0x21
 8002b88:	f1a5 011c 	sub.w	r1, r5, #28
 8002b8c:	f1a5 0017 	sub.w	r0, r5, #23
 8002b90:	9500      	str	r5, [sp, #0]
      fmt = " %-6d%-20s%-5d %6d.%03d %6.02f %c\r\n";
 8002b92:	f1a5 09fd 	sub.w	r9, r5, #253	; 0xfd
  LC_PRINT("\r\n %-6s%-20s%-7s  %s\r\n", "c_id", "type", "id", "time (ms)");
 8002b96:	f000 fe71 	bl	800387c <lc_print>
  LC_PRINT(" ---------------------------------------------------\r\n");
 8002b9a:	f105 000a 	add.w	r0, r5, #10
 8002b9e:	f000 fe6d 	bl	800387c <lc_print>
  while (ai_platform_observer_node_info(net_hdl, &node_info)) {
 8002ba2:	2300      	movs	r3, #0
      fmt = " %-6d%-20s%-5d %6d.%03d %6.02f %c\r\n";
 8002ba4:	3dd6      	subs	r5, #214	; 0xd6
  cumul = 0;
 8002ba6:	461e      	mov	r6, r3
 8002ba8:	4698      	mov	r8, r3
  while (ai_platform_observer_node_info(net_hdl, &node_info)) {
 8002baa:	a90e      	add	r1, sp, #56	; 0x38
 8002bac:	9809      	ldr	r0, [sp, #36]	; 0x24
  node_info.c_idx = 0;
 8002bae:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
  while (ai_platform_observer_node_info(net_hdl, &node_info)) {
 8002bb2:	f004 f901 	bl	8006db8 <ai_platform_observer_node_info>
 8002bb6:	4682      	mov	sl, r0
 8002bb8:	bb20      	cbnz	r0, 8002c04 <aiObserverDone+0x11c>
  LC_PRINT(" -------------------------------------------------\r\n");
 8002bba:	4847      	ldr	r0, [pc, #284]	; (8002cd8 <aiObserverDone+0x1f0>)
 8002bbc:	f000 fe5e 	bl	800387c <lc_print>
  cumul /= u_observer_ctx.nodes[0].n_runs;
 8002bc0:	6a23      	ldr	r3, [r4, #32]
 8002bc2:	4630      	mov	r0, r6
 8002bc4:	4641      	mov	r1, r8
 8002bc6:	689a      	ldr	r2, [r3, #8]
 8002bc8:	4653      	mov	r3, sl
 8002bca:	f7fd fd4d 	bl	8000668 <__aeabi_uldivmod>
  dwtCyclesToTime(cumul, &t);
 8002bce:	aa0a      	add	r2, sp, #40	; 0x28
 8002bd0:	f000 fee0 	bl	8003994 <dwtCyclesToTime>
  LC_PRINT(" %31s %6d.%03d ms\r\n", "", t.s * 1000 + t.ms, t.us);
 8002bd4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8002bd6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8002bd8:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8002bdc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002bde:	fb00 1202 	mla	r2, r0, r2, r1
 8002be2:	493e      	ldr	r1, [pc, #248]	; (8002cdc <aiObserverDone+0x1f4>)
 8002be4:	1c48      	adds	r0, r1, #1
 8002be6:	f000 fe49 	bl	800387c <lc_print>
  free(u_observer_ctx.nodes);
 8002bea:	6a20      	ldr	r0, [r4, #32]
 8002bec:	f000 fe80 	bl	80038f0 <__wrap_free>
  memset((void *)&u_observer_ctx, 0, sizeof(struct u_observer_ctx));
 8002bf0:	2228      	movs	r2, #40	; 0x28
 8002bf2:	4651      	mov	r1, sl
 8002bf4:	4832      	ldr	r0, [pc, #200]	; (8002cc0 <aiObserverDone+0x1d8>)
}
 8002bf6:	b020      	add	sp, #128	; 0x80
 8002bf8:	ecbd 8b04 	vpop	{d8-d9}
 8002bfc:	e8bd 4f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
  memset((void *)&u_observer_ctx, 0, sizeof(struct u_observer_ctx));
 8002c00:	f00c bdf5 	b.w	800f7ee <memset>
    struct u_node_stat *sn = &u_observer_ctx.nodes[node_info.c_idx];
 8002c04:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8002c08:	6a22      	ldr	r2, [r4, #32]
 8002c0a:	0119      	lsls	r1, r3, #4
 8002c0c:	eb02 1303 	add.w	r3, r2, r3, lsl #4
    cumul +=  sn->dur;
 8002c10:	5850      	ldr	r0, [r2, r1]
 8002c12:	6859      	ldr	r1, [r3, #4]
 8002c14:	1986      	adds	r6, r0, r6
    dwtCyclesToTime(sn->dur / (uint64_t)sn->n_runs, &t);
 8002c16:	689a      	ldr	r2, [r3, #8]
 8002c18:	f04f 0300 	mov.w	r3, #0
    cumul +=  sn->dur;
 8002c1c:	eb41 0808 	adc.w	r8, r1, r8
    dwtCyclesToTime(sn->dur / (uint64_t)sn->n_runs, &t);
 8002c20:	f7fd fd22 	bl	8000668 <__aeabi_uldivmod>
 8002c24:	aa0a      	add	r2, sp, #40	; 0x28
 8002c26:	f000 feb5 	bl	8003994 <dwtCyclesToTime>
    if ((node_info.type & (ai_u16)0x8000) >> 15)
 8002c2a:	f8bd 003a 	ldrh.w	r0, [sp, #58]	; 0x3a
 8002c2e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
    LC_PRINT(fmt, node_info.c_idx,
 8002c32:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8002c36:	f8bd b038 	ldrh.w	fp, [sp, #56]	; 0x38
      fmt = " %-6d%-20s%-5d %6d.%03d %6.02f %c\r\n";
 8002c3a:	ea19 0a23 	ands.w	sl, r9, r3, asr #32
 8002c3e:	bf38      	it	cc
 8002c40:	46aa      	movcc	sl, r5
    LC_PRINT(fmt, node_info.c_idx,
 8002c42:	f004 fd8f 	bl	8007764 <ai_layer_type_name>
 8002c46:	2125      	movs	r1, #37	; 0x25
 8002c48:	9007      	str	r0, [sp, #28]
 8002c4a:	f8bd 0038 	ldrh.w	r0, [sp, #56]	; 0x38
 8002c4e:	9104      	str	r1, [sp, #16]
 8002c50:	6a21      	ldr	r1, [r4, #32]
 8002c52:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8002c56:	eb01 1100 	add.w	r1, r1, r0, lsl #4
 8002c5a:	9306      	str	r3, [sp, #24]
 8002c5c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002c60:	f7fd fccc 	bl	80005fc <__aeabi_ul2d>
 8002c64:	ec41 0b17 	vmov	d7, r0, r1
 8002c68:	ee27 8b09 	vmul.f64	d8, d7, d9
 8002c6c:	e9d4 0106 	ldrd	r0, r1, [r4, #24]
 8002c70:	f7fd fcc4 	bl	80005fc <__aeabi_ul2d>
 8002c74:	f44f 7c7a 	mov.w	ip, #1000	; 0x3e8
 8002c78:	ec41 0b17 	vmov	d7, r0, r1
 8002c7c:	ee88 7b07 	vdiv.f64	d7, d8, d7
 8002c80:	990d      	ldr	r1, [sp, #52]	; 0x34
 8002c82:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8002c84:	9101      	str	r1, [sp, #4]
 8002c86:	990c      	ldr	r1, [sp, #48]	; 0x30
 8002c88:	fb0c 1100 	mla	r1, ip, r0, r1
 8002c8c:	4650      	mov	r0, sl
 8002c8e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8002c92:	9100      	str	r1, [sp, #0]
 8002c94:	4659      	mov	r1, fp
 8002c96:	ed8d 7b02 	vstr	d7, [sp, #8]
 8002c9a:	f000 fdef 	bl	800387c <lc_print>
    node_info.c_idx++;
 8002c9e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8002ca2:	3301      	adds	r3, #1
 8002ca4:	b29b      	uxth	r3, r3
 8002ca6:	e780      	b.n	8002baa <aiObserverDone+0xc2>
}
 8002ca8:	b020      	add	sp, #128	; 0x80
 8002caa:	ecbd 8b04 	vpop	{d8-d9}
 8002cae:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}
 8002cb2:	bf00      	nop
 8002cb4:	f3af 8000 	nop.w
 8002cb8:	00000000 	.word	0x00000000
 8002cbc:	40590000 	.word	0x40590000
 8002cc0:	20002068 	.word	0x20002068
 8002cc4:	08002919 	.word	0x08002919
 8002cc8:	080117d6 	.word	0x080117d6
 8002ccc:	080117f4 	.word	0x080117f4
 8002cd0:	0801182f 	.word	0x0801182f
 8002cd4:	08011888 	.word	0x08011888
 8002cd8:	080118c9 	.word	0x080118c9
 8002cdc:	080118fe 	.word	0x080118fe

08002ce0 <aiSystemPerformanceInit>:
 * Exported/Public functions
 * -----------------------------------------------------------------------------
 */

int aiSystemPerformanceInit(void)
{
 8002ce0:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
  LC_PRINT("\r\n#\r\n");
 8002ce4:	484e      	ldr	r0, [pc, #312]	; (8002e20 <aiSystemPerformanceInit+0x140>)
{
 8002ce6:	b086      	sub	sp, #24
  LC_PRINT("\r\n#\r\n");
 8002ce8:	f000 fdc8 	bl	800387c <lc_print>
  LC_PRINT("# %s %d.%d\r\n", _APP_NAME_ , _APP_VERSION_MAJOR_,
 8002cec:	494d      	ldr	r1, [pc, #308]	; (8002e24 <aiSystemPerformanceInit+0x144>)
 8002cee:	2300      	movs	r3, #0
 8002cf0:	2207      	movs	r2, #7
 8002cf2:	f101 0022 	add.w	r0, r1, #34	; 0x22
  port_dwt_reset();
 8002cf6:	4d4c      	ldr	r5, [pc, #304]	; (8002e28 <aiSystemPerformanceInit+0x148>)
 8002cf8:	2400      	movs	r4, #0
 8002cfa:	f000 fdbf 	bl	800387c <lc_print>
      _APP_VERSION_MINOR_ );
  LC_PRINT("#\r\n");
 8002cfe:	484b      	ldr	r0, [pc, #300]	; (8002e2c <aiSystemPerformanceInit+0x14c>)
 8002d00:	f000 fdbc 	bl	800387c <lc_print>
    net_exec_ctx[idx].handle = AI_HANDLE_NULL;
 8002d04:	4e4a      	ldr	r6, [pc, #296]	; (8002e30 <aiSystemPerformanceInit+0x150>)

  systemSettingLog();
 8002d06:	f000 febb 	bl	8003a80 <systemSettingLog>
      LC_PRINT("\r\nFound network \"%s\"\r\n", nn_name);
 8002d0a:	f8df 9140 	ldr.w	r9, [pc, #320]	; 8002e4c <aiSystemPerformanceInit+0x16c>

  crcIpInit();
 8002d0e:	f000 ff31 	bl	8003b74 <port_hal_crc_ip_init_imp>
  port_dwt_init();
 8002d12:	f000 ff3f 	bl	8003b94 <port_dwt_init_imp>
  port_hal_delay(100);
 8002d16:	2064      	movs	r0, #100	; 0x64
  port_dwt_reset();
 8002d18:	606c      	str	r4, [r5, #4]
  LC_PRINT("Creating the network \"%s\"..\r\n", nn_name);
 8002d1a:	f109 0a17 	add.w	sl, r9, #23
  port_hal_delay(100);
 8002d1e:	f7fe fb53 	bl	80013c8 <HAL_Delay>
  st = port_dwt_get_cycles();
 8002d22:	6868      	ldr	r0, [r5, #4]
  dwtCyclesToTime(st/100, &t);
 8002d24:	2564      	movs	r5, #100	; 0x64
 8002d26:	aa02      	add	r2, sp, #8
 8002d28:	4621      	mov	r1, r4
  LC_PRINT("Initializing the network\r\n");
 8002d2a:	f109 0b48 	add.w	fp, r9, #72	; 0x48
 8002d2e:	fbb0 f0f5 	udiv	r0, r0, r5
 8002d32:	f000 fe2f 	bl	8003994 <dwtCyclesToTime>
  LC_PRINT(" Timestamp    : SysTick + DWT (delay(1)=%d.%03d ms)\r\n",
 8002d36:	9a05      	ldr	r2, [sp, #20]
 8002d38:	483e      	ldr	r0, [pc, #248]	; (8002e34 <aiSystemPerformanceInit+0x154>)
 8002d3a:	e9dd 1303 	ldrd	r1, r3, [sp, #12]
 8002d3e:	fb05 3101 	mla	r1, r5, r1, r3
    net_exec_ctx[idx].handle = AI_HANDLE_NULL;
 8002d42:	4635      	mov	r5, r6
 8002d44:	f000 fd9a 	bl	800387c <lc_print>
  dwtCyclesToTime(UINT32_MAX, &t);
 8002d48:	aa02      	add	r2, sp, #8
 8002d4a:	2100      	movs	r1, #0
 8002d4c:	f04f 30ff 	mov.w	r0, #4294967295
 8002d50:	f000 fe20 	bl	8003994 <dwtCyclesToTime>
  cyclesCount.dwt_max = t.s * 1000 + t.ms;
 8002d54:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8002d58:	9a03      	ldr	r2, [sp, #12]
 8002d5a:	9b04      	ldr	r3, [sp, #16]
 8002d5c:	fb01 3302 	mla	r3, r1, r2, r3
 8002d60:	4a35      	ldr	r2, [pc, #212]	; (8002e38 <aiSystemPerformanceInit+0x158>)
 8002d62:	6013      	str	r3, [r2, #0]
  port_dwt_init();
 8002d64:	f000 ff16 	bl	8003b94 <port_dwt_init_imp>
  aiPlatformVersion();
 8002d68:	f000 fb5c 	bl	8003424 <aiPlatformVersion>
  LC_PRINT("Discovering the network(s)...\r\n");
 8002d6c:	4833      	ldr	r0, [pc, #204]	; (8002e3c <aiSystemPerformanceInit+0x15c>)
    net_exec_ctx[idx].handle = AI_HANDLE_NULL;
 8002d6e:	f845 4b08 	str.w	r4, [r5], #8
  LC_PRINT("Discovering the network(s)...\r\n");
 8002d72:	f000 fd83 	bl	800387c <lc_print>
    nn_name = ai_mnetwork_find(NULL, idx);
 8002d76:	4621      	mov	r1, r4
 8002d78:	2000      	movs	r0, #0
 8002d7a:	f000 ff51 	bl	8003c20 <ai_mnetwork_find>
    if (nn_name) {
 8002d7e:	4680      	mov	r8, r0
 8002d80:	b190      	cbz	r0, 8002da8 <aiSystemPerformanceInit+0xc8>
      LC_PRINT("\r\nFound network \"%s\"\r\n", nn_name);
 8002d82:	4601      	mov	r1, r0
 8002d84:	4648      	mov	r0, r9
 8002d86:	f000 fd79 	bl	800387c <lc_print>
  LC_PRINT("Creating the network \"%s\"..\r\n", nn_name);
 8002d8a:	4641      	mov	r1, r8
 8002d8c:	4650      	mov	r0, sl
 8002d8e:	f000 fd75 	bl	800387c <lc_print>
  err = ai_mnetwork_create(nn_name, &ctx->handle, NULL);
 8002d92:	2200      	movs	r2, #0
 8002d94:	f1a5 0108 	sub.w	r1, r5, #8
 8002d98:	4640      	mov	r0, r8
 8002d9a:	f000 ff4f 	bl	8003c3c <ai_mnetwork_create>
  if (err.type) {
 8002d9e:	b2c3      	uxtb	r3, r0
 8002da0:	b14b      	cbz	r3, 8002db6 <aiSystemPerformanceInit+0xd6>
    aiLogErr(err, "ai_mnetwork_create");
 8002da2:	4927      	ldr	r1, [pc, #156]	; (8002e40 <aiSystemPerformanceInit+0x160>)
 8002da4:	f000 fb54 	bl	8003450 <aiLogErr>
  cyclesCounterInit();

  aiInit();

  srand(3); /* deterministic outcome */
 8002da8:	2003      	movs	r0, #3
 8002daa:	f00b fec3 	bl	800eb34 <srand>

  return 0;
}
 8002dae:	2000      	movs	r0, #0
 8002db0:	b006      	add	sp, #24
 8002db2:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}
  LC_PRINT("Initializing the network\r\n");
 8002db6:	4658      	mov	r0, fp
 8002db8:	46a8      	mov	r8, r5
 8002dba:	f000 fd5f 	bl	800387c <lc_print>
  if (!ai_mnetwork_get_report(ctx->handle, &ctx->report)) {
 8002dbe:	4629      	mov	r1, r5
 8002dc0:	f855 0c08 	ldr.w	r0, [r5, #-8]
 8002dc4:	f000 ff7a 	bl	8003cbc <ai_mnetwork_get_report>
 8002dc8:	4603      	mov	r3, r0
 8002dca:	b938      	cbnz	r0, 8002ddc <aiSystemPerformanceInit+0xfc>
    err = ai_mnetwork_get_error(ctx->handle);
 8002dcc:	2290      	movs	r2, #144	; 0x90
 8002dce:	9301      	str	r3, [sp, #4]
 8002dd0:	4354      	muls	r4, r2
 8002dd2:	5930      	ldr	r0, [r6, r4]
 8002dd4:	f000 ff7d 	bl	8003cd2 <ai_mnetwork_get_error>
    aiLogErr(err, "ai_mnetwork_get_info");
 8002dd8:	491a      	ldr	r1, [pc, #104]	; (8002e44 <aiSystemPerformanceInit+0x164>)
 8002dda:	e00b      	b.n	8002df4 <aiSystemPerformanceInit+0x114>
  if (!ai_mnetwork_init(ctx->handle)) {
 8002ddc:	f855 0c08 	ldr.w	r0, [r5, #-8]
 8002de0:	f000 ff84 	bl	8003cec <ai_mnetwork_init>
 8002de4:	b970      	cbnz	r0, 8002e04 <aiSystemPerformanceInit+0x124>
    err = ai_mnetwork_get_error(ctx->handle);
 8002de6:	2290      	movs	r2, #144	; 0x90
 8002de8:	9001      	str	r0, [sp, #4]
 8002dea:	4354      	muls	r4, r2
 8002dec:	5930      	ldr	r0, [r6, r4]
 8002dee:	f000 ff70 	bl	8003cd2 <ai_mnetwork_get_error>
    aiLogErr(err, "ai_mnetwork_init");
 8002df2:	4915      	ldr	r1, [pc, #84]	; (8002e48 <aiSystemPerformanceInit+0x168>)
    aiLogErr(err, "ai_mnetwork_get_info");
 8002df4:	f000 fb2c 	bl	8003450 <aiLogErr>
    ai_mnetwork_destroy(ctx->handle);
 8002df8:	5930      	ldr	r0, [r6, r4]
 8002dfa:	f000 ff49 	bl	8003c90 <ai_mnetwork_destroy>
    ctx->handle = AI_HANDLE_NULL;
 8002dfe:	9b01      	ldr	r3, [sp, #4]
 8002e00:	5133      	str	r3, [r6, r4]
  } while (nn_name);
 8002e02:	e7d1      	b.n	8002da8 <aiSystemPerformanceInit+0xc8>
  if (ai_mnetwork_get_report(ctx->handle, &ctx->report)) {
 8002e04:	4629      	mov	r1, r5
 8002e06:	f855 0c08 	ldr.w	r0, [r5, #-8]
 8002e0a:	f000 ff57 	bl	8003cbc <ai_mnetwork_get_report>
 8002e0e:	3590      	adds	r5, #144	; 0x90
 8002e10:	4603      	mov	r3, r0
 8002e12:	2800      	cmp	r0, #0
 8002e14:	d0da      	beq.n	8002dcc <aiSystemPerformanceInit+0xec>
    aiPrintNetworkInfo(&ctx->report);
 8002e16:	4640      	mov	r0, r8
    idx++;
 8002e18:	3401      	adds	r4, #1
    aiPrintNetworkInfo(&ctx->report);
 8002e1a:	f000 fc31 	bl	8003680 <aiPrintNetworkInfo>
  } while (nn_name);
 8002e1e:	e7aa      	b.n	8002d76 <aiSystemPerformanceInit+0x96>
 8002e20:	08011913 	.word	0x08011913
 8002e24:	08011919 	.word	0x08011919
 8002e28:	e0001000 	.word	0xe0001000
 8002e2c:	08011948 	.word	0x08011948
 8002e30:	20001fd0 	.word	0x20001fd0
 8002e34:	0801194c 	.word	0x0801194c
 8002e38:	20002090 	.word	0x20002090
 8002e3c:	08011982 	.word	0x08011982
 8002e40:	080119d7 	.word	0x080119d7
 8002e44:	08011a05 	.word	0x08011a05
 8002e48:	08011a1a 	.word	0x08011a1a
 8002e4c:	080119a2 	.word	0x080119a2

08002e50 <aiSystemPerformanceProcess>:

int aiSystemPerformanceProcess(void)
{
 8002e50:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
 8002e54:	ed2d 8b02 	vpush	{d8}
        const float v = 2.0f * (ai_float) rand() / (ai_float) RAND_MAX - 1.0f;
 8002e58:	ed9f 8a54 	vldr	s16, [pc, #336]	; 8002fac <aiSystemPerformanceProcess+0x15c>
{
 8002e5c:	b09c      	sub	sp, #112	; 0x70
  if (net_exec_ctx[idx].handle == AI_HANDLE_NULL) {
 8002e5e:	4c54      	ldr	r4, [pc, #336]	; (8002fb0 <aiSystemPerformanceProcess+0x160>)
 8002e60:	6823      	ldr	r3, [r4, #0]
 8002e62:	b94b      	cbnz	r3, 8002e78 <aiSystemPerformanceProcess+0x28>
    LC_PRINT("E: network handle is NULL\r\n");
 8002e64:	4853      	ldr	r0, [pc, #332]	; (8002fb4 <aiSystemPerformanceProcess+0x164>)
 8002e66:	f000 fd09 	bl	800387c <lc_print>

  do {
    r = aiTestPerformance(idx);
    idx = (idx+1) % AI_MNETWORK_NUMBER;

    if (!r) {
 8002e6a:	f04f 30ff 	mov.w	r0, #4294967295
      }
    }
  } while (r==0);

  return r;
}
 8002e6e:	b01c      	add	sp, #112	; 0x70
 8002e70:	ecbd 8b02 	vpop	{d8}
 8002e74:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}
  __ASM volatile ("MRS %0, control" : "=r" (result) );
 8002e78:	f3ef 8014 	mrs	r0, CONTROL
  __ASM volatile ("MRS %0, msp" : "=r" (result) );
 8002e7c:	f3ef 8108 	mrs	r1, MSP
  if (profiling_mode)
 8002e80:	f8df 915c 	ldr.w	r9, [pc, #348]	; 8002fe0 <aiSystemPerformanceProcess+0x190>
  MON_STACK_INIT();
 8002e84:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8002e88:	f000 fd58 	bl	800393c <stackMonInit>
  if (profiling_mode)
 8002e8c:	f899 3000 	ldrb.w	r3, [r9]
 8002e90:	b30b      	cbz	r3, 8002ed6 <aiSystemPerformanceProcess+0x86>
    niter = _APP_ITER_ * profiling_factor;
 8002e92:	4b49      	ldr	r3, [pc, #292]	; (8002fb8 <aiSystemPerformanceProcess+0x168>)
 8002e94:	681b      	ldr	r3, [r3, #0]
 8002e96:	ea4f 1803 	mov.w	r8, r3, lsl #4
  LC_PRINT("\r\nRunning PerfTest on \"%s\" with random inputs (%d iterations)...\r\n",
 8002e9a:	4642      	mov	r2, r8
 8002e9c:	68a1      	ldr	r1, [r4, #8]
 8002e9e:	4847      	ldr	r0, [pc, #284]	; (8002fbc <aiSystemPerformanceProcess+0x16c>)
 8002ea0:	f000 fcec 	bl	800387c <lc_print>
 8002ea4:	f3ef 8308 	mrs	r3, MSP
  MON_STACK_CHECK0();
 8002ea8:	4d45      	ldr	r5, [pc, #276]	; (8002fc0 <aiSystemPerformanceProcess+0x170>)
 8002eaa:	69aa      	ldr	r2, [r5, #24]
 8002eac:	4293      	cmp	r3, r2
 8002eae:	d004      	beq.n	8002eba <aiSystemPerformanceProcess+0x6a>
 8002eb0:	f3ef 8108 	mrs	r1, MSP
 8002eb4:	4843      	ldr	r0, [pc, #268]	; (8002fc4 <aiSystemPerformanceProcess+0x174>)
 8002eb6:	f000 fce1 	bl	800387c <lc_print>
  MON_STACK_MARK();
 8002eba:	792b      	ldrb	r3, [r5, #4]
 8002ebc:	b973      	cbnz	r3, 8002edc <aiSystemPerformanceProcess+0x8c>
  if ((net_exec_ctx[idx].report.n_inputs > AI_MNETWORK_IN_NUM) ||
 8002ebe:	f8b4 e040 	ldrh.w	lr, [r4, #64]	; 0x40
 8002ec2:	f1be 0f01 	cmp.w	lr, #1
 8002ec6:	d915      	bls.n	8002ef4 <aiSystemPerformanceProcess+0xa4>
    LC_PRINT("E: AI_MNETWORK_IN/OUT_NUM definition are incoherent\r\n");
 8002ec8:	483f      	ldr	r0, [pc, #252]	; (8002fc8 <aiSystemPerformanceProcess+0x178>)
 8002eca:	f000 fcd7 	bl	800387c <lc_print>
    port_hal_delay(100);
 8002ece:	2064      	movs	r0, #100	; 0x64
 8002ed0:	f7fe fa7a 	bl	80013c8 <HAL_Delay>
 8002ed4:	e7c9      	b.n	8002e6a <aiSystemPerformanceProcess+0x1a>
    niter = _APP_ITER_;
 8002ed6:	f04f 0810 	mov.w	r8, #16
 8002eda:	e7de      	b.n	8002e9a <aiSystemPerformanceProcess+0x4a>
  MON_STACK_MARK();
 8002edc:	69eb      	ldr	r3, [r5, #28]
 8002ede:	f04f 31de 	mov.w	r1, #3739147998	; 0xdededede
 8002ee2:	3303      	adds	r3, #3
 8002ee4:	f023 0303 	bic.w	r3, r3, #3
 8002ee8:	69aa      	ldr	r2, [r5, #24]
 8002eea:	4293      	cmp	r3, r2
 8002eec:	d2e7      	bcs.n	8002ebe <aiSystemPerformanceProcess+0x6e>
 8002eee:	f843 1b04 	str.w	r1, [r3], #4
 8002ef2:	e7f9      	b.n	8002ee8 <aiSystemPerformanceProcess+0x98>
      (net_exec_ctx[idx].report.n_outputs > AI_MNETWORK_OUT_NUM))
 8002ef4:	f8b4 c042 	ldrh.w	ip, [r4, #66]	; 0x42
  if ((net_exec_ctx[idx].report.n_inputs > AI_MNETWORK_IN_NUM) ||
 8002ef8:	f1bc 0f01 	cmp.w	ip, #1
 8002efc:	d8e4      	bhi.n	8002ec8 <aiSystemPerformanceProcess+0x78>
  for (int i = 0; i < net_exec_ctx[idx].report.n_inputs; i++) {
 8002efe:	2300      	movs	r3, #0
      ai_input[i].data = AI_HANDLE_PTR(data_ins[i]);
 8002f00:	f8df a0e0 	ldr.w	sl, [pc, #224]	; 8002fe4 <aiSystemPerformanceProcess+0x194>
 8002f04:	e010      	b.n	8002f28 <aiSystemPerformanceProcess+0xd8>
    ai_input[i] = net_exec_ctx[idx].report.inputs[i];
 8002f06:	f8d4 b044 	ldr.w	fp, [r4, #68]	; 0x44
 8002f0a:	ad0e      	add	r5, sp, #56	; 0x38
 8002f0c:	465e      	mov	r6, fp
 8002f0e:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8002f10:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002f12:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
    if (net_exec_ctx[idx].report.inputs[i].data)
 8002f16:	f8db 3004 	ldr.w	r3, [fp, #4]
    ai_input[i] = net_exec_ctx[idx].report.inputs[i];
 8002f1a:	e885 0007 	stmia.w	r5, {r0, r1, r2}
    if (net_exec_ctx[idx].report.inputs[i].data)
 8002f1e:	b90b      	cbnz	r3, 8002f24 <aiSystemPerformanceProcess+0xd4>
      ai_input[i].data = AI_HANDLE_PTR(data_ins[i]);
 8002f20:	f8da 3000 	ldr.w	r3, [sl]
 8002f24:	930f      	str	r3, [sp, #60]	; 0x3c
    niter = _APP_ITER_;
 8002f26:	2301      	movs	r3, #1
  for (int i = 0; i < net_exec_ctx[idx].report.n_inputs; i++) {
 8002f28:	459e      	cmp	lr, r3
 8002f2a:	dcec      	bgt.n	8002f06 <aiSystemPerformanceProcess+0xb6>
  for (int i = 0; i < net_exec_ctx[idx].report.n_outputs; i++) {
 8002f2c:	2300      	movs	r3, #0
      ai_output[i].data = AI_HANDLE_PTR(data_outs[i]);
 8002f2e:	f8df e0b8 	ldr.w	lr, [pc, #184]	; 8002fe8 <aiSystemPerformanceProcess+0x198>
  for (int i = 0; i < net_exec_ctx[idx].report.n_outputs; i++) {
 8002f32:	459c      	cmp	ip, r3
 8002f34:	dc28      	bgt.n	8002f88 <aiSystemPerformanceProcess+0x138>
  if (profiling_mode) {
 8002f36:	f899 3000 	ldrb.w	r3, [r9]
 8002f3a:	b14b      	cbz	r3, 8002f50 <aiSystemPerformanceProcess+0x100>
    LC_PRINT("Profiling mode (%d)...\r\n", profiling_factor);
 8002f3c:	4b1e      	ldr	r3, [pc, #120]	; (8002fb8 <aiSystemPerformanceProcess+0x168>)
 8002f3e:	4823      	ldr	r0, [pc, #140]	; (8002fcc <aiSystemPerformanceProcess+0x17c>)
 8002f40:	6819      	ldr	r1, [r3, #0]
 8002f42:	f000 fc9b 	bl	800387c <lc_print>
    fflush(stdout);
 8002f46:	4b22      	ldr	r3, [pc, #136]	; (8002fd0 <aiSystemPerformanceProcess+0x180>)
 8002f48:	681b      	ldr	r3, [r3, #0]
 8002f4a:	6898      	ldr	r0, [r3, #8]
 8002f4c:	f00c fb48 	bl	800f5e0 <fflush>
  if (observer_mode) {
 8002f50:	4b20      	ldr	r3, [pc, #128]	; (8002fd4 <aiSystemPerformanceProcess+0x184>)
 8002f52:	781b      	ldrb	r3, [r3, #0]
 8002f54:	b153      	cbz	r3, 8002f6c <aiSystemPerformanceProcess+0x11c>
    MON_ALLOC_ENABLE();
 8002f56:	4d20      	ldr	r5, [pc, #128]	; (8002fd8 <aiSystemPerformanceProcess+0x188>)
    MON_ALLOC_RESET();
 8002f58:	f7ff fca6 	bl	80028a8 <_mon_alloc_reset>
    aiObserverInit(&net_exec_ctx[idx]);
 8002f5c:	4814      	ldr	r0, [pc, #80]	; (8002fb0 <aiSystemPerformanceProcess+0x160>)
    MON_ALLOC_ENABLE();
 8002f5e:	682b      	ldr	r3, [r5, #0]
 8002f60:	f043 0301 	orr.w	r3, r3, #1
 8002f64:	602b      	str	r3, [r5, #0]
    aiObserverInit(&net_exec_ctx[idx]);
 8002f66:	f7ff fd7f 	bl	8002a68 <aiObserverInit>
    observer_heap_sz = MON_ALLOC_MAX_USED();
 8002f6a:	696b      	ldr	r3, [r5, #20]
  tcumul = 0ULL;
 8002f6c:	2500      	movs	r5, #0
  int observer_heap_sz = 0UL;
 8002f6e:	9306      	str	r3, [sp, #24]
  MON_ALLOC_RESET();
 8002f70:	f7ff fc9a 	bl	80028a8 <_mon_alloc_reset>
  tcumul = 0ULL;
 8002f74:	46aa      	mov	sl, r5
  for (iter = 0; iter < niter; iter++) {
 8002f76:	462e      	mov	r6, r5
 8002f78:	4546      	cmp	r6, r8
 8002f7a:	da74      	bge.n	8003066 <aiSystemPerformanceProcess+0x216>
 8002f7c:	f10d 0b38 	add.w	fp, sp, #56	; 0x38
    for (int i = 0; i < net_exec_ctx[idx].report.n_inputs; i++) {
 8002f80:	2300      	movs	r3, #0
            in_data[j] = (ai_i8)(v * 127);
 8002f82:	eddf 8a16 	vldr	s17, [pc, #88]	; 8002fdc <aiSystemPerformanceProcess+0x18c>
 8002f86:	e04b      	b.n	8003020 <aiSystemPerformanceProcess+0x1d0>
    ai_output[i] = net_exec_ctx[idx].report.outputs[i];
 8002f88:	f8d4 a048 	ldr.w	sl, [r4, #72]	; 0x48
 8002f8c:	ad15      	add	r5, sp, #84	; 0x54
 8002f8e:	4656      	mov	r6, sl
 8002f90:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8002f92:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002f94:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
    if (net_exec_ctx[idx].report.outputs[i].data)
 8002f98:	f8da 3004 	ldr.w	r3, [sl, #4]
    ai_output[i] = net_exec_ctx[idx].report.outputs[i];
 8002f9c:	e885 0007 	stmia.w	r5, {r0, r1, r2}
    if (net_exec_ctx[idx].report.outputs[i].data)
 8002fa0:	b90b      	cbnz	r3, 8002fa6 <aiSystemPerformanceProcess+0x156>
      ai_output[i].data = AI_HANDLE_PTR(data_outs[i]);
 8002fa2:	f8de 3000 	ldr.w	r3, [lr]
 8002fa6:	9316      	str	r3, [sp, #88]	; 0x58
  for (int i = 0; i < net_exec_ctx[idx].report.n_inputs; i++) {
 8002fa8:	2301      	movs	r3, #1
 8002faa:	e7c2      	b.n	8002f32 <aiSystemPerformanceProcess+0xe2>
 8002fac:	30000000 	.word	0x30000000
 8002fb0:	20001fd0 	.word	0x20001fd0
 8002fb4:	08011a2b 	.word	0x08011a2b
 8002fb8:	20000010 	.word	0x20000010
 8002fbc:	08011a47 	.word	0x08011a47
 8002fc0:	200020b8 	.word	0x200020b8
 8002fc4:	08011a8a 	.word	0x08011a8a
 8002fc8:	08011ace 	.word	0x08011ace
 8002fcc:	08011b04 	.word	0x08011b04
 8002fd0:	20001d84 	.word	0x20001d84
 8002fd4:	2000000c 	.word	0x2000000c
 8002fd8:	2000209c 	.word	0x2000209c
 8002fdc:	42fe0000 	.word	0x42fe0000
 8002fe0:	20002060 	.word	0x20002060
 8002fe4:	2000001c 	.word	0x2000001c
 8002fe8:	20000020 	.word	0x20000020
      ai_i8 *in_data = (ai_i8 *)ai_input[i].data;
 8002fec:	e9db 1200 	ldrd	r1, r2, [fp]
      for (ai_size j = 0; j < AI_BUFFER_SIZE(&ai_input[i]); ++j) {
 8002ff0:	f04f 0900 	mov.w	r9, #0
        if  (AI_BUFFER_FMT_GET_TYPE(fmt) == AI_BUFFER_FMT_TYPE_FLOAT) {
 8002ff4:	f3c1 4043 	ubfx	r0, r1, #17, #4
          if (AI_BUFFER_FMT_GET_BITS(fmt) >= 8) {
 8002ff8:	f3c1 11d1 	ubfx	r1, r1, #7, #18
 8002ffc:	f001 0178 	and.w	r1, r1, #120	; 0x78
        if  (AI_BUFFER_FMT_GET_TYPE(fmt) == AI_BUFFER_FMT_TYPE_FLOAT) {
 8003000:	9005      	str	r0, [sp, #20]
          if (AI_BUFFER_FMT_GET_BITS(fmt) >= 8) {
 8003002:	9107      	str	r1, [sp, #28]
      for (ai_size j = 0; j < AI_BUFFER_SIZE(&ai_input[i]); ++j) {
 8003004:	2101      	movs	r1, #1
 8003006:	4658      	mov	r0, fp
 8003008:	e9cd 3208 	strd	r3, r2, [sp, #32]
 800300c:	f001 fc84 	bl	8004918 <ai_buffer_get_size>
 8003010:	4581      	cmp	r9, r0
 8003012:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8003016:	f0c0 8106 	bcc.w	8003226 <aiSystemPerformanceProcess+0x3d6>
    for (int i = 0; i < net_exec_ctx[idx].report.n_inputs; i++) {
 800301a:	3301      	adds	r3, #1
 800301c:	f10b 0b1c 	add.w	fp, fp, #28
 8003020:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 8003024:	4293      	cmp	r3, r2
 8003026:	dbe1      	blt.n	8002fec <aiSystemPerformanceProcess+0x19c>
    MON_ALLOC_ENABLE();
 8003028:	f8df 930c 	ldr.w	r9, [pc, #780]	; 8003338 <aiSystemPerformanceProcess+0x4e8>
 800302c:	f8d9 3000 	ldr.w	r3, [r9]
 8003030:	f043 0301 	orr.w	r3, r3, #1
 8003034:	f8c9 3000 	str.w	r3, [r9]
  cyclesCount.tick_start = port_hal_get_tick();
 8003038:	f7fe f9c0 	bl	80013bc <HAL_GetTick>
 800303c:	4bb1      	ldr	r3, [pc, #708]	; (8003304 <aiSystemPerformanceProcess+0x4b4>)
  port_dwt_reset();
 800303e:	2100      	movs	r1, #0
 8003040:	4ab1      	ldr	r2, [pc, #708]	; (8003308 <aiSystemPerformanceProcess+0x4b8>)
  cyclesCount.tick_start = port_hal_get_tick();
 8003042:	6098      	str	r0, [r3, #8]
  port_dwt_reset();
 8003044:	6051      	str	r1, [r2, #4]
    batch = ai_mnetwork_run(net_exec_ctx[idx].handle, ai_input, ai_output);
 8003046:	a90e      	add	r1, sp, #56	; 0x38
  cyclesCount.dwt_start = port_dwt_get_cycles();
 8003048:	6852      	ldr	r2, [r2, #4]
 800304a:	6820      	ldr	r0, [r4, #0]
 800304c:	605a      	str	r2, [r3, #4]
 800304e:	aa15      	add	r2, sp, #84	; 0x54
 8003050:	f000 fe6b 	bl	8003d2a <ai_mnetwork_run>
    if (batch != 1) {
 8003054:	2801      	cmp	r0, #1
 8003056:	f000 8116 	beq.w	8003286 <aiSystemPerformanceProcess+0x436>
      aiLogErr(ai_mnetwork_get_error(net_exec_ctx[idx].handle),
 800305a:	6820      	ldr	r0, [r4, #0]
 800305c:	f000 fe39 	bl	8003cd2 <ai_mnetwork_get_error>
 8003060:	49aa      	ldr	r1, [pc, #680]	; (800330c <aiSystemPerformanceProcess+0x4bc>)
 8003062:	f000 f9f5 	bl	8003450 <aiLogErr>
  LC_PRINT("\r\n");
 8003066:	48aa      	ldr	r0, [pc, #680]	; (8003310 <aiSystemPerformanceProcess+0x4c0>)
 8003068:	f000 fc08 	bl	800387c <lc_print>
  MON_STACK_EVALUATE();
 800306c:	4aa9      	ldr	r2, [pc, #676]	; (8003314 <aiSystemPerformanceProcess+0x4c4>)
 800306e:	2000      	movs	r0, #0
 8003070:	f892 c004 	ldrb.w	ip, [r2, #4]
 8003074:	6090      	str	r0, [r2, #8]
 8003076:	f1bc 0f00 	cmp.w	ip, #0
 800307a:	d023      	beq.n	80030c4 <aiSystemPerformanceProcess+0x274>
 800307c:	68d3      	ldr	r3, [r2, #12]
 800307e:	6951      	ldr	r1, [r2, #20]
 8003080:	eba1 0903 	sub.w	r9, r1, r3
 8003084:	69d3      	ldr	r3, [r2, #28]
 8003086:	3303      	adds	r3, #3
 8003088:	f023 0303 	bic.w	r3, r3, #3
 800308c:	f103 0e20 	add.w	lr, r3, #32
 8003090:	f853 8b04 	ldr.w	r8, [r3], #4
 8003094:	f1b8 3fde 	cmp.w	r8, #3739147998	; 0xdededede
 8003098:	bf18      	it	ne
 800309a:	4660      	movne	r0, ip
 800309c:	4573      	cmp	r3, lr
 800309e:	d1f7      	bne.n	8003090 <aiSystemPerformanceProcess+0x240>
 80030a0:	2800      	cmp	r0, #0
 80030a2:	f040 8114 	bne.w	80032ce <aiSystemPerformanceProcess+0x47e>
 80030a6:	2020      	movs	r0, #32
 80030a8:	f8d2 e018 	ldr.w	lr, [r2, #24]
 80030ac:	6090      	str	r0, [r2, #8]
 80030ae:	6819      	ldr	r1, [r3, #0]
 80030b0:	6890      	ldr	r0, [r2, #8]
 80030b2:	f1b1 3fde 	cmp.w	r1, #3739147998	; 0xdededede
 80030b6:	d102      	bne.n	80030be <aiSystemPerformanceProcess+0x26e>
 80030b8:	4573      	cmp	r3, lr
 80030ba:	f0c0 8104 	bcc.w	80032c6 <aiSystemPerformanceProcess+0x476>
 80030be:	eba9 0100 	sub.w	r1, r9, r0
 80030c2:	6091      	str	r1, [r2, #8]
  LC_PRINT("\r\n");
 80030c4:	4892      	ldr	r0, [pc, #584]	; (8003310 <aiSystemPerformanceProcess+0x4c0>)
 80030c6:	f000 fbd9 	bl	800387c <lc_print>
  tcumul -= u_observer_ctx.u_dur_t;
 80030ca:	4a93      	ldr	r2, [pc, #588]	; (8003318 <aiSystemPerformanceProcess+0x4c8>)
  tcumul /= (uint64_t)iter;
 80030cc:	17f3      	asrs	r3, r6, #31
  tcumul -= u_observer_ctx.u_dur_t;
 80030ce:	e9d2 0104 	ldrd	r0, r1, [r2, #16]
  tcumul /= (uint64_t)iter;
 80030d2:	4632      	mov	r2, r6
  tcumul -= u_observer_ctx.u_dur_t;
 80030d4:	1a28      	subs	r0, r5, r0
 80030d6:	eb6a 0101 	sbc.w	r1, sl, r1
  tcumul /= (uint64_t)iter;
 80030da:	f7fd fac5 	bl	8000668 <__aeabi_uldivmod>
  dwtCyclesToTime(tcumul, &t);
 80030de:	aa0a      	add	r2, sp, #40	; 0x28
  tcumul /= (uint64_t)iter;
 80030e0:	4688      	mov	r8, r1
 80030e2:	4681      	mov	r9, r0
  dwtCyclesToTime(tcumul, &t);
 80030e4:	f000 fc56 	bl	8003994 <dwtCyclesToTime>
  LC_PRINT("Results for \"%s\", %d inferences @%dMHz/%dMHz (complexity: %" PRIu64 " MACC)\r\n",
 80030e8:	68a1      	ldr	r1, [r4, #8]
 80030ea:	9105      	str	r1, [sp, #20]
 80030ec:	f7fe fdf4 	bl	8001cd8 <HAL_RCC_GetHCLKFreq>
 80030f0:	4683      	mov	fp, r0
 80030f2:	f7fe fdf1 	bl	8001cd8 <HAL_RCC_GetHCLKFreq>
 80030f6:	4b89      	ldr	r3, [pc, #548]	; (800331c <aiSystemPerformanceProcess+0x4cc>)
 80030f8:	4632      	mov	r2, r6
 80030fa:	9905      	ldr	r1, [sp, #20]
  LC_PRINT(" CPU Workload : %d%c (duty cycle = 1s)\r\n", (int)((tcumul * 100) / t.fcpu), '%');
 80030fc:	2664      	movs	r6, #100	; 0x64
  LC_PRINT("Results for \"%s\", %d inferences @%dMHz/%dMHz (complexity: %" PRIu64 " MACC)\r\n",
 80030fe:	fbb0 f0f3 	udiv	r0, r0, r3
 8003102:	ed94 7b0e 	vldr	d7, [r4, #56]	; 0x38
 8003106:	fbbb f3f3 	udiv	r3, fp, r3
 800310a:	ed8d 7b02 	vstr	d7, [sp, #8]
 800310e:	9000      	str	r0, [sp, #0]
 8003110:	4883      	ldr	r0, [pc, #524]	; (8003320 <aiSystemPerformanceProcess+0x4d0>)
 8003112:	f000 fbb3 	bl	800387c <lc_print>
  LC_PRINT(" duration     : %d.%03d ms (average)\r\n", t.s * 1000 + t.ms, t.us);
 8003116:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003118:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800311a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800311e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8003120:	fb00 3101 	mla	r1, r0, r1, r3
 8003124:	487f      	ldr	r0, [pc, #508]	; (8003324 <aiSystemPerformanceProcess+0x4d4>)
 8003126:	f000 fba9 	bl	800387c <lc_print>
  LC_PRINT(" CPU cycles   : %" PRIu64 " (average)\r\n", tcumul);
 800312a:	464a      	mov	r2, r9
  LC_PRINT(" CPU Workload : %d%c (duty cycle = 1s)\r\n", (int)((tcumul * 100) / t.fcpu), '%');
 800312c:	fba9 9506 	umull	r9, r5, r9, r6
  LC_PRINT(" CPU cycles   : %" PRIu64 " (average)\r\n", tcumul);
 8003130:	4643      	mov	r3, r8
 8003132:	487d      	ldr	r0, [pc, #500]	; (8003328 <aiSystemPerformanceProcess+0x4d8>)
  LC_PRINT(" CPU Workload : %d%c (duty cycle = 1s)\r\n", (int)((tcumul * 100) / t.fcpu), '%');
 8003134:	fb06 5508 	mla	r5, r6, r8, r5
  LC_PRINT(" CPU cycles   : %" PRIu64 " (average)\r\n", tcumul);
 8003138:	f000 fba0 	bl	800387c <lc_print>
  LC_PRINT(" CPU Workload : %d%c (duty cycle = 1s)\r\n", (int)((tcumul * 100) / t.fcpu), '%');
 800313c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800313e:	2300      	movs	r3, #0
 8003140:	4629      	mov	r1, r5
 8003142:	4648      	mov	r0, r9
 8003144:	f7fd fa90 	bl	8000668 <__aeabi_uldivmod>
 8003148:	2225      	movs	r2, #37	; 0x25
 800314a:	4601      	mov	r1, r0
 800314c:	4877      	ldr	r0, [pc, #476]	; (800332c <aiSystemPerformanceProcess+0x4dc>)
 800314e:	f000 fb95 	bl	800387c <lc_print>
  cmacc = (ai_macc)((tcumul * 100)/ net_exec_ctx[idx].report.n_macc);
 8003152:	4629      	mov	r1, r5
 8003154:	4648      	mov	r0, r9
 8003156:	e9d4 230e 	ldrd	r2, r3, [r4, #56]	; 0x38
 800315a:	f7fd fa85 	bl	8000668 <__aeabi_uldivmod>
 800315e:	4605      	mov	r5, r0
  LC_PRINT(" cycles/MACC  : %d.%02d (average for all layers)\r\n",
 8003160:	2300      	movs	r3, #0
 8003162:	2264      	movs	r2, #100	; 0x64
 8003164:	f7fd fa80 	bl	8000668 <__aeabi_uldivmod>
 8003168:	fb06 5210 	mls	r2, r6, r0, r5
 800316c:	4601      	mov	r1, r0
 800316e:	4870      	ldr	r0, [pc, #448]	; (8003330 <aiSystemPerformanceProcess+0x4e0>)
 8003170:	f000 fb84 	bl	800387c <lc_print>
  MON_STACK_REPORT();
 8003174:	4b67      	ldr	r3, [pc, #412]	; (8003314 <aiSystemPerformanceProcess+0x4c4>)
 8003176:	791a      	ldrb	r2, [r3, #4]
 8003178:	2a00      	cmp	r2, #0
 800317a:	f000 80b3 	beq.w	80032e4 <aiSystemPerformanceProcess+0x494>
 800317e:	6899      	ldr	r1, [r3, #8]
 8003180:	486c      	ldr	r0, [pc, #432]	; (8003334 <aiSystemPerformanceProcess+0x4e4>)
 8003182:	f000 fb7b 	bl	800387c <lc_print>
  MON_ALLOC_REPORT();
 8003186:	496c      	ldr	r1, [pc, #432]	; (8003338 <aiSystemPerformanceProcess+0x4e8>)
 8003188:	486c      	ldr	r0, [pc, #432]	; (800333c <aiSystemPerformanceProcess+0x4ec>)
 800318a:	680b      	ldr	r3, [r1, #0]
 800318c:	f3c3 0341 	ubfx	r3, r3, #1, #2
 8003190:	9303      	str	r3, [sp, #12]
 8003192:	698b      	ldr	r3, [r1, #24]
 8003194:	9302      	str	r3, [sp, #8]
 8003196:	694b      	ldr	r3, [r1, #20]
 8003198:	9301      	str	r3, [sp, #4]
 800319a:	688b      	ldr	r3, [r1, #8]
 800319c:	9300      	str	r3, [sp, #0]
 800319e:	690b      	ldr	r3, [r1, #16]
 80031a0:	684a      	ldr	r2, [r1, #4]
 80031a2:	68c9      	ldr	r1, [r1, #12]
 80031a4:	f000 fb6a 	bl	800387c <lc_print>
  LC_PRINT(" observer res : %d bytes used from the heap (%d c-nodes)\r\n", observer_heap_sz,
 80031a8:	f8d4 2084 	ldr.w	r2, [r4, #132]	; 0x84
 80031ac:	9906      	ldr	r1, [sp, #24]
 80031ae:	4864      	ldr	r0, [pc, #400]	; (8003340 <aiSystemPerformanceProcess+0x4f0>)
 80031b0:	f000 fb64 	bl	800387c <lc_print>
  aiObserverDone(&net_exec_ctx[idx]);
 80031b4:	4863      	ldr	r0, [pc, #396]	; (8003344 <aiSystemPerformanceProcess+0x4f4>)
 80031b6:	f7ff fc97 	bl	8002ae8 <aiObserverDone>
      r = aiTestConsole();
 80031ba:	f7ff fc0f 	bl	80029dc <aiTestConsole>
      if (r == CONS_EVT_UNDEFINED) {
 80031be:	2864      	cmp	r0, #100	; 0x64
 80031c0:	f43f ae4d 	beq.w	8002e5e <aiSystemPerformanceProcess+0xe>
      } else if (r == CONS_EVT_HELP) {
 80031c4:	2803      	cmp	r0, #3
 80031c6:	d124      	bne.n	8003212 <aiSystemPerformanceProcess+0x3c2>
        LC_PRINT("\r\n");
 80031c8:	4851      	ldr	r0, [pc, #324]	; (8003310 <aiSystemPerformanceProcess+0x4c0>)
 80031ca:	f000 fb57 	bl	800387c <lc_print>
        LC_PRINT("Possible key for the interactive console:\r\n");
 80031ce:	485e      	ldr	r0, [pc, #376]	; (8003348 <aiSystemPerformanceProcess+0x4f8>)
 80031d0:	f000 fb54 	bl	800387c <lc_print>
        LC_PRINT("  [q,Q]      quit the application\r\n");
 80031d4:	485d      	ldr	r0, [pc, #372]	; (800334c <aiSystemPerformanceProcess+0x4fc>)
 80031d6:	f000 fb51 	bl	800387c <lc_print>
        LC_PRINT("  [r,R]      re-start (NN de-init and re-init)\r\n");
 80031da:	485d      	ldr	r0, [pc, #372]	; (8003350 <aiSystemPerformanceProcess+0x500>)
 80031dc:	f000 fb4e 	bl	800387c <lc_print>
        LC_PRINT("  [p,P]      pause\r\n");
 80031e0:	485c      	ldr	r0, [pc, #368]	; (8003354 <aiSystemPerformanceProcess+0x504>)
 80031e2:	f000 fb4b 	bl	800387c <lc_print>
        LC_PRINT("  [d,D]      hide detailed information ('r' to restore)\r\n");
 80031e6:	485c      	ldr	r0, [pc, #368]	; (8003358 <aiSystemPerformanceProcess+0x508>)
 80031e8:	f000 fb48 	bl	800387c <lc_print>
        LC_PRINT("  [h,H,?]    this information\r\n");
 80031ec:	485b      	ldr	r0, [pc, #364]	; (800335c <aiSystemPerformanceProcess+0x50c>)
 80031ee:	f000 fb45 	bl	800387c <lc_print>
        LC_PRINT("   xx        continue immediately\r\n");
 80031f2:	485b      	ldr	r0, [pc, #364]	; (8003360 <aiSystemPerformanceProcess+0x510>)
 80031f4:	f000 fb42 	bl	800387c <lc_print>
        LC_PRINT("\r\n");
 80031f8:	4845      	ldr	r0, [pc, #276]	; (8003310 <aiSystemPerformanceProcess+0x4c0>)
 80031fa:	f000 fb3f 	bl	800387c <lc_print>
        LC_PRINT("Press any key to continue..\r\n");
 80031fe:	4859      	ldr	r0, [pc, #356]	; (8003364 <aiSystemPerformanceProcess+0x514>)
 8003200:	f000 fb3c 	bl	800387c <lc_print>
        while ((r = aiTestConsole()) == CONS_EVT_TIMEOUT) {
 8003204:	f7ff fbea 	bl	80029dc <aiTestConsole>
 8003208:	2800      	cmp	r0, #0
 800320a:	d06f      	beq.n	80032ec <aiSystemPerformanceProcess+0x49c>
        if (r == CONS_EVT_UNDEFINED)
 800320c:	2864      	cmp	r0, #100	; 0x64
 800320e:	f43f ae26 	beq.w	8002e5e <aiSystemPerformanceProcess+0xe>
      if (r == CONS_EVT_PROF) {
 8003212:	2805      	cmp	r0, #5
 8003214:	d16f      	bne.n	80032f6 <aiSystemPerformanceProcess+0x4a6>
        profiling_mode = true;
 8003216:	4b54      	ldr	r3, [pc, #336]	; (8003368 <aiSystemPerformanceProcess+0x518>)
 8003218:	2201      	movs	r2, #1
 800321a:	701a      	strb	r2, [r3, #0]
        profiling_factor *= 2;
 800321c:	4a53      	ldr	r2, [pc, #332]	; (800336c <aiSystemPerformanceProcess+0x51c>)
 800321e:	6813      	ldr	r3, [r2, #0]
 8003220:	005b      	lsls	r3, r3, #1
 8003222:	6013      	str	r3, [r2, #0]
  } while (r==0);
 8003224:	e61b      	b.n	8002e5e <aiSystemPerformanceProcess+0xe>
 8003226:	e9cd 3208 	strd	r3, r2, [sp, #32]
        const float v = 2.0f * (ai_float) rand() / (ai_float) RAND_MAX - 1.0f;
 800322a:	f00b fcb1 	bl	800eb90 <rand>
 800322e:	ee07 0a90 	vmov	s15, r0
        if  (AI_BUFFER_FMT_GET_TYPE(fmt) == AI_BUFFER_FMT_TYPE_FLOAT) {
 8003232:	9b05      	ldr	r3, [sp, #20]
        const float v = 2.0f * (ai_float) rand() / (ai_float) RAND_MAX - 1.0f;
 8003234:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        if  (AI_BUFFER_FMT_GET_TYPE(fmt) == AI_BUFFER_FMT_TYPE_FLOAT) {
 8003238:	2b01      	cmp	r3, #1
        const float v = 2.0f * (ai_float) rand() / (ai_float) RAND_MAX - 1.0f;
 800323a:	ee37 7aa7 	vadd.f32	s14, s15, s15
 800323e:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
        if  (AI_BUFFER_FMT_GET_TYPE(fmt) == AI_BUFFER_FMT_TYPE_FLOAT) {
 8003242:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
        const float v = 2.0f * (ai_float) rand() / (ai_float) RAND_MAX - 1.0f;
 8003246:	eee7 7a08 	vfma.f32	s15, s14, s16
        if  (AI_BUFFER_FMT_GET_TYPE(fmt) == AI_BUFFER_FMT_TYPE_FLOAT) {
 800324a:	d106      	bne.n	800325a <aiSystemPerformanceProcess+0x40a>
          *(ai_float *)(in_data + j * 4) = v;
 800324c:	eb02 0189 	add.w	r1, r2, r9, lsl #2
 8003250:	edc1 7a00 	vstr	s15, [r1]
      for (ai_size j = 0; j < AI_BUFFER_SIZE(&ai_input[i]); ++j) {
 8003254:	f109 0901 	add.w	r9, r9, #1
 8003258:	e6d4      	b.n	8003004 <aiSystemPerformanceProcess+0x1b4>
          if (AI_BUFFER_FMT_GET_BITS(fmt) >= 8) {
 800325a:	9907      	ldr	r1, [sp, #28]
 800325c:	2900      	cmp	r1, #0
 800325e:	d0f9      	beq.n	8003254 <aiSystemPerformanceProcess+0x404>
            in_data[j] = (ai_i8)(v * 127);
 8003260:	ee67 7aa8 	vmul.f32	s15, s15, s17
            if (AI_BUFFER_FMT_GET_TYPE(fmt) == AI_BUFFER_FMT_TYPE_BOOL) {
 8003264:	9805      	ldr	r0, [sp, #20]
 8003266:	2803      	cmp	r0, #3
            in_data[j] = (ai_i8)(v * 127);
 8003268:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800326c:	edcd 7a08 	vstr	s15, [sp, #32]
 8003270:	f99d 1020 	ldrsb.w	r1, [sp, #32]
            if (AI_BUFFER_FMT_GET_TYPE(fmt) == AI_BUFFER_FMT_TYPE_BOOL) {
 8003274:	d002      	beq.n	800327c <aiSystemPerformanceProcess+0x42c>
              in_data[j] = (in_data[j] > 0)?(ai_i8)1:(ai_i8)0;
 8003276:	f802 1009 	strb.w	r1, [r2, r9]
 800327a:	e7eb      	b.n	8003254 <aiSystemPerformanceProcess+0x404>
 800327c:	2900      	cmp	r1, #0
 800327e:	bfd4      	ite	le
 8003280:	2100      	movle	r1, #0
 8003282:	2101      	movgt	r1, #1
 8003284:	e7f7      	b.n	8003276 <aiSystemPerformanceProcess+0x426>
    tend = cyclesCounterEnd();
 8003286:	f7ff fb21 	bl	80028cc <cyclesCounterEnd>
    MON_ALLOC_DISABLE();
 800328a:	f8d9 3000 	ldr.w	r3, [r9]
    dwtCyclesToTime(tend, &t);
 800328e:	aa0a      	add	r2, sp, #40	; 0x28
    MON_ALLOC_DISABLE();
 8003290:	f023 0301 	bic.w	r3, r3, #1
 8003294:	f8c9 3000 	str.w	r3, [r9]
    tcumul += tend;
 8003298:	1943      	adds	r3, r0, r5
 800329a:	461d      	mov	r5, r3
 800329c:	eb4a 0a01 	adc.w	sl, sl, r1
    dwtCyclesToTime(tend, &t);
 80032a0:	f000 fb78 	bl	8003994 <dwtCyclesToTime>
    if (!profiling_mode) {
 80032a4:	4b30      	ldr	r3, [pc, #192]	; (8003368 <aiSystemPerformanceProcess+0x518>)
 80032a6:	781b      	ldrb	r3, [r3, #0]
 80032a8:	b95b      	cbnz	r3, 80032c2 <aiSystemPerformanceProcess+0x472>
      if (t.s > 10)
 80032aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
      LC_PRINT(".");
 80032ac:	4830      	ldr	r0, [pc, #192]	; (8003370 <aiSystemPerformanceProcess+0x520>)
      if (t.s > 10)
 80032ae:	2b0a      	cmp	r3, #10
 80032b0:	bfc8      	it	gt
 80032b2:	46b0      	movgt	r8, r6
      LC_PRINT(".");
 80032b4:	f000 fae2 	bl	800387c <lc_print>
      fflush(stdout);
 80032b8:	4b2e      	ldr	r3, [pc, #184]	; (8003374 <aiSystemPerformanceProcess+0x524>)
 80032ba:	681b      	ldr	r3, [r3, #0]
 80032bc:	6898      	ldr	r0, [r3, #8]
 80032be:	f00c f98f 	bl	800f5e0 <fflush>
  for (iter = 0; iter < niter; iter++) {
 80032c2:	3601      	adds	r6, #1
 80032c4:	e658      	b.n	8002f78 <aiSystemPerformanceProcess+0x128>
  MON_STACK_EVALUATE();
 80032c6:	3004      	adds	r0, #4
 80032c8:	3304      	adds	r3, #4
 80032ca:	6090      	str	r0, [r2, #8]
 80032cc:	e6ef      	b.n	80030ae <aiSystemPerformanceProcess+0x25e>
 80032ce:	f04f 33ff 	mov.w	r3, #4294967295
 80032d2:	4649      	mov	r1, r9
 80032d4:	4828      	ldr	r0, [pc, #160]	; (8003378 <aiSystemPerformanceProcess+0x528>)
 80032d6:	6093      	str	r3, [r2, #8]
 80032d8:	f000 fad0 	bl	800387c <lc_print>
 80032dc:	4827      	ldr	r0, [pc, #156]	; (800337c <aiSystemPerformanceProcess+0x52c>)
 80032de:	f000 facd 	bl	800387c <lc_print>
 80032e2:	e6ef      	b.n	80030c4 <aiSystemPerformanceProcess+0x274>
  MON_STACK_REPORT();
 80032e4:	4826      	ldr	r0, [pc, #152]	; (8003380 <aiSystemPerformanceProcess+0x530>)
 80032e6:	f000 fac9 	bl	800387c <lc_print>
 80032ea:	e74c      	b.n	8003186 <aiSystemPerformanceProcess+0x336>
          port_hal_delay(1000);
 80032ec:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80032f0:	f7fe f86a 	bl	80013c8 <HAL_Delay>
 80032f4:	e786      	b.n	8003204 <aiSystemPerformanceProcess+0x3b4>
      if (r == CONS_EVT_HIDE) {
 80032f6:	2806      	cmp	r0, #6
 80032f8:	d146      	bne.n	8003388 <aiSystemPerformanceProcess+0x538>
        observer_mode = false;
 80032fa:	4b22      	ldr	r3, [pc, #136]	; (8003384 <aiSystemPerformanceProcess+0x534>)
 80032fc:	2200      	movs	r2, #0
 80032fe:	701a      	strb	r2, [r3, #0]
  } while (r==0);
 8003300:	e5ad      	b.n	8002e5e <aiSystemPerformanceProcess+0xe>
 8003302:	bf00      	nop
 8003304:	20002090 	.word	0x20002090
 8003308:	e0001000 	.word	0xe0001000
 800330c:	08011b1d 	.word	0x08011b1d
 8003310:	08011b2f 	.word	0x08011b2f
 8003314:	200020b8 	.word	0x200020b8
 8003318:	20002068 	.word	0x20002068
 800331c:	000f4240 	.word	0x000f4240
 8003320:	08011baf 	.word	0x08011baf
 8003324:	08011bf6 	.word	0x08011bf6
 8003328:	08011c1d 	.word	0x08011c1d
 800332c:	08011c3e 	.word	0x08011c3e
 8003330:	08011c67 	.word	0x08011c67
 8003334:	08011c9a 	.word	0x08011c9a
 8003338:	2000209c 	.word	0x2000209c
 800333c:	08011cd7 	.word	0x08011cd7
 8003340:	08011d30 	.word	0x08011d30
 8003344:	20001fd0 	.word	0x20001fd0
 8003348:	08011d6b 	.word	0x08011d6b
 800334c:	08011d97 	.word	0x08011d97
 8003350:	08011dbb 	.word	0x08011dbb
 8003354:	08011dec 	.word	0x08011dec
 8003358:	08011e01 	.word	0x08011e01
 800335c:	08011e3b 	.word	0x08011e3b
 8003360:	08011e5b 	.word	0x08011e5b
 8003364:	08011e7f 	.word	0x08011e7f
 8003368:	20002060 	.word	0x20002060
 800336c:	20000010 	.word	0x20000010
 8003370:	08011b2d 	.word	0x08011b2d
 8003374:	20001d84 	.word	0x20001d84
 8003378:	08011b32 	.word	0x08011b32
 800337c:	08011b56 	.word	0x08011b56
 8003380:	08011cb6 	.word	0x08011cb6
 8003384:	2000000c 	.word	0x2000000c
      if (r == CONS_EVT_RESTART) {
 8003388:	2802      	cmp	r0, #2
 800338a:	d110      	bne.n	80033ae <aiSystemPerformanceProcess+0x55e>
        profiling_mode = false;
 800338c:	4b1f      	ldr	r3, [pc, #124]	; (800340c <aiSystemPerformanceProcess+0x5bc>)
 800338e:	2200      	movs	r2, #0
        LC_PRINT("\r\n");
 8003390:	481f      	ldr	r0, [pc, #124]	; (8003410 <aiSystemPerformanceProcess+0x5c0>)
        profiling_mode = false;
 8003392:	701a      	strb	r2, [r3, #0]
        observer_mode = true;
 8003394:	2201      	movs	r2, #1
 8003396:	4b1f      	ldr	r3, [pc, #124]	; (8003414 <aiSystemPerformanceProcess+0x5c4>)
 8003398:	701a      	strb	r2, [r3, #0]
        profiling_factor = 5;
 800339a:	2205      	movs	r2, #5
 800339c:	4b1e      	ldr	r3, [pc, #120]	; (8003418 <aiSystemPerformanceProcess+0x5c8>)
 800339e:	601a      	str	r2, [r3, #0]
        LC_PRINT("\r\n");
 80033a0:	f000 fa6c 	bl	800387c <lc_print>
        aiDeInit();
 80033a4:	f7ff fb00 	bl	80029a8 <aiDeInit>
        aiSystemPerformanceInit();
 80033a8:	f7ff fc9a 	bl	8002ce0 <aiSystemPerformanceInit>
      if (r == CONS_EVT_PAUSE) {
 80033ac:	e557      	b.n	8002e5e <aiSystemPerformanceProcess+0xe>
      if (r == CONS_EVT_QUIT) {
 80033ae:	2801      	cmp	r0, #1
 80033b0:	d115      	bne.n	80033de <aiSystemPerformanceProcess+0x58e>
        profiling_mode = false;
 80033b2:	4b16      	ldr	r3, [pc, #88]	; (800340c <aiSystemPerformanceProcess+0x5bc>)
 80033b4:	2200      	movs	r2, #0
        LC_PRINT("\r\n");
 80033b6:	4816      	ldr	r0, [pc, #88]	; (8003410 <aiSystemPerformanceProcess+0x5c0>)
        profiling_mode = false;
 80033b8:	701a      	strb	r2, [r3, #0]
        LC_PRINT("\r\n");
 80033ba:	f000 fa5f 	bl	800387c <lc_print>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80033be:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 80033c2:	b672      	cpsid	i
        aiDeInit();
 80033c4:	f7ff faf0 	bl	80029a8 <aiDeInit>
        LC_PRINT("\r\n");
 80033c8:	4811      	ldr	r0, [pc, #68]	; (8003410 <aiSystemPerformanceProcess+0x5c0>)
 80033ca:	f000 fa57 	bl	800387c <lc_print>
        LC_PRINT("Board should be reseted...\r\n");
 80033ce:	4813      	ldr	r0, [pc, #76]	; (800341c <aiSystemPerformanceProcess+0x5cc>)
 80033d0:	f000 fa54 	bl	800387c <lc_print>
          port_hal_delay(1000);
 80033d4:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80033d8:	f7fd fff6 	bl	80013c8 <HAL_Delay>
        while (1) {
 80033dc:	e7fa      	b.n	80033d4 <aiSystemPerformanceProcess+0x584>
      if (r == CONS_EVT_PAUSE) {
 80033de:	2804      	cmp	r0, #4
 80033e0:	d003      	beq.n	80033ea <aiSystemPerformanceProcess+0x59a>
  } while (r==0);
 80033e2:	2800      	cmp	r0, #0
 80033e4:	f43f ad3b 	beq.w	8002e5e <aiSystemPerformanceProcess+0xe>
 80033e8:	e541      	b.n	8002e6e <aiSystemPerformanceProcess+0x1e>
        LC_PRINT("\r\n");
 80033ea:	4809      	ldr	r0, [pc, #36]	; (8003410 <aiSystemPerformanceProcess+0x5c0>)
 80033ec:	f000 fa46 	bl	800387c <lc_print>
        LC_PRINT("Press any key to continue..\r\n");
 80033f0:	480b      	ldr	r0, [pc, #44]	; (8003420 <aiSystemPerformanceProcess+0x5d0>)
 80033f2:	f000 fa43 	bl	800387c <lc_print>
        while ((r = aiTestConsole()) == CONS_EVT_TIMEOUT) {
 80033f6:	f7ff faf1 	bl	80029dc <aiTestConsole>
 80033fa:	2800      	cmp	r0, #0
 80033fc:	f47f ad2f 	bne.w	8002e5e <aiSystemPerformanceProcess+0xe>
          port_hal_delay(1000);
 8003400:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8003404:	f7fd ffe0 	bl	80013c8 <HAL_Delay>
 8003408:	e7f5      	b.n	80033f6 <aiSystemPerformanceProcess+0x5a6>
 800340a:	bf00      	nop
 800340c:	20002060 	.word	0x20002060
 8003410:	08011b2f 	.word	0x08011b2f
 8003414:	2000000c 	.word	0x2000000c
 8003418:	20000010 	.word	0x20000010
 800341c:	08011e9d 	.word	0x08011e9d
 8003420:	08011e7f 	.word	0x08011e7f

08003424 <aiPlatformVersion>:

#include <ai_platform_interface.h>


void aiPlatformVersion(void)
{
 8003424:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  const ai_platform_version rt_ver = ai_platform_runtime_get_version();
 8003426:	f001 fcb1 	bl	8004d8c <ai_platform_runtime_get_version>

  LC_PRINT("\r\nAI platform (API %d.%d.%d - RUNTIME %d.%d.%d)\r\n",
 800342a:	f3c0 4307 	ubfx	r3, r0, #16, #8
 800342e:	2201      	movs	r2, #1
 8003430:	9302      	str	r3, [sp, #8]
 8003432:	f3c0 2307 	ubfx	r3, r0, #8, #8
 8003436:	b2c0      	uxtb	r0, r0
 8003438:	4611      	mov	r1, r2
 800343a:	9301      	str	r3, [sp, #4]
 800343c:	2300      	movs	r3, #0
 800343e:	9000      	str	r0, [sp, #0]
 8003440:	4802      	ldr	r0, [pc, #8]	; (800344c <aiPlatformVersion+0x28>)
 8003442:	f000 fa1b 	bl	800387c <lc_print>
      AI_PLATFORM_API_MINOR,
      AI_PLATFORM_API_MICRO,
      rt_ver.major,
      rt_ver.minor,
      rt_ver.micro);
}
 8003446:	b007      	add	sp, #28
 8003448:	f85d fb04 	ldr.w	pc, [sp], #4
 800344c:	08011ec8 	.word	0x08011ec8

08003450 <aiLogErr>:

void aiLogErr(const ai_error err, const char *fct)
{
 8003450:	b410      	push	{r4}
  if (fct)
    LC_PRINT("E: AI error (%s) - type=0x%02x code=0x%02x\r\n", fct,
 8003452:	f3c0 2317 	ubfx	r3, r0, #8, #24
 8003456:	b2c4      	uxtb	r4, r0
  if (fct)
 8003458:	b129      	cbz	r1, 8003466 <aiLogErr+0x16>
    LC_PRINT("E: AI error (%s) - type=0x%02x code=0x%02x\r\n", fct,
 800345a:	4622      	mov	r2, r4
 800345c:	4805      	ldr	r0, [pc, #20]	; (8003474 <aiLogErr+0x24>)
        err.type, err.code);
  else
    LC_PRINT("E: AI error - type=0x%02x code=0x%02x\r\n", err.type, err.code);
}
 800345e:	f85d 4b04 	ldr.w	r4, [sp], #4
    LC_PRINT("E: AI error (%s) - type=0x%02x code=0x%02x\r\n", fct,
 8003462:	f000 ba0b 	b.w	800387c <lc_print>
    LC_PRINT("E: AI error - type=0x%02x code=0x%02x\r\n", err.type, err.code);
 8003466:	4621      	mov	r1, r4
 8003468:	461a      	mov	r2, r3
 800346a:	4803      	ldr	r0, [pc, #12]	; (8003478 <aiLogErr+0x28>)
}
 800346c:	f85d 4b04 	ldr.w	r4, [sp], #4
    LC_PRINT("E: AI error - type=0x%02x code=0x%02x\r\n", err.type, err.code);
 8003470:	f000 ba04 	b.w	800387c <lc_print>
 8003474:	08011efa 	.word	0x08011efa
 8003478:	08011f27 	.word	0x08011f27

0800347c <aiPrintBufferInfo>:
void aiPrintBufferInfo(const ai_buffer *buffer)
{
  const ai_buffer_format fmt = buffer->format;

  /* shape + nb elem */
  LC_PRINT("(%d,%d,%d,",
 800347c:	6981      	ldr	r1, [r0, #24]
{
 800347e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003482:	4604      	mov	r4, r0
  const ai_buffer_format fmt = buffer->format;
 8003484:	6806      	ldr	r6, [r0, #0]
  LC_PRINT("(%d,%d,%d,",
 8003486:	4870      	ldr	r0, [pc, #448]	; (8003648 <aiPrintBufferInfo+0x1cc>)
 8003488:	e9d1 3202 	ldrd	r3, r2, [r1, #8]
{
 800348c:	ed2d 8b02 	vpush	{d8}
  LC_PRINT("(%d,%d,%d,",
 8003490:	6809      	ldr	r1, [r1, #0]
{
 8003492:	b083      	sub	sp, #12
  LC_PRINT("(%d,%d,%d,",
 8003494:	f000 f9f2 	bl	800387c <lc_print>
     (int)AI_BUFFER_SHAPE_ELEM(buffer, AI_SHAPE_BATCH),
     (int)AI_BUFFER_SHAPE_ELEM(buffer, AI_SHAPE_HEIGHT),
     (int)AI_BUFFER_SHAPE_ELEM(buffer, AI_SHAPE_WIDTH));

  if (AI_BUFFER_SHAPE_SIZE(buffer) == 5)
 8003498:	6962      	ldr	r2, [r4, #20]
 800349a:	69a0      	ldr	r0, [r4, #24]
 800349c:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80034a0:	f5b2 6fa0 	cmp.w	r2, #1280	; 0x500
 80034a4:	d119      	bne.n	80034da <aiPrintBufferInfo+0x5e>
  {
    LC_PRINT("%d,%d)",
 80034a6:	6842      	ldr	r2, [r0, #4]
 80034a8:	6901      	ldr	r1, [r0, #16]
 80034aa:	4868      	ldr	r0, [pc, #416]	; (800364c <aiPrintBufferInfo+0x1d0>)
 80034ac:	f000 f9e6 	bl	800387c <lc_print>
  } else
  {
    LC_PRINT("%d)", (int)AI_BUFFER_SHAPE_ELEM(buffer, AI_SHAPE_CHANNEL));
  }

  LC_PRINT("%d/", (int)AI_BUFFER_SIZE(buffer));
 80034b0:	2101      	movs	r1, #1
 80034b2:	4620      	mov	r0, r4
    if (AI_BUFFER_FMT_GET_TYPE(fmt) == AI_BUFFER_FMT_TYPE_FLOAT)
 80034b4:	f3c6 4743 	ubfx	r7, r6, #17, #4
  LC_PRINT("%d/", (int)AI_BUFFER_SIZE(buffer));
 80034b8:	f001 fa2e 	bl	8004918 <ai_buffer_get_size>
 80034bc:	4601      	mov	r1, r0
 80034be:	4864      	ldr	r0, [pc, #400]	; (8003650 <aiPrintBufferInfo+0x1d4>)
 80034c0:	f000 f9dc 	bl	800387c <lc_print>
    if (AI_BUFFER_FMT_GET_TYPE(fmt) == AI_BUFFER_FMT_TYPE_FLOAT)
 80034c4:	2f01      	cmp	r7, #1
      LC_PRINT("float%d", (int)AI_BUFFER_FMT_GET_BITS(fmt));
 80034c6:	ea4f 18e6 	mov.w	r8, r6, asr #7
 80034ca:	f3c6 15c6 	ubfx	r5, r6, #7, #7
    if (AI_BUFFER_FMT_GET_TYPE(fmt) == AI_BUFFER_FMT_TYPE_FLOAT)
 80034ce:	d113      	bne.n	80034f8 <aiPrintBufferInfo+0x7c>
      LC_PRINT("float%d", (int)AI_BUFFER_FMT_GET_BITS(fmt));
 80034d0:	4629      	mov	r1, r5
 80034d2:	4860      	ldr	r0, [pc, #384]	; (8003654 <aiPrintBufferInfo+0x1d8>)
        LC_PRINT("(%f,%d),", (double)scale, zero_point);
      }
      LC_PRINT((s_ > max_)?"..":"");
    } else if (AI_BUFFER_FMT_GET_BITS(fmt) < 8) {
      /* lower of 8b format */
      LC_PRINT(" int32-%db", (int)AI_BUFFER_FMT_GET_BITS(fmt));
 80034d4:	f000 f9d2 	bl	800387c <lc_print>
 80034d8:	e044      	b.n	8003564 <aiPrintBufferInfo+0xe8>
  else if (AI_BUFFER_SHAPE_SIZE(buffer) == 6)
 80034da:	f5b2 6fc0 	cmp.w	r2, #1536	; 0x600
    LC_PRINT("%d,%d)",
 80034de:	6843      	ldr	r3, [r0, #4]
  else if (AI_BUFFER_SHAPE_SIZE(buffer) == 6)
 80034e0:	d105      	bne.n	80034ee <aiPrintBufferInfo+0x72>
    LC_PRINT("%d,%d,%d)",
 80034e2:	e9d0 1204 	ldrd	r1, r2, [r0, #16]
 80034e6:	485c      	ldr	r0, [pc, #368]	; (8003658 <aiPrintBufferInfo+0x1dc>)
 80034e8:	f000 f9c8 	bl	800387c <lc_print>
 80034ec:	e7e0      	b.n	80034b0 <aiPrintBufferInfo+0x34>
    LC_PRINT("%d)", (int)AI_BUFFER_SHAPE_ELEM(buffer, AI_SHAPE_CHANNEL));
 80034ee:	4619      	mov	r1, r3
 80034f0:	485a      	ldr	r0, [pc, #360]	; (800365c <aiPrintBufferInfo+0x1e0>)
 80034f2:	f000 f9c3 	bl	800387c <lc_print>
 80034f6:	e7db      	b.n	80034b0 <aiPrintBufferInfo+0x34>
    else if (AI_BUFFER_FMT_GET_TYPE(fmt) == AI_BUFFER_FMT_TYPE_BOOL) {
 80034f8:	2f03      	cmp	r7, #3
 80034fa:	d102      	bne.n	8003502 <aiPrintBufferInfo+0x86>
      LC_PRINT("bool%d", (int)AI_BUFFER_FMT_GET_BITS(fmt));
 80034fc:	4629      	mov	r1, r5
 80034fe:	4858      	ldr	r0, [pc, #352]	; (8003660 <aiPrintBufferInfo+0x1e4>)
 8003500:	e7e8      	b.n	80034d4 <aiPrintBufferInfo+0x58>
      LC_PRINT("%s%d", AI_BUFFER_FMT_GET_SIGN(fmt)?"i":"u",
 8003502:	f8df 9178 	ldr.w	r9, [pc, #376]	; 800367c <aiPrintBufferInfo+0x200>
 8003506:	f416 0f00 	tst.w	r6, #8388608	; 0x800000
 800350a:	462a      	mov	r2, r5
 800350c:	f109 0102 	add.w	r1, r9, #2
 8003510:	f109 003b 	add.w	r0, r9, #59	; 0x3b
 8003514:	bf18      	it	ne
 8003516:	4649      	movne	r1, r9
 8003518:	f000 f9b0 	bl	800387c <lc_print>
  if (AI_BUFFER_FMT_GET_TYPE(fmt) == AI_BUFFER_FMT_TYPE_Q) {
 800351c:	2f02      	cmp	r7, #2
 800351e:	d121      	bne.n	8003564 <aiPrintBufferInfo+0xe8>
    if (AI_BUFFER_META_INFO_INTQ(buffer->meta_info)) {
 8003520:	68a3      	ldr	r3, [r4, #8]
 8003522:	2b00      	cmp	r3, #0
 8003524:	d06a      	beq.n	80035fc <aiPrintBufferInfo+0x180>
 8003526:	681a      	ldr	r2, [r3, #0]
 8003528:	07d2      	lsls	r2, r2, #31
 800352a:	d567      	bpl.n	80035fc <aiPrintBufferInfo+0x180>
 800352c:	685b      	ldr	r3, [r3, #4]
 800352e:	2b00      	cmp	r3, #0
 8003530:	d064      	beq.n	80035fc <aiPrintBufferInfo+0x180>
      ai_u16 s_ = AI_BUFFER_META_INFO_INTQ_GET_SIZE(buffer->meta_info);
 8003532:	f8b3 8002 	ldrh.w	r8, [r3, #2]
      LC_PRINT(" %d:", s_);
 8003536:	f109 0040 	add.w	r0, r9, #64	; 0x40
      for (int idx=0; idx<max_; idx++) {
 800353a:	2500      	movs	r5, #0
        ai_float scale = AI_BUFFER_META_INFO_INTQ_GET_SCALE(buffer->meta_info, idx);
 800353c:	ed9f 8a49 	vldr	s16, [pc, #292]	; 8003664 <aiPrintBufferInfo+0x1e8>
      const int max_ = s_> 4?4:s_;
 8003540:	4647      	mov	r7, r8
        LC_PRINT("(%f,%d),", (double)scale, zero_point);
 8003542:	f109 0945 	add.w	r9, r9, #69	; 0x45
      LC_PRINT(" %d:", s_);
 8003546:	4641      	mov	r1, r8
      const int max_ = s_> 4?4:s_;
 8003548:	2f04      	cmp	r7, #4
 800354a:	bf28      	it	cs
 800354c:	2704      	movcs	r7, #4
      LC_PRINT(" %d:", s_);
 800354e:	f000 f995 	bl	800387c <lc_print>
      for (int idx=0; idx<max_; idx++) {
 8003552:	42bd      	cmp	r5, r7
 8003554:	db1a      	blt.n	800358c <aiPrintBufferInfo+0x110>
      LC_PRINT((s_ > max_)?"..":"");
 8003556:	4b44      	ldr	r3, [pc, #272]	; (8003668 <aiPrintBufferInfo+0x1ec>)
 8003558:	1cd8      	adds	r0, r3, #3
 800355a:	4547      	cmp	r7, r8
 800355c:	bf38      	it	cc
 800355e:	4618      	movcc	r0, r3
 8003560:	f000 f98c 	bl	800387c <lc_print>
          AI_BUFFER_FMT_GET_FBITS(fmt)
      );
    }
  }
  /* @ + size in bytes */
  if (buffer->data)
 8003564:	6865      	ldr	r5, [r4, #4]
    LC_PRINT(" @0x%X/%d",
 8003566:	2101      	movs	r1, #1
 8003568:	4620      	mov	r0, r4
  if (buffer->data)
 800356a:	2d00      	cmp	r5, #0
 800356c:	d057      	beq.n	800361e <aiPrintBufferInfo+0x1a2>
    LC_PRINT(" @0x%X/%d",
 800356e:	f001 f9d3 	bl	8004918 <ai_buffer_get_size>
 8003572:	4631      	mov	r1, r6
 8003574:	f001 fa04 	bl	8004980 <ai_buffer_get_byte_size>
 8003578:	4629      	mov	r1, r5
 800357a:	4602      	mov	r2, r0
 800357c:	483b      	ldr	r0, [pc, #236]	; (800366c <aiPrintBufferInfo+0x1f0>)
    );
  else
    LC_PRINT(" (User Domain)/%d",
        (int)AI_BUFFER_BYTE_SIZE(AI_BUFFER_SIZE(buffer), fmt)
    );
}
 800357e:	b003      	add	sp, #12
 8003580:	ecbd 8b02 	vpop	{d8}
 8003584:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
    LC_PRINT(" @0x%X/%d",
 8003588:	f000 b978 	b.w	800387c <lc_print>
        ai_float scale = AI_BUFFER_META_INFO_INTQ_GET_SCALE(buffer->meta_info, idx);
 800358c:	68a2      	ldr	r2, [r4, #8]
 800358e:	2a00      	cmp	r2, #0
 8003590:	d053      	beq.n	800363a <aiPrintBufferInfo+0x1be>
 8003592:	6813      	ldr	r3, [r2, #0]
 8003594:	f013 0301 	ands.w	r3, r3, #1
 8003598:	d02b      	beq.n	80035f2 <aiPrintBufferInfo+0x176>
 800359a:	6852      	ldr	r2, [r2, #4]
 800359c:	2a00      	cmp	r2, #0
 800359e:	d04c      	beq.n	800363a <aiPrintBufferInfo+0x1be>
 80035a0:	6853      	ldr	r3, [r2, #4]
 80035a2:	2b00      	cmp	r3, #0
 80035a4:	d04d      	beq.n	8003642 <aiPrintBufferInfo+0x1c6>
 80035a6:	8851      	ldrh	r1, [r2, #2]
 80035a8:	42a9      	cmp	r1, r5
 80035aa:	dd4a      	ble.n	8003642 <aiPrintBufferInfo+0x1c6>
 80035ac:	681b      	ldr	r3, [r3, #0]
 80035ae:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 80035b2:	edd3 7a00 	vldr	s15, [r3]
        int zero_point = AI_BUFFER_META_INFO_INTQ_GET_ZEROPOINT(buffer->meta_info, idx);
 80035b6:	2a00      	cmp	r2, #0
 80035b8:	d041      	beq.n	800363e <aiPrintBufferInfo+0x1c2>
 80035ba:	8813      	ldrh	r3, [r2, #0]
        ai_float scale = AI_BUFFER_META_INFO_INTQ_GET_SCALE(buffer->meta_info, idx);
 80035bc:	6851      	ldr	r1, [r2, #4]
        int zero_point = AI_BUFFER_META_INFO_INTQ_GET_ZEROPOINT(buffer->meta_info, idx);
 80035be:	f013 0302 	ands.w	r3, r3, #2
 80035c2:	d00f      	beq.n	80035e4 <aiPrintBufferInfo+0x168>
 80035c4:	b1c1      	cbz	r1, 80035f8 <aiPrintBufferInfo+0x17c>
 80035c6:	8853      	ldrh	r3, [r2, #2]
 80035c8:	42ab      	cmp	r3, r5
 80035ca:	dd38      	ble.n	800363e <aiPrintBufferInfo+0x1c2>
 80035cc:	684b      	ldr	r3, [r1, #4]
 80035ce:	5d5b      	ldrb	r3, [r3, r5]
        LC_PRINT("(%f,%d),", (double)scale, zero_point);
 80035d0:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80035d4:	9300      	str	r3, [sp, #0]
 80035d6:	4648      	mov	r0, r9
      for (int idx=0; idx<max_; idx++) {
 80035d8:	3501      	adds	r5, #1
        LC_PRINT("(%f,%d),", (double)scale, zero_point);
 80035da:	ec53 2b17 	vmov	r2, r3, d7
 80035de:	f000 f94d 	bl	800387c <lc_print>
      for (int idx=0; idx<max_; idx++) {
 80035e2:	e7b6      	b.n	8003552 <aiPrintBufferInfo+0xd6>
        int zero_point = AI_BUFFER_META_INFO_INTQ_GET_ZEROPOINT(buffer->meta_info, idx);
 80035e4:	b141      	cbz	r1, 80035f8 <aiPrintBufferInfo+0x17c>
 80035e6:	8852      	ldrh	r2, [r2, #2]
 80035e8:	42aa      	cmp	r2, r5
 80035ea:	ddf1      	ble.n	80035d0 <aiPrintBufferInfo+0x154>
 80035ec:	684b      	ldr	r3, [r1, #4]
 80035ee:	575b      	ldrsb	r3, [r3, r5]
 80035f0:	e7ee      	b.n	80035d0 <aiPrintBufferInfo+0x154>
        ai_float scale = AI_BUFFER_META_INFO_INTQ_GET_SCALE(buffer->meta_info, idx);
 80035f2:	eef0 7a48 	vmov.f32	s15, s16
 80035f6:	e7eb      	b.n	80035d0 <aiPrintBufferInfo+0x154>
        int zero_point = AI_BUFFER_META_INFO_INTQ_GET_ZEROPOINT(buffer->meta_info, idx);
 80035f8:	460b      	mov	r3, r1
 80035fa:	e7e9      	b.n	80035d0 <aiPrintBufferInfo+0x154>
    } else if (AI_BUFFER_FMT_GET_BITS(fmt) < 8) {
 80035fc:	f018 0f78 	tst.w	r8, #120	; 0x78
 8003600:	d102      	bne.n	8003608 <aiPrintBufferInfo+0x18c>
      LC_PRINT(" int32-%db", (int)AI_BUFFER_FMT_GET_BITS(fmt));
 8003602:	4629      	mov	r1, r5
 8003604:	481a      	ldr	r0, [pc, #104]	; (8003670 <aiPrintBufferInfo+0x1f4>)
 8003606:	e765      	b.n	80034d4 <aiPrintBufferInfo+0x58>
      LC_PRINT(" Q%d.%d",
 8003608:	f006 027f 	and.w	r2, r6, #127	; 0x7f
 800360c:	f3c6 51c0 	ubfx	r1, r6, #23, #1
 8003610:	4818      	ldr	r0, [pc, #96]	; (8003674 <aiPrintBufferInfo+0x1f8>)
 8003612:	3a40      	subs	r2, #64	; 0x40
 8003614:	4411      	add	r1, r2
 8003616:	1a69      	subs	r1, r5, r1
 8003618:	f000 f930 	bl	800387c <lc_print>
 800361c:	e7a2      	b.n	8003564 <aiPrintBufferInfo+0xe8>
    LC_PRINT(" (User Domain)/%d",
 800361e:	f001 f97b 	bl	8004918 <ai_buffer_get_size>
 8003622:	4631      	mov	r1, r6
 8003624:	f001 f9ac 	bl	8004980 <ai_buffer_get_byte_size>
 8003628:	4601      	mov	r1, r0
 800362a:	4813      	ldr	r0, [pc, #76]	; (8003678 <aiPrintBufferInfo+0x1fc>)
}
 800362c:	b003      	add	sp, #12
 800362e:	ecbd 8b02 	vpop	{d8}
 8003632:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
    LC_PRINT(" (User Domain)/%d",
 8003636:	f000 b921 	b.w	800387c <lc_print>
        ai_float scale = AI_BUFFER_META_INFO_INTQ_GET_SCALE(buffer->meta_info, idx);
 800363a:	eef0 7a48 	vmov.f32	s15, s16
        int zero_point = AI_BUFFER_META_INFO_INTQ_GET_ZEROPOINT(buffer->meta_info, idx);
 800363e:	2300      	movs	r3, #0
 8003640:	e7c6      	b.n	80035d0 <aiPrintBufferInfo+0x154>
        ai_float scale = AI_BUFFER_META_INFO_INTQ_GET_SCALE(buffer->meta_info, idx);
 8003642:	eef0 7a48 	vmov.f32	s15, s16
 8003646:	e7b6      	b.n	80035b6 <aiPrintBufferInfo+0x13a>
 8003648:	08011f57 	.word	0x08011f57
 800364c:	08011f62 	.word	0x08011f62
 8003650:	08011f77 	.word	0x08011f77
 8003654:	08011f7b 	.word	0x08011f7b
 8003658:	08011f69 	.word	0x08011f69
 800365c:	08011f73 	.word	0x08011f73
 8003660:	08011f83 	.word	0x08011f83
 8003664:	00000000 	.word	0x00000000
 8003668:	08011f53 	.word	0x08011f53
 800366c:	08011fb0 	.word	0x08011fb0
 8003670:	08011f9d 	.word	0x08011f9d
 8003674:	08011fa8 	.word	0x08011fa8
 8003678:	08011fba 	.word	0x08011fba
 800367c:	08011f4f 	.word	0x08011f4f

08003680 <aiPrintNetworkInfo>:

void aiPrintNetworkInfo(const ai_network_report* report)
{
 8003680:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003684:	4604      	mov	r4, r0
  LC_PRINT("Network informations...\r\n");
 8003686:	484b      	ldr	r0, [pc, #300]	; (80037b4 <aiPrintNetworkInfo+0x134>)
 8003688:	f000 f8f8 	bl	800387c <lc_print>
  LC_PRINT(" model name         : %s\r\n", report->model_name);
 800368c:	484a      	ldr	r0, [pc, #296]	; (80037b8 <aiPrintNetworkInfo+0x138>)
 800368e:	6821      	ldr	r1, [r4, #0]
 8003690:	f000 f8f4 	bl	800387c <lc_print>
  LC_PRINT(" model signature    : %s\r\n", report->model_signature);
 8003694:	6861      	ldr	r1, [r4, #4]
 8003696:	4849      	ldr	r0, [pc, #292]	; (80037bc <aiPrintNetworkInfo+0x13c>)
 8003698:	f000 f8f0 	bl	800387c <lc_print>
  LC_PRINT(" model datetime     : %s\r\n", report->model_datetime);
 800369c:	68a1      	ldr	r1, [r4, #8]
 800369e:	4848      	ldr	r0, [pc, #288]	; (80037c0 <aiPrintNetworkInfo+0x140>)
 80036a0:	f000 f8ec 	bl	800387c <lc_print>
  LC_PRINT(" compile datetime   : %s\r\n", report->compile_datetime);
 80036a4:	68e1      	ldr	r1, [r4, #12]
 80036a6:	4847      	ldr	r0, [pc, #284]	; (80037c4 <aiPrintNetworkInfo+0x144>)
 80036a8:	f000 f8e8 	bl	800387c <lc_print>
  LC_PRINT(" runtime version    : %d.%d.%d\r\n",
      report->runtime_version.major,
      report->runtime_version.minor,
      report->runtime_version.micro);
#endif
  if (report->tool_revision[0])
 80036ac:	69a1      	ldr	r1, [r4, #24]
 80036ae:	780b      	ldrb	r3, [r1, #0]
 80036b0:	b113      	cbz	r3, 80036b8 <aiPrintNetworkInfo+0x38>
    LC_PRINT(" Tool revision      : %s\r\n", (report->tool_revision[0])?report->tool_revision:"");
 80036b2:	4845      	ldr	r0, [pc, #276]	; (80037c8 <aiPrintNetworkInfo+0x148>)
 80036b4:	f000 f8e2 	bl	800387c <lc_print>
  LC_PRINT(" tools version      : %d.%d.%d\r\n",
 80036b8:	7f21      	ldrb	r1, [r4, #28]
      report->tool_version.micro);
  LC_PRINT(" complexity         : " "%" PRIu64 " MACC\r\n", report->n_macc);
  LC_PRINT(" c-nodes            : %d\r\n", (int)report->n_nodes);

  LC_PRINT(" map_activations    : %d\r\n", report->map_activations.size);
  for (int idx=0; idx<report->map_activations.size;idx++) {
 80036ba:	2500      	movs	r5, #0
  LC_PRINT(" tools version      : %d.%d.%d\r\n",
 80036bc:	7fa3      	ldrb	r3, [r4, #30]
      const ai_buffer *buffer = &report->map_activations.buffer[idx];
 80036be:	f04f 081c 	mov.w	r8, #28
  LC_PRINT(" tools version      : %d.%d.%d\r\n",
 80036c2:	7f62      	ldrb	r2, [r4, #29]
 80036c4:	4841      	ldr	r0, [pc, #260]	; (80037cc <aiPrintNetworkInfo+0x14c>)
      LC_PRINT("  [%d] ", idx);
 80036c6:	4f42      	ldr	r7, [pc, #264]	; (80037d0 <aiPrintNetworkInfo+0x150>)
  LC_PRINT(" tools version      : %d.%d.%d\r\n",
 80036c8:	f000 f8d8 	bl	800387c <lc_print>
  LC_PRINT(" complexity         : " "%" PRIu64 " MACC\r\n", report->n_macc);
 80036cc:	4841      	ldr	r0, [pc, #260]	; (80037d4 <aiPrintNetworkInfo+0x154>)
      aiPrintBufferInfo(buffer);
      LC_PRINT("\r\n");
 80036ce:	f107 0908 	add.w	r9, r7, #8
  LC_PRINT(" complexity         : " "%" PRIu64 " MACC\r\n", report->n_macc);
 80036d2:	e9d4 230c 	ldrd	r2, r3, [r4, #48]	; 0x30
 80036d6:	f000 f8d1 	bl	800387c <lc_print>
  LC_PRINT(" c-nodes            : %d\r\n", (int)report->n_nodes);
 80036da:	6fe1      	ldr	r1, [r4, #124]	; 0x7c
 80036dc:	483e      	ldr	r0, [pc, #248]	; (80037d8 <aiPrintNetworkInfo+0x158>)
 80036de:	f000 f8cd 	bl	800387c <lc_print>
  LC_PRINT(" map_activations    : %d\r\n", report->map_activations.size);
 80036e2:	f8b4 1052 	ldrh.w	r1, [r4, #82]	; 0x52
 80036e6:	483d      	ldr	r0, [pc, #244]	; (80037dc <aiPrintNetworkInfo+0x15c>)
 80036e8:	f000 f8c8 	bl	800387c <lc_print>
  for (int idx=0; idx<report->map_activations.size;idx++) {
 80036ec:	f8b4 3052 	ldrh.w	r3, [r4, #82]	; 0x52
 80036f0:	42ab      	cmp	r3, r5
 80036f2:	dc25      	bgt.n	8003740 <aiPrintNetworkInfo+0xc0>
  }

  LC_PRINT(" map_weights        : %d\r\n", report->map_weights.size);
  for (int idx=0; idx<report->map_weights.size;idx++) {
      const ai_buffer *buffer = &report->map_weights.buffer[idx];
      LC_PRINT("  [%d] ", idx);
 80036f4:	4f36      	ldr	r7, [pc, #216]	; (80037d0 <aiPrintNetworkInfo+0x150>)
  for (int idx=0; idx<report->map_weights.size;idx++) {
 80036f6:	2500      	movs	r5, #0
      const ai_buffer *buffer = &report->map_weights.buffer[idx];
 80036f8:	f04f 081c 	mov.w	r8, #28
  LC_PRINT(" map_weights        : %d\r\n", report->map_weights.size);
 80036fc:	f8b4 104a 	ldrh.w	r1, [r4, #74]	; 0x4a
      aiPrintBufferInfo(buffer);
      LC_PRINT("\r\n");
 8003700:	f107 0908 	add.w	r9, r7, #8
  LC_PRINT(" map_weights        : %d\r\n", report->map_weights.size);
 8003704:	4836      	ldr	r0, [pc, #216]	; (80037e0 <aiPrintNetworkInfo+0x160>)
 8003706:	f000 f8b9 	bl	800387c <lc_print>
  for (int idx=0; idx<report->map_weights.size;idx++) {
 800370a:	f8b4 304a 	ldrh.w	r3, [r4, #74]	; 0x4a
 800370e:	42ab      	cmp	r3, r5
 8003710:	dc25      	bgt.n	800375e <aiPrintNetworkInfo+0xde>
  LC_PRINT(" n_inputs/n_outputs : %u/%u\r\n", report->n_inputs,
          report->n_outputs);

  for (int i=0; i<report->n_inputs; i++) {
    // LC_PRINT("  I[%d] %s\r\n", i, aiGetBufferDesc(&report->inputs[i]));
    LC_PRINT("  I[%d] ", i);
 8003712:	4e34      	ldr	r6, [pc, #208]	; (80037e4 <aiPrintNetworkInfo+0x164>)
  for (int i=0; i<report->n_inputs; i++) {
 8003714:	2500      	movs	r5, #0
    aiPrintBufferInfo(&report->inputs[i]);
 8003716:	271c      	movs	r7, #28
  LC_PRINT(" n_inputs/n_outputs : %u/%u\r\n", report->n_inputs,
 8003718:	8f62      	ldrh	r2, [r4, #58]	; 0x3a
    LC_PRINT("\r\n");
 800371a:	f1a6 083c 	sub.w	r8, r6, #60	; 0x3c
  LC_PRINT(" n_inputs/n_outputs : %u/%u\r\n", report->n_inputs,
 800371e:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8003720:	4831      	ldr	r0, [pc, #196]	; (80037e8 <aiPrintNetworkInfo+0x168>)
 8003722:	f000 f8ab 	bl	800387c <lc_print>
  for (int i=0; i<report->n_inputs; i++) {
 8003726:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8003728:	42ab      	cmp	r3, r5
 800372a:	dc27      	bgt.n	800377c <aiPrintNetworkInfo+0xfc>
  }

  for (int i=0; i<report->n_outputs; i++) {
    //LC_PRINT("  O[%d] %s\r\n", i, aiGetBufferDesc(&report->outputs[i]));
    LC_PRINT("  O[%d] ", i);
 800372c:	4e2f      	ldr	r6, [pc, #188]	; (80037ec <aiPrintNetworkInfo+0x16c>)
  for (int i=0; i<report->n_outputs; i++) {
 800372e:	2500      	movs	r5, #0
    aiPrintBufferInfo(&report->outputs[i]);
 8003730:	271c      	movs	r7, #28
    LC_PRINT("\r\n");
 8003732:	f1a6 0845 	sub.w	r8, r6, #69	; 0x45
  for (int i=0; i<report->n_outputs; i++) {
 8003736:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8003738:	42ab      	cmp	r3, r5
 800373a:	dc2d      	bgt.n	8003798 <aiPrintNetworkInfo+0x118>
  }
}
 800373c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      const ai_buffer *buffer = &report->map_activations.buffer[idx];
 8003740:	6d60      	ldr	r0, [r4, #84]	; 0x54
      LC_PRINT("  [%d] ", idx);
 8003742:	4629      	mov	r1, r5
      const ai_buffer *buffer = &report->map_activations.buffer[idx];
 8003744:	fb08 0605 	mla	r6, r8, r5, r0
      LC_PRINT("  [%d] ", idx);
 8003748:	4638      	mov	r0, r7
 800374a:	f000 f897 	bl	800387c <lc_print>
  for (int idx=0; idx<report->map_activations.size;idx++) {
 800374e:	3501      	adds	r5, #1
      aiPrintBufferInfo(buffer);
 8003750:	4630      	mov	r0, r6
 8003752:	f7ff fe93 	bl	800347c <aiPrintBufferInfo>
      LC_PRINT("\r\n");
 8003756:	4648      	mov	r0, r9
 8003758:	f000 f890 	bl	800387c <lc_print>
  for (int idx=0; idx<report->map_activations.size;idx++) {
 800375c:	e7c6      	b.n	80036ec <aiPrintNetworkInfo+0x6c>
      const ai_buffer *buffer = &report->map_weights.buffer[idx];
 800375e:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
      LC_PRINT("  [%d] ", idx);
 8003760:	4629      	mov	r1, r5
      const ai_buffer *buffer = &report->map_weights.buffer[idx];
 8003762:	fb08 0605 	mla	r6, r8, r5, r0
      LC_PRINT("  [%d] ", idx);
 8003766:	4638      	mov	r0, r7
 8003768:	f000 f888 	bl	800387c <lc_print>
  for (int idx=0; idx<report->map_weights.size;idx++) {
 800376c:	3501      	adds	r5, #1
      aiPrintBufferInfo(buffer);
 800376e:	4630      	mov	r0, r6
 8003770:	f7ff fe84 	bl	800347c <aiPrintBufferInfo>
      LC_PRINT("\r\n");
 8003774:	4648      	mov	r0, r9
 8003776:	f000 f881 	bl	800387c <lc_print>
  for (int idx=0; idx<report->map_weights.size;idx++) {
 800377a:	e7c6      	b.n	800370a <aiPrintNetworkInfo+0x8a>
    LC_PRINT("  I[%d] ", i);
 800377c:	4629      	mov	r1, r5
 800377e:	4630      	mov	r0, r6
 8003780:	f000 f87c 	bl	800387c <lc_print>
    aiPrintBufferInfo(&report->inputs[i]);
 8003784:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8003786:	fb07 0005 	mla	r0, r7, r5, r0
  for (int i=0; i<report->n_inputs; i++) {
 800378a:	3501      	adds	r5, #1
    aiPrintBufferInfo(&report->inputs[i]);
 800378c:	f7ff fe76 	bl	800347c <aiPrintBufferInfo>
    LC_PRINT("\r\n");
 8003790:	4640      	mov	r0, r8
 8003792:	f000 f873 	bl	800387c <lc_print>
  for (int i=0; i<report->n_inputs; i++) {
 8003796:	e7c6      	b.n	8003726 <aiPrintNetworkInfo+0xa6>
    LC_PRINT("  O[%d] ", i);
 8003798:	4629      	mov	r1, r5
 800379a:	4630      	mov	r0, r6
 800379c:	f000 f86e 	bl	800387c <lc_print>
    aiPrintBufferInfo(&report->outputs[i]);
 80037a0:	6c20      	ldr	r0, [r4, #64]	; 0x40
 80037a2:	fb07 0005 	mla	r0, r7, r5, r0
  for (int i=0; i<report->n_outputs; i++) {
 80037a6:	3501      	adds	r5, #1
    aiPrintBufferInfo(&report->outputs[i]);
 80037a8:	f7ff fe68 	bl	800347c <aiPrintBufferInfo>
    LC_PRINT("\r\n");
 80037ac:	4640      	mov	r0, r8
 80037ae:	f000 f865 	bl	800387c <lc_print>
  for (int i=0; i<report->n_outputs; i++) {
 80037b2:	e7c0      	b.n	8003736 <aiPrintNetworkInfo+0xb6>
 80037b4:	08011fcc 	.word	0x08011fcc
 80037b8:	08011fe6 	.word	0x08011fe6
 80037bc:	08012001 	.word	0x08012001
 80037c0:	0801201c 	.word	0x0801201c
 80037c4:	08012037 	.word	0x08012037
 80037c8:	08012052 	.word	0x08012052
 80037cc:	0801206d 	.word	0x0801206d
 80037d0:	080120e6 	.word	0x080120e6
 80037d4:	0801208e 	.word	0x0801208e
 80037d8:	080120b0 	.word	0x080120b0
 80037dc:	080120cb 	.word	0x080120cb
 80037e0:	080120f1 	.word	0x080120f1
 80037e4:	0801212a 	.word	0x0801212a
 80037e8:	0801210c 	.word	0x0801210c
 80037ec:	08012133 	.word	0x08012133

080037f0 <_put_c_driver>:
static void _put_c_driver(void *user, const char c)
{
#if defined(HAS_DEDICATED_PRINT_PORT) && HAS_DEDICATED_PRINT_PORT == 1
  port_io_dedicated_putc(c);
#else
  if (_ioWriteAllowed)
 80037f0:	4b08      	ldr	r3, [pc, #32]	; (8003814 <_put_c_driver+0x24>)
 80037f2:	781b      	ldrb	r3, [r3, #0]
{
 80037f4:	b507      	push	{r0, r1, r2, lr}
 80037f6:	f88d 1007 	strb.w	r1, [sp, #7]
  if (_ioWriteAllowed)
 80037fa:	b13b      	cbz	r3, 800380c <_put_c_driver+0x1c>

__STATIC_INLINE bool port_io_write(uint8_t *buff, int count)
{
  HAL_StatusTypeDef status;

  status = HAL_UART_Transmit(&UartHandle, buff, count, HAL_MAX_DELAY);
 80037fc:	f04f 33ff 	mov.w	r3, #4294967295
 8003800:	2201      	movs	r2, #1
 8003802:	f10d 0107 	add.w	r1, sp, #7
 8003806:	4804      	ldr	r0, [pc, #16]	; (8003818 <_put_c_driver+0x28>)
 8003808:	f7fe ff31 	bl	800266e <HAL_UART_Transmit>
  }
#ifdef SWO_OUTPUT
  ITM_SendChar(c);
#endif 
#endif
}
 800380c:	b003      	add	sp, #12
 800380e:	f85d fb04 	ldr.w	pc, [sp], #4
 8003812:	bf00      	nop
 8003814:	20000014 	.word	0x20000014
 8003818:	20001f40 	.word	0x20001f40

0800381c <ioRawGetUint8>:
 {
 800381c:	b508      	push	{r3, lr}
 800381e:	460b      	mov	r3, r1
  if (!c)
 8003820:	4601      	mov	r1, r0
 8003822:	b120      	cbz	r0, 800382e <ioRawGetUint8+0x12>
  status = HAL_UART_Receive(&UartHandle, (uint8_t *)c, 1, timeout);
 8003824:	2201      	movs	r2, #1
 8003826:	4804      	ldr	r0, [pc, #16]	; (8003838 <ioRawGetUint8+0x1c>)
 8003828:	f7fe ff71 	bl	800270e <HAL_UART_Receive>
   return port_io_get(c, timeout) == true?1:-1;
 800382c:	b110      	cbz	r0, 8003834 <ioRawGetUint8+0x18>
 800382e:	f04f 30ff 	mov.w	r0, #4294967295
 }
 8003832:	bd08      	pop	{r3, pc}
   return port_io_get(c, timeout) == true?1:-1;
 8003834:	2001      	movs	r0, #1
 8003836:	e7fc      	b.n	8003832 <ioRawGetUint8+0x16>
 8003838:	20001f40 	.word	0x20001f40

0800383c <_write>:
{
 800383c:	b510      	push	{r4, lr}
  if ((count < 0) && (fd != STDOUT_FILENO) && (fd != STDERR_FILENO)) {
 800383e:	1e14      	subs	r4, r2, #0
 8003840:	da0a      	bge.n	8003858 <_write+0x1c>
 8003842:	3801      	subs	r0, #1
 8003844:	2801      	cmp	r0, #1
 8003846:	d907      	bls.n	8003858 <_write+0x1c>
    errno = EBADF;
 8003848:	f00c f846 	bl	800f8d8 <__errno>
    return -1;
 800384c:	f04f 34ff 	mov.w	r4, #4294967295
    errno = EBADF;
 8003850:	2309      	movs	r3, #9
 8003852:	6003      	str	r3, [r0, #0]
}
 8003854:	4620      	mov	r0, r4
 8003856:	bd10      	pop	{r4, pc}
  if (_ioWriteAllowed)
 8003858:	4b06      	ldr	r3, [pc, #24]	; (8003874 <_write+0x38>)
 800385a:	781b      	ldrb	r3, [r3, #0]
 800385c:	2b00      	cmp	r3, #0
 800385e:	d0f9      	beq.n	8003854 <_write+0x18>
  status = HAL_UART_Transmit(&UartHandle, buff, count, HAL_MAX_DELAY);
 8003860:	b2a2      	uxth	r2, r4
 8003862:	f04f 33ff 	mov.w	r3, #4294967295
 8003866:	4804      	ldr	r0, [pc, #16]	; (8003878 <_write+0x3c>)
 8003868:	f7fe ff01 	bl	800266e <HAL_UART_Transmit>
  return (status ? count : 0);
 800386c:	2800      	cmp	r0, #0
 800386e:	bf18      	it	ne
 8003870:	2400      	movne	r4, #0
 8003872:	e7ef      	b.n	8003854 <_write+0x18>
 8003874:	20000014 	.word	0x20000014
 8003878:	20001f40 	.word	0x20001f40

0800387c <lc_print>:

void lc_print(const char* fmt, ... )
{
 800387c:	b40f      	push	{r0, r1, r2, r3}
 800387e:	b507      	push	{r0, r1, r2, lr}
 8003880:	ab04      	add	r3, sp, #16
  va_list ap;
  va_start(ap, fmt);
  vlc_print(&_put_c_driver, NULL, fmt, ap);
 8003882:	2100      	movs	r1, #0
 8003884:	4805      	ldr	r0, [pc, #20]	; (800389c <lc_print+0x20>)
{
 8003886:	f853 2b04 	ldr.w	r2, [r3], #4
  va_start(ap, fmt);
 800388a:	9301      	str	r3, [sp, #4]
  vlc_print(&_put_c_driver, NULL, fmt, ap);
 800388c:	f000 fb0e 	bl	8003eac <vlc_print>
  va_end(ap);
}
 8003890:	b003      	add	sp, #12
 8003892:	f85d eb04 	ldr.w	lr, [sp], #4
 8003896:	b004      	add	sp, #16
 8003898:	4770      	bx	lr
 800389a:	bf00      	nop
 800389c:	080037f1 	.word	0x080037f1

080038a0 <__wrap_malloc>:

void* __real_malloc(size_t bytes);
void __real_free(void *ptr);

void* __wrap_malloc(size_t bytes)
{
 80038a0:	b538      	push	{r3, r4, r5, lr}
  uint8_t *ptr;

  io_malloc.cfg |= 1 << 1;
 80038a2:	4d11      	ldr	r5, [pc, #68]	; (80038e8 <__wrap_malloc+0x48>)

  /* ensure alignment for magic number */
  bytes = (bytes + 3) & ~3;
 80038a4:	3003      	adds	r0, #3
  io_malloc.cfg |= 1 << 1;
 80038a6:	682b      	ldr	r3, [r5, #0]
  bytes = (bytes + 3) & ~3;
 80038a8:	f020 0403 	bic.w	r4, r0, #3
  io_malloc.cfg |= 1 << 1;
 80038ac:	f043 0302 	orr.w	r3, r3, #2

  /* add 2x32-bit for size and magic  number */
  ptr = (uint8_t*)__real_malloc(bytes + 8);
 80038b0:	f104 0008 	add.w	r0, r4, #8
  io_malloc.cfg |= 1 << 1;
 80038b4:	602b      	str	r3, [r5, #0]
  ptr = (uint8_t*)__real_malloc(bytes + 8);
 80038b6:	f00b f881 	bl	800e9bc <malloc>

  /* remember size */
  if (ptr) {
 80038ba:	b1a0      	cbz	r0, 80038e6 <__wrap_malloc+0x46>
    *((uint32_t*)ptr) = bytes;
    *((uint32_t*)(ptr + 4 + bytes)) = MAGIC_MALLOC_NUMBER;
 80038bc:	1903      	adds	r3, r0, r4
 80038be:	4a0b      	ldr	r2, [pc, #44]	; (80038ec <__wrap_malloc+0x4c>)
    *((uint32_t*)ptr) = bytes;
 80038c0:	6004      	str	r4, [r0, #0]
    *((uint32_t*)(ptr + 4 + bytes)) = MAGIC_MALLOC_NUMBER;
 80038c2:	605a      	str	r2, [r3, #4]
  }

  if ((ptr) && (io_malloc.cfg & 1UL)) {
 80038c4:	682b      	ldr	r3, [r5, #0]
 80038c6:	07db      	lsls	r3, r3, #31
 80038c8:	d50c      	bpl.n	80038e4 <__wrap_malloc+0x44>
    io_malloc.alloc_req++;
 80038ca:	68eb      	ldr	r3, [r5, #12]
 80038cc:	3301      	adds	r3, #1
 80038ce:	60eb      	str	r3, [r5, #12]
    io_malloc.alloc += bytes;
 80038d0:	686b      	ldr	r3, [r5, #4]
 80038d2:	4423      	add	r3, r4
 80038d4:	606b      	str	r3, [r5, #4]

    io_malloc.used += bytes;
 80038d6:	69ab      	ldr	r3, [r5, #24]
 80038d8:	441c      	add	r4, r3

    if (io_malloc.used > io_malloc.max) {
 80038da:	696b      	ldr	r3, [r5, #20]
 80038dc:	429c      	cmp	r4, r3
    io_malloc.used += bytes;
 80038de:	61ac      	str	r4, [r5, #24]
      io_malloc.max = io_malloc.used;
 80038e0:	bf88      	it	hi
 80038e2:	616c      	strhi	r4, [r5, #20]

    if (io_malloc.a_idx >= _IO_MALLOC_TRACK_MODE)
      io_malloc.a_idx = 0;
#endif
  }
  return ptr?(ptr + 4):NULL;
 80038e4:	3004      	adds	r0, #4
}
 80038e6:	bd38      	pop	{r3, r4, r5, pc}
 80038e8:	2000209c 	.word	0x2000209c
 80038ec:	efdcba98 	.word	0xefdcba98

080038f0 <__wrap_free>:
void __wrap_free(void *ptr)
{
  uint8_t* p;
  uint32_t bytes;

  io_malloc.cfg |= 1 << 2;
 80038f0:	4b10      	ldr	r3, [pc, #64]	; (8003934 <__wrap_free+0x44>)
 80038f2:	681a      	ldr	r2, [r3, #0]
 80038f4:	f042 0204 	orr.w	r2, r2, #4
{
 80038f8:	b430      	push	{r4, r5}
  io_malloc.cfg |= 1 << 2;
 80038fa:	601a      	str	r2, [r3, #0]

  if (!ptr)
 80038fc:	4602      	mov	r2, r0
 80038fe:	b1b8      	cbz	r0, 8003930 <__wrap_free+0x40>
    return;

  p = (uint8_t*)ptr - 4;
  bytes = *((uint32_t*)p);
 8003900:	f852 1c04 	ldr.w	r1, [r2, #-4]
  p = (uint8_t*)ptr - 4;
 8003904:	3804      	subs	r0, #4

  if (*((uint32_t*)(p + 4 + bytes)) == MAGIC_MALLOC_NUMBER) {
 8003906:	4c0c      	ldr	r4, [pc, #48]	; (8003938 <__wrap_free+0x48>)
 8003908:	5855      	ldr	r5, [r2, r1]
 800390a:	42a5      	cmp	r5, r4
    *((uint32_t*)(p + 4 + bytes)) = 0;
 800390c:	bf04      	itt	eq
 800390e:	2400      	moveq	r4, #0
 8003910:	5054      	streq	r4, [r2, r1]
  }

  if (io_malloc.cfg & 1UL) {
 8003912:	681a      	ldr	r2, [r3, #0]
 8003914:	07d2      	lsls	r2, r2, #31
 8003916:	d508      	bpl.n	800392a <__wrap_free+0x3a>
    io_malloc.free_req++;
 8003918:	691a      	ldr	r2, [r3, #16]
 800391a:	3201      	adds	r2, #1
 800391c:	611a      	str	r2, [r3, #16]
    io_malloc.free += bytes;
 800391e:	689a      	ldr	r2, [r3, #8]
 8003920:	440a      	add	r2, r1
 8003922:	609a      	str	r2, [r3, #8]
    io_malloc.used -= bytes;
 8003924:	699a      	ldr	r2, [r3, #24]
 8003926:	1a52      	subs	r2, r2, r1
 8003928:	619a      	str	r2, [r3, #24]
    if (io_malloc.f_idx >= _IO_MALLOC_TRACK_MODE)
      io_malloc.f_idx = 0;
#endif
  }
  __real_free(p);
}
 800392a:	bc30      	pop	{r4, r5}
  __real_free(p);
 800392c:	f00b b84e 	b.w	800e9cc <free>
}
 8003930:	bc30      	pop	{r4, r5}
 8003932:	4770      	bx	lr
 8003934:	2000209c 	.word	0x2000209c
 8003938:	efdcba98 	.word	0xefdcba98

0800393c <stackMonInit>:
#endif

struct io_stack io_stack;

void stackMonInit(uint32_t ctrl, uint32_t cstack, uint32_t msize)
{
 800393c:	b538      	push	{r3, r4, r5, lr}
  memset(&io_stack, 0, sizeof(struct io_stack));
 800393e:	4c11      	ldr	r4, [pc, #68]	; (8003984 <stackMonInit+0x48>)
 8003940:	2500      	movs	r5, #0
  /* Reading ARM Core registers */
  io_stack.ctrl = ctrl;
  io_stack.cstack = cstack;

#if defined(_IS_GCC_COMPILER) && _IS_GCC_COMPILER
  io_stack.estack = (uint32_t)_estack;
 8003942:	4b11      	ldr	r3, [pc, #68]	; (8003988 <stackMonInit+0x4c>)
  memset(&io_stack, 0, sizeof(struct io_stack));
 8003944:	60e5      	str	r5, [r4, #12]
  io_stack.estack = (uint32_t)_estack;
 8003946:	6123      	str	r3, [r4, #16]
  io_stack.bstack = io_stack.estack - msize;
 8003948:	1a9b      	subs	r3, r3, r2
  io_stack.ctrl = ctrl;
 800394a:	6020      	str	r0, [r4, #0]
  io_stack.bstack = io_stack.estack - msize;
 800394c:	61e3      	str	r3, [r4, #28]
  io_stack.bstack = (uint32_t)&CSTACK$$Base;
  io_stack.mstack_size = (uint32_t)&CSTACK$$Limit - (uint32_t)&CSTACK$$Base;
#endif

  /* Check that MSP is the active stack */
  if (io_stack.ctrl & CONTROL_SPSEL_Msk) {
 800394e:	0783      	lsls	r3, r0, #30
  io_stack.cstack = cstack;
 8003950:	61a1      	str	r1, [r4, #24]
  io_stack.mstack_size = msize;
 8003952:	6162      	str	r2, [r4, #20]
  memset(&io_stack, 0, sizeof(struct io_stack));
 8003954:	e9c4 5501 	strd	r5, r5, [r4, #4]
  if (io_stack.ctrl & CONTROL_SPSEL_Msk) {
 8003958:	d511      	bpl.n	800397e <stackMonInit+0x42>
    LC_PRINT("E: MSP is not the active stack (stack monitoring is disabled)\r\n");
 800395a:	480c      	ldr	r0, [pc, #48]	; (800398c <stackMonInit+0x50>)
 800395c:	f7ff ff8e 	bl	800387c <lc_print>
    io_stack.stack_mon = false;
  } else
    io_stack.stack_mon = true;

  /* Calculating used stack before test */
  io_stack.ustack_size = io_stack.estack - io_stack.cstack;
 8003960:	6921      	ldr	r1, [r4, #16]
 8003962:	69a3      	ldr	r3, [r4, #24]
    io_stack.stack_mon = false;
 8003964:	7125      	strb	r5, [r4, #4]
  io_stack.ustack_size = io_stack.estack - io_stack.cstack;
 8003966:	1ac9      	subs	r1, r1, r3
 8003968:	60e1      	str	r1, [r4, #12]

  if ((io_stack.stack_mon) && (io_stack.ustack_size > io_stack.mstack_size)) {
 800396a:	b13d      	cbz	r5, 800397c <stackMonInit+0x40>
 800396c:	6962      	ldr	r2, [r4, #20]
 800396e:	4291      	cmp	r1, r2
 8003970:	d904      	bls.n	800397c <stackMonInit+0x40>
    LC_PRINT("E: !stack overflow detected %d > %d\r\n", (int)io_stack.ustack_size,
 8003972:	4807      	ldr	r0, [pc, #28]	; (8003990 <stackMonInit+0x54>)
 8003974:	f7ff ff82 	bl	800387c <lc_print>
        (int)io_stack.mstack_size);
    io_stack.stack_mon = false;
 8003978:	2300      	movs	r3, #0
 800397a:	7123      	strb	r3, [r4, #4]
  }
}
 800397c:	bd38      	pop	{r3, r4, r5, pc}
 800397e:	2501      	movs	r5, #1
 8003980:	e7ee      	b.n	8003960 <stackMonInit+0x24>
 8003982:	bf00      	nop
 8003984:	200020b8 	.word	0x200020b8
 8003988:	20080000 	.word	0x20080000
 800398c:	0801213c 	.word	0x0801213c
 8003990:	0801217c 	.word	0x0801217c

08003994 <dwtCyclesToTime>:
 */

struct cyclesCount cyclesCount;

int dwtCyclesToTime(uint64_t clks, struct dwtTime *t)
{
 8003994:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003998:	4604      	mov	r4, r0
 800399a:	468a      	mov	sl, r1
  if (!t)
 800399c:	4617      	mov	r7, r2
 800399e:	b382      	cbz	r2, 8003a02 <dwtCyclesToTime+0x6e>
    return -1;
  uint32_t fcpu = port_hal_get_cpu_freq();
  uint64_t s  = clks / fcpu;
  uint64_t ms = (clks * 1000) / fcpu;
 80039a0:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
  uint32_t fcpu = port_hal_get_cpu_freq();
 80039a4:	f7fe f998 	bl	8001cd8 <HAL_RCC_GetHCLKFreq>
  uint64_t s  = clks / fcpu;
 80039a8:	2300      	movs	r3, #0
  uint32_t fcpu = port_hal_get_cpu_freq();
 80039aa:	4602      	mov	r2, r0
  uint64_t s  = clks / fcpu;
 80039ac:	9001      	str	r0, [sp, #4]
 80039ae:	4651      	mov	r1, sl
 80039b0:	4620      	mov	r0, r4
  uint64_t us = (clks * 1000 * 1000) / fcpu;
 80039b2:	f8df 9054 	ldr.w	r9, [pc, #84]	; 8003a08 <dwtCyclesToTime+0x74>
  uint64_t s  = clks / fcpu;
 80039b6:	f7fc fe57 	bl	8000668 <__aeabi_uldivmod>
 80039ba:	4683      	mov	fp, r0
  uint64_t ms = (clks * 1000) / fcpu;
 80039bc:	fba4 0106 	umull	r0, r1, r4, r6
 80039c0:	9a01      	ldr	r2, [sp, #4]
 80039c2:	2300      	movs	r3, #0
 80039c4:	fb06 110a 	mla	r1, r6, sl, r1
 80039c8:	f7fc fe4e 	bl	8000668 <__aeabi_uldivmod>
  ms -= (s * 1000);
 80039cc:	fbab 3106 	umull	r3, r1, fp, r6
  uint64_t us = (clks * 1000 * 1000) / fcpu;
 80039d0:	9a01      	ldr	r2, [sp, #4]
  ms -= (s * 1000);
 80039d2:	1ac5      	subs	r5, r0, r3
  uint64_t us = (clks * 1000 * 1000) / fcpu;
 80039d4:	fba4 0109 	umull	r0, r1, r4, r9
 80039d8:	2300      	movs	r3, #0
 80039da:	fb09 110a 	mla	r1, r9, sl, r1
  us -= (ms * 1000 + s * 1000000);
 80039de:	fbab 8909 	umull	r8, r9, fp, r9
  uint64_t us = (clks * 1000 * 1000) / fcpu;
 80039e2:	f7fc fe41 	bl	8000668 <__aeabi_uldivmod>
  t->fcpu = fcpu;
  t->s = s;
  t->ms = ms;
 80039e6:	60bd      	str	r5, [r7, #8]
 80039e8:	eba0 0008 	sub.w	r0, r0, r8
  us -= (ms * 1000 + s * 1000000);
 80039ec:	fba5 5606 	umull	r5, r6, r5, r6
  t->fcpu = fcpu;
 80039f0:	9a01      	ldr	r2, [sp, #4]
  us -= (ms * 1000 + s * 1000000);
 80039f2:	1b40      	subs	r0, r0, r5
  t->us = us;
 80039f4:	60f8      	str	r0, [r7, #12]
  return 0;
 80039f6:	2000      	movs	r0, #0
  t->s = s;
 80039f8:	e9c7 2b00 	strd	r2, fp, [r7]
}
 80039fc:	b003      	add	sp, #12
 80039fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    return -1;
 8003a02:	f04f 30ff 	mov.w	r0, #4294967295
 8003a06:	e7f9      	b.n	80039fc <dwtCyclesToTime+0x68>
 8003a08:	000f4240 	.word	0x000f4240

08003a0c <getFlashCacheConf>:

#if defined(STM32F7)

  mconf |= MCONF_F7;

  __I uint32_t acr = FLASH->ACR;
 8003a0c:	4b11      	ldr	r3, [pc, #68]	; (8003a54 <getFlashCacheConf+0x48>)
{
 8003a0e:	b082      	sub	sp, #8
  __I uint32_t acr = FLASH->ACR;
 8003a10:	681b      	ldr	r3, [r3, #0]
 8003a12:	9300      	str	r3, [sp, #0]
  __I uint32_t ccr = SCB->CCR;
 8003a14:	4b10      	ldr	r3, [pc, #64]	; (8003a58 <getFlashCacheConf+0x4c>)
 8003a16:	695b      	ldr	r3, [r3, #20]
 8003a18:	9301      	str	r3, [sp, #4]

  mconf |= ((acr & FLASH_ACR_LATENCY_Msk) >> FLASH_ACR_LATENCY_Pos);
 8003a1a:	9800      	ldr	r0, [sp, #0]
  if ((acr & FLASH_ACR_PRFTEN_Msk) >> FLASH_ACR_PRFTEN_Pos)
 8003a1c:	9b00      	ldr	r3, [sp, #0]
  mconf |= ((acr & FLASH_ACR_LATENCY_Msk) >> FLASH_ACR_LATENCY_Pos);
 8003a1e:	f000 000f 	and.w	r0, r0, #15
  if ((acr & FLASH_ACR_PRFTEN_Msk) >> FLASH_ACR_PRFTEN_Pos)
 8003a22:	05db      	lsls	r3, r3, #23
    mconf |= MCONF_ART_PREF;
  if ((acr & FLASH_ACR_ARTEN_Msk) >> FLASH_ACR_ARTEN_Pos)
 8003a24:	9b00      	ldr	r3, [sp, #0]
    mconf |= MCONF_ART_PREF;
 8003a26:	f040 7000 	orr.w	r0, r0, #33554432	; 0x2000000
 8003a2a:	bf48      	it	mi
 8003a2c:	f440 7080 	orrmi.w	r0, r0, #256	; 0x100
  if ((acr & FLASH_ACR_ARTEN_Msk) >> FLASH_ACR_ARTEN_Pos)
 8003a30:	0599      	lsls	r1, r3, #22
    mconf |= MCONF_ART_EN;

  if (ccr & SCB_CCR_IC_Msk)
 8003a32:	9b01      	ldr	r3, [sp, #4]
    mconf |= MCONF_ART_EN;
 8003a34:	bf48      	it	mi
 8003a36:	f440 7000 	orrmi.w	r0, r0, #512	; 0x200
  if (ccr & SCB_CCR_IC_Msk)
 8003a3a:	039a      	lsls	r2, r3, #14
    mconf |= MCONF_CORE_ICACHE;
  if (ccr & SCB_CCR_DC_Msk)
 8003a3c:	9b01      	ldr	r3, [sp, #4]
    mconf |= MCONF_CORE_ICACHE;
 8003a3e:	bf48      	it	mi
 8003a40:	f440 6080 	orrmi.w	r0, r0, #1024	; 0x400
  if (ccr & SCB_CCR_DC_Msk)
 8003a44:	03db      	lsls	r3, r3, #15
    mconf |= MCONF_CORE_DCACHE;
 8003a46:	bf48      	it	mi
 8003a48:	f440 6000 	orrmi.w	r0, r0, #2048	; 0x800
    mconf |= MCONF_CORE_DCACHE;

#endif

  return mconf;
}
 8003a4c:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
 8003a50:	b002      	add	sp, #8
 8003a52:	4770      	bx	lr
 8003a54:	40023c00 	.word	0x40023c00
 8003a58:	e000ed00 	.word	0xe000ed00

08003a5c <getSysConf.part.0>:
void getSysConf(struct mcu_conf *conf)
 8003a5c:	b510      	push	{r4, lr}
 8003a5e:	4604      	mov	r4, r0
  conf->sclk = port_hal_get_cpu_freq();
 8003a60:	f7fe f93a 	bl	8001cd8 <HAL_RCC_GetHCLKFreq>
 8003a64:	6020      	str	r0, [r4, #0]
  conf->hclk = port_hal_get_sys_freq();
 8003a66:	f7fe f937 	bl	8001cd8 <HAL_RCC_GetHCLKFreq>
 8003a6a:	6060      	str	r0, [r4, #4]
  conf->conf = getFlashCacheConf();
 8003a6c:	f7ff ffce 	bl	8003a0c <getFlashCacheConf>
 8003a70:	60a0      	str	r0, [r4, #8]
  conf->devid = port_hal_get_dev_id();
 8003a72:	f7fd fcc5 	bl	8001400 <HAL_GetDEVID>
 8003a76:	60e0      	str	r0, [r4, #12]
  conf->revid = port_hal_get_rev_id();
 8003a78:	f7fd fcbc 	bl	80013f4 <HAL_GetREVID>
 8003a7c:	6120      	str	r0, [r4, #16]
}
 8003a7e:	bd10      	pop	{r4, pc}

08003a80 <systemSettingLog>:

void systemSettingLog(void)
{
 8003a80:	b570      	push	{r4, r5, r6, lr}
 8003a82:	b088      	sub	sp, #32
  LC_PRINT("Compiled with GHS-ARM Compiler %d\r\n", __GHS_VERSION_NUMBER);
#elif defined(_IS_HTC_COMPILER) && _IS_HTC_COMPILER
  LC_PRINT("Compiled with HIGHTEC Clang %d.%d.%d\r\n", __clang_major__, __clang_minor__,
      __clang_patchlevel__);
#elif defined(_IS_GCC_COMPILER) && _IS_GCC_COMPILER
  LC_PRINT("Compiled with GCC %d.%d.%d\r\n", __GNUC__, __GNUC_MINOR__,
 8003a84:	2203      	movs	r2, #3
 8003a86:	2301      	movs	r3, #1
 8003a88:	210b      	movs	r1, #11
 8003a8a:	482d      	ldr	r0, [pc, #180]	; (8003b40 <systemSettingLog+0xc0>)
 8003a8c:	f7ff fef6 	bl	800387c <lc_print>
  if (!conf)
 8003a90:	a803      	add	r0, sp, #12
 8003a92:	f7ff ffe3 	bl	8003a5c <getSysConf.part.0>


  /* Display Device configuration */
  getSysConf(&sys_conf);

  LC_PRINT(DEVICE_FAMILY " device configuration...\r\n");
 8003a96:	482b      	ldr	r0, [pc, #172]	; (8003b44 <systemSettingLog+0xc4>)
 8003a98:	f7ff fef0 	bl	800387c <lc_print>

  LC_PRINT(" Device       : DevID:0x%04x (%s) RevID:0x%04x\r\n",
 8003a9c:	9906      	ldr	r1, [sp, #24]
  switch (dev_id) {
 8003a9e:	f46f 6389 	mvn.w	r3, #1096	; 0x448
  LC_PRINT(" Device       : DevID:0x%04x (%s) RevID:0x%04x\r\n",
 8003aa2:	4829      	ldr	r0, [pc, #164]	; (8003b48 <systemSettingLog+0xc8>)
#else
  LC_PRINT(" Core Arch.   : M%d - %s\r\n", __CORTEX_M, "no FPU");
#endif

  LC_PRINT(" HAL version  : 0x%08x\r\n", (int)port_hal_get_hal_version());
  LC_PRINT(" SYSCLK clock : %u MHz\r\n", (int)sys_conf.sclk/1000000);
 8003aa4:	4c29      	ldr	r4, [pc, #164]	; (8003b4c <systemSettingLog+0xcc>)
 8003aa6:	18cb      	adds	r3, r1, r3
 8003aa8:	b29b      	uxth	r3, r3
 8003aaa:	2b09      	cmp	r3, #9
 8003aac:	bf96      	itet	ls
 8003aae:	4a28      	ldrls	r2, [pc, #160]	; (8003b50 <systemSettingLog+0xd0>)
  LC_PRINT(" Device       : DevID:0x%04x (%s) RevID:0x%04x\r\n",
 8003ab0:	4a28      	ldrhi	r2, [pc, #160]	; (8003b54 <systemSettingLog+0xd4>)
 8003ab2:	f852 2023 	ldrls.w	r2, [r2, r3, lsl #2]
 8003ab6:	9b07      	ldr	r3, [sp, #28]
 8003ab8:	f7ff fee0 	bl	800387c <lc_print>
  LC_PRINT(" Core Arch.   : M%d - %s %s\r\n", __CORTEX_M, "FPU ", ((__FPU_USED) ? "used" : "not used!"));
 8003abc:	4b26      	ldr	r3, [pc, #152]	; (8003b58 <systemSettingLog+0xd8>)
 8003abe:	2107      	movs	r1, #7
 8003ac0:	1d5a      	adds	r2, r3, #5
 8003ac2:	f103 000a 	add.w	r0, r3, #10
 8003ac6:	f7ff fed9 	bl	800387c <lc_print>
  LC_PRINT(" HAL version  : 0x%08x\r\n", (int)port_hal_get_hal_version());
 8003aca:	f7fd fc8f 	bl	80013ec <HAL_GetHalVersion>
 8003ace:	4601      	mov	r1, r0
 8003ad0:	4822      	ldr	r0, [pc, #136]	; (8003b5c <systemSettingLog+0xdc>)
 8003ad2:	f7ff fed3 	bl	800387c <lc_print>
  LC_PRINT(" SYSCLK clock : %u MHz\r\n", (int)sys_conf.sclk/1000000);
 8003ad6:	9903      	ldr	r1, [sp, #12]
 8003ad8:	4821      	ldr	r0, [pc, #132]	; (8003b60 <systemSettingLog+0xe0>)
 8003ada:	fb91 f1f4 	sdiv	r1, r1, r4
 8003ade:	f7ff fecd 	bl	800387c <lc_print>
  LC_PRINT(" HCLK clock   : %u MHz\r\n", (int)sys_conf.hclk/1000000);
 8003ae2:	9904      	ldr	r1, [sp, #16]
 8003ae4:	481f      	ldr	r0, [pc, #124]	; (8003b64 <systemSettingLog+0xe4>)
 8003ae6:	fb91 f1f4 	sdiv	r1, r1, r4
 8003aea:	f7ff fec7 	bl	800387c <lc_print>

#if defined(STM32F7)
  uint32_t acr = FLASH->ACR;
 8003aee:	4b1e      	ldr	r3, [pc, #120]	; (8003b68 <systemSettingLog+0xe8>)
    return "False";
 8003af0:	4c1e      	ldr	r4, [pc, #120]	; (8003b6c <systemSettingLog+0xec>)
  uint32_t acr = FLASH->ACR;
 8003af2:	6819      	ldr	r1, [r3, #0]
    return "False";
 8003af4:	1d65      	adds	r5, r4, #5
  uint32_t ccr = SCB->CCR;
 8003af6:	4b1e      	ldr	r3, [pc, #120]	; (8003b70 <systemSettingLog+0xf0>)
    return "False";
 8003af8:	f411 7f80 	tst.w	r1, #256	; 0x100
  LC_PRINT(" FLASH conf.  : ACR=0x%08x - Prefetch=%s ART=%s latency=%d\r\n",
 8003afc:	f104 00ec 	add.w	r0, r4, #236	; 0xec
  uint32_t ccr = SCB->CCR;
 8003b00:	695e      	ldr	r6, [r3, #20]
  LC_PRINT(" FLASH conf.  : ACR=0x%08x - Prefetch=%s ART=%s latency=%d\r\n",
 8003b02:	f001 030f 	and.w	r3, r1, #15
    return "False";
 8003b06:	bf14      	ite	ne
 8003b08:	4622      	movne	r2, r4
 8003b0a:	462a      	moveq	r2, r5
 8003b0c:	f411 7f00 	tst.w	r1, #512	; 0x200
  LC_PRINT(" FLASH conf.  : ACR=0x%08x - Prefetch=%s ART=%s latency=%d\r\n",
 8003b10:	9300      	str	r3, [sp, #0]
 8003b12:	bf14      	ite	ne
 8003b14:	4623      	movne	r3, r4
 8003b16:	462b      	moveq	r3, r5
 8003b18:	f7ff feb0 	bl	800387c <lc_print>
    return "False";
 8003b1c:	f416 3f00 	tst.w	r6, #131072	; 0x20000
      (int)acr,
      bitToStr((acr & FLASH_ACR_PRFTEN_Msk) >> FLASH_ACR_PRFTEN_Pos),
      bitToStr((acr & FLASH_ACR_ARTEN_Msk) >> FLASH_ACR_ARTEN_Pos),
      (int)((acr & FLASH_ACR_LATENCY_Msk) >> FLASH_ACR_LATENCY_Pos));
  LC_PRINT(" CACHE conf.  : $I/$D=(%s,%s)\r\n",
 8003b20:	f204 1029 	addw	r0, r4, #297	; 0x129
    return "False";
 8003b24:	bf14      	ite	ne
 8003b26:	4621      	movne	r1, r4
 8003b28:	4629      	moveq	r1, r5
 8003b2a:	f416 3f80 	tst.w	r6, #65536	; 0x10000
  LC_PRINT(" CACHE conf.  : $I/$D=(%s,%s)\r\n",
 8003b2e:	bf14      	ite	ne
 8003b30:	4622      	movne	r2, r4
 8003b32:	462a      	moveq	r2, r5
  LC_PRINT(" CACHE conf.  : $I/$D=(%s,%s)\r\n",
      bitToStr(ccr & SCB_CCR_IC_Msk),
      bitToStr(ccr & SCB_CCR_DC_Msk));
#endif

}
 8003b34:	b008      	add	sp, #32
 8003b36:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  LC_PRINT(" CACHE conf.  : $I/$D=(%s,%s)\r\n",
 8003b3a:	f7ff be9f 	b.w	800387c <lc_print>
 8003b3e:	bf00      	nop
 8003b40:	080121b5 	.word	0x080121b5
 8003b44:	080121d2 	.word	0x080121d2
 8003b48:	080121f2 	.word	0x080121f2
 8003b4c:	000f4240 	.word	0x000f4240
 8003b50:	08012364 	.word	0x08012364
 8003b54:	080121a2 	.word	0x080121a2
 8003b58:	08012223 	.word	0x08012223
 8003b5c:	0801224b 	.word	0x0801224b
 8003b60:	08012264 	.word	0x08012264
 8003b64:	0801227d 	.word	0x0801227d
 8003b68:	40023c00 	.word	0x40023c00
 8003b6c:	080121aa 	.word	0x080121aa
 8003b70:	e000ed00 	.word	0xe000ed00

08003b74 <port_hal_crc_ip_init_imp>:
  __HAL_RCC_CRC_CLK_ENABLE();
#elif defined(STM32MP1)
  __HAL_RCC_CRC2_CLK_ENABLE();
#else
  /* By default the CRC IP clock is enabled */
  __HAL_RCC_CRC_CLK_ENABLE();
 8003b74:	4b06      	ldr	r3, [pc, #24]	; (8003b90 <port_hal_crc_ip_init_imp+0x1c>)
{
 8003b76:	b082      	sub	sp, #8
  __HAL_RCC_CRC_CLK_ENABLE();
 8003b78:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003b7a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8003b7e:	631a      	str	r2, [r3, #48]	; 0x30
 8003b80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003b82:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8003b86:	9301      	str	r3, [sp, #4]
 8003b88:	9b01      	ldr	r3, [sp, #4]
#endif
}
 8003b8a:	b002      	add	sp, #8
 8003b8c:	4770      	bx	lr
 8003b8e:	bf00      	nop
 8003b90:	40023800 	.word	0x40023800

08003b94 <port_dwt_init_imp>:

#if defined(HAS_DWT_CTRL) && HAS_DWT_CTRL == 1

void port_dwt_init_imp()
{
  CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 8003b94:	4a08      	ldr	r2, [pc, #32]	; (8003bb8 <port_dwt_init_imp+0x24>)
 8003b96:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8003b9a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8003b9e:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
#ifdef STM32F7
  DWT->LAR = 0xC5ACCE55;
 8003ba2:	4b06      	ldr	r3, [pc, #24]	; (8003bbc <port_dwt_init_imp+0x28>)
 8003ba4:	4a06      	ldr	r2, [pc, #24]	; (8003bc0 <port_dwt_init_imp+0x2c>)
 8003ba6:	f8c3 2fb0 	str.w	r2, [r3, #4016]	; 0xfb0
#endif
  DWT->CYCCNT = 0;
 8003baa:	2200      	movs	r2, #0
 8003bac:	605a      	str	r2, [r3, #4]
  DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 8003bae:	681a      	ldr	r2, [r3, #0]
 8003bb0:	f042 0201 	orr.w	r2, r2, #1
 8003bb4:	601a      	str	r2, [r3, #0]
}
 8003bb6:	4770      	bx	lr
 8003bb8:	e000ed00 	.word	0xe000ed00
 8003bbc:	e0001000 	.word	0xe0001000
 8003bc0:	c5acce55 	.word	0xc5acce55

08003bc4 <ai_mnetwork_handle>:

AI_DECLARE_STATIC
struct network_instance *ai_mnetwork_handle(struct network_instance *inst)
{
    for (int i=0; i<AI_MNETWORK_NUMBER; i++) {
        if ((inst) && (&gnetworks[i] == inst))
 8003bc4:	4b05      	ldr	r3, [pc, #20]	; (8003bdc <ai_mnetwork_handle+0x18>)
 8003bc6:	b120      	cbz	r0, 8003bd2 <ai_mnetwork_handle+0xe>
            return inst;
        else if ((!inst) && (gnetworks[i].entry == NULL))
            return &gnetworks[i];
    }
    return NULL;
 8003bc8:	4298      	cmp	r0, r3
 8003bca:	bf0c      	ite	eq
 8003bcc:	4618      	moveq	r0, r3
 8003bce:	2000      	movne	r0, #0
 8003bd0:	4770      	bx	lr
        else if ((!inst) && (gnetworks[i].entry == NULL))
 8003bd2:	681a      	ldr	r2, [r3, #0]
            return inst;
 8003bd4:	2a00      	cmp	r2, #0
 8003bd6:	bf08      	it	eq
 8003bd8:	4618      	moveq	r0, r3
}
 8003bda:	4770      	bx	lr
 8003bdc:	200020e0 	.word	0x200020e0

08003be0 <ai_mnetwork_is_valid.constprop.0>:
ai_bool ai_mnetwork_is_valid(const char* name,
 8003be0:	b510      	push	{r4, lr}
    if (name && (strlen(entry->name) == strlen(name)) &&
 8003be2:	4604      	mov	r4, r0
 8003be4:	b160      	cbz	r0, 8003c00 <ai_mnetwork_is_valid.constprop.0+0x20>
 8003be6:	f7fc fb7b 	bl	80002e0 <strlen>
 8003bea:	2807      	cmp	r0, #7
 8003bec:	4602      	mov	r2, r0
 8003bee:	d107      	bne.n	8003c00 <ai_mnetwork_is_valid.constprop.0+0x20>
            (strncmp(entry->name, name, strlen(entry->name)) == 0))
 8003bf0:	4621      	mov	r1, r4
 8003bf2:	4804      	ldr	r0, [pc, #16]	; (8003c04 <ai_mnetwork_is_valid.constprop.0+0x24>)
 8003bf4:	f00b fe03 	bl	800f7fe <strncmp>
    if (name && (strlen(entry->name) == strlen(name)) &&
 8003bf8:	fab0 f080 	clz	r0, r0
 8003bfc:	0940      	lsrs	r0, r0, #5
}
 8003bfe:	bd10      	pop	{r4, pc}
    return false;
 8003c00:	2000      	movs	r0, #0
 8003c02:	e7fc      	b.n	8003bfe <ai_mnetwork_is_valid.constprop.0+0x1e>
 8003c04:	0801238c 	.word	0x0801238c

08003c08 <MX_X_CUBE_AI_Init>:
    aiSystemPerformanceInit();
 8003c08:	f7ff b86a 	b.w	8002ce0 <aiSystemPerformanceInit>

08003c0c <MX_X_CUBE_AI_Process>:
{
 8003c0c:	b508      	push	{r3, lr}
    aiSystemPerformanceProcess();
 8003c0e:	f7ff f91f 	bl	8002e50 <aiSystemPerformanceProcess>
    HAL_Delay(1000); /* delay 1s */
 8003c12:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
}
 8003c16:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_Delay(1000); /* delay 1s */
 8003c1a:	f7fd bbd5 	b.w	80013c8 <HAL_Delay>
	...

08003c20 <ai_mnetwork_find>:
    }
}

AI_API_ENTRY
const char* ai_mnetwork_find(const char *name, ai_int idx)
{
 8003c20:	b510      	push	{r4, lr}
 8003c22:	460c      	mov	r4, r1
    const ai_network_entry_t *entry;

    for (int i=0; i<AI_MNETWORK_NUMBER; i++) {
        entry = &networks[i];
        if (ai_mnetwork_is_valid(name, entry))
 8003c24:	f7ff ffdc 	bl	8003be0 <ai_mnetwork_is_valid.constprop.0>
 8003c28:	b920      	cbnz	r0, 8003c34 <ai_mnetwork_find+0x14>
        else {
            if (!idx--)
                return entry->name;
        }
    }
    return NULL;
 8003c2a:	2c00      	cmp	r4, #0
 8003c2c:	4802      	ldr	r0, [pc, #8]	; (8003c38 <ai_mnetwork_find+0x18>)
 8003c2e:	bf18      	it	ne
 8003c30:	2000      	movne	r0, #0
}
 8003c32:	bd10      	pop	{r4, pc}
            return entry->name;
 8003c34:	4800      	ldr	r0, [pc, #0]	; (8003c38 <ai_mnetwork_find+0x18>)
 8003c36:	e7fc      	b.n	8003c32 <ai_mnetwork_find+0x12>
 8003c38:	0801238c 	.word	0x0801238c

08003c3c <ai_mnetwork_create>:

AI_API_ENTRY
ai_error ai_mnetwork_create(const char *name, ai_handle* network,
        const ai_buffer* network_config)
{
 8003c3c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003c3e:	4606      	mov	r6, r0
    const ai_network_entry_t *entry;
    const ai_network_entry_t *found = NULL;
    ai_error err;
    struct network_instance *inst = ai_mnetwork_handle(NULL);
 8003c40:	2000      	movs	r0, #0
{
 8003c42:	9201      	str	r2, [sp, #4]
 8003c44:	460d      	mov	r5, r1
    struct network_instance *inst = ai_mnetwork_handle(NULL);
 8003c46:	f7ff ffbd 	bl	8003bc4 <ai_mnetwork_handle>

    if (!inst) {
 8003c4a:	4604      	mov	r4, r0
 8003c4c:	b1e0      	cbz	r0, 8003c88 <ai_mnetwork_create+0x4c>
        return err;
    }

    for (int i=0; i<AI_MNETWORK_NUMBER; i++) {
        entry = &networks[i];
        if (ai_mnetwork_is_valid(name, entry)) {
 8003c4e:	4630      	mov	r0, r6
 8003c50:	f7ff ffc6 	bl	8003be0 <ai_mnetwork_is_valid.constprop.0>
 8003c54:	9901      	ldr	r1, [sp, #4]
 8003c56:	b910      	cbnz	r0, 8003c5e <ai_mnetwork_create+0x22>
 8003c58:	2214      	movs	r2, #20
 8003c5a:	2310      	movs	r3, #16
 8003c5c:	e00d      	b.n	8003c7a <ai_mnetwork_create+0x3e>
    }

    if (network_config == NULL)
        err = found->ai_create(network, found->config);
    else
        err = found->ai_create(network, network_config);
 8003c5e:	4628      	mov	r0, r5
 8003c60:	f000 fbf8 	bl	8004454 <ai_network_create>
 8003c64:	f3c0 2317 	ubfx	r3, r0, #8, #24
 8003c68:	b2c2      	uxtb	r2, r0
    if ((err.code == AI_ERROR_CODE_NONE) && (err.type == AI_ERROR_NONE)) {
 8003c6a:	ea52 2103 	orrs.w	r1, r2, r3, lsl #8
 8003c6e:	d104      	bne.n	8003c7a <ai_mnetwork_create+0x3e>
        inst->entry = found;
 8003c70:	4906      	ldr	r1, [pc, #24]	; (8003c8c <ai_mnetwork_create+0x50>)
 8003c72:	6021      	str	r1, [r4, #0]
        inst->handle = *network;
 8003c74:	6829      	ldr	r1, [r5, #0]
 8003c76:	6061      	str	r1, [r4, #4]
        *network = (ai_handle*)inst;
 8003c78:	602c      	str	r4, [r5, #0]
        return err;
 8003c7a:	2000      	movs	r0, #0
 8003c7c:	f362 0007 	bfi	r0, r2, #0, #8
 8003c80:	f363 201f 	bfi	r0, r3, #8, #24
    }

    return err;
}
 8003c84:	b002      	add	sp, #8
 8003c86:	bd70      	pop	{r4, r5, r6, pc}
 8003c88:	2231      	movs	r2, #49	; 0x31
 8003c8a:	e7e6      	b.n	8003c5a <ai_mnetwork_create+0x1e>
 8003c8c:	08012394 	.word	0x08012394

08003c90 <ai_mnetwork_destroy>:

AI_API_ENTRY
ai_handle ai_mnetwork_destroy(ai_handle network)
{
 8003c90:	b538      	push	{r3, r4, r5, lr}
 8003c92:	4604      	mov	r4, r0
    struct network_instance *inn;
    inn =  ai_mnetwork_handle((struct network_instance *)network);
 8003c94:	f7ff ff96 	bl	8003bc4 <ai_mnetwork_handle>
    if (inn) {
 8003c98:	4605      	mov	r5, r0
 8003c9a:	b158      	cbz	r0, 8003cb4 <ai_mnetwork_destroy+0x24>
        ai_handle hdl = inn->entry->ai_destroy(inn->handle);
 8003c9c:	6803      	ldr	r3, [r0, #0]
 8003c9e:	6840      	ldr	r0, [r0, #4]
 8003ca0:	699b      	ldr	r3, [r3, #24]
 8003ca2:	4798      	blx	r3
        if (hdl != inn->handle) {
 8003ca4:	686b      	ldr	r3, [r5, #4]
 8003ca6:	4283      	cmp	r3, r0
 8003ca8:	d004      	beq.n	8003cb4 <ai_mnetwork_destroy+0x24>
        if ((inst) && (&gnetworks[i] == inst)) {
 8003caa:	4b03      	ldr	r3, [pc, #12]	; (8003cb8 <ai_mnetwork_destroy+0x28>)
 8003cac:	2400      	movs	r4, #0
 8003cae:	429d      	cmp	r5, r3
 8003cb0:	d100      	bne.n	8003cb4 <ai_mnetwork_destroy+0x24>
            gnetworks[i].entry = NULL;
 8003cb2:	602c      	str	r4, [r5, #0]
            ai_mnetwork_release_handle(inn);
            network = AI_HANDLE_NULL;
        }
    }
    return network;
}
 8003cb4:	4620      	mov	r0, r4
 8003cb6:	bd38      	pop	{r3, r4, r5, pc}
 8003cb8:	200020e0 	.word	0x200020e0

08003cbc <ai_mnetwork_get_report>:

AI_API_ENTRY
ai_bool ai_mnetwork_get_report(ai_handle network, ai_network_report* report)
{
 8003cbc:	b510      	push	{r4, lr}
    struct network_instance *inn;
    inn =  ai_mnetwork_handle((struct network_instance *)network);
 8003cbe:	f7ff ff81 	bl	8003bc4 <ai_mnetwork_handle>
    if (inn)
 8003cc2:	b128      	cbz	r0, 8003cd0 <ai_mnetwork_get_report+0x14>
        return inn->entry->ai_get_report(inn->handle, report);
 8003cc4:	6802      	ldr	r2, [r0, #0]
 8003cc6:	6840      	ldr	r0, [r0, #4]
 8003cc8:	68d2      	ldr	r2, [r2, #12]
    else
        return false;
}
 8003cca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return inn->entry->ai_get_report(inn->handle, report);
 8003cce:	4710      	bx	r2
}
 8003cd0:	bd10      	pop	{r4, pc}

08003cd2 <ai_mnetwork_get_error>:

AI_API_ENTRY
ai_error ai_mnetwork_get_error(ai_handle network)
{
 8003cd2:	b510      	push	{r4, lr}
    struct network_instance *inn;
    ai_error err;
    err.type = AI_ERROR_INVALID_PARAM;
    err.code = AI_ERROR_CODE_NETWORK;

    inn =  ai_mnetwork_handle((struct network_instance *)network);
 8003cd4:	f7ff ff76 	bl	8003bc4 <ai_mnetwork_handle>
    if (inn)
 8003cd8:	b128      	cbz	r0, 8003ce6 <ai_mnetwork_get_error+0x14>
        return inn->entry->ai_get_error(inn->handle);
 8003cda:	6803      	ldr	r3, [r0, #0]
 8003cdc:	6840      	ldr	r0, [r0, #4]
 8003cde:	695b      	ldr	r3, [r3, #20]
    else
        return err;
}
 8003ce0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return inn->entry->ai_get_error(inn->handle);
 8003ce4:	4718      	bx	r3
}
 8003ce6:	f241 0014 	movw	r0, #4116	; 0x1014
 8003cea:	bd10      	pop	{r4, pc}

08003cec <ai_mnetwork_init>:

AI_API_ENTRY
ai_bool ai_mnetwork_init(ai_handle network)
{
 8003cec:	b530      	push	{r4, r5, lr}
 8003cee:	b08f      	sub	sp, #60	; 0x3c
    struct network_instance *inn;
    ai_network_params par;

    inn =  ai_mnetwork_handle((struct network_instance *)network);
 8003cf0:	f7ff ff68 	bl	8003bc4 <ai_mnetwork_handle>
    if (inn) {
 8003cf4:	4604      	mov	r4, r0
 8003cf6:	b168      	cbz	r0, 8003d14 <ai_mnetwork_init+0x28>
        inn->entry->ai_data_params_get(&par);
 8003cf8:	6803      	ldr	r3, [r0, #0]
        for (int idx=0; idx < par.map_activations.size; idx++)
 8003cfa:	2500      	movs	r5, #0
        inn->entry->ai_data_params_get(&par);
 8003cfc:	4668      	mov	r0, sp
 8003cfe:	689b      	ldr	r3, [r3, #8]
 8003d00:	4798      	blx	r3
        for (int idx=0; idx < par.map_activations.size; idx++)
 8003d02:	f8bd 200e 	ldrh.w	r2, [sp, #14]
          AI_BUFFER_ARRAY_ITEM_SET_ADDRESS(&par.map_activations, idx, inn->entry->activations[idx]);
 8003d06:	6823      	ldr	r3, [r4, #0]
        for (int idx=0; idx < par.map_activations.size; idx++)
 8003d08:	42aa      	cmp	r2, r5
 8003d0a:	dc05      	bgt.n	8003d18 <ai_mnetwork_init+0x2c>
        return inn->entry->ai_init(inn->handle, &par);
 8003d0c:	69db      	ldr	r3, [r3, #28]
 8003d0e:	4669      	mov	r1, sp
 8003d10:	6860      	ldr	r0, [r4, #4]
 8003d12:	4798      	blx	r3
    }
    else
        return false;
}
 8003d14:	b00f      	add	sp, #60	; 0x3c
 8003d16:	bd30      	pop	{r4, r5, pc}
          AI_BUFFER_ARRAY_ITEM_SET_ADDRESS(&par.map_activations, idx, inn->entry->activations[idx]);
 8003d18:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003d1a:	4629      	mov	r1, r5
 8003d1c:	a803      	add	r0, sp, #12
 8003d1e:	f853 2025 	ldr.w	r2, [r3, r5, lsl #2]
        for (int idx=0; idx < par.map_activations.size; idx++)
 8003d22:	3501      	adds	r5, #1
          AI_BUFFER_ARRAY_ITEM_SET_ADDRESS(&par.map_activations, idx, inn->entry->activations[idx]);
 8003d24:	f000 fe3e 	bl	80049a4 <ai_buffer_array_item_set_address>
        for (int idx=0; idx < par.map_activations.size; idx++)
 8003d28:	e7eb      	b.n	8003d02 <ai_mnetwork_init+0x16>

08003d2a <ai_mnetwork_run>:

AI_API_ENTRY
ai_i32 ai_mnetwork_run(ai_handle network, const ai_buffer* input,
        ai_buffer* output)
{
 8003d2a:	b513      	push	{r0, r1, r4, lr}
 8003d2c:	9201      	str	r2, [sp, #4]
    struct network_instance* inn;
    inn =  ai_mnetwork_handle((struct network_instance *)network);
 8003d2e:	f7ff ff49 	bl	8003bc4 <ai_mnetwork_handle>
    if (inn)
 8003d32:	4603      	mov	r3, r0
 8003d34:	b140      	cbz	r0, 8003d48 <ai_mnetwork_run+0x1e>
        return inn->entry->ai_run(inn->handle, input, output);
 8003d36:	6800      	ldr	r0, [r0, #0]
 8003d38:	9a01      	ldr	r2, [sp, #4]
 8003d3a:	6a04      	ldr	r4, [r0, #32]
 8003d3c:	6858      	ldr	r0, [r3, #4]
 8003d3e:	4623      	mov	r3, r4
    else
        return 0;
}
 8003d40:	b002      	add	sp, #8
 8003d42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return inn->entry->ai_run(inn->handle, input, output);
 8003d46:	4718      	bx	r3
}
 8003d48:	b002      	add	sp, #8
 8003d4a:	bd10      	pop	{r4, pc}

08003d4c <ai_mnetwork_get_private_handle>:

AI_API_ENTRY
 int ai_mnetwork_get_private_handle(ai_handle network,
         ai_handle *phandle,
         ai_network_params *pparams)
 {
 8003d4c:	b538      	push	{r3, r4, r5, lr}
 8003d4e:	4615      	mov	r5, r2
     struct network_instance* inn;
     inn =  ai_mnetwork_handle((struct network_instance *)network);
 8003d50:	f7ff ff38 	bl	8003bc4 <ai_mnetwork_handle>
     if (inn && phandle && pparams) {
 8003d54:	b188      	cbz	r0, 8003d7a <ai_mnetwork_get_private_handle+0x2e>
 8003d56:	b181      	cbz	r1, 8003d7a <ai_mnetwork_get_private_handle+0x2e>
 8003d58:	b17d      	cbz	r5, 8003d7a <ai_mnetwork_get_private_handle+0x2e>
         *phandle = inn->handle;
 8003d5a:	6843      	ldr	r3, [r0, #4]
         *pparams = inn->params;
 8003d5c:	f100 0408 	add.w	r4, r0, #8
         *phandle = inn->handle;
 8003d60:	600b      	str	r3, [r1, #0]
         *pparams = inn->params;
 8003d62:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003d64:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8003d66:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003d68:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8003d6a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003d6c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8003d6e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8003d72:	e885 0003 	stmia.w	r5, {r0, r1}
         return 0;
 8003d76:	2000      	movs	r0, #0
     }
     else
         return -1;
 }
 8003d78:	bd38      	pop	{r3, r4, r5, pc}
         return -1;
 8003d7a:	f04f 30ff 	mov.w	r0, #4294967295
 8003d7e:	e7fb      	b.n	8003d78 <ai_mnetwork_get_private_handle+0x2c>

08003d80 <_write_number>:

  return count;
}

static int _write_number(uint64_t number, struct specifier *specifier)
{
 8003d80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  char sign_neg = 0;
  char chr;

  buf[idx--] = 0;

  if (specifier->flags & FLAG_IS_SIGNED) {
 8003d84:	6896      	ldr	r6, [r2, #8]
{
 8003d86:	b091      	sub	sp, #68	; 0x44
  buf[idx--] = 0;
 8003d88:	2500      	movs	r5, #0
{
 8003d8a:	4614      	mov	r4, r2
  if (specifier->flags & FLAG_IS_SIGNED) {
 8003d8c:	f016 0304 	ands.w	r3, r6, #4
  buf[idx--] = 0;
 8003d90:	f88d 503f 	strb.w	r5, [sp, #63]	; 0x3f
  if (specifier->flags & FLAG_IS_SIGNED) {
 8003d94:	d02a      	beq.n	8003dec <_write_number+0x6c>
    if ((int64_t)number < 0) {
 8003d96:	42a9      	cmp	r1, r5
 8003d98:	da08      	bge.n	8003dac <_write_number+0x2c>
      number = -number;
      sign_neg = '-';
      specifier->width -= 1;
 8003d9a:	6813      	ldr	r3, [r2, #0]
      number = -number;
 8003d9c:	4240      	negs	r0, r0
      sign_neg = '-';
 8003d9e:	f04f 052d 	mov.w	r5, #45	; 0x2d
      specifier->width -= 1;
 8003da2:	f103 33ff 	add.w	r3, r3, #4294967295
      number = -number;
 8003da6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
      specifier->width -= 1;
 8003daa:	6013      	str	r3, [r2, #0]
 8003dac:	f016 0f08 	tst.w	r6, #8
 8003db0:	f10d 093f 	add.w	r9, sp, #63	; 0x3f
  do {
    uint64_t t;
    if (specifier->flags & FLAG_HEX) {
      chr = number & 0x0F;
      t = number >> 4;
      chr = (chr >= 10) ? (chr + (specifier->flags & FLAG_CAPS ? 'A' : 'a') - 10) : (chr + '0');
 8003db4:	f04f 073e 	mov.w	r7, #62	; 0x3e
    if (specifier->flags & FLAG_HEX) {
 8003db8:	f006 0a10 	and.w	sl, r6, #16
 8003dbc:	bf14      	ite	ne
 8003dbe:	f04f 0841 	movne.w	r8, #65	; 0x41
 8003dc2:	f04f 0861 	moveq.w	r8, #97	; 0x61
      chr = (chr >= 10) ? (chr + (specifier->flags & FLAG_CAPS ? 'A' : 'a') - 10) : (chr + '0');
 8003dc6:	f1a8 080a 	sub.w	r8, r8, #10
      chr = number & 0x0F;
 8003dca:	fa5f fb80 	uxtb.w	fp, r0
    if (specifier->flags & FLAG_HEX) {
 8003dce:	f1ba 0f00 	cmp.w	sl, #0
 8003dd2:	d033      	beq.n	8003e3c <_write_number+0xbc>
      chr = number & 0x0F;
 8003dd4:	f00b 030f 	and.w	r3, fp, #15
      t = number >> 4;
 8003dd8:	0900      	lsrs	r0, r0, #4
      chr = (chr >= 10) ? (chr + (specifier->flags & FLAG_CAPS ? 'A' : 'a') - 10) : (chr + '0');
 8003dda:	2b09      	cmp	r3, #9
      t = number >> 4;
 8003ddc:	ea40 7001 	orr.w	r0, r0, r1, lsl #28
 8003de0:	ea4f 1111 	mov.w	r1, r1, lsr #4
      chr = (chr >= 10) ? (chr + (specifier->flags & FLAG_CAPS ? 'A' : 'a') - 10) : (chr + '0');
 8003de4:	d906      	bls.n	8003df4 <_write_number+0x74>
 8003de6:	4443      	add	r3, r8
    } else {
      t = number / 10;
      chr = (number - t * 10) + '0';
 8003de8:	b2db      	uxtb	r3, r3
 8003dea:	e004      	b.n	8003df6 <_write_number+0x76>
  char sign_neg = 0;
 8003dec:	461d      	mov	r5, r3
 8003dee:	e7dd      	b.n	8003dac <_write_number+0x2c>
    }
    number = t;
    buf[idx--] = chr;
 8003df0:	4617      	mov	r7, r2
 8003df2:	e7ea      	b.n	8003dca <_write_number+0x4a>
      chr = (chr >= 10) ? (chr + (specifier->flags & FLAG_CAPS ? 'A' : 'a') - 10) : (chr + '0');
 8003df4:	3330      	adds	r3, #48	; 0x30
    buf[idx--] = chr;
 8003df6:	f809 3d01 	strb.w	r3, [r9, #-1]!
    count++;
  } while (number);
 8003dfa:	ea50 0301 	orrs.w	r3, r0, r1
    buf[idx--] = chr;
 8003dfe:	f107 32ff 	add.w	r2, r7, #4294967295
    count++;
 8003e02:	f1c7 0b3f 	rsb	fp, r7, #63	; 0x3f
  } while (number);
 8003e06:	d1f3      	bne.n	8003df0 <_write_number+0x70>

  if ((sign_neg) && (!(specifier->flags & FLAG_ZERO_EXTEND))) {
 8003e08:	f006 0101 	and.w	r1, r6, #1
 8003e0c:	b155      	cbz	r5, 8003e24 <_write_number+0xa4>
 8003e0e:	b949      	cbnz	r1, 8003e24 <_write_number+0xa4>
    buf[idx--] = sign_neg;
 8003e10:	f102 0340 	add.w	r3, r2, #64	; 0x40
    count++;
 8003e14:	f1c7 0b40 	rsb	fp, r7, #64	; 0x40
    buf[idx--] = sign_neg;
 8003e18:	eb0d 0203 	add.w	r2, sp, r3
 8003e1c:	232d      	movs	r3, #45	; 0x2d
 8003e1e:	f802 3c40 	strb.w	r3, [r2, #-64]
 8003e22:	1eba      	subs	r2, r7, #2
 8003e24:	2900      	cmp	r1, #0
  }

  while ((count < specifier->width) && (!(specifier->flags & FLAG_NEG_PAD))) {
 8003e26:	6823      	ldr	r3, [r4, #0]
 8003e28:	f006 0602 	and.w	r6, r6, #2
 8003e2c:	bf14      	ite	ne
 8003e2e:	2130      	movne	r1, #48	; 0x30
 8003e30:	2120      	moveq	r1, #32
 8003e32:	455b      	cmp	r3, fp
 8003e34:	dd13      	ble.n	8003e5e <_write_number+0xde>
 8003e36:	b166      	cbz	r6, 8003e52 <_write_number+0xd2>
    else
      buf[idx--] = ' ';
    count++;
  }

  if ((sign_neg) && (count < (specifier->width + 1))) {
 8003e38:	b9a5      	cbnz	r5, 8003e64 <_write_number+0xe4>
 8003e3a:	e01c      	b.n	8003e76 <_write_number+0xf6>
      t = number / 10;
 8003e3c:	220a      	movs	r2, #10
 8003e3e:	2300      	movs	r3, #0
 8003e40:	f7fc fc12 	bl	8000668 <__aeabi_uldivmod>
      chr = (number - t * 10) + '0';
 8003e44:	f10b 0330 	add.w	r3, fp, #48	; 0x30
 8003e48:	eb00 0280 	add.w	r2, r0, r0, lsl #2
 8003e4c:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8003e50:	e7ca      	b.n	8003de8 <_write_number+0x68>
    if (specifier->flags & FLAG_ZERO_EXTEND)
 8003e52:	f80d 1002 	strb.w	r1, [sp, r2]
    count++;
 8003e56:	f10b 0b01 	add.w	fp, fp, #1
 8003e5a:	3a01      	subs	r2, #1
 8003e5c:	e7e9      	b.n	8003e32 <_write_number+0xb2>
  if ((sign_neg) && (count < (specifier->width + 1))) {
 8003e5e:	b155      	cbz	r5, 8003e76 <_write_number+0xf6>
 8003e60:	455b      	cmp	r3, fp
 8003e62:	d108      	bne.n	8003e76 <_write_number+0xf6>
    buf[idx--] = sign_neg;
 8003e64:	f102 0340 	add.w	r3, r2, #64	; 0x40
 8003e68:	212d      	movs	r1, #45	; 0x2d
    count++;
 8003e6a:	f10b 0b01 	add.w	fp, fp, #1
    buf[idx--] = sign_neg;
 8003e6e:	3a01      	subs	r2, #1
 8003e70:	446b      	add	r3, sp
 8003e72:	f803 1c40 	strb.w	r1, [r3, #-64]
  }

  idx++;


  for(int i = 0; i < count; i++) {
 8003e76:	eb0d 0602 	add.w	r6, sp, r2
 8003e7a:	2500      	movs	r5, #0
 8003e7c:	3501      	adds	r5, #1
    specifier->putc_fct(specifier->user, (buf + idx)[i]);
 8003e7e:	68e3      	ldr	r3, [r4, #12]
 8003e80:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8003e84:	6920      	ldr	r0, [r4, #16]
 8003e86:	4798      	blx	r3
  for(int i = 0; i < count; i++) {
 8003e88:	45ab      	cmp	fp, r5
 8003e8a:	d1f7      	bne.n	8003e7c <_write_number+0xfc>
  }

  if (specifier->flags & FLAG_NEG_PAD) {
 8003e8c:	68a3      	ldr	r3, [r4, #8]
 8003e8e:	079b      	lsls	r3, r3, #30
 8003e90:	d408      	bmi.n	8003ea4 <_write_number+0x124>
      _WRITE_C(' ');
    }
  }

  return count;
}
 8003e92:	4628      	mov	r0, r5
 8003e94:	b011      	add	sp, #68	; 0x44
 8003e96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      _WRITE_C(' ');
 8003e9a:	3501      	adds	r5, #1
 8003e9c:	68e3      	ldr	r3, [r4, #12]
 8003e9e:	2120      	movs	r1, #32
 8003ea0:	6920      	ldr	r0, [r4, #16]
 8003ea2:	4798      	blx	r3
    while (count < specifier->width) {
 8003ea4:	6823      	ldr	r3, [r4, #0]
 8003ea6:	42ab      	cmp	r3, r5
 8003ea8:	dcf7      	bgt.n	8003e9a <_write_number+0x11a>
 8003eaa:	e7f2      	b.n	8003e92 <_write_number+0x112>

08003eac <vlc_print>:
{
  return *(*fmtP)++;
}

int vlc_print(void (*putc_fct)(void*, const char), void *user, const char* fmt, va_list vl)
{
 8003eac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003eb0:	461c      	mov	r4, r3
 8003eb2:	4606      	mov	r6, r0
  char c, t;
  int count = 0;
 8003eb4:	2300      	movs	r3, #0
{
 8003eb6:	460f      	mov	r7, r1
 8003eb8:	ed2d 8b02 	vpush	{d8}
 8003ebc:	b09b      	sub	sp, #108	; 0x6c
  int count = 0;
 8003ebe:	9301      	str	r3, [sp, #4]
  return *(*fmtP)++;
 8003ec0:	4613      	mov	r3, r2
 8003ec2:	f813 1b01 	ldrb.w	r1, [r3], #1
 8003ec6:	9302      	str	r3, [sp, #8]
  bool error = false;

  while (((c = _getChar(&fmt)) != 0) && (!error))
 8003ec8:	b929      	cbnz	r1, 8003ed6 <vlc_print+0x2a>
      putc_fct(user, c);
      count++;
    }
  }
  return count;
}
 8003eca:	9801      	ldr	r0, [sp, #4]
 8003ecc:	b01b      	add	sp, #108	; 0x6c
 8003ece:	ecbd 8b02 	vpop	{d8}
 8003ed2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (c == '\n')
 8003ed6:	290a      	cmp	r1, #10
 8003ed8:	d104      	bne.n	8003ee4 <vlc_print+0x38>
      putc_fct(user, c);
 8003eda:	4638      	mov	r0, r7
 8003edc:	47b0      	blx	r6
      count++;
 8003ede:	9b01      	ldr	r3, [sp, #4]
 8003ee0:	3301      	adds	r3, #1
 8003ee2:	e119      	b.n	8004118 <vlc_print+0x26c>
    else if (c == '%')
 8003ee4:	2925      	cmp	r1, #37	; 0x25
 8003ee6:	d1f8      	bne.n	8003eda <vlc_print+0x2e>
      struct specifier specifier = { 0, 0, 0, putc_fct, user };
 8003ee8:	2300      	movs	r3, #0
 8003eea:	9709      	str	r7, [sp, #36]	; 0x24
 8003eec:	469c      	mov	ip, r3
 8003eee:	469e      	mov	lr, r3
 8003ef0:	461a      	mov	r2, r3
 8003ef2:	4698      	mov	r8, r3
 8003ef4:	4618      	mov	r0, r3
      bool long_type = false;
 8003ef6:	469b      	mov	fp, r3
      bool has_precision = false;
 8003ef8:	4699      	mov	r9, r3
      struct specifier specifier = { 0, 0, 0, putc_fct, user };
 8003efa:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8003efe:	e9cd 3607 	strd	r3, r6, [sp, #28]
  return *(*fmtP)++;
 8003f02:	9d02      	ldr	r5, [sp, #8]
 8003f04:	f815 1b01 	ldrb.w	r1, [r5], #1
 8003f08:	9502      	str	r5, [sp, #8]
        if (!c)
 8003f0a:	b329      	cbz	r1, 8003f58 <vlc_print+0xac>
        else if (c == '0')
 8003f0c:	2939      	cmp	r1, #57	; 0x39
 8003f0e:	d814      	bhi.n	8003f3a <vlc_print+0x8e>
 8003f10:	292c      	cmp	r1, #44	; 0x2c
 8003f12:	d91e      	bls.n	8003f52 <vlc_print+0xa6>
 8003f14:	f1a1 052d 	sub.w	r5, r1, #45	; 0x2d
 8003f18:	2d0c      	cmp	r5, #12
 8003f1a:	d811      	bhi.n	8003f40 <vlc_print+0x94>
 8003f1c:	e8df f015 	tbh	[pc, r5, lsl #1]
 8003f20:	02270048 	.word	0x02270048
 8003f24:	00340010 	.word	0x00340010
 8003f28:	004b004b 	.word	0x004b004b
 8003f2c:	004b004b 	.word	0x004b004b
 8003f30:	004b004b 	.word	0x004b004b
 8003f34:	004b004b 	.word	0x004b004b
 8003f38:	004b      	.short	0x004b
 8003f3a:	296c      	cmp	r1, #108	; 0x6c
 8003f3c:	f000 822e 	beq.w	800439c <vlc_print+0x4f0>
          switch(c)
 8003f40:	2978      	cmp	r1, #120	; 0x78
 8003f42:	d809      	bhi.n	8003f58 <vlc_print+0xac>
 8003f44:	2962      	cmp	r1, #98	; 0x62
 8003f46:	d841      	bhi.n	8003fcc <vlc_print+0x120>
 8003f48:	2946      	cmp	r1, #70	; 0x46
 8003f4a:	f000 813b 	beq.w	80041c4 <vlc_print+0x318>
 8003f4e:	2958      	cmp	r1, #88	; 0x58
 8003f50:	d070      	beq.n	8004034 <vlc_print+0x188>
 8003f52:	2925      	cmp	r1, #37	; 0x25
 8003f54:	f000 8096 	beq.w	8004084 <vlc_print+0x1d8>
 8003f58:	b10b      	cbz	r3, 8003f5e <vlc_print+0xb2>
 8003f5a:	f8cd c01c 	str.w	ip, [sp, #28]
 8003f5e:	f1be 0f00 	cmp.w	lr, #0
 8003f62:	d000      	beq.n	8003f66 <vlc_print+0xba>
 8003f64:	9206      	str	r2, [sp, #24]
 8003f66:	f1b8 0f00 	cmp.w	r8, #0
 8003f6a:	d000      	beq.n	8003f6e <vlc_print+0xc2>
 8003f6c:	9005      	str	r0, [sp, #20]
        putc_fct(user, '<');
 8003f6e:	213c      	movs	r1, #60	; 0x3c
 8003f70:	4638      	mov	r0, r7
 8003f72:	47b0      	blx	r6
        putc_fct(user, '!');
 8003f74:	2121      	movs	r1, #33	; 0x21
 8003f76:	4638      	mov	r0, r7
        va_arg(vl, signed long);
 8003f78:	3404      	adds	r4, #4
        putc_fct(user, '!');
 8003f7a:	47b0      	blx	r6
        putc_fct(user, '>');
 8003f7c:	213e      	movs	r1, #62	; 0x3e
 8003f7e:	4638      	mov	r0, r7
 8003f80:	47b0      	blx	r6
        count += 3;
 8003f82:	9b01      	ldr	r3, [sp, #4]
 8003f84:	3303      	adds	r3, #3
 8003f86:	e0c7      	b.n	8004118 <vlc_print+0x26c>
          if (!specifier.width && !specifier.precision) {
 8003f88:	ea50 0102 	orrs.w	r1, r0, r2
 8003f8c:	d105      	bne.n	8003f9a <vlc_print+0xee>
            specifier.flags |= FLAG_ZERO_EXTEND;
 8003f8e:	f04c 0c01 	orr.w	ip, ip, #1
 8003f92:	460a      	mov	r2, r1
 8003f94:	4608      	mov	r0, r1
 8003f96:	2301      	movs	r3, #1
 8003f98:	e7b3      	b.n	8003f02 <vlc_print+0x56>
            specifier.precision = specifier.precision * 10 + (c - '0');
 8003f9a:	210a      	movs	r1, #10
          } else if (has_precision) {
 8003f9c:	f1b9 0f00 	cmp.w	r9, #0
 8003fa0:	d002      	beq.n	8003fa8 <vlc_print+0xfc>
            specifier.precision = specifier.precision * 10 + (c - '0');
 8003fa2:	434a      	muls	r2, r1
 8003fa4:	46ce      	mov	lr, r9
 8003fa6:	e7ac      	b.n	8003f02 <vlc_print+0x56>
            specifier.width = specifier.width * 10 + (c - '0');
 8003fa8:	4348      	muls	r0, r1
            specifier.width = specifier.width * 10 + (c - '0');
 8003faa:	f04f 0801 	mov.w	r8, #1
 8003fae:	e7a8      	b.n	8003f02 <vlc_print+0x56>
          specifier.flags |= FLAG_NEG_PAD;
 8003fb0:	f04c 0c02 	orr.w	ip, ip, #2
 8003fb4:	e7ef      	b.n	8003f96 <vlc_print+0xea>
            specifier.precision = specifier.precision * 10 + (c - '0');
 8003fb6:	3930      	subs	r1, #48	; 0x30
 8003fb8:	250a      	movs	r5, #10
          if (has_precision) {
 8003fba:	f1b9 0f00 	cmp.w	r9, #0
 8003fbe:	d002      	beq.n	8003fc6 <vlc_print+0x11a>
            specifier.precision = specifier.precision * 10 + (c - '0');
 8003fc0:	fb05 1202 	mla	r2, r5, r2, r1
 8003fc4:	e7ee      	b.n	8003fa4 <vlc_print+0xf8>
            specifier.width = specifier.width * 10 + (c - '0');
 8003fc6:	fb05 1000 	mla	r0, r5, r0, r1
 8003fca:	e7ee      	b.n	8003faa <vlc_print+0xfe>
          switch(c)
 8003fcc:	3963      	subs	r1, #99	; 0x63
 8003fce:	2915      	cmp	r1, #21
 8003fd0:	d8c2      	bhi.n	8003f58 <vlc_print+0xac>
 8003fd2:	f20f 0908 	addw	r9, pc, #8
 8003fd6:	f859 f021 	ldr.w	pc, [r9, r1, lsl #2]
 8003fda:	bf00      	nop
 8003fdc:	0800409f 	.word	0x0800409f
 8003fe0:	0800417d 	.word	0x0800417d
 8003fe4:	08003f59 	.word	0x08003f59
 8003fe8:	080041c5 	.word	0x080041c5
 8003fec:	08003f59 	.word	0x08003f59
 8003ff0:	08003f59 	.word	0x08003f59
 8003ff4:	0800417d 	.word	0x0800417d
 8003ff8:	08003f59 	.word	0x08003f59
 8003ffc:	08003f59 	.word	0x08003f59
 8004000:	08003f59 	.word	0x08003f59
 8004004:	08003f59 	.word	0x08003f59
 8004008:	08003f59 	.word	0x08003f59
 800400c:	08003f59 	.word	0x08003f59
 8004010:	08004161 	.word	0x08004161
 8004014:	08003f59 	.word	0x08003f59
 8004018:	08003f59 	.word	0x08003f59
 800401c:	080040bb 	.word	0x080040bb
 8004020:	08003f59 	.word	0x08003f59
 8004024:	08004375 	.word	0x08004375
 8004028:	08003f59 	.word	0x08003f59
 800402c:	08003f59 	.word	0x08003f59
 8004030:	08004055 	.word	0x08004055
 8004034:	b10b      	cbz	r3, 800403a <vlc_print+0x18e>
 8004036:	f8cd c01c 	str.w	ip, [sp, #28]
 800403a:	f1be 0f00 	cmp.w	lr, #0
 800403e:	d000      	beq.n	8004042 <vlc_print+0x196>
 8004040:	9206      	str	r2, [sp, #24]
 8004042:	f1b8 0f00 	cmp.w	r8, #0
 8004046:	d000      	beq.n	800404a <vlc_print+0x19e>
 8004048:	9005      	str	r0, [sp, #20]
            specifier.flags |= FLAG_CAPS;
 800404a:	9b07      	ldr	r3, [sp, #28]
 800404c:	f043 0308 	orr.w	r3, r3, #8
 8004050:	9307      	str	r3, [sp, #28]
 8004052:	e00a      	b.n	800406a <vlc_print+0x1be>
 8004054:	b10b      	cbz	r3, 800405a <vlc_print+0x1ae>
 8004056:	f8cd c01c 	str.w	ip, [sp, #28]
 800405a:	f1be 0f00 	cmp.w	lr, #0
 800405e:	d000      	beq.n	8004062 <vlc_print+0x1b6>
 8004060:	9206      	str	r2, [sp, #24]
 8004062:	f1b8 0f00 	cmp.w	r8, #0
 8004066:	d000      	beq.n	800406a <vlc_print+0x1be>
 8004068:	9005      	str	r0, [sp, #20]
            specifier.flags |= FLAG_HEX;
 800406a:	9b07      	ldr	r3, [sp, #28]
            count += _write_number(val, &specifier);
 800406c:	aa05      	add	r2, sp, #20
 800406e:	f854 0b04 	ldr.w	r0, [r4], #4
 8004072:	2100      	movs	r1, #0
            specifier.flags |= FLAG_HEX;
 8004074:	f043 0310 	orr.w	r3, r3, #16
 8004078:	9307      	str	r3, [sp, #28]
            count += _write_number(val, &specifier);
 800407a:	f7ff fe81 	bl	8003d80 <_write_number>
 800407e:	9b01      	ldr	r3, [sp, #4]
 8004080:	4403      	add	r3, r0
 8004082:	e049      	b.n	8004118 <vlc_print+0x26c>
 8004084:	b10b      	cbz	r3, 800408a <vlc_print+0x1de>
 8004086:	f8cd c01c 	str.w	ip, [sp, #28]
 800408a:	f1be 0f00 	cmp.w	lr, #0
 800408e:	d000      	beq.n	8004092 <vlc_print+0x1e6>
 8004090:	9206      	str	r2, [sp, #24]
 8004092:	f1b8 0f00 	cmp.w	r8, #0
 8004096:	d000      	beq.n	800409a <vlc_print+0x1ee>
 8004098:	9005      	str	r0, [sp, #20]
            putc_fct(user, c);
 800409a:	2125      	movs	r1, #37	; 0x25
 800409c:	e71d      	b.n	8003eda <vlc_print+0x2e>
 800409e:	b10b      	cbz	r3, 80040a4 <vlc_print+0x1f8>
 80040a0:	f8cd c01c 	str.w	ip, [sp, #28]
 80040a4:	f1be 0f00 	cmp.w	lr, #0
 80040a8:	d000      	beq.n	80040ac <vlc_print+0x200>
 80040aa:	9206      	str	r2, [sp, #24]
 80040ac:	f1b8 0f00 	cmp.w	r8, #0
 80040b0:	d000      	beq.n	80040b4 <vlc_print+0x208>
 80040b2:	9005      	str	r0, [sp, #20]
            putc_fct(user, t);
 80040b4:	f814 1b04 	ldrb.w	r1, [r4], #4
 80040b8:	e70f      	b.n	8003eda <vlc_print+0x2e>
 80040ba:	b10b      	cbz	r3, 80040c0 <vlc_print+0x214>
 80040bc:	f8cd c01c 	str.w	ip, [sp, #28]
 80040c0:	f1be 0f00 	cmp.w	lr, #0
 80040c4:	d000      	beq.n	80040c8 <vlc_print+0x21c>
 80040c6:	9206      	str	r2, [sp, #24]
 80040c8:	f1b8 0f00 	cmp.w	r8, #0
 80040cc:	d000      	beq.n	80040d0 <vlc_print+0x224>
 80040ce:	9005      	str	r0, [sp, #20]
            if (!str) str = "(null)";
 80040d0:	4bb4      	ldr	r3, [pc, #720]	; (80043a4 <vlc_print+0x4f8>)
            str = va_arg(vl, char*);
 80040d2:	f854 bb04 	ldr.w	fp, [r4], #4
            if (!str) str = "(null)";
 80040d6:	f1bb 0f00 	cmp.w	fp, #0
 80040da:	bf08      	it	eq
 80040dc:	469b      	moveq	fp, r3
  int len = strlen(str);
 80040de:	4658      	mov	r0, fp
 80040e0:	f7fc f8fe 	bl	80002e0 <strlen>
  if (specifier->precision) {
 80040e4:	9b06      	ldr	r3, [sp, #24]
  int len = strlen(str);
 80040e6:	4681      	mov	r9, r0
  if (specifier->precision) {
 80040e8:	b113      	cbz	r3, 80040f0 <vlc_print+0x244>
    len = (len > specifier->precision)?specifier->precision:len;
 80040ea:	4298      	cmp	r0, r3
 80040ec:	bfa8      	it	ge
 80040ee:	4699      	movge	r9, r3
  if (!(specifier->flags & FLAG_NEG_PAD)) {
 80040f0:	9b07      	ldr	r3, [sp, #28]
 80040f2:	f013 0a02 	ands.w	sl, r3, #2
 80040f6:	d01c      	beq.n	8004132 <vlc_print+0x286>
  int count = 0;
 80040f8:	f04f 0800 	mov.w	r8, #0
 80040fc:	465b      	mov	r3, fp
  for (int i = 0; i < len; i++) {
 80040fe:	eba3 020b 	sub.w	r2, r3, fp
 8004102:	4591      	cmp	r9, r2
 8004104:	dc17      	bgt.n	8004136 <vlc_print+0x28a>
 8004106:	f1b9 0f00 	cmp.w	r9, #0
 800410a:	bfa8      	it	ge
 800410c:	44c8      	addge	r8, r9
  if (specifier->flags & FLAG_NEG_PAD) {
 800410e:	f1ba 0f00 	cmp.w	sl, #0
 8004112:	d122      	bne.n	800415a <vlc_print+0x2ae>
            count += _write_string(str, &specifier);
 8004114:	9b01      	ldr	r3, [sp, #4]
 8004116:	4443      	add	r3, r8
      count++;
 8004118:	9301      	str	r3, [sp, #4]
 800411a:	e049      	b.n	80041b0 <vlc_print+0x304>
      _WRITE_C(' ');
 800411c:	f108 0801 	add.w	r8, r8, #1
 8004120:	2120      	movs	r1, #32
 8004122:	4638      	mov	r0, r7
 8004124:	47b0      	blx	r6
    for(int i = len; i < specifier->width; i++) {
 8004126:	eb08 0309 	add.w	r3, r8, r9
 800412a:	9a05      	ldr	r2, [sp, #20]
 800412c:	429a      	cmp	r2, r3
 800412e:	dcf5      	bgt.n	800411c <vlc_print+0x270>
 8004130:	e7e4      	b.n	80040fc <vlc_print+0x250>
  int count = 0;
 8004132:	46d0      	mov	r8, sl
 8004134:	e7f7      	b.n	8004126 <vlc_print+0x27a>
    _WRITE_C(*str++);
 8004136:	f813 1b01 	ldrb.w	r1, [r3], #1
 800413a:	4638      	mov	r0, r7
 800413c:	9303      	str	r3, [sp, #12]
 800413e:	47b0      	blx	r6
 8004140:	9b03      	ldr	r3, [sp, #12]
  for (int i = 0; i < len; i++) {
 8004142:	e7dc      	b.n	80040fe <vlc_print+0x252>
      _WRITE_C(' ');
 8004144:	f108 0801 	add.w	r8, r8, #1
 8004148:	2120      	movs	r1, #32
 800414a:	4638      	mov	r0, r7
 800414c:	47b0      	blx	r6
    for(int i = len; i < specifier->width; i++) {
 800414e:	eb09 0308 	add.w	r3, r9, r8
 8004152:	9a05      	ldr	r2, [sp, #20]
 8004154:	429a      	cmp	r2, r3
 8004156:	dcf5      	bgt.n	8004144 <vlc_print+0x298>
 8004158:	e7dc      	b.n	8004114 <vlc_print+0x268>
 800415a:	eba9 0908 	sub.w	r9, r9, r8
 800415e:	e7f6      	b.n	800414e <vlc_print+0x2a2>
 8004160:	b10b      	cbz	r3, 8004166 <vlc_print+0x2ba>
 8004162:	f8cd c01c 	str.w	ip, [sp, #28]
 8004166:	f1be 0f00 	cmp.w	lr, #0
 800416a:	d000      	beq.n	800416e <vlc_print+0x2c2>
 800416c:	9206      	str	r2, [sp, #24]
            specifier.flags |= FLAG_ZERO_EXTEND;
 800416e:	9b07      	ldr	r3, [sp, #28]
 8004170:	f043 0301 	orr.w	r3, r3, #1
 8004174:	9307      	str	r3, [sp, #28]
            specifier.width = 8;
 8004176:	2308      	movs	r3, #8
 8004178:	9305      	str	r3, [sp, #20]
 800417a:	e766      	b.n	800404a <vlc_print+0x19e>
 800417c:	b10b      	cbz	r3, 8004182 <vlc_print+0x2d6>
 800417e:	f8cd c01c 	str.w	ip, [sp, #28]
 8004182:	f1be 0f00 	cmp.w	lr, #0
 8004186:	d000      	beq.n	800418a <vlc_print+0x2de>
 8004188:	9206      	str	r2, [sp, #24]
 800418a:	f1b8 0f00 	cmp.w	r8, #0
 800418e:	d000      	beq.n	8004192 <vlc_print+0x2e6>
 8004190:	9005      	str	r0, [sp, #20]
            specifier.flags |= FLAG_IS_SIGNED;
 8004192:	9b07      	ldr	r3, [sp, #28]
            val = va_arg(vl, unsigned int);
 8004194:	f104 0804 	add.w	r8, r4, #4
            specifier.flags |= FLAG_IS_SIGNED;
 8004198:	f043 0304 	orr.w	r3, r3, #4
 800419c:	9307      	str	r3, [sp, #28]
                val = va_arg(vl, signed int);
 800419e:	6820      	ldr	r0, [r4, #0]
 80041a0:	17c1      	asrs	r1, r0, #31
            count += _write_number(val, &specifier);
 80041a2:	aa05      	add	r2, sp, #20
            break;
 80041a4:	4644      	mov	r4, r8
            count += _write_number(val, &specifier);
 80041a6:	f7ff fdeb 	bl	8003d80 <_write_number>
 80041aa:	9b01      	ldr	r3, [sp, #4]
 80041ac:	4403      	add	r3, r0
 80041ae:	9301      	str	r3, [sp, #4]
            break;
 80041b0:	9a02      	ldr	r2, [sp, #8]
 80041b2:	e685      	b.n	8003ec0 <vlc_print+0x14>
                val = va_arg(vl, uint64_t);
 80041b4:	3407      	adds	r4, #7
 80041b6:	f024 0407 	bic.w	r4, r4, #7
 80041ba:	46a0      	mov	r8, r4
 80041bc:	6861      	ldr	r1, [r4, #4]
 80041be:	f858 0b08 	ldr.w	r0, [r8], #8
 80041c2:	e7ee      	b.n	80041a2 <vlc_print+0x2f6>
 80041c4:	b10b      	cbz	r3, 80041ca <vlc_print+0x31e>
 80041c6:	f8cd c01c 	str.w	ip, [sp, #28]
 80041ca:	f1be 0f00 	cmp.w	lr, #0
 80041ce:	d000      	beq.n	80041d2 <vlc_print+0x326>
 80041d0:	9206      	str	r2, [sp, #24]
 80041d2:	f1b8 0f00 	cmp.w	r8, #0
 80041d6:	d000      	beq.n	80041da <vlc_print+0x32e>
 80041d8:	9005      	str	r0, [sp, #20]
            dbl = va_arg(vl, double);
 80041da:	3407      	adds	r4, #7
            if (specifier.precision == 0)
 80041dc:	9b06      	ldr	r3, [sp, #24]
            dbl = va_arg(vl, double);
 80041de:	f024 0407 	bic.w	r4, r4, #7
 80041e2:	ecb4 8b02 	vldmia	r4!, {d8}
            if (specifier.precision == 0)
 80041e6:	b90b      	cbnz	r3, 80041ec <vlc_print+0x340>
              specifier.precision = 6;
 80041e8:	2306      	movs	r3, #6
 80041ea:	9306      	str	r3, [sp, #24]
  double mul = 1.0;
 80041ec:	eeb7 7b00 	vmov.f64	d7, #112	; 0x3f800000  1.0
  for (int i=0;i <specifier->precision; i++)
 80041f0:	f8dd 8018 	ldr.w	r8, [sp, #24]
    mul *= 10;
 80041f4:	eeb2 6b04 	vmov.f64	d6, #36	; 0x41200000  10.0
  for (int i=0;i <specifier->precision; i++)
 80041f8:	2300      	movs	r3, #0
 80041fa:	4543      	cmp	r3, r8
 80041fc:	f2c0 80ab 	blt.w	8004356 <vlc_print+0x4aa>
  if (is_signed)
 8004200:	eeb5 8bc0 	vcmpe.f64	d8, #0.0
 8004204:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004208:	f140 80a9 	bpl.w	800435e <vlc_print+0x4b2>
    number = -number;
 800420c:	eeb1 5b48 	vneg.f64	d5, d8
  number += (half_ / mul);
 8004210:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
  uint32_t count = 0;
 8004214:	f04f 0900 	mov.w	r9, #0
  uint32_t idx = sizeof(buf) - 1;
 8004218:	f04f 0a3f 	mov.w	sl, #63	; 0x3f
  number += (half_ / mul);
 800421c:	ee84 6b07 	vdiv.f64	d6, d4, d7
 8004220:	ee36 6b05 	vadd.f64	d6, d6, d5
  val = (uint64_t)(number * mul);
 8004224:	ee26 7b07 	vmul.f64	d7, d6, d7
 8004228:	ec51 0b17 	vmov	r0, r1, d7
 800422c:	f7fc fa68 	bl	8000700 <__aeabi_d2ulz>
 8004230:	4602      	mov	r2, r0
    uint64_t t = val / 10;
 8004232:	4693      	mov	fp, r2
 8004234:	2300      	movs	r3, #0
 8004236:	220a      	movs	r2, #10
 8004238:	460d      	mov	r5, r1
 800423a:	4658      	mov	r0, fp
 800423c:	f7fc fa14 	bl	8000668 <__aeabi_uldivmod>
    chr = (val - t * 10) + '0';
 8004240:	f10b 0e30 	add.w	lr, fp, #48	; 0x30
 8004244:	eb00 0380 	add.w	r3, r0, r0, lsl #2
    uint64_t t = val / 10;
 8004248:	4602      	mov	r2, r0
    buf[idx--] = chr;
 800424a:	f10a 3cff 	add.w	ip, sl, #4294967295
    chr = (val - t * 10) + '0';
 800424e:	ebae 0043 	sub.w	r0, lr, r3, lsl #1
    buf[idx--] = chr;
 8004252:	f10a 0368 	add.w	r3, sl, #104	; 0x68
 8004256:	446b      	add	r3, sp
 8004258:	f803 0c40 	strb.w	r0, [r3, #-64]
    count++;
 800425c:	f109 0301 	add.w	r3, r9, #1
    if (count == specifier->precision) {
 8004260:	4598      	cmp	r8, r3
      buf[idx--] = '.';
 8004262:	bf09      	itett	eq
 8004264:	f10c 0368 	addeq.w	r3, ip, #104	; 0x68
    count++;
 8004268:	4699      	movne	r9, r3
      buf[idx--] = '.';
 800426a:	f1aa 0a02 	subeq.w	sl, sl, #2
      count++;
 800426e:	f109 0902 	addeq.w	r9, r9, #2
      buf[idx--] = '.';
 8004272:	bf05      	ittet	eq
 8004274:	eb0d 0c03 	addeq.w	ip, sp, r3
 8004278:	232e      	moveq	r3, #46	; 0x2e
    buf[idx--] = chr;
 800427a:	46e2      	movne	sl, ip
      buf[idx--] = '.';
 800427c:	f80c 3c40 	strbeq.w	r3, [ip, #-64]
  } while (val);
 8004280:	f1bb 0f0a 	cmp.w	fp, #10
 8004284:	462b      	mov	r3, r5
 8004286:	f173 0300 	sbcs.w	r3, r3, #0
 800428a:	d2d2      	bcs.n	8004232 <vlc_print+0x386>
    buf[idx--] = '0';
 800428c:	45c1      	cmp	r9, r8
 800428e:	f1c8 0001 	rsb	r0, r8, #1
 8004292:	eba8 0b09 	sub.w	fp, r8, r9
 8004296:	ab0a      	add	r3, sp, #40	; 0x28
 8004298:	4448      	add	r0, r9
 800429a:	bf84      	itt	hi
 800429c:	2001      	movhi	r0, #1
 800429e:	f04f 0b00 	movhi.w	fp, #0
 80042a2:	2130      	movs	r1, #48	; 0x30
 80042a4:	4450      	add	r0, sl
 80042a6:	465a      	mov	r2, fp
 80042a8:	4418      	add	r0, r3
 80042aa:	f00b faa0 	bl	800f7ee <memset>
 80042ae:	eba9 0308 	sub.w	r3, r9, r8
 80042b2:	45c1      	cmp	r9, r8
 80042b4:	bf88      	it	hi
 80042b6:	2300      	movhi	r3, #0
 80042b8:	44d9      	add	r9, fp
  if (count == specifier->precision) {
 80042ba:	45c8      	cmp	r8, r9
 80042bc:	449a      	add	sl, r3
 80042be:	f108 0801 	add.w	r8, r8, #1
 80042c2:	d108      	bne.n	80042d6 <vlc_print+0x42a>
    buf[idx--] = '.';
 80042c4:	f10a 0368 	add.w	r3, sl, #104	; 0x68
 80042c8:	222e      	movs	r2, #46	; 0x2e
    count++;
 80042ca:	46c1      	mov	r9, r8
    buf[idx--] = '.';
 80042cc:	f10a 3aff 	add.w	sl, sl, #4294967295
 80042d0:	446b      	add	r3, sp
 80042d2:	f803 2c40 	strb.w	r2, [r3, #-64]
  if (count == specifier->precision + 1)
 80042d6:	45c8      	cmp	r8, r9
 80042d8:	d109      	bne.n	80042ee <vlc_print+0x442>
    buf[idx--] = '0';
 80042da:	f10a 0368 	add.w	r3, sl, #104	; 0x68
 80042de:	2230      	movs	r2, #48	; 0x30
    count++;
 80042e0:	f109 0901 	add.w	r9, r9, #1
    buf[idx--] = '0';
 80042e4:	f10a 3aff 	add.w	sl, sl, #4294967295
 80042e8:	446b      	add	r3, sp
 80042ea:	f803 2c40 	strb.w	r2, [r3, #-64]
  if (is_signed) {
 80042ee:	eeb5 8bc0 	vcmpe.f64	d8, #0.0
 80042f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80042f6:	d509      	bpl.n	800430c <vlc_print+0x460>
    buf[idx--] = '-';
 80042f8:	f10a 0368 	add.w	r3, sl, #104	; 0x68
 80042fc:	222d      	movs	r2, #45	; 0x2d
    count++;
 80042fe:	f109 0901 	add.w	r9, r9, #1
    buf[idx--] = '-';
 8004302:	f10a 3aff 	add.w	sl, sl, #4294967295
 8004306:	446b      	add	r3, sp
 8004308:	f803 2c40 	strb.w	r2, [r3, #-64]
  while (count < specifier->width) {
 800430c:	f8dd 8014 	ldr.w	r8, [sp, #20]
    buf[idx--] = ' ';
 8004310:	ab0a      	add	r3, sp, #40	; 0x28
 8004312:	2120      	movs	r1, #32
 8004314:	45c1      	cmp	r9, r8
 8004316:	f1c8 0001 	rsb	r0, r8, #1
 800431a:	eba8 0b09 	sub.w	fp, r8, r9
 800431e:	4448      	add	r0, r9
 8004320:	bf84      	itt	hi
 8004322:	2001      	movhi	r0, #1
 8004324:	f04f 0b00 	movhi.w	fp, #0
 8004328:	4450      	add	r0, sl
 800432a:	465a      	mov	r2, fp
 800432c:	44cb      	add	fp, r9
 800432e:	4418      	add	r0, r3
 8004330:	f00b fa5d 	bl	800f7ee <memset>
 8004334:	eba9 0308 	sub.w	r3, r9, r8
 8004338:	aa0a      	add	r2, sp, #40	; 0x28
 800433a:	45c1      	cmp	r9, r8
 800433c:	bf88      	it	hi
 800433e:	2300      	movhi	r3, #0
  for(int i = 0; i < count; i++) {
 8004340:	4453      	add	r3, sl
 8004342:	eb02 0903 	add.w	r9, r2, r3
 8004346:	445b      	add	r3, fp
 8004348:	eb03 0802 	add.w	r8, r3, r2
 800434c:	45c8      	cmp	r8, r9
 800434e:	d109      	bne.n	8004364 <vlc_print+0x4b8>
            count += _write_double(dbl, &specifier);
 8004350:	9b01      	ldr	r3, [sp, #4]
 8004352:	445b      	add	r3, fp
 8004354:	e6e0      	b.n	8004118 <vlc_print+0x26c>
    mul *= 10;
 8004356:	ee27 7b06 	vmul.f64	d7, d7, d6
  for (int i=0;i <specifier->precision; i++)
 800435a:	3301      	adds	r3, #1
 800435c:	e74d      	b.n	80041fa <vlc_print+0x34e>
 800435e:	eeb0 5b48 	vmov.f64	d5, d8
 8004362:	e755      	b.n	8004210 <vlc_print+0x364>
    specifier->putc_fct(specifier->user, (buf + idx)[i]);
 8004364:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8004368:	4638      	mov	r0, r7
 800436a:	47b0      	blx	r6
  for(int i = 0; i < count; i++) {
 800436c:	e7ee      	b.n	800434c <vlc_print+0x4a0>
        if (!c)
 800436e:	f04f 0901 	mov.w	r9, #1
 8004372:	e5c6      	b.n	8003f02 <vlc_print+0x56>
 8004374:	b10b      	cbz	r3, 800437a <vlc_print+0x4ce>
 8004376:	f8cd c01c 	str.w	ip, [sp, #28]
 800437a:	f1be 0f00 	cmp.w	lr, #0
 800437e:	d000      	beq.n	8004382 <vlc_print+0x4d6>
 8004380:	9206      	str	r2, [sp, #24]
 8004382:	f1b8 0f00 	cmp.w	r8, #0
 8004386:	d000      	beq.n	800438a <vlc_print+0x4de>
 8004388:	9005      	str	r0, [sp, #20]
              if (long_type)
 800438a:	f1bb 0f00 	cmp.w	fp, #0
 800438e:	f47f af11 	bne.w	80041b4 <vlc_print+0x308>
                val = va_arg(vl, unsigned int);
 8004392:	46a0      	mov	r8, r4
 8004394:	4659      	mov	r1, fp
 8004396:	f858 0b04 	ldr.w	r0, [r8], #4
 800439a:	e702      	b.n	80041a2 <vlc_print+0x2f6>
        if (!c)
 800439c:	f04f 0b01 	mov.w	fp, #1
      while (done == false) {
 80043a0:	e5af      	b.n	8003f02 <vlc_print+0x56>
 80043a2:	bf00      	nop
 80043a4:	080123c0 	.word	0x080123c0

080043a8 <ai_network_get_report>:


AI_API_ENTRY
ai_bool ai_network_get_report(
  ai_handle network, ai_network_report* report)
{
 80043a8:	b570      	push	{r4, r5, r6, lr}
 80043aa:	460d      	mov	r5, r1
 80043ac:	b0a2      	sub	sp, #136	; 0x88
 80043ae:	4606      	mov	r6, r0
  ai_network* net_ctx = AI_NETWORK_ACQUIRE_CTX(network);
 80043b0:	f000 feb4 	bl	800511c <ai_platform_context_acquire>
 80043b4:	4604      	mov	r4, r0

  if (report && net_ctx)
 80043b6:	2d00      	cmp	r5, #0
 80043b8:	d035      	beq.n	8004426 <ai_network_get_report+0x7e>
 80043ba:	2800      	cmp	r0, #0
 80043bc:	d030      	beq.n	8004420 <ai_network_get_report+0x78>
  {
    ai_network_report r = {
 80043be:	2278      	movs	r2, #120	; 0x78
 80043c0:	2100      	movs	r1, #0
 80043c2:	a804      	add	r0, sp, #16
 80043c4:	f00b fa13 	bl	800f7ee <memset>
 80043c8:	4b1b      	ldr	r3, [pc, #108]	; (8004438 <ai_network_get_report+0x90>)
 80043ca:	9300      	str	r3, [sp, #0]
 80043cc:	4b1b      	ldr	r3, [pc, #108]	; (800443c <ai_network_get_report+0x94>)
 80043ce:	9301      	str	r3, [sp, #4]
 80043d0:	4b1b      	ldr	r3, [pc, #108]	; (8004440 <ai_network_get_report+0x98>)
 80043d2:	9302      	str	r3, [sp, #8]
 80043d4:	4b1b      	ldr	r3, [pc, #108]	; (8004444 <ai_network_get_report+0x9c>)
 80043d6:	9303      	str	r3, [sp, #12]
      .model_signature   = AI_NETWORK_MODEL_SIGNATURE,
      .model_datetime    = AI_TOOLS_DATE_TIME,
      
      .compile_datetime  = AI_TOOLS_COMPILE_TIME,
      
      .runtime_revision  = ai_platform_runtime_get_revision(),
 80043d8:	f000 fc54 	bl	8004c84 <ai_platform_runtime_get_revision>
    ai_network_report r = {
 80043dc:	9004      	str	r0, [sp, #16]
      .runtime_version   = ai_platform_runtime_get_version(),
 80043de:	f000 fcd5 	bl	8004d8c <ai_platform_runtime_get_version>
    ai_network_report r = {
 80043e2:	4b19      	ldr	r3, [pc, #100]	; (8004448 <ai_network_get_report+0xa0>)
      .runtime_version   = ai_platform_runtime_get_version(),
 80043e4:	9005      	str	r0, [sp, #20]
    ai_network_report r = {
 80043e6:	9306      	str	r3, [sp, #24]
 80043e8:	f44f 7384 	mov.w	r3, #264	; 0x108
 80043ec:	f8ad 301c 	strh.w	r3, [sp, #28]
      .tool_revision     = AI_TOOLS_REVISION_ID,
      .tool_version      = {AI_TOOLS_VERSION_MAJOR, AI_TOOLS_VERSION_MINOR,
                            AI_TOOLS_VERSION_MICRO, 0x0},
      .tool_api_version  = AI_STRUCT_INIT,

      .api_version            = ai_platform_api_get_version(),
 80043f0:	f000 fd64 	bl	8004ebc <ai_platform_api_get_version>
 80043f4:	9009      	str	r0, [sp, #36]	; 0x24
      .interface_api_version  = ai_platform_interface_api_get_version(),
 80043f6:	f000 fdf9 	bl	8004fec <ai_platform_interface_api_get_version>
      .map_activations   = AI_STRUCT_INIT,
      .n_nodes           = 0,
      .signature         = 0x0,
    };

    if (!ai_platform_api_get_network_report(network, &r)) return false;
 80043fa:	4669      	mov	r1, sp
      .interface_api_version  = ai_platform_interface_api_get_version(),
 80043fc:	900a      	str	r0, [sp, #40]	; 0x28
    if (!ai_platform_api_get_network_report(network, &r)) return false;
 80043fe:	4630      	mov	r0, r6
    ai_network_report r = {
 8004400:	a30b      	add	r3, pc, #44	; (adr r3, 8004430 <ai_network_get_report+0x88>)
 8004402:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004406:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 800440a:	4b10      	ldr	r3, [pc, #64]	; (800444c <ai_network_get_report+0xa4>)
 800440c:	9311      	str	r3, [sp, #68]	; 0x44
    if (!ai_platform_api_get_network_report(network, &r)) return false;
 800440e:	f001 f823 	bl	8005458 <ai_platform_api_get_network_report>
 8004412:	4604      	mov	r4, r0
 8004414:	b120      	cbz	r0, 8004420 <ai_network_get_report+0x78>

    *report = r;
 8004416:	2288      	movs	r2, #136	; 0x88
 8004418:	4669      	mov	r1, sp
 800441a:	4628      	mov	r0, r5
 800441c:	f00b fa88 	bl	800f930 <memcpy>
    return true;
  }
  return false;
}
 8004420:	4620      	mov	r0, r4
 8004422:	b022      	add	sp, #136	; 0x88
 8004424:	bd70      	pop	{r4, r5, r6, pc}
  return false;
 8004426:	462c      	mov	r4, r5
 8004428:	e7fa      	b.n	8004420 <ai_network_get_report+0x78>
 800442a:	bf00      	nop
 800442c:	f3af 8000 	nop.w
 8004430:	016d2c74 	.word	0x016d2c74
 8004434:	00000000 	.word	0x00000000
 8004438:	0801238c 	.word	0x0801238c
 800443c:	080123c7 	.word	0x080123c7
 8004440:	080123e8 	.word	0x080123e8
 8004444:	08012401 	.word	0x08012401
 8004448:	0803698e 	.word	0x0803698e
 800444c:	a1facade 	.word	0xa1facade

08004450 <ai_network_get_error>:

AI_API_ENTRY
ai_error ai_network_get_error(ai_handle network)
{
  return ai_platform_network_get_error(network);
 8004450:	f000 bef0 	b.w	8005234 <ai_platform_network_get_error>

08004454 <ai_network_create>:
}

AI_API_ENTRY
ai_error ai_network_create(
  ai_handle* network, const ai_buffer* network_config)
{
 8004454:	b507      	push	{r0, r1, r2, lr}
  return ai_platform_network_create(
 8004456:	2305      	movs	r3, #5
 8004458:	2200      	movs	r2, #0
 800445a:	e9cd 3200 	strd	r3, r2, [sp]
 800445e:	2301      	movs	r3, #1
 8004460:	4a02      	ldr	r2, [pc, #8]	; (800446c <ai_network_create+0x18>)
 8004462:	f001 fc25 	bl	8005cb0 <ai_platform_network_create>
    network, network_config, 
    &AI_NET_OBJ_INSTANCE,
    AI_TOOLS_API_VERSION_MAJOR, AI_TOOLS_API_VERSION_MINOR, AI_TOOLS_API_VERSION_MICRO);
}
 8004466:	b003      	add	sp, #12
 8004468:	f85d fb04 	ldr.w	pc, [sp], #4
 800446c:	20001a64 	.word	0x20001a64

08004470 <ai_network_destroy>:
}

AI_API_ENTRY
ai_handle ai_network_destroy(ai_handle network)
{
  return ai_platform_network_destroy(network);
 8004470:	f001 bdf8 	b.w	8006064 <ai_platform_network_destroy>

08004474 <ai_network_init>:
}

AI_API_ENTRY
ai_bool ai_network_init(
  ai_handle network, const ai_network_params* params)
{
 8004474:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004478:	4607      	mov	r7, r0
 800447a:	460e      	mov	r6, r1
  ai_network* net_ctx = ai_platform_network_init(network, params);
 800447c:	f001 fefa 	bl	8006274 <ai_platform_network_init>
  if (!net_ctx) return false;
 8004480:	4604      	mov	r4, r0
 8004482:	2800      	cmp	r0, #0
 8004484:	f000 821c 	beq.w	80048c0 <ai_network_init+0x44c>
  if (ai_platform_get_weights_map(g_network_weights_map, 1, params)) {
 8004488:	f8df 8420 	ldr.w	r8, [pc, #1056]	; 80048ac <ai_network_init+0x438>
 800448c:	4632      	mov	r2, r6
 800448e:	2101      	movs	r1, #1
 8004490:	4640      	mov	r0, r8
 8004492:	f000 fb2d 	bl	8004af0 <ai_platform_get_weights_map>
 8004496:	4605      	mov	r5, r0
 8004498:	2800      	cmp	r0, #0
 800449a:	f000 8213 	beq.w	80048c4 <ai_network_init+0x450>
    conv2d_1_weights_array.format |= AI_FMT_FLAG_CONST;
 800449e:	4ac8      	ldr	r2, [pc, #800]	; (80047c0 <ai_network_init+0x34c>)
 80044a0:	6813      	ldr	r3, [r2, #0]
 80044a2:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80044a6:	6013      	str	r3, [r2, #0]
    conv2d_1_weights_array.data = AI_PTR(g_network_weights_map[0] + 0);
 80044a8:	f8d8 3000 	ldr.w	r3, [r8]
    conv2d_1_weights_array.data_start = AI_PTR(g_network_weights_map[0] + 0);
 80044ac:	e9c2 3302 	strd	r3, r3, [r2, #8]
    conv2d_1_bias_array.format |= AI_FMT_FLAG_CONST;
 80044b0:	4ac4      	ldr	r2, [pc, #784]	; (80047c4 <ai_network_init+0x350>)
 80044b2:	6811      	ldr	r1, [r2, #0]
 80044b4:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 80044b8:	6011      	str	r1, [r2, #0]
    conv2d_1_bias_array.data = AI_PTR(g_network_weights_map[0] + 288);
 80044ba:	f503 7190 	add.w	r1, r3, #288	; 0x120
    conv2d_1_bias_array.data_start = AI_PTR(g_network_weights_map[0] + 288);
 80044be:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_2_weights_array.format |= AI_FMT_FLAG_CONST;
 80044c2:	4ac1      	ldr	r2, [pc, #772]	; (80047c8 <ai_network_init+0x354>)
 80044c4:	6811      	ldr	r1, [r2, #0]
 80044c6:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 80044ca:	6011      	str	r1, [r2, #0]
    conv2d_2_weights_array.data = AI_PTR(g_network_weights_map[0] + 416);
 80044cc:	f503 71d0 	add.w	r1, r3, #416	; 0x1a0
    conv2d_2_weights_array.data_start = AI_PTR(g_network_weights_map[0] + 416);
 80044d0:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_2_bias_array.format |= AI_FMT_FLAG_CONST;
 80044d4:	4abd      	ldr	r2, [pc, #756]	; (80047cc <ai_network_init+0x358>)
 80044d6:	6811      	ldr	r1, [r2, #0]
 80044d8:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 80044dc:	6011      	str	r1, [r2, #0]
    conv2d_2_bias_array.data = AI_PTR(g_network_weights_map[0] + 704);
 80044de:	f503 7130 	add.w	r1, r3, #704	; 0x2c0
    conv2d_2_bias_array.data_start = AI_PTR(g_network_weights_map[0] + 704);
 80044e2:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_3_weights_array.format |= AI_FMT_FLAG_CONST;
 80044e6:	4aba      	ldr	r2, [pc, #744]	; (80047d0 <ai_network_init+0x35c>)
 80044e8:	6811      	ldr	r1, [r2, #0]
 80044ea:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 80044ee:	6011      	str	r1, [r2, #0]
    conv2d_3_weights_array.data = AI_PTR(g_network_weights_map[0] + 832);
 80044f0:	f503 7150 	add.w	r1, r3, #832	; 0x340
    conv2d_3_weights_array.data_start = AI_PTR(g_network_weights_map[0] + 832);
 80044f4:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_3_bias_array.format |= AI_FMT_FLAG_CONST;
 80044f8:	4ab6      	ldr	r2, [pc, #728]	; (80047d4 <ai_network_init+0x360>)
 80044fa:	6811      	ldr	r1, [r2, #0]
 80044fc:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 8004500:	6011      	str	r1, [r2, #0]
    conv2d_3_bias_array.data = AI_PTR(g_network_weights_map[0] + 2880);
 8004502:	f503 6134 	add.w	r1, r3, #2880	; 0xb40
    conv2d_3_bias_array.data_start = AI_PTR(g_network_weights_map[0] + 2880);
 8004506:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_4_weights_array.format |= AI_FMT_FLAG_CONST;
 800450a:	4ab3      	ldr	r2, [pc, #716]	; (80047d8 <ai_network_init+0x364>)
 800450c:	6811      	ldr	r1, [r2, #0]
 800450e:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 8004512:	6011      	str	r1, [r2, #0]
    conv2d_4_weights_array.data = AI_PTR(g_network_weights_map[0] + 3136);
 8004514:	f503 6144 	add.w	r1, r3, #3136	; 0xc40
    conv2d_4_weights_array.data_start = AI_PTR(g_network_weights_map[0] + 3136);
 8004518:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_4_bias_array.format |= AI_FMT_FLAG_CONST;
 800451c:	4aaf      	ldr	r2, [pc, #700]	; (80047dc <ai_network_init+0x368>)
 800451e:	6811      	ldr	r1, [r2, #0]
 8004520:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 8004524:	6011      	str	r1, [r2, #0]
    conv2d_4_bias_array.data = AI_PTR(g_network_weights_map[0] + 3712);
 8004526:	f503 6168 	add.w	r1, r3, #3712	; 0xe80
    conv2d_4_bias_array.data_start = AI_PTR(g_network_weights_map[0] + 3712);
 800452a:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_5_weights_array.format |= AI_FMT_FLAG_CONST;
 800452e:	4aac      	ldr	r2, [pc, #688]	; (80047e0 <ai_network_init+0x36c>)
 8004530:	6811      	ldr	r1, [r2, #0]
 8004532:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 8004536:	6011      	str	r1, [r2, #0]
    conv2d_5_weights_array.data = AI_PTR(g_network_weights_map[0] + 3968);
 8004538:	f503 6178 	add.w	r1, r3, #3968	; 0xf80
    conv2d_5_weights_array.data_start = AI_PTR(g_network_weights_map[0] + 3968);
 800453c:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_5_bias_array.format |= AI_FMT_FLAG_CONST;
 8004540:	4aa8      	ldr	r2, [pc, #672]	; (80047e4 <ai_network_init+0x370>)
 8004542:	6811      	ldr	r1, [r2, #0]
 8004544:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 8004548:	6011      	str	r1, [r2, #0]
    conv2d_5_bias_array.data = AI_PTR(g_network_weights_map[0] + 12160);
 800454a:	f503 513e 	add.w	r1, r3, #12160	; 0x2f80
    conv2d_5_bias_array.data_start = AI_PTR(g_network_weights_map[0] + 12160);
 800454e:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_6_weights_array.format |= AI_FMT_FLAG_CONST;
 8004552:	4aa5      	ldr	r2, [pc, #660]	; (80047e8 <ai_network_init+0x374>)
 8004554:	6811      	ldr	r1, [r2, #0]
 8004556:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 800455a:	6011      	str	r1, [r2, #0]
    conv2d_6_weights_array.data = AI_PTR(g_network_weights_map[0] + 12672);
 800455c:	f503 5146 	add.w	r1, r3, #12672	; 0x3180
    conv2d_6_weights_array.data_start = AI_PTR(g_network_weights_map[0] + 12672);
 8004560:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_6_bias_array.format |= AI_FMT_FLAG_CONST;
 8004564:	4aa1      	ldr	r2, [pc, #644]	; (80047ec <ai_network_init+0x378>)
 8004566:	6811      	ldr	r1, [r2, #0]
 8004568:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 800456c:	6011      	str	r1, [r2, #0]
    conv2d_6_bias_array.data = AI_PTR(g_network_weights_map[0] + 13824);
 800456e:	f503 5158 	add.w	r1, r3, #13824	; 0x3600
    conv2d_6_bias_array.data_start = AI_PTR(g_network_weights_map[0] + 13824);
 8004572:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_7_weights_array.format |= AI_FMT_FLAG_CONST;
 8004576:	4a9e      	ldr	r2, [pc, #632]	; (80047f0 <ai_network_init+0x37c>)
 8004578:	6811      	ldr	r1, [r2, #0]
 800457a:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 800457e:	6011      	str	r1, [r2, #0]
    conv2d_7_weights_array.data = AI_PTR(g_network_weights_map[0] + 14336);
 8004580:	f503 5160 	add.w	r1, r3, #14336	; 0x3800
    conv2d_7_weights_array.data_start = AI_PTR(g_network_weights_map[0] + 14336);
 8004584:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_7_bias_array.format |= AI_FMT_FLAG_CONST;
 8004588:	4a9a      	ldr	r2, [pc, #616]	; (80047f4 <ai_network_init+0x380>)
 800458a:	6811      	ldr	r1, [r2, #0]
 800458c:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 8004590:	6011      	str	r1, [r2, #0]
    conv2d_7_bias_array.data = AI_PTR(g_network_weights_map[0] + 30720);
 8004592:	f503 41f0 	add.w	r1, r3, #30720	; 0x7800
    conv2d_7_bias_array.data_start = AI_PTR(g_network_weights_map[0] + 30720);
 8004596:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_8_weights_array.format |= AI_FMT_FLAG_CONST;
 800459a:	4a97      	ldr	r2, [pc, #604]	; (80047f8 <ai_network_init+0x384>)
 800459c:	6811      	ldr	r1, [r2, #0]
 800459e:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 80045a2:	6011      	str	r1, [r2, #0]
    conv2d_8_weights_array.data = AI_PTR(g_network_weights_map[0] + 31232);
 80045a4:	f503 41f4 	add.w	r1, r3, #31232	; 0x7a00
    conv2d_8_weights_array.data_start = AI_PTR(g_network_weights_map[0] + 31232);
 80045a8:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_8_bias_array.format |= AI_FMT_FLAG_CONST;
 80045ac:	4a93      	ldr	r2, [pc, #588]	; (80047fc <ai_network_init+0x388>)
 80045ae:	6811      	ldr	r1, [r2, #0]
 80045b0:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 80045b4:	6011      	str	r1, [r2, #0]
    conv2d_8_bias_array.data = AI_PTR(g_network_weights_map[0] + 32384);
 80045b6:	f503 41fd 	add.w	r1, r3, #32384	; 0x7e80
    conv2d_8_bias_array.data_start = AI_PTR(g_network_weights_map[0] + 32384);
 80045ba:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_9_weights_array.format |= AI_FMT_FLAG_CONST;
 80045be:	4a90      	ldr	r2, [pc, #576]	; (8004800 <ai_network_init+0x38c>)
 80045c0:	6811      	ldr	r1, [r2, #0]
 80045c2:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 80045c6:	6011      	str	r1, [r2, #0]
    conv2d_9_weights_array.data = AI_PTR(g_network_weights_map[0] + 32896);
 80045c8:	f503 4100 	add.w	r1, r3, #32768	; 0x8000
 80045cc:	3180      	adds	r1, #128	; 0x80
    conv2d_9_weights_array.data_start = AI_PTR(g_network_weights_map[0] + 32896);
 80045ce:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_9_bias_array.format |= AI_FMT_FLAG_CONST;
 80045d2:	4a8c      	ldr	r2, [pc, #560]	; (8004804 <ai_network_init+0x390>)
 80045d4:	6811      	ldr	r1, [r2, #0]
 80045d6:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 80045da:	6011      	str	r1, [r2, #0]
    conv2d_9_bias_array.data = AI_PTR(g_network_weights_map[0] + 65664);
 80045dc:	f503 3180 	add.w	r1, r3, #65536	; 0x10000
 80045e0:	3180      	adds	r1, #128	; 0x80
    conv2d_9_bias_array.data_start = AI_PTR(g_network_weights_map[0] + 65664);
 80045e2:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_10_weights_array.format |= AI_FMT_FLAG_CONST;
 80045e6:	4a88      	ldr	r2, [pc, #544]	; (8004808 <ai_network_init+0x394>)
 80045e8:	6811      	ldr	r1, [r2, #0]
 80045ea:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 80045ee:	6011      	str	r1, [r2, #0]
    conv2d_10_weights_array.data = AI_PTR(g_network_weights_map[0] + 66688);
 80045f0:	f503 3182 	add.w	r1, r3, #66560	; 0x10400
 80045f4:	3180      	adds	r1, #128	; 0x80
    conv2d_10_weights_array.data_start = AI_PTR(g_network_weights_map[0] + 66688);
 80045f6:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_10_bias_array.format |= AI_FMT_FLAG_CONST;
 80045fa:	4a84      	ldr	r2, [pc, #528]	; (800480c <ai_network_init+0x398>)
 80045fc:	6811      	ldr	r1, [r2, #0]
 80045fe:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 8004602:	6011      	str	r1, [r2, #0]
    conv2d_10_bias_array.data = AI_PTR(g_network_weights_map[0] + 68992);
 8004604:	f503 3186 	add.w	r1, r3, #68608	; 0x10c00
 8004608:	f501 71c0 	add.w	r1, r1, #384	; 0x180
    conv2d_10_bias_array.data_start = AI_PTR(g_network_weights_map[0] + 68992);
 800460c:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_11_weights_array.format |= AI_FMT_FLAG_CONST;
 8004610:	4a7f      	ldr	r2, [pc, #508]	; (8004810 <ai_network_init+0x39c>)
 8004612:	6811      	ldr	r1, [r2, #0]
 8004614:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 8004618:	6011      	str	r1, [r2, #0]
    conv2d_11_weights_array.data = AI_PTR(g_network_weights_map[0] + 70016);
 800461a:	f503 3188 	add.w	r1, r3, #69632	; 0x11000
 800461e:	f501 71c0 	add.w	r1, r1, #384	; 0x180
    conv2d_11_weights_array.data_start = AI_PTR(g_network_weights_map[0] + 70016);
 8004622:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_11_bias_array.format |= AI_FMT_FLAG_CONST;
 8004626:	4a7b      	ldr	r2, [pc, #492]	; (8004814 <ai_network_init+0x3a0>)
 8004628:	6811      	ldr	r1, [r2, #0]
 800462a:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 800462e:	6011      	str	r1, [r2, #0]
    conv2d_11_bias_array.data = AI_PTR(g_network_weights_map[0] + 135552);
 8004630:	f503 3104 	add.w	r1, r3, #135168	; 0x21000
 8004634:	f501 71c0 	add.w	r1, r1, #384	; 0x180
    conv2d_11_bias_array.data_start = AI_PTR(g_network_weights_map[0] + 135552);
 8004638:	e9c2 1102 	strd	r1, r1, [r2, #8]
    gemm_13_weights_array.format |= AI_FMT_FLAG_CONST;
 800463c:	4a76      	ldr	r2, [pc, #472]	; (8004818 <ai_network_init+0x3a4>)
 800463e:	6811      	ldr	r1, [r2, #0]
 8004640:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 8004644:	6011      	str	r1, [r2, #0]
    gemm_13_weights_array.data = AI_PTR(g_network_weights_map[0] + 136576);
 8004646:	f503 3105 	add.w	r1, r3, #136192	; 0x21400
    gemm_13_bias_array.data = AI_PTR(g_network_weights_map[0] + 139136);
 800464a:	f503 3307 	add.w	r3, r3, #138240	; 0x21c00
    gemm_13_weights_array.data = AI_PTR(g_network_weights_map[0] + 136576);
 800464e:	f501 71c0 	add.w	r1, r1, #384	; 0x180
    gemm_13_bias_array.data = AI_PTR(g_network_weights_map[0] + 139136);
 8004652:	f503 7360 	add.w	r3, r3, #896	; 0x380
    gemm_13_weights_array.data_start = AI_PTR(g_network_weights_map[0] + 136576);
 8004656:	e9c2 1102 	strd	r1, r1, [r2, #8]
    gemm_13_bias_array.format |= AI_FMT_FLAG_CONST;
 800465a:	4a70      	ldr	r2, [pc, #448]	; (800481c <ai_network_init+0x3a8>)
 800465c:	6811      	ldr	r1, [r2, #0]
 800465e:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
    gemm_13_bias_array.data_start = AI_PTR(g_network_weights_map[0] + 139136);
 8004662:	e9c2 3302 	strd	r3, r3, [r2, #8]
    gemm_13_bias_array.format |= AI_FMT_FLAG_CONST;
 8004666:	6011      	str	r1, [r2, #0]
  if (ai_platform_get_activations_map(g_network_activations_map, 1, params)) {
 8004668:	f8df 8244 	ldr.w	r8, [pc, #580]	; 80048b0 <ai_network_init+0x43c>
 800466c:	4632      	mov	r2, r6
 800466e:	2101      	movs	r1, #1
 8004670:	4640      	mov	r0, r8
 8004672:	f000 fa95 	bl	8004ba0 <ai_platform_get_activations_map>
 8004676:	4606      	mov	r6, r0
 8004678:	2800      	cmp	r0, #0
 800467a:	f000 8129 	beq.w	80048d0 <ai_network_init+0x45c>
    serving_default_input_10_output_array.data = AI_PTR(g_network_activations_map[0] + 68864);
 800467e:	f8d8 3000 	ldr.w	r3, [r8]
 8004682:	4967      	ldr	r1, [pc, #412]	; (8004820 <ai_network_init+0x3ac>)
 8004684:	f503 3286 	add.w	r2, r3, #68608	; 0x10c00
    conv2d_1_scratch0_array.data = AI_PTR(g_network_activations_map[0] + 73948);
 8004688:	4866      	ldr	r0, [pc, #408]	; (8004824 <ai_network_init+0x3b0>)
    serving_default_input_10_output_array.data = AI_PTR(g_network_activations_map[0] + 68864);
 800468a:	f502 7280 	add.w	r2, r2, #256	; 0x100
    serving_default_input_10_output_array.data_start = AI_PTR(g_network_activations_map[0] + 68864);
 800468e:	e9c1 2202 	strd	r2, r2, [r1, #8]
    transpose_0_output_array.data = AI_PTR(g_network_activations_map[0] + 62720);
 8004692:	f503 4175 	add.w	r1, r3, #62720	; 0xf500
 8004696:	4a64      	ldr	r2, [pc, #400]	; (8004828 <ai_network_init+0x3b4>)
    transpose_0_output_array.data_start = AI_PTR(g_network_activations_map[0] + 62720);
 8004698:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_1_scratch0_array.data = AI_PTR(g_network_activations_map[0] + 73948);
 800469c:	f503 3290 	add.w	r2, r3, #73728	; 0x12000
 80046a0:	32dc      	adds	r2, #220	; 0xdc
    conv2d_1_scratch0_array.data_start = AI_PTR(g_network_activations_map[0] + 73948);
 80046a2:	e9c0 2202 	strd	r2, r2, [r0, #8]
    conv2d_1_output_array.data = AI_PTR(g_network_activations_map[0] + 13568);
 80046a6:	f503 5054 	add.w	r0, r3, #13568	; 0x3500
 80046aa:	4a60      	ldr	r2, [pc, #384]	; (800482c <ai_network_init+0x3b8>)
    conv2d_1_output_array.data_start = AI_PTR(g_network_activations_map[0] + 13568);
 80046ac:	e9c2 0002 	strd	r0, r0, [r2, #8]
    conv2d_2_pad_before_output_array.data = AI_PTR(g_network_activations_map[0] + 8320);
 80046b0:	f503 5002 	add.w	r0, r3, #8320	; 0x2080
 80046b4:	4a5e      	ldr	r2, [pc, #376]	; (8004830 <ai_network_init+0x3bc>)
    conv2d_2_pad_before_output_array.data_start = AI_PTR(g_network_activations_map[0] + 8320);
 80046b6:	e9c2 0002 	strd	r0, r0, [r2, #8]
    conv2d_2_scratch0_array.data = AI_PTR(g_network_activations_map[0] + 7132);
 80046ba:	f503 52de 	add.w	r2, r3, #7104	; 0x1bc0
 80046be:	485d      	ldr	r0, [pc, #372]	; (8004834 <ai_network_init+0x3c0>)
 80046c0:	321c      	adds	r2, #28
    conv2d_2_scratch0_array.data_start = AI_PTR(g_network_activations_map[0] + 7132);
 80046c2:	e9c0 2202 	strd	r2, r2, [r0, #8]
    conv2d_2_output_array.data = AI_PTR(g_network_activations_map[0] + 62720);
 80046c6:	485c      	ldr	r0, [pc, #368]	; (8004838 <ai_network_init+0x3c4>)
    conv2d_2_output_array.data_start = AI_PTR(g_network_activations_map[0] + 62720);
 80046c8:	e9c0 1102 	strd	r1, r1, [r0, #8]
    conv2d_3_scratch0_array.data = AI_PTR(g_network_activations_map[0] + 7132);
 80046cc:	495b      	ldr	r1, [pc, #364]	; (800483c <ai_network_init+0x3c8>)
    conv2d_3_scratch0_array.data_start = AI_PTR(g_network_activations_map[0] + 7132);
 80046ce:	e9c1 2202 	strd	r2, r2, [r1, #8]
    conv2d_3_output_array.data = AI_PTR(g_network_activations_map[0] + 11520);
 80046d2:	f503 5134 	add.w	r1, r3, #11520	; 0x2d00
 80046d6:	4a5a      	ldr	r2, [pc, #360]	; (8004840 <ai_network_init+0x3cc>)
    conv2d_3_output_array.data_start = AI_PTR(g_network_activations_map[0] + 11520);
 80046d8:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_4_pad_before_output_array.data = AI_PTR(g_network_activations_map[0] + 1024);
 80046dc:	f503 6180 	add.w	r1, r3, #1024	; 0x400
 80046e0:	4a58      	ldr	r2, [pc, #352]	; (8004844 <ai_network_init+0x3d0>)
    conv2d_4_pad_before_output_array.data_start = AI_PTR(g_network_activations_map[0] + 1024);
 80046e2:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_4_scratch0_array.data = AI_PTR(g_network_activations_map[0] + 109824);
 80046e6:	f503 32d6 	add.w	r2, r3, #109568	; 0x1ac00
 80046ea:	4957      	ldr	r1, [pc, #348]	; (8004848 <ai_network_init+0x3d4>)
 80046ec:	f502 7280 	add.w	r2, r2, #256	; 0x100
    conv2d_4_scratch0_array.data_start = AI_PTR(g_network_activations_map[0] + 109824);
 80046f0:	e9c1 2202 	strd	r2, r2, [r1, #8]
    conv2d_4_output_array.data = AI_PTR(g_network_activations_map[0] + 0);
 80046f4:	4a55      	ldr	r2, [pc, #340]	; (800484c <ai_network_init+0x3d8>)
    conv2d_5_scratch0_array.data = AI_PTR(g_network_activations_map[0] + 24576);
 80046f6:	f503 41c0 	add.w	r1, r3, #24576	; 0x6000
    conv2d_4_output_array.data_start = AI_PTR(g_network_activations_map[0] + 0);
 80046fa:	e9c2 3302 	strd	r3, r3, [r2, #8]
    conv2d_5_scratch0_array.data = AI_PTR(g_network_activations_map[0] + 24576);
 80046fe:	4a54      	ldr	r2, [pc, #336]	; (8004850 <ai_network_init+0x3dc>)
    conv2d_5_scratch0_array.data_start = AI_PTR(g_network_activations_map[0] + 24576);
 8004700:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_5_output_array.data = AI_PTR(g_network_activations_map[0] + 26112);
 8004704:	f503 41cc 	add.w	r1, r3, #26112	; 0x6600
 8004708:	4a52      	ldr	r2, [pc, #328]	; (8004854 <ai_network_init+0x3e0>)
    conv2d_5_output_array.data_start = AI_PTR(g_network_activations_map[0] + 26112);
 800470a:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_6_pad_before_output_array.data = AI_PTR(g_network_activations_map[0] + 15360);
 800470e:	f503 5170 	add.w	r1, r3, #15360	; 0x3c00
 8004712:	4a51      	ldr	r2, [pc, #324]	; (8004858 <ai_network_init+0x3e4>)
    conv2d_6_pad_before_output_array.data_start = AI_PTR(g_network_activations_map[0] + 15360);
 8004714:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_6_scratch0_array.data = AI_PTR(g_network_activations_map[0] + 0);
 8004718:	4a50      	ldr	r2, [pc, #320]	; (800485c <ai_network_init+0x3e8>)
    conv2d_6_output_array.data = AI_PTR(g_network_activations_map[0] + 13312);
 800471a:	f503 5150 	add.w	r1, r3, #13312	; 0x3400
    conv2d_6_scratch0_array.data_start = AI_PTR(g_network_activations_map[0] + 0);
 800471e:	e9c2 3302 	strd	r3, r3, [r2, #8]
    conv2d_6_output_array.data = AI_PTR(g_network_activations_map[0] + 13312);
 8004722:	4a4f      	ldr	r2, [pc, #316]	; (8004860 <ai_network_init+0x3ec>)
    conv2d_6_output_array.data_start = AI_PTR(g_network_activations_map[0] + 13312);
 8004724:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_7_scratch0_array.data = AI_PTR(g_network_activations_map[0] + 0);
 8004728:	4a4e      	ldr	r2, [pc, #312]	; (8004864 <ai_network_init+0x3f0>)
    conv2d_7_output_array.data = AI_PTR(g_network_activations_map[0] + 62464);
 800472a:	f503 4174 	add.w	r1, r3, #62464	; 0xf400
    conv2d_7_scratch0_array.data_start = AI_PTR(g_network_activations_map[0] + 0);
 800472e:	e9c2 3302 	strd	r3, r3, [r2, #8]
    conv2d_7_output_array.data = AI_PTR(g_network_activations_map[0] + 62464);
 8004732:	4a4d      	ldr	r2, [pc, #308]	; (8004868 <ai_network_init+0x3f4>)
    conv2d_7_output_array.data_start = AI_PTR(g_network_activations_map[0] + 62464);
 8004734:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_8_pad_before_output_array.data = AI_PTR(g_network_activations_map[0] + 0);
 8004738:	4a4c      	ldr	r2, [pc, #304]	; (800486c <ai_network_init+0x3f8>)
    conv2d_8_scratch0_array.data = AI_PTR(g_network_activations_map[0] + 59904);
 800473a:	f503 416a 	add.w	r1, r3, #59904	; 0xea00
    conv2d_8_pad_before_output_array.data_start = AI_PTR(g_network_activations_map[0] + 0);
 800473e:	e9c2 3302 	strd	r3, r3, [r2, #8]
    conv2d_8_scratch0_array.data = AI_PTR(g_network_activations_map[0] + 59904);
 8004742:	4a4b      	ldr	r2, [pc, #300]	; (8004870 <ai_network_init+0x3fc>)
    conv2d_8_scratch0_array.data_start = AI_PTR(g_network_activations_map[0] + 59904);
 8004744:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_8_output_array.data = AI_PTR(g_network_activations_map[0] + 64644);
 8004748:	f503 427c 	add.w	r2, r3, #64512	; 0xfc00
 800474c:	4949      	ldr	r1, [pc, #292]	; (8004874 <ai_network_init+0x400>)
 800474e:	3284      	adds	r2, #132	; 0x84
    conv2d_8_output_array.data_start = AI_PTR(g_network_activations_map[0] + 64644);
 8004750:	e9c1 2202 	strd	r2, r2, [r1, #8]
    conv2d_9_scratch0_array.data = AI_PTR(g_network_activations_map[0] + 0);
 8004754:	4a48      	ldr	r2, [pc, #288]	; (8004878 <ai_network_init+0x404>)
    conv2d_9_output_array.data = AI_PTR(g_network_activations_map[0] + 3072);
 8004756:	f503 6140 	add.w	r1, r3, #3072	; 0xc00
    conv2d_9_scratch0_array.data_start = AI_PTR(g_network_activations_map[0] + 0);
 800475a:	e9c2 3302 	strd	r3, r3, [r2, #8]
    conv2d_9_output_array.data = AI_PTR(g_network_activations_map[0] + 3072);
 800475e:	4a47      	ldr	r2, [pc, #284]	; (800487c <ai_network_init+0x408>)
    conv2d_9_output_array.data_start = AI_PTR(g_network_activations_map[0] + 3072);
 8004760:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_10_pad_before_output_array.data = AI_PTR(g_network_activations_map[0] + 27648);
 8004764:	f503 41d8 	add.w	r1, r3, #27648	; 0x6c00
 8004768:	4a45      	ldr	r2, [pc, #276]	; (8004880 <ai_network_init+0x40c>)
    conv2d_10_pad_before_output_array.data_start = AI_PTR(g_network_activations_map[0] + 27648);
 800476a:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_10_scratch0_array.data = AI_PTR(g_network_activations_map[0] + 0);
 800476e:	4a45      	ldr	r2, [pc, #276]	; (8004884 <ai_network_init+0x410>)
    conv2d_10_output_array.data = AI_PTR(g_network_activations_map[0] + 63488);
 8004770:	f503 4178 	add.w	r1, r3, #63488	; 0xf800
    conv2d_10_scratch0_array.data_start = AI_PTR(g_network_activations_map[0] + 0);
 8004774:	e9c2 3302 	strd	r3, r3, [r2, #8]
    conv2d_10_output_array.data = AI_PTR(g_network_activations_map[0] + 63488);
 8004778:	4a43      	ldr	r2, [pc, #268]	; (8004888 <ai_network_init+0x414>)
    conv2d_10_output_array.data_start = AI_PTR(g_network_activations_map[0] + 63488);
 800477a:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_11_scratch0_array.data = AI_PTR(g_network_activations_map[0] + 0);
 800477e:	4a43      	ldr	r2, [pc, #268]	; (800488c <ai_network_init+0x418>)
    conv2d_11_output_array.data = AI_PTR(g_network_activations_map[0] + 3584);
 8004780:	f503 6160 	add.w	r1, r3, #3584	; 0xe00
    conv2d_11_scratch0_array.data_start = AI_PTR(g_network_activations_map[0] + 0);
 8004784:	e9c2 3302 	strd	r3, r3, [r2, #8]
    conv2d_11_output_array.data = AI_PTR(g_network_activations_map[0] + 3584);
 8004788:	4a41      	ldr	r2, [pc, #260]	; (8004890 <ai_network_init+0x41c>)
    conv2d_11_output_array.data_start = AI_PTR(g_network_activations_map[0] + 3584);
 800478a:	e9c2 1102 	strd	r1, r1, [r2, #8]
    pool_12_output_array.data = AI_PTR(g_network_activations_map[0] + 0);
 800478e:	4a41      	ldr	r2, [pc, #260]	; (8004894 <ai_network_init+0x420>)
    gemm_13_scratch0_array.data = AI_PTR(g_network_activations_map[0] + 256);
 8004790:	f503 7180 	add.w	r1, r3, #256	; 0x100
    pool_12_output_array.data_start = AI_PTR(g_network_activations_map[0] + 0);
 8004794:	e9c2 3302 	strd	r3, r3, [r2, #8]
    gemm_13_scratch0_array.data = AI_PTR(g_network_activations_map[0] + 256);
 8004798:	4a3f      	ldr	r2, [pc, #252]	; (8004898 <ai_network_init+0x424>)
    gemm_13_scratch0_array.data_start = AI_PTR(g_network_activations_map[0] + 256);
 800479a:	e9c2 1102 	strd	r1, r1, [r2, #8]
    gemm_13_output_array.data = AI_PTR(g_network_activations_map[0] + 768);
 800479e:	f503 7140 	add.w	r1, r3, #768	; 0x300
 80047a2:	4a3e      	ldr	r2, [pc, #248]	; (800489c <ai_network_init+0x428>)
    gemm_13_output_array.data_start = AI_PTR(g_network_activations_map[0] + 768);
 80047a4:	e9c2 1102 	strd	r1, r1, [r2, #8]
    nl_14_scratch0_array.data = AI_PTR(g_network_activations_map[0] + 0);
 80047a8:	4a3d      	ldr	r2, [pc, #244]	; (80048a0 <ai_network_init+0x42c>)
    nl_14_output_array.data = AI_PTR(g_network_activations_map[0] + 40);
 80047aa:	f103 0128 	add.w	r1, r3, #40	; 0x28
    nl_14_scratch0_array.data_start = AI_PTR(g_network_activations_map[0] + 0);
 80047ae:	e9c2 3302 	strd	r3, r3, [r2, #8]
    nl_14_output_array.data = AI_PTR(g_network_activations_map[0] + 40);
 80047b2:	4a3c      	ldr	r2, [pc, #240]	; (80048a4 <ai_network_init+0x430>)
    nl_14_output_array.data_start = AI_PTR(g_network_activations_map[0] + 40);
 80047b4:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conversion_15_output_array.data = AI_PTR(g_network_activations_map[0] + 0);
 80047b8:	4a3b      	ldr	r2, [pc, #236]	; (80048a8 <ai_network_init+0x434>)
    conversion_15_output_array.data_start = AI_PTR(g_network_activations_map[0] + 0);
 80047ba:	e9c2 3302 	strd	r3, r3, [r2, #8]
 80047be:	e079      	b.n	80048b4 <ai_network_init+0x440>
 80047c0:	20001108 	.word	0x20001108
 80047c4:	20001040 	.word	0x20001040
 80047c8:	20001254 	.word	0x20001254
 80047cc:	20001134 	.word	0x20001134
 80047d0:	20001348 	.word	0x20001348
 80047d4:	20001280 	.word	0x20001280
 80047d8:	20001494 	.word	0x20001494
 80047dc:	20001374 	.word	0x20001374
 80047e0:	20001588 	.word	0x20001588
 80047e4:	200014c0 	.word	0x200014c0
 80047e8:	200016d4 	.word	0x200016d4
 80047ec:	200015b4 	.word	0x200015b4
 80047f0:	200017c8 	.word	0x200017c8
 80047f4:	20001700 	.word	0x20001700
 80047f8:	20001914 	.word	0x20001914
 80047fc:	200017f4 	.word	0x200017f4
 8004800:	20001a08 	.word	0x20001a08
 8004804:	20001940 	.word	0x20001940
 8004808:	20000f20 	.word	0x20000f20
 800480c:	20000e00 	.word	0x20000e00
 8004810:	20001014 	.word	0x20001014
 8004814:	20000f4c 	.word	0x20000f4c
 8004818:	20001b6c 	.word	0x20001b6c
 800481c:	20001acc 	.word	0x20001acc
 8004820:	20001c74 	.word	0x20001c74
 8004824:	200010dc 	.word	0x200010dc
 8004828:	20001cc4 	.word	0x20001cc4
 800482c:	200010b0 	.word	0x200010b0
 8004830:	200011fc 	.word	0x200011fc
 8004834:	20001228 	.word	0x20001228
 8004838:	200011a4 	.word	0x200011a4
 800483c:	2000131c 	.word	0x2000131c
 8004840:	200012f0 	.word	0x200012f0
 8004844:	2000143c 	.word	0x2000143c
 8004848:	20001468 	.word	0x20001468
 800484c:	200013e4 	.word	0x200013e4
 8004850:	2000155c 	.word	0x2000155c
 8004854:	20001530 	.word	0x20001530
 8004858:	2000167c 	.word	0x2000167c
 800485c:	200016a8 	.word	0x200016a8
 8004860:	20001624 	.word	0x20001624
 8004864:	2000179c 	.word	0x2000179c
 8004868:	20001770 	.word	0x20001770
 800486c:	200018bc 	.word	0x200018bc
 8004870:	200018e8 	.word	0x200018e8
 8004874:	20001864 	.word	0x20001864
 8004878:	200019dc 	.word	0x200019dc
 800487c:	200019b0 	.word	0x200019b0
 8004880:	20000ec8 	.word	0x20000ec8
 8004884:	20000ef4 	.word	0x20000ef4
 8004888:	20000e70 	.word	0x20000e70
 800488c:	20000fe8 	.word	0x20000fe8
 8004890:	20000fbc 	.word	0x20000fbc
 8004894:	20001c48 	.word	0x20001c48
 8004898:	20001b40 	.word	0x20001b40
 800489c:	20001b14 	.word	0x20001b14
 80048a0:	20001be4 	.word	0x20001be4
 80048a4:	20001bb8 	.word	0x20001bb8
 80048a8:	20001a54 	.word	0x20001a54
 80048ac:	2001d8c4 	.word	0x2001d8c4
 80048b0:	2001d8c0 	.word	0x2001d8c0

  ai_bool ok = true;
  ok &= network_configure_weights(net_ctx, params);
  ok &= network_configure_activations(net_ctx, params);

  ok &= ai_platform_network_post_init(network);
 80048b4:	4638      	mov	r0, r7
 80048b6:	f001 fe79 	bl	80065ac <ai_platform_network_post_init>
 80048ba:	4030      	ands	r0, r6
 80048bc:	4005      	ands	r5, r0
 80048be:	b2e8      	uxtb	r0, r5

  return ok;
}
 80048c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  AI_ERROR_TRAP(net_ctx, INIT_FAILED, NETWORK_WEIGHTS);
 80048c4:	2212      	movs	r2, #18
 80048c6:	2130      	movs	r1, #48	; 0x30
 80048c8:	4620      	mov	r0, r4
 80048ca:	f000 fdbf 	bl	800544c <ai_platform_network_set_error>
  return false;
 80048ce:	e6cb      	b.n	8004668 <ai_network_init+0x1f4>
  AI_ERROR_TRAP(net_ctx, INIT_FAILED, NETWORK_ACTIVATIONS);
 80048d0:	2213      	movs	r2, #19
 80048d2:	2130      	movs	r1, #48	; 0x30
 80048d4:	4620      	mov	r0, r4
 80048d6:	f000 fdb9 	bl	800544c <ai_platform_network_set_error>
  return false;
 80048da:	e7eb      	b.n	80048b4 <ai_network_init+0x440>

080048dc <ai_network_run>:

AI_API_ENTRY
ai_i32 ai_network_run(
  ai_handle network, const ai_buffer* input, ai_buffer* output)
{
  return ai_platform_network_process(network, input, output);
 80048dc:	f001 bf90 	b.w	8006800 <ai_platform_network_process>

080048e0 <ai_network_forward>:
}

AI_API_ENTRY
ai_i32 ai_network_forward(ai_handle network, const ai_buffer* input)
{
  return ai_platform_network_process(network, input, NULL);
 80048e0:	2200      	movs	r2, #0
 80048e2:	f001 bf8d 	b.w	8006800 <ai_platform_network_process>
	...

080048e8 <ai_network_data_params_get>:
 * @ingroup network_data
 * @return true if a valid configuration is present, false otherwise
 */
AI_API_ENTRY
ai_bool ai_network_data_params_get(ai_network_params* params)
{
 80048e8:	b530      	push	{r4, r5, lr}
  if (!params) return false;
 80048ea:	4603      	mov	r3, r0
{
 80048ec:	b085      	sub	sp, #20
  if (!params) return false;
 80048ee:	b170      	cbz	r0, 800490e <ai_network_data_params_get+0x26>
  
  const ai_buffer_array map_activations = 
 80048f0:	4c08      	ldr	r4, [pc, #32]	; (8004914 <ai_network_data_params_get+0x2c>)
 80048f2:	466a      	mov	r2, sp
    AI_BUFFER_ARRAY_OBJ_INIT(AI_FLAG_NONE, AI_NETWORK_DATA_ACTIVATIONS_COUNT, g_network_data_map_activations);
  
  const ai_buffer_array map_weights = 
 80048f4:	ad02      	add	r5, sp, #8
  const ai_buffer_array map_activations = 
 80048f6:	e894 0003 	ldmia.w	r4, {r0, r1}
 80048fa:	e882 0003 	stmia.w	r2, {r0, r1}
  const ai_buffer_array map_weights = 
 80048fe:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 8004902:	e885 0003 	stmia.w	r5, {r0, r1}
    AI_BUFFER_ARRAY_OBJ_INIT(AI_FLAG_NONE, AI_NETWORK_DATA_WEIGHTS_COUNT, g_network_data_map_weights);

  return ai_platform_bind_network_params(params, &map_weights, &map_activations);
 8004906:	4629      	mov	r1, r5
 8004908:	4618      	mov	r0, r3
 800490a:	f000 f9a1 	bl	8004c50 <ai_platform_bind_network_params>
}
 800490e:	b005      	add	sp, #20
 8004910:	bd30      	pop	{r4, r5, pc}
 8004912:	bf00      	nop
 8004914:	0801231c 	.word	0x0801231c

08004918 <ai_buffer_get_size>:
 8004918:	b368      	cbz	r0, 8004976 <ai_buffer_get_size+0x5e>
 800491a:	4b17      	ldr	r3, [pc, #92]	; (8004978 <ai_buffer_get_size+0x60>)
 800491c:	4a17      	ldr	r2, [pc, #92]	; (800497c <ai_buffer_get_size+0x64>)
 800491e:	b410      	push	{r4}
 8004920:	6804      	ldr	r4, [r0, #0]
 8004922:	4023      	ands	r3, r4
 8004924:	4293      	cmp	r3, r2
 8004926:	d123      	bne.n	8004970 <ai_buffer_get_size+0x58>
 8004928:	b311      	cbz	r1, 8004970 <ai_buffer_get_size+0x58>
 800492a:	6984      	ldr	r4, [r0, #24]
 800492c:	6862      	ldr	r2, [r4, #4]
 800492e:	321f      	adds	r2, #31
 8004930:	f022 021f 	bic.w	r2, r2, #31
 8004934:	7d03      	ldrb	r3, [r0, #20]
 8004936:	6941      	ldr	r1, [r0, #20]
 8004938:	f1a3 0301 	sub.w	r3, r3, #1
 800493c:	f3c1 2017 	ubfx	r0, r1, #8, #24
 8004940:	fab3 f383 	clz	r3, r3
 8004944:	095b      	lsrs	r3, r3, #5
 8004946:	ebb3 2f11 	cmp.w	r3, r1, lsr #8
 800494a:	da0c      	bge.n	8004966 <ai_buffer_get_size+0x4e>
 800494c:	2b01      	cmp	r3, #1
 800494e:	d103      	bne.n	8004958 <ai_buffer_get_size+0x40>
 8004950:	2802      	cmp	r0, #2
 8004952:	f04f 0302 	mov.w	r3, #2
 8004956:	d006      	beq.n	8004966 <ai_buffer_get_size+0x4e>
 8004958:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 800495c:	3301      	adds	r3, #1
 800495e:	4298      	cmp	r0, r3
 8004960:	fb01 f202 	mul.w	r2, r1, r2
 8004964:	d1f2      	bne.n	800494c <ai_buffer_get_size+0x34>
 8004966:	ea22 70e2 	bic.w	r0, r2, r2, asr #31
 800496a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800496e:	4770      	bx	lr
 8004970:	6984      	ldr	r4, [r0, #24]
 8004972:	6862      	ldr	r2, [r4, #4]
 8004974:	e7de      	b.n	8004934 <ai_buffer_get_size+0x1c>
 8004976:	4770      	bx	lr
 8004978:	017fffff 	.word	0x017fffff
 800497c:	000400c0 	.word	0x000400c0

08004980 <ai_buffer_get_byte_size>:
 8004980:	b128      	cbz	r0, 800498e <ai_buffer_get_byte_size+0xe>
 8004982:	f3c1 11c6 	ubfx	r1, r1, #7, #7
 8004986:	fb01 f000 	mul.w	r0, r1, r0
 800498a:	3007      	adds	r0, #7
 800498c:	08c0      	lsrs	r0, r0, #3
 800498e:	4770      	bx	lr

08004990 <ai_buffer_array_sane>:
 8004990:	b138      	cbz	r0, 80049a2 <ai_buffer_array_sane+0x12>
 8004992:	6843      	ldr	r3, [r0, #4]
 8004994:	b123      	cbz	r3, 80049a0 <ai_buffer_array_sane+0x10>
 8004996:	8840      	ldrh	r0, [r0, #2]
 8004998:	3800      	subs	r0, #0
 800499a:	bf18      	it	ne
 800499c:	2001      	movne	r0, #1
 800499e:	4770      	bx	lr
 80049a0:	4618      	mov	r0, r3
 80049a2:	4770      	bx	lr

080049a4 <ai_buffer_array_item_set_address>:
 80049a4:	b150      	cbz	r0, 80049bc <ai_buffer_array_item_set_address+0x18>
 80049a6:	6843      	ldr	r3, [r0, #4]
 80049a8:	b14b      	cbz	r3, 80049be <ai_buffer_array_item_set_address+0x1a>
 80049aa:	8840      	ldrh	r0, [r0, #2]
 80049ac:	b900      	cbnz	r0, 80049b0 <ai_buffer_array_item_set_address+0xc>
 80049ae:	4770      	bx	lr
 80049b0:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 80049b4:	2001      	movs	r0, #1
 80049b6:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 80049ba:	604a      	str	r2, [r1, #4]
 80049bc:	4770      	bx	lr
 80049be:	4618      	mov	r0, r3
 80049c0:	4770      	bx	lr
 80049c2:	bf00      	nop

080049c4 <_platform_observer_node_exec_cb>:
 80049c4:	2a00      	cmp	r2, #0
 80049c6:	d06c      	beq.n	8004aa2 <_platform_observer_node_exec_cb+0xde>
 80049c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80049cc:	6815      	ldr	r5, [r2, #0]
 80049ce:	b085      	sub	sp, #20
 80049d0:	4614      	mov	r4, r2
 80049d2:	2d00      	cmp	r5, #0
 80049d4:	d067      	beq.n	8004aa6 <_platform_observer_node_exec_cb+0xe2>
 80049d6:	8993      	ldrh	r3, [r2, #12]
 80049d8:	f240 2c02 	movw	ip, #514	; 0x202
 80049dc:	89d2      	ldrh	r2, [r2, #14]
 80049de:	460e      	mov	r6, r1
 80049e0:	2b00      	cmp	r3, #0
 80049e2:	f240 3102 	movw	r1, #770	; 0x302
 80049e6:	f102 32ff 	add.w	r2, r2, #4294967295
 80049ea:	f240 3e01 	movw	lr, #769	; 0x301
 80049ee:	bf18      	it	ne
 80049f0:	4667      	movne	r7, ip
 80049f2:	f240 2c01 	movw	ip, #513	; 0x201
 80049f6:	bf0d      	iteet	eq
 80049f8:	460f      	moveq	r7, r1
 80049fa:	f44f 7901 	movne.w	r9, #516	; 0x204
 80049fe:	46e6      	movne	lr, ip
 8004a00:	f44f 7941 	moveq.w	r9, #772	; 0x304
 8004a04:	f240 1c01 	movw	ip, #257	; 0x101
 8004a08:	bf1b      	ittet	ne
 8004a0a:	f04f 0804 	movne.w	r8, #4
 8004a0e:	f04f 0c01 	movne.w	ip, #1
 8004a12:	f44f 7882 	moveq.w	r8, #260	; 0x104
 8004a16:	2102      	movne	r1, #2
 8004a18:	bf08      	it	eq
 8004a1a:	f44f 7181 	moveq.w	r1, #258	; 0x102
 8004a1e:	429a      	cmp	r2, r3
 8004a20:	d013      	beq.n	8004a4a <_platform_observer_node_exec_cb+0x86>
 8004a22:	b148      	cbz	r0, 8004a38 <_platform_observer_node_exec_cb+0x74>
 8004a24:	2801      	cmp	r0, #1
 8004a26:	d042      	beq.n	8004aae <_platform_observer_node_exec_cb+0xea>
 8004a28:	2802      	cmp	r0, #2
 8004a2a:	d025      	beq.n	8004a78 <_platform_observer_node_exec_cb+0xb4>
 8004a2c:	2803      	cmp	r0, #3
 8004a2e:	d045      	beq.n	8004abc <_platform_observer_node_exec_cb+0xf8>
 8004a30:	2000      	movs	r0, #0
 8004a32:	b005      	add	sp, #20
 8004a34:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004a38:	68a2      	ldr	r2, [r4, #8]
 8004a3a:	07d7      	lsls	r7, r2, #31
 8004a3c:	d40b      	bmi.n	8004a56 <_platform_observer_node_exec_cb+0x92>
 8004a3e:	3301      	adds	r3, #1
 8004a40:	2000      	movs	r0, #0
 8004a42:	81a3      	strh	r3, [r4, #12]
 8004a44:	b005      	add	sp, #20
 8004a46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004a4a:	46c8      	mov	r8, r9
 8004a4c:	4639      	mov	r1, r7
 8004a4e:	46f4      	mov	ip, lr
 8004a50:	2800      	cmp	r0, #0
 8004a52:	d1e7      	bne.n	8004a24 <_platform_observer_node_exec_cb+0x60>
 8004a54:	e7f0      	b.n	8004a38 <_platform_observer_node_exec_cb+0x74>
 8004a56:	f8ad 3000 	strh.w	r3, [sp]
 8004a5a:	466a      	mov	r2, sp
 8004a5c:	8873      	ldrh	r3, [r6, #2]
 8004a5e:	4661      	mov	r1, ip
 8004a60:	9002      	str	r0, [sp, #8]
 8004a62:	f8ad 3004 	strh.w	r3, [sp, #4]
 8004a66:	8833      	ldrh	r3, [r6, #0]
 8004a68:	6860      	ldr	r0, [r4, #4]
 8004a6a:	f8ad 3002 	strh.w	r3, [sp, #2]
 8004a6e:	69b3      	ldr	r3, [r6, #24]
 8004a70:	9303      	str	r3, [sp, #12]
 8004a72:	47a8      	blx	r5
 8004a74:	89a3      	ldrh	r3, [r4, #12]
 8004a76:	e7e2      	b.n	8004a3e <_platform_observer_node_exec_cb+0x7a>
 8004a78:	68a2      	ldr	r2, [r4, #8]
 8004a7a:	6126      	str	r6, [r4, #16]
 8004a7c:	0790      	lsls	r0, r2, #30
 8004a7e:	d5d7      	bpl.n	8004a30 <_platform_observer_node_exec_cb+0x6c>
 8004a80:	f8ad 3000 	strh.w	r3, [sp]
 8004a84:	8873      	ldrh	r3, [r6, #2]
 8004a86:	8832      	ldrh	r2, [r6, #0]
 8004a88:	6860      	ldr	r0, [r4, #4]
 8004a8a:	2400      	movs	r4, #0
 8004a8c:	f8ad 3004 	strh.w	r3, [sp, #4]
 8004a90:	69b3      	ldr	r3, [r6, #24]
 8004a92:	f8ad 2002 	strh.w	r2, [sp, #2]
 8004a96:	466a      	mov	r2, sp
 8004a98:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8004a9c:	47a8      	blx	r5
 8004a9e:	4620      	mov	r0, r4
 8004aa0:	e7d0      	b.n	8004a44 <_platform_observer_node_exec_cb+0x80>
 8004aa2:	2001      	movs	r0, #1
 8004aa4:	4770      	bx	lr
 8004aa6:	2001      	movs	r0, #1
 8004aa8:	b005      	add	sp, #20
 8004aaa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004aae:	2300      	movs	r3, #0
 8004ab0:	6126      	str	r6, [r4, #16]
 8004ab2:	4618      	mov	r0, r3
 8004ab4:	81a3      	strh	r3, [r4, #12]
 8004ab6:	b005      	add	sp, #20
 8004ab8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004abc:	68a2      	ldr	r2, [r4, #8]
 8004abe:	0752      	lsls	r2, r2, #29
 8004ac0:	d5bd      	bpl.n	8004a3e <_platform_observer_node_exec_cb+0x7a>
 8004ac2:	6922      	ldr	r2, [r4, #16]
 8004ac4:	2000      	movs	r0, #0
 8004ac6:	f8ad 3000 	strh.w	r3, [sp]
 8004aca:	4641      	mov	r1, r8
 8004acc:	8853      	ldrh	r3, [r2, #2]
 8004ace:	f8ad 3004 	strh.w	r3, [sp, #4]
 8004ad2:	8813      	ldrh	r3, [r2, #0]
 8004ad4:	f8ad 3002 	strh.w	r3, [sp, #2]
 8004ad8:	6993      	ldr	r3, [r2, #24]
 8004ada:	466a      	mov	r2, sp
 8004adc:	9002      	str	r0, [sp, #8]
 8004ade:	9303      	str	r3, [sp, #12]
 8004ae0:	6860      	ldr	r0, [r4, #4]
 8004ae2:	47a8      	blx	r5
 8004ae4:	89a3      	ldrh	r3, [r4, #12]
 8004ae6:	e7aa      	b.n	8004a3e <_platform_observer_node_exec_cb+0x7a>

08004ae8 <_ai_platform_acquire_crc>:
 8004ae8:	2001      	movs	r0, #1
 8004aea:	4770      	bx	lr

08004aec <_ai_platform_release_crc>:
 8004aec:	4770      	bx	lr
 8004aee:	bf00      	nop

08004af0 <ai_platform_get_weights_map>:
 8004af0:	2900      	cmp	r1, #0
 8004af2:	bf18      	it	ne
 8004af4:	2800      	cmpne	r0, #0
 8004af6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004af8:	bf0c      	ite	eq
 8004afa:	2401      	moveq	r4, #1
 8004afc:	2400      	movne	r4, #0
 8004afe:	2a00      	cmp	r2, #0
 8004b00:	bf08      	it	eq
 8004b02:	f044 0401 	orreq.w	r4, r4, #1
 8004b06:	b114      	cbz	r4, 8004b0e <ai_platform_get_weights_map+0x1e>
 8004b08:	2400      	movs	r4, #0
 8004b0a:	4620      	mov	r0, r4
 8004b0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004b0e:	4616      	mov	r6, r2
 8004b10:	4b22      	ldr	r3, [pc, #136]	; (8004b9c <ai_platform_get_weights_map+0xac>)
 8004b12:	6812      	ldr	r2, [r2, #0]
 8004b14:	4605      	mov	r5, r0
 8004b16:	460f      	mov	r7, r1
 8004b18:	429a      	cmp	r2, r3
 8004b1a:	d022      	beq.n	8004b62 <ai_platform_get_weights_map+0x72>
 8004b1c:	6870      	ldr	r0, [r6, #4]
 8004b1e:	2800      	cmp	r0, #0
 8004b20:	d0f2      	beq.n	8004b08 <ai_platform_get_weights_map+0x18>
 8004b22:	6806      	ldr	r6, [r0, #0]
 8004b24:	429e      	cmp	r6, r3
 8004b26:	d006      	beq.n	8004b36 <ai_platform_get_weights_map+0x46>
 8004b28:	f1a1 0401 	sub.w	r4, r1, #1
 8004b2c:	6028      	str	r0, [r5, #0]
 8004b2e:	fab4 f484 	clz	r4, r4
 8004b32:	0964      	lsrs	r4, r4, #5
 8004b34:	e7e9      	b.n	8004b0a <ai_platform_get_weights_map+0x1a>
 8004b36:	3d04      	subs	r5, #4
 8004b38:	4602      	mov	r2, r0
 8004b3a:	4621      	mov	r1, r4
 8004b3c:	e000      	b.n	8004b40 <ai_platform_get_weights_map+0x50>
 8004b3e:	4619      	mov	r1, r3
 8004b40:	f852 3f04 	ldr.w	r3, [r2, #4]!
 8004b44:	42b3      	cmp	r3, r6
 8004b46:	d025      	beq.n	8004b94 <ai_platform_get_weights_map+0xa4>
 8004b48:	f845 3f04 	str.w	r3, [r5, #4]!
 8004b4c:	1c4b      	adds	r3, r1, #1
 8004b4e:	429f      	cmp	r7, r3
 8004b50:	d8f5      	bhi.n	8004b3e <ai_platform_get_weights_map+0x4e>
 8004b52:	d1da      	bne.n	8004b0a <ai_platform_get_weights_map+0x1a>
 8004b54:	3102      	adds	r1, #2
 8004b56:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 8004b5a:	42b3      	cmp	r3, r6
 8004b5c:	d1d5      	bne.n	8004b0a <ai_platform_get_weights_map+0x1a>
 8004b5e:	2401      	movs	r4, #1
 8004b60:	e7d3      	b.n	8004b0a <ai_platform_get_weights_map+0x1a>
 8004b62:	1d30      	adds	r0, r6, #4
 8004b64:	f7ff ff14 	bl	8004990 <ai_buffer_array_sane>
 8004b68:	2800      	cmp	r0, #0
 8004b6a:	d0cd      	beq.n	8004b08 <ai_platform_get_weights_map+0x18>
 8004b6c:	88f3      	ldrh	r3, [r6, #6]
 8004b6e:	429f      	cmp	r7, r3
 8004b70:	d1ca      	bne.n	8004b08 <ai_platform_get_weights_map+0x18>
 8004b72:	3d04      	subs	r5, #4
 8004b74:	4622      	mov	r2, r4
 8004b76:	68b3      	ldr	r3, [r6, #8]
 8004b78:	4423      	add	r3, r4
 8004b7a:	341c      	adds	r4, #28
 8004b7c:	685b      	ldr	r3, [r3, #4]
 8004b7e:	b123      	cbz	r3, 8004b8a <ai_platform_get_weights_map+0x9a>
 8004b80:	3201      	adds	r2, #1
 8004b82:	f845 3f04 	str.w	r3, [r5, #4]!
 8004b86:	4297      	cmp	r7, r2
 8004b88:	d8f5      	bhi.n	8004b76 <ai_platform_get_weights_map+0x86>
 8004b8a:	1abc      	subs	r4, r7, r2
 8004b8c:	fab4 f484 	clz	r4, r4
 8004b90:	0964      	lsrs	r4, r4, #5
 8004b92:	e7ba      	b.n	8004b0a <ai_platform_get_weights_map+0x1a>
 8004b94:	428f      	cmp	r7, r1
 8004b96:	d1b8      	bne.n	8004b0a <ai_platform_get_weights_map+0x1a>
 8004b98:	e7e1      	b.n	8004b5e <ai_platform_get_weights_map+0x6e>
 8004b9a:	bf00      	nop
 8004b9c:	a1facade 	.word	0xa1facade

08004ba0 <ai_platform_get_activations_map>:
 8004ba0:	2900      	cmp	r1, #0
 8004ba2:	bf18      	it	ne
 8004ba4:	2800      	cmpne	r0, #0
 8004ba6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004ba8:	bf0c      	ite	eq
 8004baa:	2401      	moveq	r4, #1
 8004bac:	2400      	movne	r4, #0
 8004bae:	2a00      	cmp	r2, #0
 8004bb0:	bf08      	it	eq
 8004bb2:	f044 0401 	orreq.w	r4, r4, #1
 8004bb6:	b114      	cbz	r4, 8004bbe <ai_platform_get_activations_map+0x1e>
 8004bb8:	2400      	movs	r4, #0
 8004bba:	4620      	mov	r0, r4
 8004bbc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004bbe:	4616      	mov	r6, r2
 8004bc0:	4b22      	ldr	r3, [pc, #136]	; (8004c4c <ai_platform_get_activations_map+0xac>)
 8004bc2:	6812      	ldr	r2, [r2, #0]
 8004bc4:	4605      	mov	r5, r0
 8004bc6:	460f      	mov	r7, r1
 8004bc8:	429a      	cmp	r2, r3
 8004bca:	d022      	beq.n	8004c12 <ai_platform_get_activations_map+0x72>
 8004bcc:	6a30      	ldr	r0, [r6, #32]
 8004bce:	2800      	cmp	r0, #0
 8004bd0:	d0f2      	beq.n	8004bb8 <ai_platform_get_activations_map+0x18>
 8004bd2:	6806      	ldr	r6, [r0, #0]
 8004bd4:	429e      	cmp	r6, r3
 8004bd6:	d006      	beq.n	8004be6 <ai_platform_get_activations_map+0x46>
 8004bd8:	f1a1 0401 	sub.w	r4, r1, #1
 8004bdc:	6028      	str	r0, [r5, #0]
 8004bde:	fab4 f484 	clz	r4, r4
 8004be2:	0964      	lsrs	r4, r4, #5
 8004be4:	e7e9      	b.n	8004bba <ai_platform_get_activations_map+0x1a>
 8004be6:	3d04      	subs	r5, #4
 8004be8:	4602      	mov	r2, r0
 8004bea:	4621      	mov	r1, r4
 8004bec:	e000      	b.n	8004bf0 <ai_platform_get_activations_map+0x50>
 8004bee:	4619      	mov	r1, r3
 8004bf0:	f852 3f04 	ldr.w	r3, [r2, #4]!
 8004bf4:	42b3      	cmp	r3, r6
 8004bf6:	d026      	beq.n	8004c46 <ai_platform_get_activations_map+0xa6>
 8004bf8:	f845 3f04 	str.w	r3, [r5, #4]!
 8004bfc:	1c4b      	adds	r3, r1, #1
 8004bfe:	429f      	cmp	r7, r3
 8004c00:	d8f5      	bhi.n	8004bee <ai_platform_get_activations_map+0x4e>
 8004c02:	d1da      	bne.n	8004bba <ai_platform_get_activations_map+0x1a>
 8004c04:	3102      	adds	r1, #2
 8004c06:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 8004c0a:	42b3      	cmp	r3, r6
 8004c0c:	d1d5      	bne.n	8004bba <ai_platform_get_activations_map+0x1a>
 8004c0e:	2401      	movs	r4, #1
 8004c10:	e7d3      	b.n	8004bba <ai_platform_get_activations_map+0x1a>
 8004c12:	f106 000c 	add.w	r0, r6, #12
 8004c16:	f7ff febb 	bl	8004990 <ai_buffer_array_sane>
 8004c1a:	2800      	cmp	r0, #0
 8004c1c:	d0cc      	beq.n	8004bb8 <ai_platform_get_activations_map+0x18>
 8004c1e:	89f3      	ldrh	r3, [r6, #14]
 8004c20:	429f      	cmp	r7, r3
 8004c22:	d1c9      	bne.n	8004bb8 <ai_platform_get_activations_map+0x18>
 8004c24:	3d04      	subs	r5, #4
 8004c26:	4622      	mov	r2, r4
 8004c28:	6933      	ldr	r3, [r6, #16]
 8004c2a:	4423      	add	r3, r4
 8004c2c:	341c      	adds	r4, #28
 8004c2e:	685b      	ldr	r3, [r3, #4]
 8004c30:	b123      	cbz	r3, 8004c3c <ai_platform_get_activations_map+0x9c>
 8004c32:	3201      	adds	r2, #1
 8004c34:	f845 3f04 	str.w	r3, [r5, #4]!
 8004c38:	4297      	cmp	r7, r2
 8004c3a:	d8f5      	bhi.n	8004c28 <ai_platform_get_activations_map+0x88>
 8004c3c:	1abc      	subs	r4, r7, r2
 8004c3e:	fab4 f484 	clz	r4, r4
 8004c42:	0964      	lsrs	r4, r4, #5
 8004c44:	e7b9      	b.n	8004bba <ai_platform_get_activations_map+0x1a>
 8004c46:	428f      	cmp	r7, r1
 8004c48:	d1b7      	bne.n	8004bba <ai_platform_get_activations_map+0x1a>
 8004c4a:	e7e0      	b.n	8004c0e <ai_platform_get_activations_map+0x6e>
 8004c4c:	a1facade 	.word	0xa1facade

08004c50 <ai_platform_bind_network_params>:
 8004c50:	2a00      	cmp	r2, #0
 8004c52:	bf18      	it	ne
 8004c54:	2900      	cmpne	r1, #0
 8004c56:	d010      	beq.n	8004c7a <ai_platform_bind_network_params+0x2a>
 8004c58:	b178      	cbz	r0, 8004c7a <ai_platform_bind_network_params+0x2a>
 8004c5a:	4603      	mov	r3, r0
 8004c5c:	4808      	ldr	r0, [pc, #32]	; (8004c80 <ai_platform_bind_network_params+0x30>)
 8004c5e:	f103 0c0c 	add.w	ip, r3, #12
 8004c62:	f843 0b04 	str.w	r0, [r3], #4
 8004c66:	c903      	ldmia	r1, {r0, r1}
 8004c68:	e883 0003 	stmia.w	r3, {r0, r1}
 8004c6c:	2301      	movs	r3, #1
 8004c6e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8004c72:	e88c 0003 	stmia.w	ip, {r0, r1}
 8004c76:	4618      	mov	r0, r3
 8004c78:	4770      	bx	lr
 8004c7a:	2300      	movs	r3, #0
 8004c7c:	4618      	mov	r0, r3
 8004c7e:	4770      	bx	lr
 8004c80:	a1facade 	.word	0xa1facade

08004c84 <ai_platform_runtime_get_revision>:
 8004c84:	b508      	push	{r3, lr}
 8004c86:	f7ff ff2f 	bl	8004ae8 <_ai_platform_acquire_crc>
 8004c8a:	4b39      	ldr	r3, [pc, #228]	; (8004d70 <ai_platform_runtime_get_revision+0xec>)
 8004c8c:	f46f 628a 	mvn.w	r2, #1104	; 0x450
 8004c90:	681b      	ldr	r3, [r3, #0]
 8004c92:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004c96:	189a      	adds	r2, r3, r2
 8004c98:	2a01      	cmp	r2, #1
 8004c9a:	d929      	bls.n	8004cf0 <ai_platform_runtime_get_revision+0x6c>
 8004c9c:	f240 4249 	movw	r2, #1097	; 0x449
 8004ca0:	4293      	cmp	r3, r2
 8004ca2:	d025      	beq.n	8004cf0 <ai_platform_runtime_get_revision+0x6c>
 8004ca4:	4a33      	ldr	r2, [pc, #204]	; (8004d74 <ai_platform_runtime_get_revision+0xf0>)
 8004ca6:	6813      	ldr	r3, [r2, #0]
 8004ca8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004cac:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8004cb0:	d02b      	beq.n	8004d0a <ai_platform_runtime_get_revision+0x86>
 8004cb2:	6813      	ldr	r3, [r2, #0]
 8004cb4:	f240 4183 	movw	r1, #1155	; 0x483
 8004cb8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004cbc:	428b      	cmp	r3, r1
 8004cbe:	d046      	beq.n	8004d4e <ai_platform_runtime_get_revision+0xca>
 8004cc0:	6813      	ldr	r3, [r2, #0]
 8004cc2:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004cc6:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 8004cca:	d032      	beq.n	8004d32 <ai_platform_runtime_get_revision+0xae>
 8004ccc:	6813      	ldr	r3, [r2, #0]
 8004cce:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004cd2:	2b00      	cmp	r3, #0
 8004cd4:	d129      	bne.n	8004d2a <ai_platform_runtime_get_revision+0xa6>
 8004cd6:	4a28      	ldr	r2, [pc, #160]	; (8004d78 <ai_platform_runtime_get_revision+0xf4>)
 8004cd8:	2301      	movs	r3, #1
 8004cda:	6093      	str	r3, [r2, #8]
 8004cdc:	6893      	ldr	r3, [r2, #8]
 8004cde:	2b00      	cmp	r3, #0
 8004ce0:	d1fc      	bne.n	8004cdc <ai_platform_runtime_get_revision+0x58>
 8004ce2:	4926      	ldr	r1, [pc, #152]	; (8004d7c <ai_platform_runtime_get_revision+0xf8>)
 8004ce4:	4b26      	ldr	r3, [pc, #152]	; (8004d80 <ai_platform_runtime_get_revision+0xfc>)
 8004ce6:	6011      	str	r1, [r2, #0]
 8004ce8:	6812      	ldr	r2, [r2, #0]
 8004cea:	429a      	cmp	r2, r3
 8004cec:	d01d      	beq.n	8004d2a <ai_platform_runtime_get_revision+0xa6>
 8004cee:	e7fe      	b.n	8004cee <ai_platform_runtime_get_revision+0x6a>
 8004cf0:	4a21      	ldr	r2, [pc, #132]	; (8004d78 <ai_platform_runtime_get_revision+0xf4>)
 8004cf2:	2301      	movs	r3, #1
 8004cf4:	6093      	str	r3, [r2, #8]
 8004cf6:	6893      	ldr	r3, [r2, #8]
 8004cf8:	2b00      	cmp	r3, #0
 8004cfa:	d1fc      	bne.n	8004cf6 <ai_platform_runtime_get_revision+0x72>
 8004cfc:	491f      	ldr	r1, [pc, #124]	; (8004d7c <ai_platform_runtime_get_revision+0xf8>)
 8004cfe:	4b20      	ldr	r3, [pc, #128]	; (8004d80 <ai_platform_runtime_get_revision+0xfc>)
 8004d00:	6011      	str	r1, [r2, #0]
 8004d02:	6812      	ldr	r2, [r2, #0]
 8004d04:	429a      	cmp	r2, r3
 8004d06:	d010      	beq.n	8004d2a <ai_platform_runtime_get_revision+0xa6>
 8004d08:	e7fe      	b.n	8004d08 <ai_platform_runtime_get_revision+0x84>
 8004d0a:	4a1e      	ldr	r2, [pc, #120]	; (8004d84 <ai_platform_runtime_get_revision+0x100>)
 8004d0c:	2301      	movs	r3, #1
 8004d0e:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8004d12:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8004d16:	2b00      	cmp	r3, #0
 8004d18:	d1fb      	bne.n	8004d12 <ai_platform_runtime_get_revision+0x8e>
 8004d1a:	4918      	ldr	r1, [pc, #96]	; (8004d7c <ai_platform_runtime_get_revision+0xf8>)
 8004d1c:	4b18      	ldr	r3, [pc, #96]	; (8004d80 <ai_platform_runtime_get_revision+0xfc>)
 8004d1e:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 8004d22:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8004d26:	429a      	cmp	r2, r3
 8004d28:	d110      	bne.n	8004d4c <ai_platform_runtime_get_revision+0xc8>
 8004d2a:	f7ff fedf 	bl	8004aec <_ai_platform_release_crc>
 8004d2e:	4816      	ldr	r0, [pc, #88]	; (8004d88 <ai_platform_runtime_get_revision+0x104>)
 8004d30:	bd08      	pop	{r3, pc}
 8004d32:	4a11      	ldr	r2, [pc, #68]	; (8004d78 <ai_platform_runtime_get_revision+0xf4>)
 8004d34:	2301      	movs	r3, #1
 8004d36:	6093      	str	r3, [r2, #8]
 8004d38:	6893      	ldr	r3, [r2, #8]
 8004d3a:	2b00      	cmp	r3, #0
 8004d3c:	d1fc      	bne.n	8004d38 <ai_platform_runtime_get_revision+0xb4>
 8004d3e:	490f      	ldr	r1, [pc, #60]	; (8004d7c <ai_platform_runtime_get_revision+0xf8>)
 8004d40:	4b0f      	ldr	r3, [pc, #60]	; (8004d80 <ai_platform_runtime_get_revision+0xfc>)
 8004d42:	6011      	str	r1, [r2, #0]
 8004d44:	6812      	ldr	r2, [r2, #0]
 8004d46:	429a      	cmp	r2, r3
 8004d48:	d0ef      	beq.n	8004d2a <ai_platform_runtime_get_revision+0xa6>
 8004d4a:	e7fe      	b.n	8004d4a <ai_platform_runtime_get_revision+0xc6>
 8004d4c:	e7fe      	b.n	8004d4c <ai_platform_runtime_get_revision+0xc8>
 8004d4e:	4a0d      	ldr	r2, [pc, #52]	; (8004d84 <ai_platform_runtime_get_revision+0x100>)
 8004d50:	2301      	movs	r3, #1
 8004d52:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8004d56:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8004d5a:	2b00      	cmp	r3, #0
 8004d5c:	d1fb      	bne.n	8004d56 <ai_platform_runtime_get_revision+0xd2>
 8004d5e:	4907      	ldr	r1, [pc, #28]	; (8004d7c <ai_platform_runtime_get_revision+0xf8>)
 8004d60:	4b07      	ldr	r3, [pc, #28]	; (8004d80 <ai_platform_runtime_get_revision+0xfc>)
 8004d62:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 8004d66:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8004d6a:	429a      	cmp	r2, r3
 8004d6c:	d0dd      	beq.n	8004d2a <ai_platform_runtime_get_revision+0xa6>
 8004d6e:	e7fe      	b.n	8004d6e <ai_platform_runtime_get_revision+0xea>
 8004d70:	e0042000 	.word	0xe0042000
 8004d74:	5c001000 	.word	0x5c001000
 8004d78:	40023000 	.word	0x40023000
 8004d7c:	f407a5c2 	.word	0xf407a5c2
 8004d80:	b5e8b5cd 	.word	0xb5e8b5cd
 8004d84:	58024000 	.word	0x58024000
 8004d88:	080364b4 	.word	0x080364b4

08004d8c <ai_platform_runtime_get_version>:
 8004d8c:	b500      	push	{lr}
 8004d8e:	b083      	sub	sp, #12
 8004d90:	f7ff feaa 	bl	8004ae8 <_ai_platform_acquire_crc>
 8004d94:	4b42      	ldr	r3, [pc, #264]	; (8004ea0 <ai_platform_runtime_get_version+0x114>)
 8004d96:	f46f 628a 	mvn.w	r2, #1104	; 0x450
 8004d9a:	681b      	ldr	r3, [r3, #0]
 8004d9c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004da0:	189a      	adds	r2, r3, r2
 8004da2:	2a01      	cmp	r2, #1
 8004da4:	d929      	bls.n	8004dfa <ai_platform_runtime_get_version+0x6e>
 8004da6:	f240 4249 	movw	r2, #1097	; 0x449
 8004daa:	4293      	cmp	r3, r2
 8004dac:	d025      	beq.n	8004dfa <ai_platform_runtime_get_version+0x6e>
 8004dae:	4a3d      	ldr	r2, [pc, #244]	; (8004ea4 <ai_platform_runtime_get_version+0x118>)
 8004db0:	6813      	ldr	r3, [r2, #0]
 8004db2:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004db6:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8004dba:	d02b      	beq.n	8004e14 <ai_platform_runtime_get_version+0x88>
 8004dbc:	6813      	ldr	r3, [r2, #0]
 8004dbe:	f240 4183 	movw	r1, #1155	; 0x483
 8004dc2:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004dc6:	428b      	cmp	r3, r1
 8004dc8:	d059      	beq.n	8004e7e <ai_platform_runtime_get_version+0xf2>
 8004dca:	6813      	ldr	r3, [r2, #0]
 8004dcc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004dd0:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 8004dd4:	d045      	beq.n	8004e62 <ai_platform_runtime_get_version+0xd6>
 8004dd6:	6813      	ldr	r3, [r2, #0]
 8004dd8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004ddc:	2b00      	cmp	r3, #0
 8004dde:	d129      	bne.n	8004e34 <ai_platform_runtime_get_version+0xa8>
 8004de0:	4a31      	ldr	r2, [pc, #196]	; (8004ea8 <ai_platform_runtime_get_version+0x11c>)
 8004de2:	2301      	movs	r3, #1
 8004de4:	6093      	str	r3, [r2, #8]
 8004de6:	6893      	ldr	r3, [r2, #8]
 8004de8:	2b00      	cmp	r3, #0
 8004dea:	d1fc      	bne.n	8004de6 <ai_platform_runtime_get_version+0x5a>
 8004dec:	492f      	ldr	r1, [pc, #188]	; (8004eac <ai_platform_runtime_get_version+0x120>)
 8004dee:	4b30      	ldr	r3, [pc, #192]	; (8004eb0 <ai_platform_runtime_get_version+0x124>)
 8004df0:	6011      	str	r1, [r2, #0]
 8004df2:	6812      	ldr	r2, [r2, #0]
 8004df4:	429a      	cmp	r2, r3
 8004df6:	d01d      	beq.n	8004e34 <ai_platform_runtime_get_version+0xa8>
 8004df8:	e7fe      	b.n	8004df8 <ai_platform_runtime_get_version+0x6c>
 8004dfa:	4a2b      	ldr	r2, [pc, #172]	; (8004ea8 <ai_platform_runtime_get_version+0x11c>)
 8004dfc:	2301      	movs	r3, #1
 8004dfe:	6093      	str	r3, [r2, #8]
 8004e00:	6893      	ldr	r3, [r2, #8]
 8004e02:	2b00      	cmp	r3, #0
 8004e04:	d1fc      	bne.n	8004e00 <ai_platform_runtime_get_version+0x74>
 8004e06:	4929      	ldr	r1, [pc, #164]	; (8004eac <ai_platform_runtime_get_version+0x120>)
 8004e08:	4b29      	ldr	r3, [pc, #164]	; (8004eb0 <ai_platform_runtime_get_version+0x124>)
 8004e0a:	6011      	str	r1, [r2, #0]
 8004e0c:	6812      	ldr	r2, [r2, #0]
 8004e0e:	429a      	cmp	r2, r3
 8004e10:	d010      	beq.n	8004e34 <ai_platform_runtime_get_version+0xa8>
 8004e12:	e7fe      	b.n	8004e12 <ai_platform_runtime_get_version+0x86>
 8004e14:	4a27      	ldr	r2, [pc, #156]	; (8004eb4 <ai_platform_runtime_get_version+0x128>)
 8004e16:	2301      	movs	r3, #1
 8004e18:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8004e1c:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8004e20:	2b00      	cmp	r3, #0
 8004e22:	d1fb      	bne.n	8004e1c <ai_platform_runtime_get_version+0x90>
 8004e24:	4921      	ldr	r1, [pc, #132]	; (8004eac <ai_platform_runtime_get_version+0x120>)
 8004e26:	4b22      	ldr	r3, [pc, #136]	; (8004eb0 <ai_platform_runtime_get_version+0x124>)
 8004e28:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 8004e2c:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8004e30:	429a      	cmp	r2, r3
 8004e32:	d123      	bne.n	8004e7c <ai_platform_runtime_get_version+0xf0>
 8004e34:	f7ff fe5a 	bl	8004aec <_ai_platform_release_crc>
 8004e38:	4b1f      	ldr	r3, [pc, #124]	; (8004eb8 <ai_platform_runtime_get_version+0x12c>)
 8004e3a:	2000      	movs	r0, #0
 8004e3c:	681b      	ldr	r3, [r3, #0]
 8004e3e:	fa5f fc83 	uxtb.w	ip, r3
 8004e42:	f3c3 2107 	ubfx	r1, r3, #8, #8
 8004e46:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8004e4a:	0e1b      	lsrs	r3, r3, #24
 8004e4c:	f36c 0007 	bfi	r0, ip, #0, #8
 8004e50:	f361 200f 	bfi	r0, r1, #8, #8
 8004e54:	f362 4017 	bfi	r0, r2, #16, #8
 8004e58:	f363 601f 	bfi	r0, r3, #24, #8
 8004e5c:	b003      	add	sp, #12
 8004e5e:	f85d fb04 	ldr.w	pc, [sp], #4
 8004e62:	4a11      	ldr	r2, [pc, #68]	; (8004ea8 <ai_platform_runtime_get_version+0x11c>)
 8004e64:	2301      	movs	r3, #1
 8004e66:	6093      	str	r3, [r2, #8]
 8004e68:	6893      	ldr	r3, [r2, #8]
 8004e6a:	2b00      	cmp	r3, #0
 8004e6c:	d1fc      	bne.n	8004e68 <ai_platform_runtime_get_version+0xdc>
 8004e6e:	490f      	ldr	r1, [pc, #60]	; (8004eac <ai_platform_runtime_get_version+0x120>)
 8004e70:	4b0f      	ldr	r3, [pc, #60]	; (8004eb0 <ai_platform_runtime_get_version+0x124>)
 8004e72:	6011      	str	r1, [r2, #0]
 8004e74:	6812      	ldr	r2, [r2, #0]
 8004e76:	429a      	cmp	r2, r3
 8004e78:	d0dc      	beq.n	8004e34 <ai_platform_runtime_get_version+0xa8>
 8004e7a:	e7fe      	b.n	8004e7a <ai_platform_runtime_get_version+0xee>
 8004e7c:	e7fe      	b.n	8004e7c <ai_platform_runtime_get_version+0xf0>
 8004e7e:	4a0d      	ldr	r2, [pc, #52]	; (8004eb4 <ai_platform_runtime_get_version+0x128>)
 8004e80:	2301      	movs	r3, #1
 8004e82:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8004e86:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8004e8a:	2b00      	cmp	r3, #0
 8004e8c:	d1fb      	bne.n	8004e86 <ai_platform_runtime_get_version+0xfa>
 8004e8e:	4907      	ldr	r1, [pc, #28]	; (8004eac <ai_platform_runtime_get_version+0x120>)
 8004e90:	4b07      	ldr	r3, [pc, #28]	; (8004eb0 <ai_platform_runtime_get_version+0x124>)
 8004e92:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 8004e96:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8004e9a:	429a      	cmp	r2, r3
 8004e9c:	d0ca      	beq.n	8004e34 <ai_platform_runtime_get_version+0xa8>
 8004e9e:	e7fe      	b.n	8004e9e <ai_platform_runtime_get_version+0x112>
 8004ea0:	e0042000 	.word	0xe0042000
 8004ea4:	5c001000 	.word	0x5c001000
 8004ea8:	40023000 	.word	0x40023000
 8004eac:	f407a5c2 	.word	0xf407a5c2
 8004eb0:	b5e8b5cd 	.word	0xb5e8b5cd
 8004eb4:	58024000 	.word	0x58024000
 8004eb8:	08036468 	.word	0x08036468

08004ebc <ai_platform_api_get_version>:
 8004ebc:	b500      	push	{lr}
 8004ebe:	b083      	sub	sp, #12
 8004ec0:	f7ff fe12 	bl	8004ae8 <_ai_platform_acquire_crc>
 8004ec4:	4b42      	ldr	r3, [pc, #264]	; (8004fd0 <ai_platform_api_get_version+0x114>)
 8004ec6:	f46f 628a 	mvn.w	r2, #1104	; 0x450
 8004eca:	681b      	ldr	r3, [r3, #0]
 8004ecc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004ed0:	189a      	adds	r2, r3, r2
 8004ed2:	2a01      	cmp	r2, #1
 8004ed4:	d929      	bls.n	8004f2a <ai_platform_api_get_version+0x6e>
 8004ed6:	f240 4249 	movw	r2, #1097	; 0x449
 8004eda:	4293      	cmp	r3, r2
 8004edc:	d025      	beq.n	8004f2a <ai_platform_api_get_version+0x6e>
 8004ede:	4a3d      	ldr	r2, [pc, #244]	; (8004fd4 <ai_platform_api_get_version+0x118>)
 8004ee0:	6813      	ldr	r3, [r2, #0]
 8004ee2:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004ee6:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8004eea:	d02b      	beq.n	8004f44 <ai_platform_api_get_version+0x88>
 8004eec:	6813      	ldr	r3, [r2, #0]
 8004eee:	f240 4183 	movw	r1, #1155	; 0x483
 8004ef2:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004ef6:	428b      	cmp	r3, r1
 8004ef8:	d059      	beq.n	8004fae <ai_platform_api_get_version+0xf2>
 8004efa:	6813      	ldr	r3, [r2, #0]
 8004efc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004f00:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 8004f04:	d045      	beq.n	8004f92 <ai_platform_api_get_version+0xd6>
 8004f06:	6813      	ldr	r3, [r2, #0]
 8004f08:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004f0c:	2b00      	cmp	r3, #0
 8004f0e:	d129      	bne.n	8004f64 <ai_platform_api_get_version+0xa8>
 8004f10:	4a31      	ldr	r2, [pc, #196]	; (8004fd8 <ai_platform_api_get_version+0x11c>)
 8004f12:	2301      	movs	r3, #1
 8004f14:	6093      	str	r3, [r2, #8]
 8004f16:	6893      	ldr	r3, [r2, #8]
 8004f18:	2b00      	cmp	r3, #0
 8004f1a:	d1fc      	bne.n	8004f16 <ai_platform_api_get_version+0x5a>
 8004f1c:	492f      	ldr	r1, [pc, #188]	; (8004fdc <ai_platform_api_get_version+0x120>)
 8004f1e:	4b30      	ldr	r3, [pc, #192]	; (8004fe0 <ai_platform_api_get_version+0x124>)
 8004f20:	6011      	str	r1, [r2, #0]
 8004f22:	6812      	ldr	r2, [r2, #0]
 8004f24:	429a      	cmp	r2, r3
 8004f26:	d01d      	beq.n	8004f64 <ai_platform_api_get_version+0xa8>
 8004f28:	e7fe      	b.n	8004f28 <ai_platform_api_get_version+0x6c>
 8004f2a:	4a2b      	ldr	r2, [pc, #172]	; (8004fd8 <ai_platform_api_get_version+0x11c>)
 8004f2c:	2301      	movs	r3, #1
 8004f2e:	6093      	str	r3, [r2, #8]
 8004f30:	6893      	ldr	r3, [r2, #8]
 8004f32:	2b00      	cmp	r3, #0
 8004f34:	d1fc      	bne.n	8004f30 <ai_platform_api_get_version+0x74>
 8004f36:	4929      	ldr	r1, [pc, #164]	; (8004fdc <ai_platform_api_get_version+0x120>)
 8004f38:	4b29      	ldr	r3, [pc, #164]	; (8004fe0 <ai_platform_api_get_version+0x124>)
 8004f3a:	6011      	str	r1, [r2, #0]
 8004f3c:	6812      	ldr	r2, [r2, #0]
 8004f3e:	429a      	cmp	r2, r3
 8004f40:	d010      	beq.n	8004f64 <ai_platform_api_get_version+0xa8>
 8004f42:	e7fe      	b.n	8004f42 <ai_platform_api_get_version+0x86>
 8004f44:	4a27      	ldr	r2, [pc, #156]	; (8004fe4 <ai_platform_api_get_version+0x128>)
 8004f46:	2301      	movs	r3, #1
 8004f48:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8004f4c:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8004f50:	2b00      	cmp	r3, #0
 8004f52:	d1fb      	bne.n	8004f4c <ai_platform_api_get_version+0x90>
 8004f54:	4921      	ldr	r1, [pc, #132]	; (8004fdc <ai_platform_api_get_version+0x120>)
 8004f56:	4b22      	ldr	r3, [pc, #136]	; (8004fe0 <ai_platform_api_get_version+0x124>)
 8004f58:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 8004f5c:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8004f60:	429a      	cmp	r2, r3
 8004f62:	d123      	bne.n	8004fac <ai_platform_api_get_version+0xf0>
 8004f64:	f7ff fdc2 	bl	8004aec <_ai_platform_release_crc>
 8004f68:	4b1f      	ldr	r3, [pc, #124]	; (8004fe8 <ai_platform_api_get_version+0x12c>)
 8004f6a:	2000      	movs	r0, #0
 8004f6c:	681b      	ldr	r3, [r3, #0]
 8004f6e:	fa5f fc83 	uxtb.w	ip, r3
 8004f72:	f3c3 2107 	ubfx	r1, r3, #8, #8
 8004f76:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8004f7a:	0e1b      	lsrs	r3, r3, #24
 8004f7c:	f36c 0007 	bfi	r0, ip, #0, #8
 8004f80:	f361 200f 	bfi	r0, r1, #8, #8
 8004f84:	f362 4017 	bfi	r0, r2, #16, #8
 8004f88:	f363 601f 	bfi	r0, r3, #24, #8
 8004f8c:	b003      	add	sp, #12
 8004f8e:	f85d fb04 	ldr.w	pc, [sp], #4
 8004f92:	4a11      	ldr	r2, [pc, #68]	; (8004fd8 <ai_platform_api_get_version+0x11c>)
 8004f94:	2301      	movs	r3, #1
 8004f96:	6093      	str	r3, [r2, #8]
 8004f98:	6893      	ldr	r3, [r2, #8]
 8004f9a:	2b00      	cmp	r3, #0
 8004f9c:	d1fc      	bne.n	8004f98 <ai_platform_api_get_version+0xdc>
 8004f9e:	490f      	ldr	r1, [pc, #60]	; (8004fdc <ai_platform_api_get_version+0x120>)
 8004fa0:	4b0f      	ldr	r3, [pc, #60]	; (8004fe0 <ai_platform_api_get_version+0x124>)
 8004fa2:	6011      	str	r1, [r2, #0]
 8004fa4:	6812      	ldr	r2, [r2, #0]
 8004fa6:	429a      	cmp	r2, r3
 8004fa8:	d0dc      	beq.n	8004f64 <ai_platform_api_get_version+0xa8>
 8004faa:	e7fe      	b.n	8004faa <ai_platform_api_get_version+0xee>
 8004fac:	e7fe      	b.n	8004fac <ai_platform_api_get_version+0xf0>
 8004fae:	4a0d      	ldr	r2, [pc, #52]	; (8004fe4 <ai_platform_api_get_version+0x128>)
 8004fb0:	2301      	movs	r3, #1
 8004fb2:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8004fb6:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8004fba:	2b00      	cmp	r3, #0
 8004fbc:	d1fb      	bne.n	8004fb6 <ai_platform_api_get_version+0xfa>
 8004fbe:	4907      	ldr	r1, [pc, #28]	; (8004fdc <ai_platform_api_get_version+0x120>)
 8004fc0:	4b07      	ldr	r3, [pc, #28]	; (8004fe0 <ai_platform_api_get_version+0x124>)
 8004fc2:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 8004fc6:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8004fca:	429a      	cmp	r2, r3
 8004fcc:	d0ca      	beq.n	8004f64 <ai_platform_api_get_version+0xa8>
 8004fce:	e7fe      	b.n	8004fce <ai_platform_api_get_version+0x112>
 8004fd0:	e0042000 	.word	0xe0042000
 8004fd4:	5c001000 	.word	0x5c001000
 8004fd8:	40023000 	.word	0x40023000
 8004fdc:	f407a5c2 	.word	0xf407a5c2
 8004fe0:	b5e8b5cd 	.word	0xb5e8b5cd
 8004fe4:	58024000 	.word	0x58024000
 8004fe8:	0803646c 	.word	0x0803646c

08004fec <ai_platform_interface_api_get_version>:
 8004fec:	b500      	push	{lr}
 8004fee:	b083      	sub	sp, #12
 8004ff0:	f7ff fd7a 	bl	8004ae8 <_ai_platform_acquire_crc>
 8004ff4:	4b42      	ldr	r3, [pc, #264]	; (8005100 <ai_platform_interface_api_get_version+0x114>)
 8004ff6:	f46f 628a 	mvn.w	r2, #1104	; 0x450
 8004ffa:	681b      	ldr	r3, [r3, #0]
 8004ffc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005000:	189a      	adds	r2, r3, r2
 8005002:	2a01      	cmp	r2, #1
 8005004:	d929      	bls.n	800505a <ai_platform_interface_api_get_version+0x6e>
 8005006:	f240 4249 	movw	r2, #1097	; 0x449
 800500a:	4293      	cmp	r3, r2
 800500c:	d025      	beq.n	800505a <ai_platform_interface_api_get_version+0x6e>
 800500e:	4a3d      	ldr	r2, [pc, #244]	; (8005104 <ai_platform_interface_api_get_version+0x118>)
 8005010:	6813      	ldr	r3, [r2, #0]
 8005012:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005016:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 800501a:	d02b      	beq.n	8005074 <ai_platform_interface_api_get_version+0x88>
 800501c:	6813      	ldr	r3, [r2, #0]
 800501e:	f240 4183 	movw	r1, #1155	; 0x483
 8005022:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005026:	428b      	cmp	r3, r1
 8005028:	d059      	beq.n	80050de <ai_platform_interface_api_get_version+0xf2>
 800502a:	6813      	ldr	r3, [r2, #0]
 800502c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005030:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 8005034:	d045      	beq.n	80050c2 <ai_platform_interface_api_get_version+0xd6>
 8005036:	6813      	ldr	r3, [r2, #0]
 8005038:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800503c:	2b00      	cmp	r3, #0
 800503e:	d129      	bne.n	8005094 <ai_platform_interface_api_get_version+0xa8>
 8005040:	4a31      	ldr	r2, [pc, #196]	; (8005108 <ai_platform_interface_api_get_version+0x11c>)
 8005042:	2301      	movs	r3, #1
 8005044:	6093      	str	r3, [r2, #8]
 8005046:	6893      	ldr	r3, [r2, #8]
 8005048:	2b00      	cmp	r3, #0
 800504a:	d1fc      	bne.n	8005046 <ai_platform_interface_api_get_version+0x5a>
 800504c:	492f      	ldr	r1, [pc, #188]	; (800510c <ai_platform_interface_api_get_version+0x120>)
 800504e:	4b30      	ldr	r3, [pc, #192]	; (8005110 <ai_platform_interface_api_get_version+0x124>)
 8005050:	6011      	str	r1, [r2, #0]
 8005052:	6812      	ldr	r2, [r2, #0]
 8005054:	429a      	cmp	r2, r3
 8005056:	d01d      	beq.n	8005094 <ai_platform_interface_api_get_version+0xa8>
 8005058:	e7fe      	b.n	8005058 <ai_platform_interface_api_get_version+0x6c>
 800505a:	4a2b      	ldr	r2, [pc, #172]	; (8005108 <ai_platform_interface_api_get_version+0x11c>)
 800505c:	2301      	movs	r3, #1
 800505e:	6093      	str	r3, [r2, #8]
 8005060:	6893      	ldr	r3, [r2, #8]
 8005062:	2b00      	cmp	r3, #0
 8005064:	d1fc      	bne.n	8005060 <ai_platform_interface_api_get_version+0x74>
 8005066:	4929      	ldr	r1, [pc, #164]	; (800510c <ai_platform_interface_api_get_version+0x120>)
 8005068:	4b29      	ldr	r3, [pc, #164]	; (8005110 <ai_platform_interface_api_get_version+0x124>)
 800506a:	6011      	str	r1, [r2, #0]
 800506c:	6812      	ldr	r2, [r2, #0]
 800506e:	429a      	cmp	r2, r3
 8005070:	d010      	beq.n	8005094 <ai_platform_interface_api_get_version+0xa8>
 8005072:	e7fe      	b.n	8005072 <ai_platform_interface_api_get_version+0x86>
 8005074:	4a27      	ldr	r2, [pc, #156]	; (8005114 <ai_platform_interface_api_get_version+0x128>)
 8005076:	2301      	movs	r3, #1
 8005078:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 800507c:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8005080:	2b00      	cmp	r3, #0
 8005082:	d1fb      	bne.n	800507c <ai_platform_interface_api_get_version+0x90>
 8005084:	4921      	ldr	r1, [pc, #132]	; (800510c <ai_platform_interface_api_get_version+0x120>)
 8005086:	4b22      	ldr	r3, [pc, #136]	; (8005110 <ai_platform_interface_api_get_version+0x124>)
 8005088:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 800508c:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8005090:	429a      	cmp	r2, r3
 8005092:	d123      	bne.n	80050dc <ai_platform_interface_api_get_version+0xf0>
 8005094:	f7ff fd2a 	bl	8004aec <_ai_platform_release_crc>
 8005098:	4b1f      	ldr	r3, [pc, #124]	; (8005118 <ai_platform_interface_api_get_version+0x12c>)
 800509a:	2000      	movs	r0, #0
 800509c:	681b      	ldr	r3, [r3, #0]
 800509e:	fa5f fc83 	uxtb.w	ip, r3
 80050a2:	f3c3 2107 	ubfx	r1, r3, #8, #8
 80050a6:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80050aa:	0e1b      	lsrs	r3, r3, #24
 80050ac:	f36c 0007 	bfi	r0, ip, #0, #8
 80050b0:	f361 200f 	bfi	r0, r1, #8, #8
 80050b4:	f362 4017 	bfi	r0, r2, #16, #8
 80050b8:	f363 601f 	bfi	r0, r3, #24, #8
 80050bc:	b003      	add	sp, #12
 80050be:	f85d fb04 	ldr.w	pc, [sp], #4
 80050c2:	4a11      	ldr	r2, [pc, #68]	; (8005108 <ai_platform_interface_api_get_version+0x11c>)
 80050c4:	2301      	movs	r3, #1
 80050c6:	6093      	str	r3, [r2, #8]
 80050c8:	6893      	ldr	r3, [r2, #8]
 80050ca:	2b00      	cmp	r3, #0
 80050cc:	d1fc      	bne.n	80050c8 <ai_platform_interface_api_get_version+0xdc>
 80050ce:	490f      	ldr	r1, [pc, #60]	; (800510c <ai_platform_interface_api_get_version+0x120>)
 80050d0:	4b0f      	ldr	r3, [pc, #60]	; (8005110 <ai_platform_interface_api_get_version+0x124>)
 80050d2:	6011      	str	r1, [r2, #0]
 80050d4:	6812      	ldr	r2, [r2, #0]
 80050d6:	429a      	cmp	r2, r3
 80050d8:	d0dc      	beq.n	8005094 <ai_platform_interface_api_get_version+0xa8>
 80050da:	e7fe      	b.n	80050da <ai_platform_interface_api_get_version+0xee>
 80050dc:	e7fe      	b.n	80050dc <ai_platform_interface_api_get_version+0xf0>
 80050de:	4a0d      	ldr	r2, [pc, #52]	; (8005114 <ai_platform_interface_api_get_version+0x128>)
 80050e0:	2301      	movs	r3, #1
 80050e2:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80050e6:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 80050ea:	2b00      	cmp	r3, #0
 80050ec:	d1fb      	bne.n	80050e6 <ai_platform_interface_api_get_version+0xfa>
 80050ee:	4907      	ldr	r1, [pc, #28]	; (800510c <ai_platform_interface_api_get_version+0x120>)
 80050f0:	4b07      	ldr	r3, [pc, #28]	; (8005110 <ai_platform_interface_api_get_version+0x124>)
 80050f2:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 80050f6:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 80050fa:	429a      	cmp	r2, r3
 80050fc:	d0ca      	beq.n	8005094 <ai_platform_interface_api_get_version+0xa8>
 80050fe:	e7fe      	b.n	80050fe <ai_platform_interface_api_get_version+0x112>
 8005100:	e0042000 	.word	0xe0042000
 8005104:	5c001000 	.word	0x5c001000
 8005108:	40023000 	.word	0x40023000
 800510c:	f407a5c2 	.word	0xf407a5c2
 8005110:	b5e8b5cd 	.word	0xb5e8b5cd
 8005114:	58024000 	.word	0x58024000
 8005118:	08036470 	.word	0x08036470

0800511c <ai_platform_context_acquire>:
 800511c:	b510      	push	{r4, lr}
 800511e:	4604      	mov	r4, r0
 8005120:	b120      	cbz	r0, 800512c <ai_platform_context_acquire+0x10>
 8005122:	4b3d      	ldr	r3, [pc, #244]	; (8005218 <ai_platform_context_acquire+0xfc>)
 8005124:	6802      	ldr	r2, [r0, #0]
 8005126:	429a      	cmp	r2, r3
 8005128:	bf18      	it	ne
 800512a:	2400      	movne	r4, #0
 800512c:	f7ff fcdc 	bl	8004ae8 <_ai_platform_acquire_crc>
 8005130:	4b3a      	ldr	r3, [pc, #232]	; (800521c <ai_platform_context_acquire+0x100>)
 8005132:	f46f 628a 	mvn.w	r2, #1104	; 0x450
 8005136:	681b      	ldr	r3, [r3, #0]
 8005138:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800513c:	189a      	adds	r2, r3, r2
 800513e:	2a01      	cmp	r2, #1
 8005140:	d929      	bls.n	8005196 <ai_platform_context_acquire+0x7a>
 8005142:	f240 4249 	movw	r2, #1097	; 0x449
 8005146:	4293      	cmp	r3, r2
 8005148:	d025      	beq.n	8005196 <ai_platform_context_acquire+0x7a>
 800514a:	4a35      	ldr	r2, [pc, #212]	; (8005220 <ai_platform_context_acquire+0x104>)
 800514c:	6813      	ldr	r3, [r2, #0]
 800514e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005152:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8005156:	d02b      	beq.n	80051b0 <ai_platform_context_acquire+0x94>
 8005158:	6813      	ldr	r3, [r2, #0]
 800515a:	f240 4183 	movw	r1, #1155	; 0x483
 800515e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005162:	428b      	cmp	r3, r1
 8005164:	d046      	beq.n	80051f4 <ai_platform_context_acquire+0xd8>
 8005166:	6813      	ldr	r3, [r2, #0]
 8005168:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800516c:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 8005170:	d033      	beq.n	80051da <ai_platform_context_acquire+0xbe>
 8005172:	6813      	ldr	r3, [r2, #0]
 8005174:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005178:	2b00      	cmp	r3, #0
 800517a:	d129      	bne.n	80051d0 <ai_platform_context_acquire+0xb4>
 800517c:	4a29      	ldr	r2, [pc, #164]	; (8005224 <ai_platform_context_acquire+0x108>)
 800517e:	2301      	movs	r3, #1
 8005180:	6093      	str	r3, [r2, #8]
 8005182:	6893      	ldr	r3, [r2, #8]
 8005184:	2b00      	cmp	r3, #0
 8005186:	d1fc      	bne.n	8005182 <ai_platform_context_acquire+0x66>
 8005188:	4927      	ldr	r1, [pc, #156]	; (8005228 <ai_platform_context_acquire+0x10c>)
 800518a:	4b28      	ldr	r3, [pc, #160]	; (800522c <ai_platform_context_acquire+0x110>)
 800518c:	6011      	str	r1, [r2, #0]
 800518e:	6812      	ldr	r2, [r2, #0]
 8005190:	429a      	cmp	r2, r3
 8005192:	d01d      	beq.n	80051d0 <ai_platform_context_acquire+0xb4>
 8005194:	e7fe      	b.n	8005194 <ai_platform_context_acquire+0x78>
 8005196:	4a23      	ldr	r2, [pc, #140]	; (8005224 <ai_platform_context_acquire+0x108>)
 8005198:	2301      	movs	r3, #1
 800519a:	6093      	str	r3, [r2, #8]
 800519c:	6893      	ldr	r3, [r2, #8]
 800519e:	2b00      	cmp	r3, #0
 80051a0:	d1fc      	bne.n	800519c <ai_platform_context_acquire+0x80>
 80051a2:	4921      	ldr	r1, [pc, #132]	; (8005228 <ai_platform_context_acquire+0x10c>)
 80051a4:	4b21      	ldr	r3, [pc, #132]	; (800522c <ai_platform_context_acquire+0x110>)
 80051a6:	6011      	str	r1, [r2, #0]
 80051a8:	6812      	ldr	r2, [r2, #0]
 80051aa:	429a      	cmp	r2, r3
 80051ac:	d010      	beq.n	80051d0 <ai_platform_context_acquire+0xb4>
 80051ae:	e7fe      	b.n	80051ae <ai_platform_context_acquire+0x92>
 80051b0:	4a1f      	ldr	r2, [pc, #124]	; (8005230 <ai_platform_context_acquire+0x114>)
 80051b2:	2301      	movs	r3, #1
 80051b4:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80051b8:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 80051bc:	2b00      	cmp	r3, #0
 80051be:	d1fb      	bne.n	80051b8 <ai_platform_context_acquire+0x9c>
 80051c0:	4919      	ldr	r1, [pc, #100]	; (8005228 <ai_platform_context_acquire+0x10c>)
 80051c2:	4b1a      	ldr	r3, [pc, #104]	; (800522c <ai_platform_context_acquire+0x110>)
 80051c4:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 80051c8:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 80051cc:	429a      	cmp	r2, r3
 80051ce:	d103      	bne.n	80051d8 <ai_platform_context_acquire+0xbc>
 80051d0:	f7ff fc8c 	bl	8004aec <_ai_platform_release_crc>
 80051d4:	4620      	mov	r0, r4
 80051d6:	bd10      	pop	{r4, pc}
 80051d8:	e7fe      	b.n	80051d8 <ai_platform_context_acquire+0xbc>
 80051da:	4a12      	ldr	r2, [pc, #72]	; (8005224 <ai_platform_context_acquire+0x108>)
 80051dc:	2301      	movs	r3, #1
 80051de:	6093      	str	r3, [r2, #8]
 80051e0:	6893      	ldr	r3, [r2, #8]
 80051e2:	2b00      	cmp	r3, #0
 80051e4:	d1fc      	bne.n	80051e0 <ai_platform_context_acquire+0xc4>
 80051e6:	4910      	ldr	r1, [pc, #64]	; (8005228 <ai_platform_context_acquire+0x10c>)
 80051e8:	4b10      	ldr	r3, [pc, #64]	; (800522c <ai_platform_context_acquire+0x110>)
 80051ea:	6011      	str	r1, [r2, #0]
 80051ec:	6812      	ldr	r2, [r2, #0]
 80051ee:	429a      	cmp	r2, r3
 80051f0:	d0ee      	beq.n	80051d0 <ai_platform_context_acquire+0xb4>
 80051f2:	e7fe      	b.n	80051f2 <ai_platform_context_acquire+0xd6>
 80051f4:	4a0e      	ldr	r2, [pc, #56]	; (8005230 <ai_platform_context_acquire+0x114>)
 80051f6:	2301      	movs	r3, #1
 80051f8:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80051fc:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8005200:	2b00      	cmp	r3, #0
 8005202:	d1fb      	bne.n	80051fc <ai_platform_context_acquire+0xe0>
 8005204:	4908      	ldr	r1, [pc, #32]	; (8005228 <ai_platform_context_acquire+0x10c>)
 8005206:	4b09      	ldr	r3, [pc, #36]	; (800522c <ai_platform_context_acquire+0x110>)
 8005208:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 800520c:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8005210:	429a      	cmp	r2, r3
 8005212:	d0dd      	beq.n	80051d0 <ai_platform_context_acquire+0xb4>
 8005214:	e7fe      	b.n	8005214 <ai_platform_context_acquire+0xf8>
 8005216:	bf00      	nop
 8005218:	a1c00100 	.word	0xa1c00100
 800521c:	e0042000 	.word	0xe0042000
 8005220:	5c001000 	.word	0x5c001000
 8005224:	40023000 	.word	0x40023000
 8005228:	f407a5c2 	.word	0xf407a5c2
 800522c:	b5e8b5cd 	.word	0xb5e8b5cd
 8005230:	58024000 	.word	0x58024000

08005234 <ai_platform_network_get_error>:
 8005234:	b510      	push	{r4, lr}
 8005236:	2800      	cmp	r0, #0
 8005238:	d03f      	beq.n	80052ba <ai_platform_network_get_error+0x86>
 800523a:	4b7d      	ldr	r3, [pc, #500]	; (8005430 <ai_platform_network_get_error+0x1fc>)
 800523c:	4604      	mov	r4, r0
 800523e:	6802      	ldr	r2, [r0, #0]
 8005240:	429a      	cmp	r2, r3
 8005242:	d13a      	bne.n	80052ba <ai_platform_network_get_error+0x86>
 8005244:	f7ff fc50 	bl	8004ae8 <_ai_platform_acquire_crc>
 8005248:	4b7a      	ldr	r3, [pc, #488]	; (8005434 <ai_platform_network_get_error+0x200>)
 800524a:	f46f 628a 	mvn.w	r2, #1104	; 0x450
 800524e:	681b      	ldr	r3, [r3, #0]
 8005250:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005254:	189a      	adds	r2, r3, r2
 8005256:	2a01      	cmp	r2, #1
 8005258:	f240 8086 	bls.w	8005368 <ai_platform_network_get_error+0x134>
 800525c:	f240 4249 	movw	r2, #1097	; 0x449
 8005260:	4293      	cmp	r3, r2
 8005262:	f000 8081 	beq.w	8005368 <ai_platform_network_get_error+0x134>
 8005266:	4a74      	ldr	r2, [pc, #464]	; (8005438 <ai_platform_network_get_error+0x204>)
 8005268:	6813      	ldr	r3, [r2, #0]
 800526a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800526e:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8005272:	f000 8087 	beq.w	8005384 <ai_platform_network_get_error+0x150>
 8005276:	6813      	ldr	r3, [r2, #0]
 8005278:	f240 4183 	movw	r1, #1155	; 0x483
 800527c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005280:	428b      	cmp	r3, r1
 8005282:	f000 80a9 	beq.w	80053d8 <ai_platform_network_get_error+0x1a4>
 8005286:	6813      	ldr	r3, [r2, #0]
 8005288:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800528c:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 8005290:	f000 80c0 	beq.w	8005414 <ai_platform_network_get_error+0x1e0>
 8005294:	6813      	ldr	r3, [r2, #0]
 8005296:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800529a:	2b00      	cmp	r3, #0
 800529c:	f040 8082 	bne.w	80053a4 <ai_platform_network_get_error+0x170>
 80052a0:	4a66      	ldr	r2, [pc, #408]	; (800543c <ai_platform_network_get_error+0x208>)
 80052a2:	2301      	movs	r3, #1
 80052a4:	6093      	str	r3, [r2, #8]
 80052a6:	6893      	ldr	r3, [r2, #8]
 80052a8:	2b00      	cmp	r3, #0
 80052aa:	d1fc      	bne.n	80052a6 <ai_platform_network_get_error+0x72>
 80052ac:	4964      	ldr	r1, [pc, #400]	; (8005440 <ai_platform_network_get_error+0x20c>)
 80052ae:	4b65      	ldr	r3, [pc, #404]	; (8005444 <ai_platform_network_get_error+0x210>)
 80052b0:	6011      	str	r1, [r2, #0]
 80052b2:	6812      	ldr	r2, [r2, #0]
 80052b4:	429a      	cmp	r2, r3
 80052b6:	d075      	beq.n	80053a4 <ai_platform_network_get_error+0x170>
 80052b8:	e7fe      	b.n	80052b8 <ai_platform_network_get_error+0x84>
 80052ba:	f7ff fc15 	bl	8004ae8 <_ai_platform_acquire_crc>
 80052be:	4b5d      	ldr	r3, [pc, #372]	; (8005434 <ai_platform_network_get_error+0x200>)
 80052c0:	f46f 618a 	mvn.w	r1, #1104	; 0x450
 80052c4:	681b      	ldr	r3, [r3, #0]
 80052c6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80052ca:	185a      	adds	r2, r3, r1
 80052cc:	2a01      	cmp	r2, #1
 80052ce:	d929      	bls.n	8005324 <ai_platform_network_get_error+0xf0>
 80052d0:	f240 4249 	movw	r2, #1097	; 0x449
 80052d4:	4293      	cmp	r3, r2
 80052d6:	d025      	beq.n	8005324 <ai_platform_network_get_error+0xf0>
 80052d8:	4a57      	ldr	r2, [pc, #348]	; (8005438 <ai_platform_network_get_error+0x204>)
 80052da:	6813      	ldr	r3, [r2, #0]
 80052dc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80052e0:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 80052e4:	d02b      	beq.n	800533e <ai_platform_network_get_error+0x10a>
 80052e6:	6813      	ldr	r3, [r2, #0]
 80052e8:	f240 4183 	movw	r1, #1155	; 0x483
 80052ec:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80052f0:	428b      	cmp	r3, r1
 80052f2:	d060      	beq.n	80053b6 <ai_platform_network_get_error+0x182>
 80052f4:	6813      	ldr	r3, [r2, #0]
 80052f6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80052fa:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 80052fe:	d07c      	beq.n	80053fa <ai_platform_network_get_error+0x1c6>
 8005300:	6813      	ldr	r3, [r2, #0]
 8005302:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005306:	2b00      	cmp	r3, #0
 8005308:	d129      	bne.n	800535e <ai_platform_network_get_error+0x12a>
 800530a:	4a4c      	ldr	r2, [pc, #304]	; (800543c <ai_platform_network_get_error+0x208>)
 800530c:	2301      	movs	r3, #1
 800530e:	6093      	str	r3, [r2, #8]
 8005310:	6893      	ldr	r3, [r2, #8]
 8005312:	2b00      	cmp	r3, #0
 8005314:	d1fc      	bne.n	8005310 <ai_platform_network_get_error+0xdc>
 8005316:	494a      	ldr	r1, [pc, #296]	; (8005440 <ai_platform_network_get_error+0x20c>)
 8005318:	4b4a      	ldr	r3, [pc, #296]	; (8005444 <ai_platform_network_get_error+0x210>)
 800531a:	6011      	str	r1, [r2, #0]
 800531c:	6812      	ldr	r2, [r2, #0]
 800531e:	429a      	cmp	r2, r3
 8005320:	d01d      	beq.n	800535e <ai_platform_network_get_error+0x12a>
 8005322:	e7fe      	b.n	8005322 <ai_platform_network_get_error+0xee>
 8005324:	4a45      	ldr	r2, [pc, #276]	; (800543c <ai_platform_network_get_error+0x208>)
 8005326:	2301      	movs	r3, #1
 8005328:	6093      	str	r3, [r2, #8]
 800532a:	6893      	ldr	r3, [r2, #8]
 800532c:	2b00      	cmp	r3, #0
 800532e:	d1fc      	bne.n	800532a <ai_platform_network_get_error+0xf6>
 8005330:	4943      	ldr	r1, [pc, #268]	; (8005440 <ai_platform_network_get_error+0x20c>)
 8005332:	4b44      	ldr	r3, [pc, #272]	; (8005444 <ai_platform_network_get_error+0x210>)
 8005334:	6011      	str	r1, [r2, #0]
 8005336:	6812      	ldr	r2, [r2, #0]
 8005338:	429a      	cmp	r2, r3
 800533a:	d010      	beq.n	800535e <ai_platform_network_get_error+0x12a>
 800533c:	e7fe      	b.n	800533c <ai_platform_network_get_error+0x108>
 800533e:	4a42      	ldr	r2, [pc, #264]	; (8005448 <ai_platform_network_get_error+0x214>)
 8005340:	2301      	movs	r3, #1
 8005342:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8005346:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 800534a:	2b00      	cmp	r3, #0
 800534c:	d1fb      	bne.n	8005346 <ai_platform_network_get_error+0x112>
 800534e:	493c      	ldr	r1, [pc, #240]	; (8005440 <ai_platform_network_get_error+0x20c>)
 8005350:	4b3c      	ldr	r3, [pc, #240]	; (8005444 <ai_platform_network_get_error+0x210>)
 8005352:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 8005356:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 800535a:	429a      	cmp	r2, r3
 800535c:	d111      	bne.n	8005382 <ai_platform_network_get_error+0x14e>
 800535e:	f7ff fbc5 	bl	8004aec <_ai_platform_release_crc>
 8005362:	f241 0010 	movw	r0, #4112	; 0x1010
 8005366:	bd10      	pop	{r4, pc}
 8005368:	4a34      	ldr	r2, [pc, #208]	; (800543c <ai_platform_network_get_error+0x208>)
 800536a:	2301      	movs	r3, #1
 800536c:	6093      	str	r3, [r2, #8]
 800536e:	6893      	ldr	r3, [r2, #8]
 8005370:	2b00      	cmp	r3, #0
 8005372:	d1fc      	bne.n	800536e <ai_platform_network_get_error+0x13a>
 8005374:	4932      	ldr	r1, [pc, #200]	; (8005440 <ai_platform_network_get_error+0x20c>)
 8005376:	4b33      	ldr	r3, [pc, #204]	; (8005444 <ai_platform_network_get_error+0x210>)
 8005378:	6011      	str	r1, [r2, #0]
 800537a:	6812      	ldr	r2, [r2, #0]
 800537c:	429a      	cmp	r2, r3
 800537e:	d011      	beq.n	80053a4 <ai_platform_network_get_error+0x170>
 8005380:	e7fe      	b.n	8005380 <ai_platform_network_get_error+0x14c>
 8005382:	e7fe      	b.n	8005382 <ai_platform_network_get_error+0x14e>
 8005384:	4a30      	ldr	r2, [pc, #192]	; (8005448 <ai_platform_network_get_error+0x214>)
 8005386:	2301      	movs	r3, #1
 8005388:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 800538c:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8005390:	2b00      	cmp	r3, #0
 8005392:	d1fb      	bne.n	800538c <ai_platform_network_get_error+0x158>
 8005394:	492a      	ldr	r1, [pc, #168]	; (8005440 <ai_platform_network_get_error+0x20c>)
 8005396:	4b2b      	ldr	r3, [pc, #172]	; (8005444 <ai_platform_network_get_error+0x210>)
 8005398:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 800539c:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 80053a0:	429a      	cmp	r2, r3
 80053a2:	d107      	bne.n	80053b4 <ai_platform_network_get_error+0x180>
 80053a4:	f7ff fba2 	bl	8004aec <_ai_platform_release_crc>
 80053a8:	f104 0010 	add.w	r0, r4, #16
 80053ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80053b0:	f002 b832 	b.w	8007418 <core_get_error>
 80053b4:	e7fe      	b.n	80053b4 <ai_platform_network_get_error+0x180>
 80053b6:	4a24      	ldr	r2, [pc, #144]	; (8005448 <ai_platform_network_get_error+0x214>)
 80053b8:	2301      	movs	r3, #1
 80053ba:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80053be:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 80053c2:	2b00      	cmp	r3, #0
 80053c4:	d1fb      	bne.n	80053be <ai_platform_network_get_error+0x18a>
 80053c6:	491e      	ldr	r1, [pc, #120]	; (8005440 <ai_platform_network_get_error+0x20c>)
 80053c8:	4b1e      	ldr	r3, [pc, #120]	; (8005444 <ai_platform_network_get_error+0x210>)
 80053ca:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 80053ce:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 80053d2:	429a      	cmp	r2, r3
 80053d4:	d0c3      	beq.n	800535e <ai_platform_network_get_error+0x12a>
 80053d6:	e7fe      	b.n	80053d6 <ai_platform_network_get_error+0x1a2>
 80053d8:	4a1b      	ldr	r2, [pc, #108]	; (8005448 <ai_platform_network_get_error+0x214>)
 80053da:	2301      	movs	r3, #1
 80053dc:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80053e0:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 80053e4:	2b00      	cmp	r3, #0
 80053e6:	d1fb      	bne.n	80053e0 <ai_platform_network_get_error+0x1ac>
 80053e8:	4915      	ldr	r1, [pc, #84]	; (8005440 <ai_platform_network_get_error+0x20c>)
 80053ea:	4b16      	ldr	r3, [pc, #88]	; (8005444 <ai_platform_network_get_error+0x210>)
 80053ec:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 80053f0:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 80053f4:	429a      	cmp	r2, r3
 80053f6:	d0d5      	beq.n	80053a4 <ai_platform_network_get_error+0x170>
 80053f8:	e7fe      	b.n	80053f8 <ai_platform_network_get_error+0x1c4>
 80053fa:	4a10      	ldr	r2, [pc, #64]	; (800543c <ai_platform_network_get_error+0x208>)
 80053fc:	2301      	movs	r3, #1
 80053fe:	6093      	str	r3, [r2, #8]
 8005400:	6893      	ldr	r3, [r2, #8]
 8005402:	2b00      	cmp	r3, #0
 8005404:	d1fc      	bne.n	8005400 <ai_platform_network_get_error+0x1cc>
 8005406:	490e      	ldr	r1, [pc, #56]	; (8005440 <ai_platform_network_get_error+0x20c>)
 8005408:	4b0e      	ldr	r3, [pc, #56]	; (8005444 <ai_platform_network_get_error+0x210>)
 800540a:	6011      	str	r1, [r2, #0]
 800540c:	6812      	ldr	r2, [r2, #0]
 800540e:	429a      	cmp	r2, r3
 8005410:	d0a5      	beq.n	800535e <ai_platform_network_get_error+0x12a>
 8005412:	e7fe      	b.n	8005412 <ai_platform_network_get_error+0x1de>
 8005414:	4a09      	ldr	r2, [pc, #36]	; (800543c <ai_platform_network_get_error+0x208>)
 8005416:	2301      	movs	r3, #1
 8005418:	6093      	str	r3, [r2, #8]
 800541a:	6893      	ldr	r3, [r2, #8]
 800541c:	2b00      	cmp	r3, #0
 800541e:	d1fc      	bne.n	800541a <ai_platform_network_get_error+0x1e6>
 8005420:	4907      	ldr	r1, [pc, #28]	; (8005440 <ai_platform_network_get_error+0x20c>)
 8005422:	4b08      	ldr	r3, [pc, #32]	; (8005444 <ai_platform_network_get_error+0x210>)
 8005424:	6011      	str	r1, [r2, #0]
 8005426:	6812      	ldr	r2, [r2, #0]
 8005428:	429a      	cmp	r2, r3
 800542a:	d0bb      	beq.n	80053a4 <ai_platform_network_get_error+0x170>
 800542c:	e7fe      	b.n	800542c <ai_platform_network_get_error+0x1f8>
 800542e:	bf00      	nop
 8005430:	a1c00100 	.word	0xa1c00100
 8005434:	e0042000 	.word	0xe0042000
 8005438:	5c001000 	.word	0x5c001000
 800543c:	40023000 	.word	0x40023000
 8005440:	f407a5c2 	.word	0xf407a5c2
 8005444:	b5e8b5cd 	.word	0xb5e8b5cd
 8005448:	58024000 	.word	0x58024000

0800544c <ai_platform_network_set_error>:
 800544c:	b110      	cbz	r0, 8005454 <ai_platform_network_set_error+0x8>
 800544e:	3010      	adds	r0, #16
 8005450:	f001 bfe8 	b.w	8007424 <core_set_error>
 8005454:	4770      	bx	lr
 8005456:	bf00      	nop

08005458 <ai_platform_api_get_network_report>:
 8005458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800545c:	b089      	sub	sp, #36	; 0x24
 800545e:	4607      	mov	r7, r0
 8005460:	9101      	str	r1, [sp, #4]
 8005462:	b120      	cbz	r0, 800546e <ai_platform_api_get_network_report+0x16>
 8005464:	4b87      	ldr	r3, [pc, #540]	; (8005684 <ai_platform_api_get_network_report+0x22c>)
 8005466:	6802      	ldr	r2, [r0, #0]
 8005468:	429a      	cmp	r2, r3
 800546a:	bf18      	it	ne
 800546c:	2700      	movne	r7, #0
 800546e:	f7ff fb3b 	bl	8004ae8 <_ai_platform_acquire_crc>
 8005472:	4b85      	ldr	r3, [pc, #532]	; (8005688 <ai_platform_api_get_network_report+0x230>)
 8005474:	f46f 688a 	mvn.w	r8, #1104	; 0x450
 8005478:	681b      	ldr	r3, [r3, #0]
 800547a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800547e:	eb03 0208 	add.w	r2, r3, r8
 8005482:	2a01      	cmp	r2, #1
 8005484:	d92b      	bls.n	80054de <ai_platform_api_get_network_report+0x86>
 8005486:	f240 4249 	movw	r2, #1097	; 0x449
 800548a:	4293      	cmp	r3, r2
 800548c:	d027      	beq.n	80054de <ai_platform_api_get_network_report+0x86>
 800548e:	4a7f      	ldr	r2, [pc, #508]	; (800568c <ai_platform_api_get_network_report+0x234>)
 8005490:	6813      	ldr	r3, [r2, #0]
 8005492:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005496:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 800549a:	d02d      	beq.n	80054f8 <ai_platform_api_get_network_report+0xa0>
 800549c:	6813      	ldr	r3, [r2, #0]
 800549e:	f240 4183 	movw	r1, #1155	; 0x483
 80054a2:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80054a6:	428b      	cmp	r3, r1
 80054a8:	f000 80c6 	beq.w	8005638 <ai_platform_api_get_network_report+0x1e0>
 80054ac:	6813      	ldr	r3, [r2, #0]
 80054ae:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80054b2:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 80054b6:	f000 80ab 	beq.w	8005610 <ai_platform_api_get_network_report+0x1b8>
 80054ba:	6813      	ldr	r3, [r2, #0]
 80054bc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80054c0:	2b00      	cmp	r3, #0
 80054c2:	d129      	bne.n	8005518 <ai_platform_api_get_network_report+0xc0>
 80054c4:	4a72      	ldr	r2, [pc, #456]	; (8005690 <ai_platform_api_get_network_report+0x238>)
 80054c6:	2301      	movs	r3, #1
 80054c8:	6093      	str	r3, [r2, #8]
 80054ca:	6893      	ldr	r3, [r2, #8]
 80054cc:	2b00      	cmp	r3, #0
 80054ce:	d1fc      	bne.n	80054ca <ai_platform_api_get_network_report+0x72>
 80054d0:	4b70      	ldr	r3, [pc, #448]	; (8005694 <ai_platform_api_get_network_report+0x23c>)
 80054d2:	6013      	str	r3, [r2, #0]
 80054d4:	4b70      	ldr	r3, [pc, #448]	; (8005698 <ai_platform_api_get_network_report+0x240>)
 80054d6:	6812      	ldr	r2, [r2, #0]
 80054d8:	429a      	cmp	r2, r3
 80054da:	d01d      	beq.n	8005518 <ai_platform_api_get_network_report+0xc0>
 80054dc:	e7fe      	b.n	80054dc <ai_platform_api_get_network_report+0x84>
 80054de:	4a6c      	ldr	r2, [pc, #432]	; (8005690 <ai_platform_api_get_network_report+0x238>)
 80054e0:	2301      	movs	r3, #1
 80054e2:	6093      	str	r3, [r2, #8]
 80054e4:	6893      	ldr	r3, [r2, #8]
 80054e6:	2b00      	cmp	r3, #0
 80054e8:	d1fc      	bne.n	80054e4 <ai_platform_api_get_network_report+0x8c>
 80054ea:	4b6a      	ldr	r3, [pc, #424]	; (8005694 <ai_platform_api_get_network_report+0x23c>)
 80054ec:	6013      	str	r3, [r2, #0]
 80054ee:	4b6a      	ldr	r3, [pc, #424]	; (8005698 <ai_platform_api_get_network_report+0x240>)
 80054f0:	6812      	ldr	r2, [r2, #0]
 80054f2:	429a      	cmp	r2, r3
 80054f4:	d010      	beq.n	8005518 <ai_platform_api_get_network_report+0xc0>
 80054f6:	e7fe      	b.n	80054f6 <ai_platform_api_get_network_report+0x9e>
 80054f8:	4a68      	ldr	r2, [pc, #416]	; (800569c <ai_platform_api_get_network_report+0x244>)
 80054fa:	2301      	movs	r3, #1
 80054fc:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8005500:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8005504:	2b00      	cmp	r3, #0
 8005506:	d1fb      	bne.n	8005500 <ai_platform_api_get_network_report+0xa8>
 8005508:	4b62      	ldr	r3, [pc, #392]	; (8005694 <ai_platform_api_get_network_report+0x23c>)
 800550a:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 800550e:	4b62      	ldr	r3, [pc, #392]	; (8005698 <ai_platform_api_get_network_report+0x240>)
 8005510:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8005514:	429a      	cmp	r2, r3
 8005516:	d16c      	bne.n	80055f2 <ai_platform_api_get_network_report+0x19a>
 8005518:	f7ff fae8 	bl	8004aec <_ai_platform_release_crc>
 800551c:	9801      	ldr	r0, [sp, #4]
 800551e:	2800      	cmp	r0, #0
 8005520:	bf18      	it	ne
 8005522:	2f00      	cmpne	r7, #0
 8005524:	bf0c      	ite	eq
 8005526:	2301      	moveq	r3, #1
 8005528:	2300      	movne	r3, #0
 800552a:	9302      	str	r3, [sp, #8]
 800552c:	d07e      	beq.n	800562c <ai_platform_api_get_network_report+0x1d4>
 800552e:	67c3      	str	r3, [r0, #124]	; 0x7c
 8005530:	4619      	mov	r1, r3
 8005532:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005534:	b13b      	cbz	r3, 8005546 <ai_platform_api_get_network_report+0xee>
 8005536:	3101      	adds	r1, #1
 8005538:	67c1      	str	r1, [r0, #124]	; 0x7c
 800553a:	691a      	ldr	r2, [r3, #16]
 800553c:	b11a      	cbz	r2, 8005546 <ai_platform_api_get_network_report+0xee>
 800553e:	429a      	cmp	r2, r3
 8005540:	d001      	beq.n	8005546 <ai_platform_api_get_network_report+0xee>
 8005542:	4613      	mov	r3, r2
 8005544:	e7f6      	b.n	8005534 <ai_platform_api_get_network_report+0xdc>
 8005546:	2900      	cmp	r1, #0
 8005548:	f000 8166 	beq.w	8005818 <ai_platform_api_get_network_report+0x3c0>
 800554c:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 800554e:	2b00      	cmp	r3, #0
 8005550:	d050      	beq.n	80055f4 <ai_platform_api_get_network_report+0x19c>
 8005552:	f8d7 9030 	ldr.w	r9, [r7, #48]	; 0x30
 8005556:	f1b9 0f00 	cmp.w	r9, #0
 800555a:	d04b      	beq.n	80055f4 <ai_platform_api_get_network_report+0x19c>
 800555c:	f04f 0a00 	mov.w	sl, #0
 8005560:	9703      	str	r7, [sp, #12]
 8005562:	4655      	mov	r5, sl
 8005564:	e016      	b.n	8005594 <ai_platform_api_get_network_report+0x13c>
 8005566:	2201      	movs	r2, #1
 8005568:	f847 200e 	str.w	r2, [r7, lr]
 800556c:	69b2      	ldr	r2, [r6, #24]
 800556e:	6852      	ldr	r2, [r2, #4]
 8005570:	3501      	adds	r5, #1
 8005572:	60a3      	str	r3, [r4, #8]
 8005574:	f04f 0301 	mov.w	r3, #1
 8005578:	f10a 0a1c 	add.w	sl, sl, #28
 800557c:	6122      	str	r2, [r4, #16]
 800557e:	7523      	strb	r3, [r4, #20]
 8005580:	2300      	movs	r3, #0
 8005582:	f8c4 8018 	str.w	r8, [r4, #24]
 8005586:	60e3      	str	r3, [r4, #12]
 8005588:	6963      	ldr	r3, [r4, #20]
 800558a:	f36b 231f 	bfi	r3, fp, #8, #24
 800558e:	e9c4 0100 	strd	r0, r1, [r4]
 8005592:	6163      	str	r3, [r4, #20]
 8005594:	f8b9 3000 	ldrh.w	r3, [r9]
 8005598:	b2aa      	uxth	r2, r5
 800559a:	42ab      	cmp	r3, r5
 800559c:	d95e      	bls.n	800565c <ai_platform_api_get_network_report+0x204>
 800559e:	f8d9 3004 	ldr.w	r3, [r9, #4]
 80055a2:	2b00      	cmp	r3, #0
 80055a4:	d05a      	beq.n	800565c <ai_platform_api_get_network_report+0x204>
 80055a6:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
 80055aa:	2e00      	cmp	r6, #0
 80055ac:	d056      	beq.n	800565c <ai_platform_api_get_network_report+0x204>
 80055ae:	f8d9 3008 	ldr.w	r3, [r9, #8]
 80055b2:	69b2      	ldr	r2, [r6, #24]
 80055b4:	f8d6 800c 	ldr.w	r8, [r6, #12]
 80055b8:	6810      	ldr	r0, [r2, #0]
 80055ba:	e9d3 4701 	ldrd	r4, r7, [r3, #4]
 80055be:	68b3      	ldr	r3, [r6, #8]
 80055c0:	4454      	add	r4, sl
 80055c2:	f3c3 2b17 	ubfx	fp, r3, #8, #24
 80055c6:	f009 f927 	bl	800e818 <ai_array_to_buffer_fmt>
 80055ca:	69b2      	ldr	r2, [r6, #24]
 80055cc:	eb07 03c5 	add.w	r3, r7, r5, lsl #3
 80055d0:	ea4f 0ec5 	mov.w	lr, r5, lsl #3
 80055d4:	6891      	ldr	r1, [r2, #8]
 80055d6:	2b00      	cmp	r3, #0
 80055d8:	d0c9      	beq.n	800556e <ai_platform_api_get_network_report+0x116>
 80055da:	2200      	movs	r2, #0
 80055dc:	f847 2035 	str.w	r2, [r7, r5, lsl #3]
 80055e0:	6832      	ldr	r2, [r6, #0]
 80055e2:	605a      	str	r2, [r3, #4]
 80055e4:	b112      	cbz	r2, 80055ec <ai_platform_api_get_network_report+0x194>
 80055e6:	8852      	ldrh	r2, [r2, #2]
 80055e8:	2a00      	cmp	r2, #0
 80055ea:	d1bc      	bne.n	8005566 <ai_platform_api_get_network_report+0x10e>
 80055ec:	69b2      	ldr	r2, [r6, #24]
 80055ee:	2300      	movs	r3, #0
 80055f0:	e7bd      	b.n	800556e <ai_platform_api_get_network_report+0x116>
 80055f2:	e7fe      	b.n	80055f2 <ai_platform_api_get_network_report+0x19a>
 80055f4:	9901      	ldr	r1, [sp, #4]
 80055f6:	2300      	movs	r3, #0
 80055f8:	2218      	movs	r2, #24
 80055fa:	f107 0010 	add.w	r0, r7, #16
 80055fe:	63cb      	str	r3, [r1, #60]	; 0x3c
 8005600:	870b      	strh	r3, [r1, #56]	; 0x38
 8005602:	2112      	movs	r1, #18
 8005604:	f001 ff0e 	bl	8007424 <core_set_error>
 8005608:	9802      	ldr	r0, [sp, #8]
 800560a:	b009      	add	sp, #36	; 0x24
 800560c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005610:	4a1f      	ldr	r2, [pc, #124]	; (8005690 <ai_platform_api_get_network_report+0x238>)
 8005612:	2301      	movs	r3, #1
 8005614:	6093      	str	r3, [r2, #8]
 8005616:	6893      	ldr	r3, [r2, #8]
 8005618:	2b00      	cmp	r3, #0
 800561a:	d1fc      	bne.n	8005616 <ai_platform_api_get_network_report+0x1be>
 800561c:	4b1d      	ldr	r3, [pc, #116]	; (8005694 <ai_platform_api_get_network_report+0x23c>)
 800561e:	6013      	str	r3, [r2, #0]
 8005620:	4b1d      	ldr	r3, [pc, #116]	; (8005698 <ai_platform_api_get_network_report+0x240>)
 8005622:	6812      	ldr	r2, [r2, #0]
 8005624:	429a      	cmp	r2, r3
 8005626:	f43f af77 	beq.w	8005518 <ai_platform_api_get_network_report+0xc0>
 800562a:	e7fe      	b.n	800562a <ai_platform_api_get_network_report+0x1d2>
 800562c:	2300      	movs	r3, #0
 800562e:	9302      	str	r3, [sp, #8]
 8005630:	9802      	ldr	r0, [sp, #8]
 8005632:	b009      	add	sp, #36	; 0x24
 8005634:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005638:	4a18      	ldr	r2, [pc, #96]	; (800569c <ai_platform_api_get_network_report+0x244>)
 800563a:	2301      	movs	r3, #1
 800563c:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8005640:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8005644:	2b00      	cmp	r3, #0
 8005646:	d1fb      	bne.n	8005640 <ai_platform_api_get_network_report+0x1e8>
 8005648:	4b12      	ldr	r3, [pc, #72]	; (8005694 <ai_platform_api_get_network_report+0x23c>)
 800564a:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 800564e:	4b12      	ldr	r3, [pc, #72]	; (8005698 <ai_platform_api_get_network_report+0x240>)
 8005650:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8005654:	429a      	cmp	r2, r3
 8005656:	f43f af5f 	beq.w	8005518 <ai_platform_api_get_network_report+0xc0>
 800565a:	e7fe      	b.n	800565a <ai_platform_api_get_network_report+0x202>
 800565c:	9f03      	ldr	r7, [sp, #12]
 800565e:	2a00      	cmp	r2, #0
 8005660:	d0c8      	beq.n	80055f4 <ai_platform_api_get_network_report+0x19c>
 8005662:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8005666:	9901      	ldr	r1, [sp, #4]
 8005668:	685b      	ldr	r3, [r3, #4]
 800566a:	870a      	strh	r2, [r1, #56]	; 0x38
 800566c:	63cb      	str	r3, [r1, #60]	; 0x3c
 800566e:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8005670:	2b01      	cmp	r3, #1
 8005672:	f240 80c6 	bls.w	8005802 <ai_platform_api_get_network_report+0x3aa>
 8005676:	f04f 0a00 	mov.w	sl, #0
 800567a:	f8d7 9030 	ldr.w	r9, [r7, #48]	; 0x30
 800567e:	9703      	str	r7, [sp, #12]
 8005680:	4655      	mov	r5, sl
 8005682:	e024      	b.n	80056ce <ai_platform_api_get_network_report+0x276>
 8005684:	a1c00100 	.word	0xa1c00100
 8005688:	e0042000 	.word	0xe0042000
 800568c:	5c001000 	.word	0x5c001000
 8005690:	40023000 	.word	0x40023000
 8005694:	f407a5c2 	.word	0xf407a5c2
 8005698:	b5e8b5cd 	.word	0xb5e8b5cd
 800569c:	58024000 	.word	0x58024000
 80056a0:	2201      	movs	r2, #1
 80056a2:	f847 200e 	str.w	r2, [r7, lr]
 80056a6:	69b2      	ldr	r2, [r6, #24]
 80056a8:	6852      	ldr	r2, [r2, #4]
 80056aa:	3501      	adds	r5, #1
 80056ac:	60a3      	str	r3, [r4, #8]
 80056ae:	f04f 0301 	mov.w	r3, #1
 80056b2:	f10a 0a1c 	add.w	sl, sl, #28
 80056b6:	6122      	str	r2, [r4, #16]
 80056b8:	7523      	strb	r3, [r4, #20]
 80056ba:	2300      	movs	r3, #0
 80056bc:	f8c4 8018 	str.w	r8, [r4, #24]
 80056c0:	60e3      	str	r3, [r4, #12]
 80056c2:	6963      	ldr	r3, [r4, #20]
 80056c4:	f36b 231f 	bfi	r3, fp, #8, #24
 80056c8:	e9c4 0100 	strd	r0, r1, [r4]
 80056cc:	6163      	str	r3, [r4, #20]
 80056ce:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 80056d2:	b2aa      	uxth	r2, r5
 80056d4:	42ab      	cmp	r3, r5
 80056d6:	d927      	bls.n	8005728 <ai_platform_api_get_network_report+0x2d0>
 80056d8:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80056dc:	b323      	cbz	r3, 8005728 <ai_platform_api_get_network_report+0x2d0>
 80056de:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
 80056e2:	b30e      	cbz	r6, 8005728 <ai_platform_api_get_network_report+0x2d0>
 80056e4:	f8d9 3014 	ldr.w	r3, [r9, #20]
 80056e8:	69b2      	ldr	r2, [r6, #24]
 80056ea:	f8d6 800c 	ldr.w	r8, [r6, #12]
 80056ee:	6810      	ldr	r0, [r2, #0]
 80056f0:	e9d3 4701 	ldrd	r4, r7, [r3, #4]
 80056f4:	68b3      	ldr	r3, [r6, #8]
 80056f6:	4454      	add	r4, sl
 80056f8:	f3c3 2b17 	ubfx	fp, r3, #8, #24
 80056fc:	f009 f88c 	bl	800e818 <ai_array_to_buffer_fmt>
 8005700:	69b2      	ldr	r2, [r6, #24]
 8005702:	eb07 03c5 	add.w	r3, r7, r5, lsl #3
 8005706:	ea4f 0ec5 	mov.w	lr, r5, lsl #3
 800570a:	6891      	ldr	r1, [r2, #8]
 800570c:	2b00      	cmp	r3, #0
 800570e:	d0cb      	beq.n	80056a8 <ai_platform_api_get_network_report+0x250>
 8005710:	2200      	movs	r2, #0
 8005712:	f847 2035 	str.w	r2, [r7, r5, lsl #3]
 8005716:	6832      	ldr	r2, [r6, #0]
 8005718:	605a      	str	r2, [r3, #4]
 800571a:	b112      	cbz	r2, 8005722 <ai_platform_api_get_network_report+0x2ca>
 800571c:	8852      	ldrh	r2, [r2, #2]
 800571e:	2a00      	cmp	r2, #0
 8005720:	d1be      	bne.n	80056a0 <ai_platform_api_get_network_report+0x248>
 8005722:	69b2      	ldr	r2, [r6, #24]
 8005724:	2300      	movs	r3, #0
 8005726:	e7bf      	b.n	80056a8 <ai_platform_api_get_network_report+0x250>
 8005728:	9f03      	ldr	r7, [sp, #12]
 800572a:	2a00      	cmp	r2, #0
 800572c:	d069      	beq.n	8005802 <ai_platform_api_get_network_report+0x3aa>
 800572e:	f8d9 3014 	ldr.w	r3, [r9, #20]
 8005732:	f107 0624 	add.w	r6, r7, #36	; 0x24
 8005736:	9901      	ldr	r1, [sp, #4]
 8005738:	685b      	ldr	r3, [r3, #4]
 800573a:	4630      	mov	r0, r6
 800573c:	874a      	strh	r2, [r1, #58]	; 0x3a
 800573e:	640b      	str	r3, [r1, #64]	; 0x40
 8005740:	f7ff f926 	bl	8004990 <ai_buffer_array_sane>
 8005744:	9002      	str	r0, [sp, #8]
 8005746:	b960      	cbnz	r0, 8005762 <ai_platform_api_get_network_report+0x30a>
 8005748:	4630      	mov	r0, r6
 800574a:	f7ff f921 	bl	8004990 <ai_buffer_array_sane>
 800574e:	b140      	cbz	r0, 8005762 <ai_platform_api_get_network_report+0x30a>
 8005750:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8005752:	b133      	cbz	r3, 8005762 <ai_platform_api_get_network_report+0x30a>
 8005754:	2213      	movs	r2, #19
 8005756:	2111      	movs	r1, #17
 8005758:	f107 0010 	add.w	r0, r7, #16
 800575c:	f001 fe62 	bl	8007424 <core_set_error>
 8005760:	e752      	b.n	8005608 <ai_platform_api_get_network_report+0x1b0>
 8005762:	f107 081c 	add.w	r8, r7, #28
 8005766:	4640      	mov	r0, r8
 8005768:	f7ff f912 	bl	8004990 <ai_buffer_array_sane>
 800576c:	9002      	str	r0, [sp, #8]
 800576e:	b960      	cbnz	r0, 800578a <ai_platform_api_get_network_report+0x332>
 8005770:	4640      	mov	r0, r8
 8005772:	f7ff f90d 	bl	8004990 <ai_buffer_array_sane>
 8005776:	b140      	cbz	r0, 800578a <ai_platform_api_get_network_report+0x332>
 8005778:	8bfb      	ldrh	r3, [r7, #30]
 800577a:	b133      	cbz	r3, 800578a <ai_platform_api_get_network_report+0x332>
 800577c:	2212      	movs	r2, #18
 800577e:	2111      	movs	r1, #17
 8005780:	f107 0010 	add.w	r0, r7, #16
 8005784:	f001 fe4e 	bl	8007424 <core_set_error>
 8005788:	e73e      	b.n	8005608 <ai_platform_api_get_network_report+0x1b0>
 800578a:	687b      	ldr	r3, [r7, #4]
 800578c:	9a01      	ldr	r2, [sp, #4]
 800578e:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 8005792:	f7ff f9a9 	bl	8004ae8 <_ai_platform_acquire_crc>
 8005796:	4b89      	ldr	r3, [pc, #548]	; (80059bc <ai_platform_api_get_network_report+0x564>)
 8005798:	f46f 6e8a 	mvn.w	lr, #1104	; 0x450
 800579c:	681b      	ldr	r3, [r3, #0]
 800579e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80057a2:	eb03 020e 	add.w	r2, r3, lr
 80057a6:	2a01      	cmp	r2, #1
 80057a8:	d93d      	bls.n	8005826 <ai_platform_api_get_network_report+0x3ce>
 80057aa:	f240 4249 	movw	r2, #1097	; 0x449
 80057ae:	4293      	cmp	r3, r2
 80057b0:	d039      	beq.n	8005826 <ai_platform_api_get_network_report+0x3ce>
 80057b2:	4b83      	ldr	r3, [pc, #524]	; (80059c0 <ai_platform_api_get_network_report+0x568>)
 80057b4:	681a      	ldr	r2, [r3, #0]
 80057b6:	f3c2 020a 	ubfx	r2, r2, #0, #11
 80057ba:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 80057be:	d03f      	beq.n	8005840 <ai_platform_api_get_network_report+0x3e8>
 80057c0:	681a      	ldr	r2, [r3, #0]
 80057c2:	f240 4183 	movw	r1, #1155	; 0x483
 80057c6:	f3c2 020a 	ubfx	r2, r2, #0, #11
 80057ca:	428a      	cmp	r2, r1
 80057cc:	f000 80e3 	beq.w	8005996 <ai_platform_api_get_network_report+0x53e>
 80057d0:	681a      	ldr	r2, [r3, #0]
 80057d2:	f3c2 020a 	ubfx	r2, r2, #0, #11
 80057d6:	f5b2 6f90 	cmp.w	r2, #1152	; 0x480
 80057da:	f000 8149 	beq.w	8005a70 <ai_platform_api_get_network_report+0x618>
 80057de:	681b      	ldr	r3, [r3, #0]
 80057e0:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80057e4:	2b00      	cmp	r3, #0
 80057e6:	d13c      	bne.n	8005862 <ai_platform_api_get_network_report+0x40a>
 80057e8:	4b76      	ldr	r3, [pc, #472]	; (80059c4 <ai_platform_api_get_network_report+0x56c>)
 80057ea:	2201      	movs	r2, #1
 80057ec:	609a      	str	r2, [r3, #8]
 80057ee:	689a      	ldr	r2, [r3, #8]
 80057f0:	2a00      	cmp	r2, #0
 80057f2:	d1fc      	bne.n	80057ee <ai_platform_api_get_network_report+0x396>
 80057f4:	4a74      	ldr	r2, [pc, #464]	; (80059c8 <ai_platform_api_get_network_report+0x570>)
 80057f6:	601a      	str	r2, [r3, #0]
 80057f8:	681a      	ldr	r2, [r3, #0]
 80057fa:	4b74      	ldr	r3, [pc, #464]	; (80059cc <ai_platform_api_get_network_report+0x574>)
 80057fc:	429a      	cmp	r2, r3
 80057fe:	d030      	beq.n	8005862 <ai_platform_api_get_network_report+0x40a>
 8005800:	e7fe      	b.n	8005800 <ai_platform_api_get_network_report+0x3a8>
 8005802:	9901      	ldr	r1, [sp, #4]
 8005804:	2300      	movs	r3, #0
 8005806:	2218      	movs	r2, #24
 8005808:	f107 0010 	add.w	r0, r7, #16
 800580c:	640b      	str	r3, [r1, #64]	; 0x40
 800580e:	874b      	strh	r3, [r1, #58]	; 0x3a
 8005810:	2113      	movs	r1, #19
 8005812:	f001 fe07 	bl	8007424 <core_set_error>
 8005816:	e6f7      	b.n	8005608 <ai_platform_api_get_network_report+0x1b0>
 8005818:	2218      	movs	r2, #24
 800581a:	2111      	movs	r1, #17
 800581c:	f107 0010 	add.w	r0, r7, #16
 8005820:	f001 fe00 	bl	8007424 <core_set_error>
 8005824:	e6f0      	b.n	8005608 <ai_platform_api_get_network_report+0x1b0>
 8005826:	4a67      	ldr	r2, [pc, #412]	; (80059c4 <ai_platform_api_get_network_report+0x56c>)
 8005828:	2301      	movs	r3, #1
 800582a:	6093      	str	r3, [r2, #8]
 800582c:	6893      	ldr	r3, [r2, #8]
 800582e:	2b00      	cmp	r3, #0
 8005830:	d1fc      	bne.n	800582c <ai_platform_api_get_network_report+0x3d4>
 8005832:	4b65      	ldr	r3, [pc, #404]	; (80059c8 <ai_platform_api_get_network_report+0x570>)
 8005834:	6013      	str	r3, [r2, #0]
 8005836:	4b65      	ldr	r3, [pc, #404]	; (80059cc <ai_platform_api_get_network_report+0x574>)
 8005838:	6812      	ldr	r2, [r2, #0]
 800583a:	429a      	cmp	r2, r3
 800583c:	d011      	beq.n	8005862 <ai_platform_api_get_network_report+0x40a>
 800583e:	e7fe      	b.n	800583e <ai_platform_api_get_network_report+0x3e6>
 8005840:	4b63      	ldr	r3, [pc, #396]	; (80059d0 <ai_platform_api_get_network_report+0x578>)
 8005842:	2201      	movs	r2, #1
 8005844:	f8c3 2c08 	str.w	r2, [r3, #3080]	; 0xc08
 8005848:	f8d3 2c08 	ldr.w	r2, [r3, #3080]	; 0xc08
 800584c:	2a00      	cmp	r2, #0
 800584e:	d1fb      	bne.n	8005848 <ai_platform_api_get_network_report+0x3f0>
 8005850:	4a5d      	ldr	r2, [pc, #372]	; (80059c8 <ai_platform_api_get_network_report+0x570>)
 8005852:	f8c3 2c00 	str.w	r2, [r3, #3072]	; 0xc00
 8005856:	f8d3 2c00 	ldr.w	r2, [r3, #3072]	; 0xc00
 800585a:	4b5c      	ldr	r3, [pc, #368]	; (80059cc <ai_platform_api_get_network_report+0x574>)
 800585c:	429a      	cmp	r2, r3
 800585e:	f040 8099 	bne.w	8005994 <ai_platform_api_get_network_report+0x53c>
 8005862:	f7ff f943 	bl	8004aec <_ai_platform_release_crc>
 8005866:	4b5b      	ldr	r3, [pc, #364]	; (80059d4 <ai_platform_api_get_network_report+0x57c>)
 8005868:	9a01      	ldr	r2, [sp, #4]
 800586a:	6113      	str	r3, [r2, #16]
 800586c:	f7ff f93c 	bl	8004ae8 <_ai_platform_acquire_crc>
 8005870:	4b52      	ldr	r3, [pc, #328]	; (80059bc <ai_platform_api_get_network_report+0x564>)
 8005872:	f46f 6c8a 	mvn.w	ip, #1104	; 0x450
 8005876:	681b      	ldr	r3, [r3, #0]
 8005878:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800587c:	eb03 020c 	add.w	r2, r3, ip
 8005880:	2a01      	cmp	r2, #1
 8005882:	d92b      	bls.n	80058dc <ai_platform_api_get_network_report+0x484>
 8005884:	f240 4249 	movw	r2, #1097	; 0x449
 8005888:	4293      	cmp	r3, r2
 800588a:	d027      	beq.n	80058dc <ai_platform_api_get_network_report+0x484>
 800588c:	4b4c      	ldr	r3, [pc, #304]	; (80059c0 <ai_platform_api_get_network_report+0x568>)
 800588e:	681a      	ldr	r2, [r3, #0]
 8005890:	f3c2 020a 	ubfx	r2, r2, #0, #11
 8005894:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8005898:	d02d      	beq.n	80058f6 <ai_platform_api_get_network_report+0x49e>
 800589a:	681a      	ldr	r2, [r3, #0]
 800589c:	f240 4183 	movw	r1, #1155	; 0x483
 80058a0:	f3c2 020a 	ubfx	r2, r2, #0, #11
 80058a4:	428a      	cmp	r2, r1
 80058a6:	f000 8110 	beq.w	8005aca <ai_platform_api_get_network_report+0x672>
 80058aa:	681a      	ldr	r2, [r3, #0]
 80058ac:	f3c2 020a 	ubfx	r2, r2, #0, #11
 80058b0:	f5b2 6f90 	cmp.w	r2, #1152	; 0x480
 80058b4:	f000 80fb 	beq.w	8005aae <ai_platform_api_get_network_report+0x656>
 80058b8:	681b      	ldr	r3, [r3, #0]
 80058ba:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80058be:	2b00      	cmp	r3, #0
 80058c0:	d12a      	bne.n	8005918 <ai_platform_api_get_network_report+0x4c0>
 80058c2:	4b40      	ldr	r3, [pc, #256]	; (80059c4 <ai_platform_api_get_network_report+0x56c>)
 80058c4:	2201      	movs	r2, #1
 80058c6:	609a      	str	r2, [r3, #8]
 80058c8:	689a      	ldr	r2, [r3, #8]
 80058ca:	2a00      	cmp	r2, #0
 80058cc:	d1fc      	bne.n	80058c8 <ai_platform_api_get_network_report+0x470>
 80058ce:	4a3e      	ldr	r2, [pc, #248]	; (80059c8 <ai_platform_api_get_network_report+0x570>)
 80058d0:	601a      	str	r2, [r3, #0]
 80058d2:	681a      	ldr	r2, [r3, #0]
 80058d4:	4b3d      	ldr	r3, [pc, #244]	; (80059cc <ai_platform_api_get_network_report+0x574>)
 80058d6:	429a      	cmp	r2, r3
 80058d8:	d01e      	beq.n	8005918 <ai_platform_api_get_network_report+0x4c0>
 80058da:	e7fe      	b.n	80058da <ai_platform_api_get_network_report+0x482>
 80058dc:	4a39      	ldr	r2, [pc, #228]	; (80059c4 <ai_platform_api_get_network_report+0x56c>)
 80058de:	2301      	movs	r3, #1
 80058e0:	6093      	str	r3, [r2, #8]
 80058e2:	6893      	ldr	r3, [r2, #8]
 80058e4:	2b00      	cmp	r3, #0
 80058e6:	d1fc      	bne.n	80058e2 <ai_platform_api_get_network_report+0x48a>
 80058e8:	4b37      	ldr	r3, [pc, #220]	; (80059c8 <ai_platform_api_get_network_report+0x570>)
 80058ea:	6013      	str	r3, [r2, #0]
 80058ec:	4b37      	ldr	r3, [pc, #220]	; (80059cc <ai_platform_api_get_network_report+0x574>)
 80058ee:	6812      	ldr	r2, [r2, #0]
 80058f0:	429a      	cmp	r2, r3
 80058f2:	d011      	beq.n	8005918 <ai_platform_api_get_network_report+0x4c0>
 80058f4:	e7fe      	b.n	80058f4 <ai_platform_api_get_network_report+0x49c>
 80058f6:	4b36      	ldr	r3, [pc, #216]	; (80059d0 <ai_platform_api_get_network_report+0x578>)
 80058f8:	2201      	movs	r2, #1
 80058fa:	f8c3 2c08 	str.w	r2, [r3, #3080]	; 0xc08
 80058fe:	f8d3 2c08 	ldr.w	r2, [r3, #3080]	; 0xc08
 8005902:	2a00      	cmp	r2, #0
 8005904:	d1fb      	bne.n	80058fe <ai_platform_api_get_network_report+0x4a6>
 8005906:	4a30      	ldr	r2, [pc, #192]	; (80059c8 <ai_platform_api_get_network_report+0x570>)
 8005908:	f8c3 2c00 	str.w	r2, [r3, #3072]	; 0xc00
 800590c:	f8d3 2c00 	ldr.w	r2, [r3, #3072]	; 0xc00
 8005910:	4b2e      	ldr	r3, [pc, #184]	; (80059cc <ai_platform_api_get_network_report+0x574>)
 8005912:	429a      	cmp	r2, r3
 8005914:	f040 80ab 	bne.w	8005a6e <ai_platform_api_get_network_report+0x616>
 8005918:	f7ff f8e8 	bl	8004aec <_ai_platform_release_crc>
 800591c:	f44f 7384 	mov.w	r3, #264	; 0x108
 8005920:	9a01      	ldr	r2, [sp, #4]
 8005922:	f46f 658a 	mvn.w	r5, #1104	; 0x450
 8005926:	6153      	str	r3, [r2, #20]
 8005928:	f7ff f8de 	bl	8004ae8 <_ai_platform_acquire_crc>
 800592c:	4b23      	ldr	r3, [pc, #140]	; (80059bc <ai_platform_api_get_network_report+0x564>)
 800592e:	681b      	ldr	r3, [r3, #0]
 8005930:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005934:	195a      	adds	r2, r3, r5
 8005936:	2a01      	cmp	r2, #1
 8005938:	d94e      	bls.n	80059d8 <ai_platform_api_get_network_report+0x580>
 800593a:	f240 4249 	movw	r2, #1097	; 0x449
 800593e:	4293      	cmp	r3, r2
 8005940:	d04a      	beq.n	80059d8 <ai_platform_api_get_network_report+0x580>
 8005942:	4b1f      	ldr	r3, [pc, #124]	; (80059c0 <ai_platform_api_get_network_report+0x568>)
 8005944:	681a      	ldr	r2, [r3, #0]
 8005946:	f3c2 020a 	ubfx	r2, r2, #0, #11
 800594a:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 800594e:	f000 809d 	beq.w	8005a8c <ai_platform_api_get_network_report+0x634>
 8005952:	681a      	ldr	r2, [r3, #0]
 8005954:	f240 4183 	movw	r1, #1155	; 0x483
 8005958:	f3c2 020a 	ubfx	r2, r2, #0, #11
 800595c:	428a      	cmp	r2, r1
 800595e:	f000 80fe 	beq.w	8005b5e <ai_platform_api_get_network_report+0x706>
 8005962:	681a      	ldr	r2, [r3, #0]
 8005964:	f3c2 020a 	ubfx	r2, r2, #0, #11
 8005968:	f5b2 6f90 	cmp.w	r2, #1152	; 0x480
 800596c:	f000 80e9 	beq.w	8005b42 <ai_platform_api_get_network_report+0x6ea>
 8005970:	681b      	ldr	r3, [r3, #0]
 8005972:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005976:	2b00      	cmp	r3, #0
 8005978:	d13a      	bne.n	80059f0 <ai_platform_api_get_network_report+0x598>
 800597a:	4b12      	ldr	r3, [pc, #72]	; (80059c4 <ai_platform_api_get_network_report+0x56c>)
 800597c:	2201      	movs	r2, #1
 800597e:	609a      	str	r2, [r3, #8]
 8005980:	689a      	ldr	r2, [r3, #8]
 8005982:	2a00      	cmp	r2, #0
 8005984:	d1fc      	bne.n	8005980 <ai_platform_api_get_network_report+0x528>
 8005986:	4a10      	ldr	r2, [pc, #64]	; (80059c8 <ai_platform_api_get_network_report+0x570>)
 8005988:	601a      	str	r2, [r3, #0]
 800598a:	681a      	ldr	r2, [r3, #0]
 800598c:	4b0f      	ldr	r3, [pc, #60]	; (80059cc <ai_platform_api_get_network_report+0x574>)
 800598e:	429a      	cmp	r2, r3
 8005990:	d02e      	beq.n	80059f0 <ai_platform_api_get_network_report+0x598>
 8005992:	e7fe      	b.n	8005992 <ai_platform_api_get_network_report+0x53a>
 8005994:	e7fe      	b.n	8005994 <ai_platform_api_get_network_report+0x53c>
 8005996:	4b0e      	ldr	r3, [pc, #56]	; (80059d0 <ai_platform_api_get_network_report+0x578>)
 8005998:	2201      	movs	r2, #1
 800599a:	f8c3 2c08 	str.w	r2, [r3, #3080]	; 0xc08
 800599e:	f8d3 2c08 	ldr.w	r2, [r3, #3080]	; 0xc08
 80059a2:	2a00      	cmp	r2, #0
 80059a4:	d1fb      	bne.n	800599e <ai_platform_api_get_network_report+0x546>
 80059a6:	4a08      	ldr	r2, [pc, #32]	; (80059c8 <ai_platform_api_get_network_report+0x570>)
 80059a8:	f8c3 2c00 	str.w	r2, [r3, #3072]	; 0xc00
 80059ac:	f8d3 2c00 	ldr.w	r2, [r3, #3072]	; 0xc00
 80059b0:	4b06      	ldr	r3, [pc, #24]	; (80059cc <ai_platform_api_get_network_report+0x574>)
 80059b2:	429a      	cmp	r2, r3
 80059b4:	f43f af55 	beq.w	8005862 <ai_platform_api_get_network_report+0x40a>
 80059b8:	e7fe      	b.n	80059b8 <ai_platform_api_get_network_report+0x560>
 80059ba:	bf00      	nop
 80059bc:	e0042000 	.word	0xe0042000
 80059c0:	5c001000 	.word	0x5c001000
 80059c4:	40023000 	.word	0x40023000
 80059c8:	f407a5c2 	.word	0xf407a5c2
 80059cc:	b5e8b5cd 	.word	0xb5e8b5cd
 80059d0:	58024000 	.word	0x58024000
 80059d4:	080364b4 	.word	0x080364b4
 80059d8:	4ba4      	ldr	r3, [pc, #656]	; (8005c6c <ai_platform_api_get_network_report+0x814>)
 80059da:	2201      	movs	r2, #1
 80059dc:	609a      	str	r2, [r3, #8]
 80059de:	689a      	ldr	r2, [r3, #8]
 80059e0:	2a00      	cmp	r2, #0
 80059e2:	d1fc      	bne.n	80059de <ai_platform_api_get_network_report+0x586>
 80059e4:	4aa2      	ldr	r2, [pc, #648]	; (8005c70 <ai_platform_api_get_network_report+0x818>)
 80059e6:	601a      	str	r2, [r3, #0]
 80059e8:	681a      	ldr	r2, [r3, #0]
 80059ea:	4ba2      	ldr	r3, [pc, #648]	; (8005c74 <ai_platform_api_get_network_report+0x81c>)
 80059ec:	429a      	cmp	r2, r3
 80059ee:	d13d      	bne.n	8005a6c <ai_platform_api_get_network_report+0x614>
 80059f0:	f7ff f87c 	bl	8004aec <_ai_platform_release_crc>
 80059f4:	f240 2301 	movw	r3, #513	; 0x201
 80059f8:	9a01      	ldr	r2, [sp, #4]
 80059fa:	f46f 648a 	mvn.w	r4, #1104	; 0x450
 80059fe:	6253      	str	r3, [r2, #36]	; 0x24
 8005a00:	f7ff f872 	bl	8004ae8 <_ai_platform_acquire_crc>
 8005a04:	4b9c      	ldr	r3, [pc, #624]	; (8005c78 <ai_platform_api_get_network_report+0x820>)
 8005a06:	681b      	ldr	r3, [r3, #0]
 8005a08:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005a0c:	191a      	adds	r2, r3, r4
 8005a0e:	2a01      	cmp	r2, #1
 8005a10:	d96d      	bls.n	8005aee <ai_platform_api_get_network_report+0x696>
 8005a12:	f240 4249 	movw	r2, #1097	; 0x449
 8005a16:	4293      	cmp	r3, r2
 8005a18:	d069      	beq.n	8005aee <ai_platform_api_get_network_report+0x696>
 8005a1a:	4b98      	ldr	r3, [pc, #608]	; (8005c7c <ai_platform_api_get_network_report+0x824>)
 8005a1c:	681a      	ldr	r2, [r3, #0]
 8005a1e:	f3c2 020a 	ubfx	r2, r2, #0, #11
 8005a22:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8005a26:	f000 80ca 	beq.w	8005bbe <ai_platform_api_get_network_report+0x766>
 8005a2a:	681a      	ldr	r2, [r3, #0]
 8005a2c:	f240 4183 	movw	r1, #1155	; 0x483
 8005a30:	f3c2 020a 	ubfx	r2, r2, #0, #11
 8005a34:	428a      	cmp	r2, r1
 8005a36:	f000 80b1 	beq.w	8005b9c <ai_platform_api_get_network_report+0x744>
 8005a3a:	681a      	ldr	r2, [r3, #0]
 8005a3c:	f3c2 020a 	ubfx	r2, r2, #0, #11
 8005a40:	f5b2 6f90 	cmp.w	r2, #1152	; 0x480
 8005a44:	f000 809d 	beq.w	8005b82 <ai_platform_api_get_network_report+0x72a>
 8005a48:	681b      	ldr	r3, [r3, #0]
 8005a4a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005a4e:	2b00      	cmp	r3, #0
 8005a50:	d159      	bne.n	8005b06 <ai_platform_api_get_network_report+0x6ae>
 8005a52:	4b86      	ldr	r3, [pc, #536]	; (8005c6c <ai_platform_api_get_network_report+0x814>)
 8005a54:	2201      	movs	r2, #1
 8005a56:	609a      	str	r2, [r3, #8]
 8005a58:	689a      	ldr	r2, [r3, #8]
 8005a5a:	2a00      	cmp	r2, #0
 8005a5c:	d1fc      	bne.n	8005a58 <ai_platform_api_get_network_report+0x600>
 8005a5e:	4a84      	ldr	r2, [pc, #528]	; (8005c70 <ai_platform_api_get_network_report+0x818>)
 8005a60:	601a      	str	r2, [r3, #0]
 8005a62:	681a      	ldr	r2, [r3, #0]
 8005a64:	4b83      	ldr	r3, [pc, #524]	; (8005c74 <ai_platform_api_get_network_report+0x81c>)
 8005a66:	429a      	cmp	r2, r3
 8005a68:	d04d      	beq.n	8005b06 <ai_platform_api_get_network_report+0x6ae>
 8005a6a:	e7fe      	b.n	8005a6a <ai_platform_api_get_network_report+0x612>
 8005a6c:	e7fe      	b.n	8005a6c <ai_platform_api_get_network_report+0x614>
 8005a6e:	e7fe      	b.n	8005a6e <ai_platform_api_get_network_report+0x616>
 8005a70:	4b7e      	ldr	r3, [pc, #504]	; (8005c6c <ai_platform_api_get_network_report+0x814>)
 8005a72:	2201      	movs	r2, #1
 8005a74:	609a      	str	r2, [r3, #8]
 8005a76:	689a      	ldr	r2, [r3, #8]
 8005a78:	2a00      	cmp	r2, #0
 8005a7a:	d1fc      	bne.n	8005a76 <ai_platform_api_get_network_report+0x61e>
 8005a7c:	4a7c      	ldr	r2, [pc, #496]	; (8005c70 <ai_platform_api_get_network_report+0x818>)
 8005a7e:	601a      	str	r2, [r3, #0]
 8005a80:	681a      	ldr	r2, [r3, #0]
 8005a82:	4b7c      	ldr	r3, [pc, #496]	; (8005c74 <ai_platform_api_get_network_report+0x81c>)
 8005a84:	429a      	cmp	r2, r3
 8005a86:	f43f aeec 	beq.w	8005862 <ai_platform_api_get_network_report+0x40a>
 8005a8a:	e7fe      	b.n	8005a8a <ai_platform_api_get_network_report+0x632>
 8005a8c:	4b7c      	ldr	r3, [pc, #496]	; (8005c80 <ai_platform_api_get_network_report+0x828>)
 8005a8e:	2201      	movs	r2, #1
 8005a90:	f8c3 2c08 	str.w	r2, [r3, #3080]	; 0xc08
 8005a94:	f8d3 2c08 	ldr.w	r2, [r3, #3080]	; 0xc08
 8005a98:	2a00      	cmp	r2, #0
 8005a9a:	d1fb      	bne.n	8005a94 <ai_platform_api_get_network_report+0x63c>
 8005a9c:	4a74      	ldr	r2, [pc, #464]	; (8005c70 <ai_platform_api_get_network_report+0x818>)
 8005a9e:	f8c3 2c00 	str.w	r2, [r3, #3072]	; 0xc00
 8005aa2:	f8d3 2c00 	ldr.w	r2, [r3, #3072]	; 0xc00
 8005aa6:	4b73      	ldr	r3, [pc, #460]	; (8005c74 <ai_platform_api_get_network_report+0x81c>)
 8005aa8:	429a      	cmp	r2, r3
 8005aaa:	d0a1      	beq.n	80059f0 <ai_platform_api_get_network_report+0x598>
 8005aac:	e7fe      	b.n	8005aac <ai_platform_api_get_network_report+0x654>
 8005aae:	4b6f      	ldr	r3, [pc, #444]	; (8005c6c <ai_platform_api_get_network_report+0x814>)
 8005ab0:	2201      	movs	r2, #1
 8005ab2:	609a      	str	r2, [r3, #8]
 8005ab4:	689a      	ldr	r2, [r3, #8]
 8005ab6:	2a00      	cmp	r2, #0
 8005ab8:	d1fc      	bne.n	8005ab4 <ai_platform_api_get_network_report+0x65c>
 8005aba:	4a6d      	ldr	r2, [pc, #436]	; (8005c70 <ai_platform_api_get_network_report+0x818>)
 8005abc:	601a      	str	r2, [r3, #0]
 8005abe:	681a      	ldr	r2, [r3, #0]
 8005ac0:	4b6c      	ldr	r3, [pc, #432]	; (8005c74 <ai_platform_api_get_network_report+0x81c>)
 8005ac2:	429a      	cmp	r2, r3
 8005ac4:	f43f af28 	beq.w	8005918 <ai_platform_api_get_network_report+0x4c0>
 8005ac8:	e7fe      	b.n	8005ac8 <ai_platform_api_get_network_report+0x670>
 8005aca:	4b6d      	ldr	r3, [pc, #436]	; (8005c80 <ai_platform_api_get_network_report+0x828>)
 8005acc:	2201      	movs	r2, #1
 8005ace:	f8c3 2c08 	str.w	r2, [r3, #3080]	; 0xc08
 8005ad2:	f8d3 2c08 	ldr.w	r2, [r3, #3080]	; 0xc08
 8005ad6:	2a00      	cmp	r2, #0
 8005ad8:	d1fb      	bne.n	8005ad2 <ai_platform_api_get_network_report+0x67a>
 8005ada:	4a65      	ldr	r2, [pc, #404]	; (8005c70 <ai_platform_api_get_network_report+0x818>)
 8005adc:	f8c3 2c00 	str.w	r2, [r3, #3072]	; 0xc00
 8005ae0:	f8d3 2c00 	ldr.w	r2, [r3, #3072]	; 0xc00
 8005ae4:	4b63      	ldr	r3, [pc, #396]	; (8005c74 <ai_platform_api_get_network_report+0x81c>)
 8005ae6:	429a      	cmp	r2, r3
 8005ae8:	f43f af16 	beq.w	8005918 <ai_platform_api_get_network_report+0x4c0>
 8005aec:	e7fe      	b.n	8005aec <ai_platform_api_get_network_report+0x694>
 8005aee:	4b5f      	ldr	r3, [pc, #380]	; (8005c6c <ai_platform_api_get_network_report+0x814>)
 8005af0:	2201      	movs	r2, #1
 8005af2:	609a      	str	r2, [r3, #8]
 8005af4:	689a      	ldr	r2, [r3, #8]
 8005af6:	2a00      	cmp	r2, #0
 8005af8:	d1fc      	bne.n	8005af4 <ai_platform_api_get_network_report+0x69c>
 8005afa:	4a5d      	ldr	r2, [pc, #372]	; (8005c70 <ai_platform_api_get_network_report+0x818>)
 8005afc:	601a      	str	r2, [r3, #0]
 8005afe:	681a      	ldr	r2, [r3, #0]
 8005b00:	4b5c      	ldr	r3, [pc, #368]	; (8005c74 <ai_platform_api_get_network_report+0x81c>)
 8005b02:	429a      	cmp	r2, r3
 8005b04:	d11c      	bne.n	8005b40 <ai_platform_api_get_network_report+0x6e8>
 8005b06:	f7fe fff1 	bl	8004aec <_ai_platform_release_crc>
 8005b0a:	9c01      	ldr	r4, [sp, #4]
 8005b0c:	f240 5301 	movw	r3, #1281	; 0x501
 8005b10:	62a3      	str	r3, [r4, #40]	; 0x28
 8005b12:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 8005b14:	f008 ff2a 	bl	800e96c <ai_platform_version_get>
 8005b18:	4b5a      	ldr	r3, [pc, #360]	; (8005c84 <ai_platform_api_get_network_report+0x82c>)
 8005b1a:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8005b1c:	6220      	str	r0, [r4, #32]
 8005b1e:	429a      	cmp	r2, r3
 8005b20:	d15e      	bne.n	8005be0 <ai_platform_api_get_network_report+0x788>
 8005b22:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8005b26:	f104 0348 	add.w	r3, r4, #72	; 0x48
 8005b2a:	e896 0003 	ldmia.w	r6, {r0, r1}
 8005b2e:	e882 0003 	stmia.w	r2, {r0, r1}
 8005b32:	2201      	movs	r2, #1
 8005b34:	e898 0003 	ldmia.w	r8, {r0, r1}
 8005b38:	9202      	str	r2, [sp, #8]
 8005b3a:	e883 0003 	stmia.w	r3, {r0, r1}
 8005b3e:	e563      	b.n	8005608 <ai_platform_api_get_network_report+0x1b0>
 8005b40:	e7fe      	b.n	8005b40 <ai_platform_api_get_network_report+0x6e8>
 8005b42:	4b4a      	ldr	r3, [pc, #296]	; (8005c6c <ai_platform_api_get_network_report+0x814>)
 8005b44:	2201      	movs	r2, #1
 8005b46:	609a      	str	r2, [r3, #8]
 8005b48:	689a      	ldr	r2, [r3, #8]
 8005b4a:	2a00      	cmp	r2, #0
 8005b4c:	d1fc      	bne.n	8005b48 <ai_platform_api_get_network_report+0x6f0>
 8005b4e:	4a48      	ldr	r2, [pc, #288]	; (8005c70 <ai_platform_api_get_network_report+0x818>)
 8005b50:	601a      	str	r2, [r3, #0]
 8005b52:	681a      	ldr	r2, [r3, #0]
 8005b54:	4b47      	ldr	r3, [pc, #284]	; (8005c74 <ai_platform_api_get_network_report+0x81c>)
 8005b56:	429a      	cmp	r2, r3
 8005b58:	f43f af4a 	beq.w	80059f0 <ai_platform_api_get_network_report+0x598>
 8005b5c:	e7fe      	b.n	8005b5c <ai_platform_api_get_network_report+0x704>
 8005b5e:	4b48      	ldr	r3, [pc, #288]	; (8005c80 <ai_platform_api_get_network_report+0x828>)
 8005b60:	2201      	movs	r2, #1
 8005b62:	f8c3 2c08 	str.w	r2, [r3, #3080]	; 0xc08
 8005b66:	f8d3 2c08 	ldr.w	r2, [r3, #3080]	; 0xc08
 8005b6a:	2a00      	cmp	r2, #0
 8005b6c:	d1fb      	bne.n	8005b66 <ai_platform_api_get_network_report+0x70e>
 8005b6e:	4a40      	ldr	r2, [pc, #256]	; (8005c70 <ai_platform_api_get_network_report+0x818>)
 8005b70:	f8c3 2c00 	str.w	r2, [r3, #3072]	; 0xc00
 8005b74:	f8d3 2c00 	ldr.w	r2, [r3, #3072]	; 0xc00
 8005b78:	4b3e      	ldr	r3, [pc, #248]	; (8005c74 <ai_platform_api_get_network_report+0x81c>)
 8005b7a:	429a      	cmp	r2, r3
 8005b7c:	f43f af38 	beq.w	80059f0 <ai_platform_api_get_network_report+0x598>
 8005b80:	e7fe      	b.n	8005b80 <ai_platform_api_get_network_report+0x728>
 8005b82:	4b3a      	ldr	r3, [pc, #232]	; (8005c6c <ai_platform_api_get_network_report+0x814>)
 8005b84:	2201      	movs	r2, #1
 8005b86:	609a      	str	r2, [r3, #8]
 8005b88:	689a      	ldr	r2, [r3, #8]
 8005b8a:	2a00      	cmp	r2, #0
 8005b8c:	d1fc      	bne.n	8005b88 <ai_platform_api_get_network_report+0x730>
 8005b8e:	4a38      	ldr	r2, [pc, #224]	; (8005c70 <ai_platform_api_get_network_report+0x818>)
 8005b90:	601a      	str	r2, [r3, #0]
 8005b92:	681a      	ldr	r2, [r3, #0]
 8005b94:	4b37      	ldr	r3, [pc, #220]	; (8005c74 <ai_platform_api_get_network_report+0x81c>)
 8005b96:	429a      	cmp	r2, r3
 8005b98:	d0b5      	beq.n	8005b06 <ai_platform_api_get_network_report+0x6ae>
 8005b9a:	e7fe      	b.n	8005b9a <ai_platform_api_get_network_report+0x742>
 8005b9c:	4b38      	ldr	r3, [pc, #224]	; (8005c80 <ai_platform_api_get_network_report+0x828>)
 8005b9e:	2201      	movs	r2, #1
 8005ba0:	f8c3 2c08 	str.w	r2, [r3, #3080]	; 0xc08
 8005ba4:	f8d3 2c08 	ldr.w	r2, [r3, #3080]	; 0xc08
 8005ba8:	2a00      	cmp	r2, #0
 8005baa:	d1fb      	bne.n	8005ba4 <ai_platform_api_get_network_report+0x74c>
 8005bac:	4a30      	ldr	r2, [pc, #192]	; (8005c70 <ai_platform_api_get_network_report+0x818>)
 8005bae:	f8c3 2c00 	str.w	r2, [r3, #3072]	; 0xc00
 8005bb2:	f8d3 2c00 	ldr.w	r2, [r3, #3072]	; 0xc00
 8005bb6:	4b2f      	ldr	r3, [pc, #188]	; (8005c74 <ai_platform_api_get_network_report+0x81c>)
 8005bb8:	429a      	cmp	r2, r3
 8005bba:	d0a4      	beq.n	8005b06 <ai_platform_api_get_network_report+0x6ae>
 8005bbc:	e7fe      	b.n	8005bbc <ai_platform_api_get_network_report+0x764>
 8005bbe:	4b30      	ldr	r3, [pc, #192]	; (8005c80 <ai_platform_api_get_network_report+0x828>)
 8005bc0:	2201      	movs	r2, #1
 8005bc2:	f8c3 2c08 	str.w	r2, [r3, #3080]	; 0xc08
 8005bc6:	f8d3 2c08 	ldr.w	r2, [r3, #3080]	; 0xc08
 8005bca:	2a00      	cmp	r2, #0
 8005bcc:	d1fb      	bne.n	8005bc6 <ai_platform_api_get_network_report+0x76e>
 8005bce:	4a28      	ldr	r2, [pc, #160]	; (8005c70 <ai_platform_api_get_network_report+0x818>)
 8005bd0:	f8c3 2c00 	str.w	r2, [r3, #3072]	; 0xc00
 8005bd4:	f8d3 2c00 	ldr.w	r2, [r3, #3072]	; 0xc00
 8005bd8:	4b26      	ldr	r3, [pc, #152]	; (8005c74 <ai_platform_api_get_network_report+0x81c>)
 8005bda:	429a      	cmp	r2, r3
 8005bdc:	d093      	beq.n	8005b06 <ai_platform_api_get_network_report+0x6ae>
 8005bde:	e7fe      	b.n	8005bde <ai_platform_api_get_network_report+0x786>
 8005be0:	9901      	ldr	r1, [sp, #4]
 8005be2:	f10d 0910 	add.w	r9, sp, #16
 8005be6:	4a28      	ldr	r2, [pc, #160]	; (8005c88 <ai_platform_api_get_network_report+0x830>)
 8005be8:	2000      	movs	r0, #0
 8005bea:	f8c1 905c 	str.w	r9, [r1, #92]	; 0x5c
 8005bee:	f101 0444 	add.w	r4, r1, #68	; 0x44
 8005bf2:	644a      	str	r2, [r1, #68]	; 0x44
 8005bf4:	f240 4201 	movw	r2, #1025	; 0x401
 8005bf8:	f101 0560 	add.w	r5, r1, #96	; 0x60
 8005bfc:	4b23      	ldr	r3, [pc, #140]	; (8005c8c <ai_platform_api_get_network_report+0x834>)
 8005bfe:	658a      	str	r2, [r1, #88]	; 0x58
 8005c00:	460a      	mov	r2, r1
 8005c02:	2100      	movs	r1, #0
 8005c04:	46a6      	mov	lr, r4
 8005c06:	46ac      	mov	ip, r5
 8005c08:	e9c2 0112 	strd	r0, r1, [r2, #72]	; 0x48
 8005c0c:	e9c2 0114 	strd	r0, r1, [r2, #80]	; 0x50
 8005c10:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8005c12:	e889 000f 	stmia.w	r9, {r0, r1, r2, r3}
 8005c16:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8005c1a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8005c1e:	e89e 0007 	ldmia.w	lr, {r0, r1, r2}
 8005c22:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8005c26:	4630      	mov	r0, r6
 8005c28:	f7fe feb2 	bl	8004990 <ai_buffer_array_sane>
 8005c2c:	b990      	cbnz	r0, 8005c54 <ai_platform_api_get_network_report+0x7fc>
 8005c2e:	4640      	mov	r0, r8
 8005c30:	f7fe feae 	bl	8004990 <ai_buffer_array_sane>
 8005c34:	b910      	cbnz	r0, 8005c3c <ai_platform_api_get_network_report+0x7e4>
 8005c36:	2301      	movs	r3, #1
 8005c38:	9302      	str	r3, [sp, #8]
 8005c3a:	e4e5      	b.n	8005608 <ai_platform_api_get_network_report+0x1b0>
 8005c3c:	4640      	mov	r0, r8
 8005c3e:	f7fe fea7 	bl	8004990 <ai_buffer_array_sane>
 8005c42:	b328      	cbz	r0, 8005c90 <ai_platform_api_get_network_report+0x838>
 8005c44:	6a3d      	ldr	r5, [r7, #32]
 8005c46:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005c48:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005c4a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005c4e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8005c52:	e7f0      	b.n	8005c36 <ai_platform_api_get_network_report+0x7de>
 8005c54:	4630      	mov	r0, r6
 8005c56:	f7fe fe9b 	bl	8004990 <ai_buffer_array_sane>
 8005c5a:	b308      	cbz	r0, 8005ca0 <ai_platform_api_get_network_report+0x848>
 8005c5c:	6abe      	ldr	r6, [r7, #40]	; 0x28
 8005c5e:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8005c60:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8005c62:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8005c66:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8005c6a:	e7e0      	b.n	8005c2e <ai_platform_api_get_network_report+0x7d6>
 8005c6c:	40023000 	.word	0x40023000
 8005c70:	f407a5c2 	.word	0xf407a5c2
 8005c74:	b5e8b5cd 	.word	0xb5e8b5cd
 8005c78:	e0042000 	.word	0xe0042000
 8005c7c:	5c001000 	.word	0x5c001000
 8005c80:	58024000 	.word	0x58024000
 8005c84:	a1facade 	.word	0xa1facade
 8005c88:	00040440 	.word	0x00040440
 8005c8c:	0801232c 	.word	0x0801232c
 8005c90:	4605      	mov	r5, r0
 8005c92:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005c94:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005c96:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005c9a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8005c9e:	deff      	udf	#255	; 0xff
 8005ca0:	4604      	mov	r4, r0
 8005ca2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8005ca4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8005ca6:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8005caa:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8005cae:	deff      	udf	#255	; 0xff

08005cb0 <ai_platform_network_create>:
 8005cb0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005cb4:	b083      	sub	sp, #12
 8005cb6:	4604      	mov	r4, r0
 8005cb8:	4615      	mov	r5, r2
 8005cba:	461e      	mov	r6, r3
 8005cbc:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8005cc0:	f89d 802c 	ldrb.w	r8, [sp, #44]	; 0x2c
 8005cc4:	f7fe ff10 	bl	8004ae8 <_ai_platform_acquire_crc>
 8005cc8:	2800      	cmp	r0, #0
 8005cca:	f000 80bd 	beq.w	8005e48 <ai_platform_network_create+0x198>
 8005cce:	4ba5      	ldr	r3, [pc, #660]	; (8005f64 <ai_platform_network_create+0x2b4>)
 8005cd0:	f46f 6c8a 	mvn.w	ip, #1104	; 0x450
 8005cd4:	4601      	mov	r1, r0
 8005cd6:	681b      	ldr	r3, [r3, #0]
 8005cd8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005cdc:	eb03 020c 	add.w	r2, r3, ip
 8005ce0:	2a01      	cmp	r2, #1
 8005ce2:	f240 80a8 	bls.w	8005e36 <ai_platform_network_create+0x186>
 8005ce6:	f240 4249 	movw	r2, #1097	; 0x449
 8005cea:	4293      	cmp	r3, r2
 8005cec:	f000 80a3 	beq.w	8005e36 <ai_platform_network_create+0x186>
 8005cf0:	4a9d      	ldr	r2, [pc, #628]	; (8005f68 <ai_platform_network_create+0x2b8>)
 8005cf2:	6813      	ldr	r3, [r2, #0]
 8005cf4:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005cf8:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8005cfc:	f000 80b9 	beq.w	8005e72 <ai_platform_network_create+0x1c2>
 8005d00:	6813      	ldr	r3, [r2, #0]
 8005d02:	f240 4c83 	movw	ip, #1155	; 0x483
 8005d06:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005d0a:	4563      	cmp	r3, ip
 8005d0c:	f000 80a1 	beq.w	8005e52 <ai_platform_network_create+0x1a2>
 8005d10:	6813      	ldr	r3, [r2, #0]
 8005d12:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005d16:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 8005d1a:	f000 8153 	beq.w	8005fc4 <ai_platform_network_create+0x314>
 8005d1e:	6813      	ldr	r3, [r2, #0]
 8005d20:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005d24:	2b00      	cmp	r3, #0
 8005d26:	f040 808d 	bne.w	8005e44 <ai_platform_network_create+0x194>
 8005d2a:	4a90      	ldr	r2, [pc, #576]	; (8005f6c <ai_platform_network_create+0x2bc>)
 8005d2c:	2318      	movs	r3, #24
 8005d2e:	6093      	str	r3, [r2, #8]
 8005d30:	6893      	ldr	r3, [r2, #8]
 8005d32:	2b18      	cmp	r3, #24
 8005d34:	f040 8086 	bne.w	8005e44 <ai_platform_network_create+0x194>
 8005d38:	2301      	movs	r3, #1
 8005d3a:	6093      	str	r3, [r2, #8]
 8005d3c:	6893      	ldr	r3, [r2, #8]
 8005d3e:	2b00      	cmp	r3, #0
 8005d40:	d1fc      	bne.n	8005d3c <ai_platform_network_create+0x8c>
 8005d42:	4608      	mov	r0, r1
 8005d44:	f7fe fed2 	bl	8004aec <_ai_platform_release_crc>
 8005d48:	f7fe fece 	bl	8004ae8 <_ai_platform_acquire_crc>
 8005d4c:	4b85      	ldr	r3, [pc, #532]	; (8005f64 <ai_platform_network_create+0x2b4>)
 8005d4e:	f46f 628a 	mvn.w	r2, #1104	; 0x450
 8005d52:	681b      	ldr	r3, [r3, #0]
 8005d54:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005d58:	189a      	adds	r2, r3, r2
 8005d5a:	2a01      	cmp	r2, #1
 8005d5c:	f240 809f 	bls.w	8005e9e <ai_platform_network_create+0x1ee>
 8005d60:	f240 4249 	movw	r2, #1097	; 0x449
 8005d64:	4293      	cmp	r3, r2
 8005d66:	f000 809a 	beq.w	8005e9e <ai_platform_network_create+0x1ee>
 8005d6a:	4a7f      	ldr	r2, [pc, #508]	; (8005f68 <ai_platform_network_create+0x2b8>)
 8005d6c:	6813      	ldr	r3, [r2, #0]
 8005d6e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005d72:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8005d76:	f000 80a0 	beq.w	8005eba <ai_platform_network_create+0x20a>
 8005d7a:	6813      	ldr	r3, [r2, #0]
 8005d7c:	f240 4183 	movw	r1, #1155	; 0x483
 8005d80:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005d84:	428b      	cmp	r3, r1
 8005d86:	f000 80bf 	beq.w	8005f08 <ai_platform_network_create+0x258>
 8005d8a:	6813      	ldr	r3, [r2, #0]
 8005d8c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005d90:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 8005d94:	f000 8123 	beq.w	8005fde <ai_platform_network_create+0x32e>
 8005d98:	6813      	ldr	r3, [r2, #0]
 8005d9a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005d9e:	2b00      	cmp	r3, #0
 8005da0:	f000 80c4 	beq.w	8005f2c <ai_platform_network_create+0x27c>
 8005da4:	f7fe fea2 	bl	8004aec <_ai_platform_release_crc>
 8005da8:	2c00      	cmp	r4, #0
 8005daa:	f000 80aa 	beq.w	8005f02 <ai_platform_network_create+0x252>
 8005dae:	4b70      	ldr	r3, [pc, #448]	; (8005f70 <ai_platform_network_create+0x2c0>)
 8005db0:	602b      	str	r3, [r5, #0]
 8005db2:	6025      	str	r5, [r4, #0]
 8005db4:	f001 fb2e 	bl	8007414 <core_init>
 8005db8:	2800      	cmp	r0, #0
 8005dba:	f000 8090 	beq.w	8005ede <ai_platform_network_create+0x22e>
 8005dbe:	f7fe fe93 	bl	8004ae8 <_ai_platform_acquire_crc>
 8005dc2:	4b68      	ldr	r3, [pc, #416]	; (8005f64 <ai_platform_network_create+0x2b4>)
 8005dc4:	f46f 618a 	mvn.w	r1, #1104	; 0x450
 8005dc8:	681b      	ldr	r3, [r3, #0]
 8005dca:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005dce:	185a      	adds	r2, r3, r1
 8005dd0:	2a01      	cmp	r2, #1
 8005dd2:	f240 80b9 	bls.w	8005f48 <ai_platform_network_create+0x298>
 8005dd6:	f240 4249 	movw	r2, #1097	; 0x449
 8005dda:	4293      	cmp	r3, r2
 8005ddc:	f000 80b4 	beq.w	8005f48 <ai_platform_network_create+0x298>
 8005de0:	4a61      	ldr	r2, [pc, #388]	; (8005f68 <ai_platform_network_create+0x2b8>)
 8005de2:	6813      	ldr	r3, [r2, #0]
 8005de4:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005de8:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8005dec:	f000 80c8 	beq.w	8005f80 <ai_platform_network_create+0x2d0>
 8005df0:	6813      	ldr	r3, [r2, #0]
 8005df2:	f240 4183 	movw	r1, #1155	; 0x483
 8005df6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005dfa:	428b      	cmp	r3, r1
 8005dfc:	f000 8107 	beq.w	800600e <ai_platform_network_create+0x35e>
 8005e00:	6813      	ldr	r3, [r2, #0]
 8005e02:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005e06:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 8005e0a:	f000 8111 	beq.w	8006030 <ai_platform_network_create+0x380>
 8005e0e:	6813      	ldr	r3, [r2, #0]
 8005e10:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005e14:	2b00      	cmp	r3, #0
 8005e16:	f040 80c3 	bne.w	8005fa0 <ai_platform_network_create+0x2f0>
 8005e1a:	4b54      	ldr	r3, [pc, #336]	; (8005f6c <ai_platform_network_create+0x2bc>)
 8005e1c:	2201      	movs	r2, #1
 8005e1e:	609a      	str	r2, [r3, #8]
 8005e20:	689a      	ldr	r2, [r3, #8]
 8005e22:	2a00      	cmp	r2, #0
 8005e24:	d1fc      	bne.n	8005e20 <ai_platform_network_create+0x170>
 8005e26:	4a53      	ldr	r2, [pc, #332]	; (8005f74 <ai_platform_network_create+0x2c4>)
 8005e28:	601a      	str	r2, [r3, #0]
 8005e2a:	681a      	ldr	r2, [r3, #0]
 8005e2c:	4b52      	ldr	r3, [pc, #328]	; (8005f78 <ai_platform_network_create+0x2c8>)
 8005e2e:	429a      	cmp	r2, r3
 8005e30:	f000 80b6 	beq.w	8005fa0 <ai_platform_network_create+0x2f0>
 8005e34:	e7fe      	b.n	8005e34 <ai_platform_network_create+0x184>
 8005e36:	4b4d      	ldr	r3, [pc, #308]	; (8005f6c <ai_platform_network_create+0x2bc>)
 8005e38:	2218      	movs	r2, #24
 8005e3a:	609a      	str	r2, [r3, #8]
 8005e3c:	689a      	ldr	r2, [r3, #8]
 8005e3e:	2a18      	cmp	r2, #24
 8005e40:	d027      	beq.n	8005e92 <ai_platform_network_create+0x1e2>
 8005e42:	4608      	mov	r0, r1
 8005e44:	f7fe fe52 	bl	8004aec <_ai_platform_release_crc>
 8005e48:	f244 1033 	movw	r0, #16691	; 0x4133
 8005e4c:	b003      	add	sp, #12
 8005e4e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005e52:	4a4a      	ldr	r2, [pc, #296]	; (8005f7c <ai_platform_network_create+0x2cc>)
 8005e54:	2318      	movs	r3, #24
 8005e56:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8005e5a:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8005e5e:	2b18      	cmp	r3, #24
 8005e60:	d1f0      	bne.n	8005e44 <ai_platform_network_create+0x194>
 8005e62:	2301      	movs	r3, #1
 8005e64:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8005e68:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8005e6c:	2b00      	cmp	r3, #0
 8005e6e:	d1fb      	bne.n	8005e68 <ai_platform_network_create+0x1b8>
 8005e70:	e767      	b.n	8005d42 <ai_platform_network_create+0x92>
 8005e72:	4a42      	ldr	r2, [pc, #264]	; (8005f7c <ai_platform_network_create+0x2cc>)
 8005e74:	2318      	movs	r3, #24
 8005e76:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8005e7a:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8005e7e:	2b18      	cmp	r3, #24
 8005e80:	d1e0      	bne.n	8005e44 <ai_platform_network_create+0x194>
 8005e82:	2301      	movs	r3, #1
 8005e84:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8005e88:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8005e8c:	2b00      	cmp	r3, #0
 8005e8e:	d1fb      	bne.n	8005e88 <ai_platform_network_create+0x1d8>
 8005e90:	e757      	b.n	8005d42 <ai_platform_network_create+0x92>
 8005e92:	2201      	movs	r2, #1
 8005e94:	609a      	str	r2, [r3, #8]
 8005e96:	689a      	ldr	r2, [r3, #8]
 8005e98:	2a00      	cmp	r2, #0
 8005e9a:	d1fc      	bne.n	8005e96 <ai_platform_network_create+0x1e6>
 8005e9c:	e751      	b.n	8005d42 <ai_platform_network_create+0x92>
 8005e9e:	4a33      	ldr	r2, [pc, #204]	; (8005f6c <ai_platform_network_create+0x2bc>)
 8005ea0:	2301      	movs	r3, #1
 8005ea2:	6093      	str	r3, [r2, #8]
 8005ea4:	6891      	ldr	r1, [r2, #8]
 8005ea6:	2900      	cmp	r1, #0
 8005ea8:	d1fc      	bne.n	8005ea4 <ai_platform_network_create+0x1f4>
 8005eaa:	4b32      	ldr	r3, [pc, #200]	; (8005f74 <ai_platform_network_create+0x2c4>)
 8005eac:	6013      	str	r3, [r2, #0]
 8005eae:	4b32      	ldr	r3, [pc, #200]	; (8005f78 <ai_platform_network_create+0x2c8>)
 8005eb0:	6812      	ldr	r2, [r2, #0]
 8005eb2:	429a      	cmp	r2, r3
 8005eb4:	f43f af76 	beq.w	8005da4 <ai_platform_network_create+0xf4>
 8005eb8:	e7fe      	b.n	8005eb8 <ai_platform_network_create+0x208>
 8005eba:	4a30      	ldr	r2, [pc, #192]	; (8005f7c <ai_platform_network_create+0x2cc>)
 8005ebc:	2301      	movs	r3, #1
 8005ebe:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8005ec2:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8005ec6:	2b00      	cmp	r3, #0
 8005ec8:	d1fb      	bne.n	8005ec2 <ai_platform_network_create+0x212>
 8005eca:	4b2a      	ldr	r3, [pc, #168]	; (8005f74 <ai_platform_network_create+0x2c4>)
 8005ecc:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 8005ed0:	4b29      	ldr	r3, [pc, #164]	; (8005f78 <ai_platform_network_create+0x2c8>)
 8005ed2:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8005ed6:	429a      	cmp	r2, r3
 8005ed8:	f43f af64 	beq.w	8005da4 <ai_platform_network_create+0xf4>
 8005edc:	e7fe      	b.n	8005edc <ai_platform_network_create+0x22c>
 8005ede:	f04f 0930 	mov.w	r9, #48	; 0x30
 8005ee2:	2300      	movs	r3, #0
 8005ee4:	6023      	str	r3, [r4, #0]
 8005ee6:	2410      	movs	r4, #16
 8005ee8:	4642      	mov	r2, r8
 8005eea:	4639      	mov	r1, r7
 8005eec:	4630      	mov	r0, r6
 8005eee:	f008 fd37 	bl	800e960 <ai_version_get>
 8005ef2:	4603      	mov	r3, r0
 8005ef4:	2000      	movs	r0, #0
 8005ef6:	64ab      	str	r3, [r5, #72]	; 0x48
 8005ef8:	f369 0007 	bfi	r0, r9, #0, #8
 8005efc:	f364 201f 	bfi	r0, r4, #8, #24
 8005f00:	e7a4      	b.n	8005e4c <ai_platform_network_create+0x19c>
 8005f02:	f241 0010 	movw	r0, #4112	; 0x1010
 8005f06:	e7a1      	b.n	8005e4c <ai_platform_network_create+0x19c>
 8005f08:	4a1c      	ldr	r2, [pc, #112]	; (8005f7c <ai_platform_network_create+0x2cc>)
 8005f0a:	2301      	movs	r3, #1
 8005f0c:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8005f10:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8005f14:	2b00      	cmp	r3, #0
 8005f16:	d1fb      	bne.n	8005f10 <ai_platform_network_create+0x260>
 8005f18:	4b16      	ldr	r3, [pc, #88]	; (8005f74 <ai_platform_network_create+0x2c4>)
 8005f1a:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 8005f1e:	4b16      	ldr	r3, [pc, #88]	; (8005f78 <ai_platform_network_create+0x2c8>)
 8005f20:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8005f24:	429a      	cmp	r2, r3
 8005f26:	f43f af3d 	beq.w	8005da4 <ai_platform_network_create+0xf4>
 8005f2a:	e7fe      	b.n	8005f2a <ai_platform_network_create+0x27a>
 8005f2c:	4a0f      	ldr	r2, [pc, #60]	; (8005f6c <ai_platform_network_create+0x2bc>)
 8005f2e:	2301      	movs	r3, #1
 8005f30:	6093      	str	r3, [r2, #8]
 8005f32:	6893      	ldr	r3, [r2, #8]
 8005f34:	2b00      	cmp	r3, #0
 8005f36:	d1fc      	bne.n	8005f32 <ai_platform_network_create+0x282>
 8005f38:	4b0e      	ldr	r3, [pc, #56]	; (8005f74 <ai_platform_network_create+0x2c4>)
 8005f3a:	6013      	str	r3, [r2, #0]
 8005f3c:	4b0e      	ldr	r3, [pc, #56]	; (8005f78 <ai_platform_network_create+0x2c8>)
 8005f3e:	6812      	ldr	r2, [r2, #0]
 8005f40:	429a      	cmp	r2, r3
 8005f42:	f43f af2f 	beq.w	8005da4 <ai_platform_network_create+0xf4>
 8005f46:	e7fe      	b.n	8005f46 <ai_platform_network_create+0x296>
 8005f48:	4a08      	ldr	r2, [pc, #32]	; (8005f6c <ai_platform_network_create+0x2bc>)
 8005f4a:	2301      	movs	r3, #1
 8005f4c:	6093      	str	r3, [r2, #8]
 8005f4e:	6893      	ldr	r3, [r2, #8]
 8005f50:	2b00      	cmp	r3, #0
 8005f52:	d1fc      	bne.n	8005f4e <ai_platform_network_create+0x29e>
 8005f54:	4b07      	ldr	r3, [pc, #28]	; (8005f74 <ai_platform_network_create+0x2c4>)
 8005f56:	6013      	str	r3, [r2, #0]
 8005f58:	4b07      	ldr	r3, [pc, #28]	; (8005f78 <ai_platform_network_create+0x2c8>)
 8005f5a:	6812      	ldr	r2, [r2, #0]
 8005f5c:	429a      	cmp	r2, r3
 8005f5e:	d01f      	beq.n	8005fa0 <ai_platform_network_create+0x2f0>
 8005f60:	e7fe      	b.n	8005f60 <ai_platform_network_create+0x2b0>
 8005f62:	bf00      	nop
 8005f64:	e0042000 	.word	0xe0042000
 8005f68:	5c001000 	.word	0x5c001000
 8005f6c:	40023000 	.word	0x40023000
 8005f70:	a1c00100 	.word	0xa1c00100
 8005f74:	f407a5c2 	.word	0xf407a5c2
 8005f78:	b5e8b5cd 	.word	0xb5e8b5cd
 8005f7c:	58024000 	.word	0x58024000
 8005f80:	4a33      	ldr	r2, [pc, #204]	; (8006050 <ai_platform_network_create+0x3a0>)
 8005f82:	2301      	movs	r3, #1
 8005f84:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8005f88:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8005f8c:	2b00      	cmp	r3, #0
 8005f8e:	d1fb      	bne.n	8005f88 <ai_platform_network_create+0x2d8>
 8005f90:	4b30      	ldr	r3, [pc, #192]	; (8006054 <ai_platform_network_create+0x3a4>)
 8005f92:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 8005f96:	4b30      	ldr	r3, [pc, #192]	; (8006058 <ai_platform_network_create+0x3a8>)
 8005f98:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8005f9c:	429a      	cmp	r2, r3
 8005f9e:	d12c      	bne.n	8005ffa <ai_platform_network_create+0x34a>
 8005fa0:	f7fe fda4 	bl	8004aec <_ai_platform_release_crc>
 8005fa4:	2200      	movs	r2, #0
 8005fa6:	4639      	mov	r1, r7
 8005fa8:	4630      	mov	r0, r6
 8005faa:	f008 fcd9 	bl	800e960 <ai_version_get>
 8005fae:	4681      	mov	r9, r0
 8005fb0:	2200      	movs	r2, #0
 8005fb2:	2105      	movs	r1, #5
 8005fb4:	2001      	movs	r0, #1
 8005fb6:	f008 fcd3 	bl	800e960 <ai_version_get>
 8005fba:	4581      	cmp	r9, r0
 8005fbc:	d01e      	beq.n	8005ffc <ai_platform_network_create+0x34c>
 8005fbe:	f04f 0901 	mov.w	r9, #1
 8005fc2:	e78e      	b.n	8005ee2 <ai_platform_network_create+0x232>
 8005fc4:	4b25      	ldr	r3, [pc, #148]	; (800605c <ai_platform_network_create+0x3ac>)
 8005fc6:	2218      	movs	r2, #24
 8005fc8:	609a      	str	r2, [r3, #8]
 8005fca:	689a      	ldr	r2, [r3, #8]
 8005fcc:	2a18      	cmp	r2, #24
 8005fce:	f47f af39 	bne.w	8005e44 <ai_platform_network_create+0x194>
 8005fd2:	2201      	movs	r2, #1
 8005fd4:	609a      	str	r2, [r3, #8]
 8005fd6:	689a      	ldr	r2, [r3, #8]
 8005fd8:	2a00      	cmp	r2, #0
 8005fda:	d1fc      	bne.n	8005fd6 <ai_platform_network_create+0x326>
 8005fdc:	e6b1      	b.n	8005d42 <ai_platform_network_create+0x92>
 8005fde:	4a1f      	ldr	r2, [pc, #124]	; (800605c <ai_platform_network_create+0x3ac>)
 8005fe0:	2301      	movs	r3, #1
 8005fe2:	6093      	str	r3, [r2, #8]
 8005fe4:	6893      	ldr	r3, [r2, #8]
 8005fe6:	2b00      	cmp	r3, #0
 8005fe8:	d1fc      	bne.n	8005fe4 <ai_platform_network_create+0x334>
 8005fea:	4b1a      	ldr	r3, [pc, #104]	; (8006054 <ai_platform_network_create+0x3a4>)
 8005fec:	6013      	str	r3, [r2, #0]
 8005fee:	4b1a      	ldr	r3, [pc, #104]	; (8006058 <ai_platform_network_create+0x3a8>)
 8005ff0:	6812      	ldr	r2, [r2, #0]
 8005ff2:	429a      	cmp	r2, r3
 8005ff4:	f43f aed6 	beq.w	8005da4 <ai_platform_network_create+0xf4>
 8005ff8:	e7fe      	b.n	8005ff8 <ai_platform_network_create+0x348>
 8005ffa:	e7fe      	b.n	8005ffa <ai_platform_network_create+0x34a>
 8005ffc:	4b18      	ldr	r3, [pc, #96]	; (8006060 <ai_platform_network_create+0x3b0>)
 8005ffe:	a801      	add	r0, sp, #4
 8006000:	9301      	str	r3, [sp, #4]
 8006002:	f001 fb87 	bl	8007714 <ai_check_custom_types>
 8006006:	b300      	cbz	r0, 800604a <ai_platform_network_create+0x39a>
 8006008:	2400      	movs	r4, #0
 800600a:	46a1      	mov	r9, r4
 800600c:	e76c      	b.n	8005ee8 <ai_platform_network_create+0x238>
 800600e:	4b10      	ldr	r3, [pc, #64]	; (8006050 <ai_platform_network_create+0x3a0>)
 8006010:	2201      	movs	r2, #1
 8006012:	f8c3 2c08 	str.w	r2, [r3, #3080]	; 0xc08
 8006016:	f8d3 2c08 	ldr.w	r2, [r3, #3080]	; 0xc08
 800601a:	2a00      	cmp	r2, #0
 800601c:	d1fb      	bne.n	8006016 <ai_platform_network_create+0x366>
 800601e:	4a0d      	ldr	r2, [pc, #52]	; (8006054 <ai_platform_network_create+0x3a4>)
 8006020:	f8c3 2c00 	str.w	r2, [r3, #3072]	; 0xc00
 8006024:	f8d3 2c00 	ldr.w	r2, [r3, #3072]	; 0xc00
 8006028:	4b0b      	ldr	r3, [pc, #44]	; (8006058 <ai_platform_network_create+0x3a8>)
 800602a:	429a      	cmp	r2, r3
 800602c:	d0b8      	beq.n	8005fa0 <ai_platform_network_create+0x2f0>
 800602e:	e7fe      	b.n	800602e <ai_platform_network_create+0x37e>
 8006030:	4b0a      	ldr	r3, [pc, #40]	; (800605c <ai_platform_network_create+0x3ac>)
 8006032:	2201      	movs	r2, #1
 8006034:	609a      	str	r2, [r3, #8]
 8006036:	689a      	ldr	r2, [r3, #8]
 8006038:	2a00      	cmp	r2, #0
 800603a:	d1fc      	bne.n	8006036 <ai_platform_network_create+0x386>
 800603c:	4a05      	ldr	r2, [pc, #20]	; (8006054 <ai_platform_network_create+0x3a4>)
 800603e:	601a      	str	r2, [r3, #0]
 8006040:	681a      	ldr	r2, [r3, #0]
 8006042:	4b05      	ldr	r3, [pc, #20]	; (8006058 <ai_platform_network_create+0x3a8>)
 8006044:	429a      	cmp	r2, r3
 8006046:	d0ab      	beq.n	8005fa0 <ai_platform_network_create+0x2f0>
 8006048:	e7fe      	b.n	8006048 <ai_platform_network_create+0x398>
 800604a:	f04f 0902 	mov.w	r9, #2
 800604e:	e748      	b.n	8005ee2 <ai_platform_network_create+0x232>
 8006050:	58024000 	.word	0x58024000
 8006054:	f407a5c2 	.word	0xf407a5c2
 8006058:	b5e8b5cd 	.word	0xb5e8b5cd
 800605c:	40023000 	.word	0x40023000
 8006060:	84048403 	.word	0x84048403

08006064 <ai_platform_network_destroy>:
 8006064:	b510      	push	{r4, lr}
 8006066:	4604      	mov	r4, r0
 8006068:	2800      	cmp	r0, #0
 800606a:	d03d      	beq.n	80060e8 <ai_platform_network_destroy+0x84>
 800606c:	4b7a      	ldr	r3, [pc, #488]	; (8006258 <ai_platform_network_destroy+0x1f4>)
 800606e:	6802      	ldr	r2, [r0, #0]
 8006070:	429a      	cmp	r2, r3
 8006072:	d139      	bne.n	80060e8 <ai_platform_network_destroy+0x84>
 8006074:	f7fe fd38 	bl	8004ae8 <_ai_platform_acquire_crc>
 8006078:	4b78      	ldr	r3, [pc, #480]	; (800625c <ai_platform_network_destroy+0x1f8>)
 800607a:	f46f 628a 	mvn.w	r2, #1104	; 0x450
 800607e:	681b      	ldr	r3, [r3, #0]
 8006080:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006084:	189a      	adds	r2, r3, r2
 8006086:	2a01      	cmp	r2, #1
 8006088:	f240 8084 	bls.w	8006194 <ai_platform_network_destroy+0x130>
 800608c:	f240 4249 	movw	r2, #1097	; 0x449
 8006090:	4293      	cmp	r3, r2
 8006092:	d07f      	beq.n	8006194 <ai_platform_network_destroy+0x130>
 8006094:	4a72      	ldr	r2, [pc, #456]	; (8006260 <ai_platform_network_destroy+0x1fc>)
 8006096:	6813      	ldr	r3, [r2, #0]
 8006098:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800609c:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 80060a0:	f000 8086 	beq.w	80061b0 <ai_platform_network_destroy+0x14c>
 80060a4:	6813      	ldr	r3, [r2, #0]
 80060a6:	f240 4183 	movw	r1, #1155	; 0x483
 80060aa:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80060ae:	428b      	cmp	r3, r1
 80060b0:	f000 80a7 	beq.w	8006202 <ai_platform_network_destroy+0x19e>
 80060b4:	6813      	ldr	r3, [r2, #0]
 80060b6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80060ba:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 80060be:	f000 80be 	beq.w	800623e <ai_platform_network_destroy+0x1da>
 80060c2:	6813      	ldr	r3, [r2, #0]
 80060c4:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80060c8:	2b00      	cmp	r3, #0
 80060ca:	f040 8081 	bne.w	80061d0 <ai_platform_network_destroy+0x16c>
 80060ce:	4a65      	ldr	r2, [pc, #404]	; (8006264 <ai_platform_network_destroy+0x200>)
 80060d0:	2301      	movs	r3, #1
 80060d2:	6093      	str	r3, [r2, #8]
 80060d4:	6893      	ldr	r3, [r2, #8]
 80060d6:	2b00      	cmp	r3, #0
 80060d8:	d1fc      	bne.n	80060d4 <ai_platform_network_destroy+0x70>
 80060da:	4963      	ldr	r1, [pc, #396]	; (8006268 <ai_platform_network_destroy+0x204>)
 80060dc:	4b63      	ldr	r3, [pc, #396]	; (800626c <ai_platform_network_destroy+0x208>)
 80060de:	6011      	str	r1, [r2, #0]
 80060e0:	6812      	ldr	r2, [r2, #0]
 80060e2:	429a      	cmp	r2, r3
 80060e4:	d074      	beq.n	80061d0 <ai_platform_network_destroy+0x16c>
 80060e6:	e7fe      	b.n	80060e6 <ai_platform_network_destroy+0x82>
 80060e8:	f7fe fcfe 	bl	8004ae8 <_ai_platform_acquire_crc>
 80060ec:	4b5b      	ldr	r3, [pc, #364]	; (800625c <ai_platform_network_destroy+0x1f8>)
 80060ee:	f46f 618a 	mvn.w	r1, #1104	; 0x450
 80060f2:	681b      	ldr	r3, [r3, #0]
 80060f4:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80060f8:	185a      	adds	r2, r3, r1
 80060fa:	2a01      	cmp	r2, #1
 80060fc:	d929      	bls.n	8006152 <ai_platform_network_destroy+0xee>
 80060fe:	f240 4249 	movw	r2, #1097	; 0x449
 8006102:	4293      	cmp	r3, r2
 8006104:	d025      	beq.n	8006152 <ai_platform_network_destroy+0xee>
 8006106:	4a56      	ldr	r2, [pc, #344]	; (8006260 <ai_platform_network_destroy+0x1fc>)
 8006108:	6813      	ldr	r3, [r2, #0]
 800610a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800610e:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8006112:	d02b      	beq.n	800616c <ai_platform_network_destroy+0x108>
 8006114:	6813      	ldr	r3, [r2, #0]
 8006116:	f240 4183 	movw	r1, #1155	; 0x483
 800611a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800611e:	428b      	cmp	r3, r1
 8006120:	d05e      	beq.n	80061e0 <ai_platform_network_destroy+0x17c>
 8006122:	6813      	ldr	r3, [r2, #0]
 8006124:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006128:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 800612c:	d07a      	beq.n	8006224 <ai_platform_network_destroy+0x1c0>
 800612e:	6813      	ldr	r3, [r2, #0]
 8006130:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006134:	2b00      	cmp	r3, #0
 8006136:	d129      	bne.n	800618c <ai_platform_network_destroy+0x128>
 8006138:	4a4a      	ldr	r2, [pc, #296]	; (8006264 <ai_platform_network_destroy+0x200>)
 800613a:	2301      	movs	r3, #1
 800613c:	6093      	str	r3, [r2, #8]
 800613e:	6893      	ldr	r3, [r2, #8]
 8006140:	2b00      	cmp	r3, #0
 8006142:	d1fc      	bne.n	800613e <ai_platform_network_destroy+0xda>
 8006144:	4948      	ldr	r1, [pc, #288]	; (8006268 <ai_platform_network_destroy+0x204>)
 8006146:	4b49      	ldr	r3, [pc, #292]	; (800626c <ai_platform_network_destroy+0x208>)
 8006148:	6011      	str	r1, [r2, #0]
 800614a:	6812      	ldr	r2, [r2, #0]
 800614c:	429a      	cmp	r2, r3
 800614e:	d01d      	beq.n	800618c <ai_platform_network_destroy+0x128>
 8006150:	e7fe      	b.n	8006150 <ai_platform_network_destroy+0xec>
 8006152:	4a44      	ldr	r2, [pc, #272]	; (8006264 <ai_platform_network_destroy+0x200>)
 8006154:	2301      	movs	r3, #1
 8006156:	6093      	str	r3, [r2, #8]
 8006158:	6893      	ldr	r3, [r2, #8]
 800615a:	2b00      	cmp	r3, #0
 800615c:	d1fc      	bne.n	8006158 <ai_platform_network_destroy+0xf4>
 800615e:	4942      	ldr	r1, [pc, #264]	; (8006268 <ai_platform_network_destroy+0x204>)
 8006160:	4b42      	ldr	r3, [pc, #264]	; (800626c <ai_platform_network_destroy+0x208>)
 8006162:	6011      	str	r1, [r2, #0]
 8006164:	6812      	ldr	r2, [r2, #0]
 8006166:	429a      	cmp	r2, r3
 8006168:	d010      	beq.n	800618c <ai_platform_network_destroy+0x128>
 800616a:	e7fe      	b.n	800616a <ai_platform_network_destroy+0x106>
 800616c:	4a40      	ldr	r2, [pc, #256]	; (8006270 <ai_platform_network_destroy+0x20c>)
 800616e:	2301      	movs	r3, #1
 8006170:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8006174:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8006178:	2b00      	cmp	r3, #0
 800617a:	d1fb      	bne.n	8006174 <ai_platform_network_destroy+0x110>
 800617c:	493a      	ldr	r1, [pc, #232]	; (8006268 <ai_platform_network_destroy+0x204>)
 800617e:	4b3b      	ldr	r3, [pc, #236]	; (800626c <ai_platform_network_destroy+0x208>)
 8006180:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 8006184:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8006188:	429a      	cmp	r2, r3
 800618a:	d110      	bne.n	80061ae <ai_platform_network_destroy+0x14a>
 800618c:	f7fe fcae 	bl	8004aec <_ai_platform_release_crc>
 8006190:	4620      	mov	r0, r4
 8006192:	bd10      	pop	{r4, pc}
 8006194:	4a33      	ldr	r2, [pc, #204]	; (8006264 <ai_platform_network_destroy+0x200>)
 8006196:	2301      	movs	r3, #1
 8006198:	6093      	str	r3, [r2, #8]
 800619a:	6893      	ldr	r3, [r2, #8]
 800619c:	2b00      	cmp	r3, #0
 800619e:	d1fc      	bne.n	800619a <ai_platform_network_destroy+0x136>
 80061a0:	4931      	ldr	r1, [pc, #196]	; (8006268 <ai_platform_network_destroy+0x204>)
 80061a2:	4b32      	ldr	r3, [pc, #200]	; (800626c <ai_platform_network_destroy+0x208>)
 80061a4:	6011      	str	r1, [r2, #0]
 80061a6:	6812      	ldr	r2, [r2, #0]
 80061a8:	429a      	cmp	r2, r3
 80061aa:	d011      	beq.n	80061d0 <ai_platform_network_destroy+0x16c>
 80061ac:	e7fe      	b.n	80061ac <ai_platform_network_destroy+0x148>
 80061ae:	e7fe      	b.n	80061ae <ai_platform_network_destroy+0x14a>
 80061b0:	4a2f      	ldr	r2, [pc, #188]	; (8006270 <ai_platform_network_destroy+0x20c>)
 80061b2:	2301      	movs	r3, #1
 80061b4:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80061b8:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 80061bc:	2b00      	cmp	r3, #0
 80061be:	d1fb      	bne.n	80061b8 <ai_platform_network_destroy+0x154>
 80061c0:	4929      	ldr	r1, [pc, #164]	; (8006268 <ai_platform_network_destroy+0x204>)
 80061c2:	4b2a      	ldr	r3, [pc, #168]	; (800626c <ai_platform_network_destroy+0x208>)
 80061c4:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 80061c8:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 80061cc:	429a      	cmp	r2, r3
 80061ce:	d106      	bne.n	80061de <ai_platform_network_destroy+0x17a>
 80061d0:	f7fe fc8c 	bl	8004aec <_ai_platform_release_crc>
 80061d4:	4620      	mov	r0, r4
 80061d6:	f001 fb5f 	bl	8007898 <ai_layers_destroy_all>
 80061da:	2000      	movs	r0, #0
 80061dc:	bd10      	pop	{r4, pc}
 80061de:	e7fe      	b.n	80061de <ai_platform_network_destroy+0x17a>
 80061e0:	4a23      	ldr	r2, [pc, #140]	; (8006270 <ai_platform_network_destroy+0x20c>)
 80061e2:	2301      	movs	r3, #1
 80061e4:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80061e8:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 80061ec:	2b00      	cmp	r3, #0
 80061ee:	d1fb      	bne.n	80061e8 <ai_platform_network_destroy+0x184>
 80061f0:	491d      	ldr	r1, [pc, #116]	; (8006268 <ai_platform_network_destroy+0x204>)
 80061f2:	4b1e      	ldr	r3, [pc, #120]	; (800626c <ai_platform_network_destroy+0x208>)
 80061f4:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 80061f8:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 80061fc:	429a      	cmp	r2, r3
 80061fe:	d0c5      	beq.n	800618c <ai_platform_network_destroy+0x128>
 8006200:	e7fe      	b.n	8006200 <ai_platform_network_destroy+0x19c>
 8006202:	4a1b      	ldr	r2, [pc, #108]	; (8006270 <ai_platform_network_destroy+0x20c>)
 8006204:	2301      	movs	r3, #1
 8006206:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 800620a:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 800620e:	2b00      	cmp	r3, #0
 8006210:	d1fb      	bne.n	800620a <ai_platform_network_destroy+0x1a6>
 8006212:	4915      	ldr	r1, [pc, #84]	; (8006268 <ai_platform_network_destroy+0x204>)
 8006214:	4b15      	ldr	r3, [pc, #84]	; (800626c <ai_platform_network_destroy+0x208>)
 8006216:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 800621a:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 800621e:	429a      	cmp	r2, r3
 8006220:	d0d6      	beq.n	80061d0 <ai_platform_network_destroy+0x16c>
 8006222:	e7fe      	b.n	8006222 <ai_platform_network_destroy+0x1be>
 8006224:	4a0f      	ldr	r2, [pc, #60]	; (8006264 <ai_platform_network_destroy+0x200>)
 8006226:	2301      	movs	r3, #1
 8006228:	6093      	str	r3, [r2, #8]
 800622a:	6893      	ldr	r3, [r2, #8]
 800622c:	2b00      	cmp	r3, #0
 800622e:	d1fc      	bne.n	800622a <ai_platform_network_destroy+0x1c6>
 8006230:	490d      	ldr	r1, [pc, #52]	; (8006268 <ai_platform_network_destroy+0x204>)
 8006232:	4b0e      	ldr	r3, [pc, #56]	; (800626c <ai_platform_network_destroy+0x208>)
 8006234:	6011      	str	r1, [r2, #0]
 8006236:	6812      	ldr	r2, [r2, #0]
 8006238:	429a      	cmp	r2, r3
 800623a:	d0a7      	beq.n	800618c <ai_platform_network_destroy+0x128>
 800623c:	e7fe      	b.n	800623c <ai_platform_network_destroy+0x1d8>
 800623e:	4a09      	ldr	r2, [pc, #36]	; (8006264 <ai_platform_network_destroy+0x200>)
 8006240:	2301      	movs	r3, #1
 8006242:	6093      	str	r3, [r2, #8]
 8006244:	6893      	ldr	r3, [r2, #8]
 8006246:	2b00      	cmp	r3, #0
 8006248:	d1fc      	bne.n	8006244 <ai_platform_network_destroy+0x1e0>
 800624a:	4907      	ldr	r1, [pc, #28]	; (8006268 <ai_platform_network_destroy+0x204>)
 800624c:	4b07      	ldr	r3, [pc, #28]	; (800626c <ai_platform_network_destroy+0x208>)
 800624e:	6011      	str	r1, [r2, #0]
 8006250:	6812      	ldr	r2, [r2, #0]
 8006252:	429a      	cmp	r2, r3
 8006254:	d0bc      	beq.n	80061d0 <ai_platform_network_destroy+0x16c>
 8006256:	e7fe      	b.n	8006256 <ai_platform_network_destroy+0x1f2>
 8006258:	a1c00100 	.word	0xa1c00100
 800625c:	e0042000 	.word	0xe0042000
 8006260:	5c001000 	.word	0x5c001000
 8006264:	40023000 	.word	0x40023000
 8006268:	f407a5c2 	.word	0xf407a5c2
 800626c:	b5e8b5cd 	.word	0xb5e8b5cd
 8006270:	58024000 	.word	0x58024000

08006274 <ai_platform_network_init>:
 8006274:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006278:	2800      	cmp	r0, #0
 800627a:	d052      	beq.n	8006322 <ai_platform_network_init+0xae>
 800627c:	4bab      	ldr	r3, [pc, #684]	; (800652c <ai_platform_network_init+0x2b8>)
 800627e:	4604      	mov	r4, r0
 8006280:	6802      	ldr	r2, [r0, #0]
 8006282:	429a      	cmp	r2, r3
 8006284:	d14d      	bne.n	8006322 <ai_platform_network_init+0xae>
 8006286:	460d      	mov	r5, r1
 8006288:	f7fe fc2e 	bl	8004ae8 <_ai_platform_acquire_crc>
 800628c:	4ba8      	ldr	r3, [pc, #672]	; (8006530 <ai_platform_network_init+0x2bc>)
 800628e:	f46f 628a 	mvn.w	r2, #1104	; 0x450
 8006292:	681b      	ldr	r3, [r3, #0]
 8006294:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006298:	189a      	adds	r2, r3, r2
 800629a:	2a01      	cmp	r2, #1
 800629c:	f240 809b 	bls.w	80063d6 <ai_platform_network_init+0x162>
 80062a0:	f240 4249 	movw	r2, #1097	; 0x449
 80062a4:	4293      	cmp	r3, r2
 80062a6:	f000 8096 	beq.w	80063d6 <ai_platform_network_init+0x162>
 80062aa:	4aa2      	ldr	r2, [pc, #648]	; (8006534 <ai_platform_network_init+0x2c0>)
 80062ac:	6813      	ldr	r3, [r2, #0]
 80062ae:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80062b2:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 80062b6:	f000 809d 	beq.w	80063f4 <ai_platform_network_init+0x180>
 80062ba:	6813      	ldr	r3, [r2, #0]
 80062bc:	f240 4183 	movw	r1, #1155	; 0x483
 80062c0:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80062c4:	428b      	cmp	r3, r1
 80062c6:	f000 80e4 	beq.w	8006492 <ai_platform_network_init+0x21e>
 80062ca:	6813      	ldr	r3, [r2, #0]
 80062cc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80062d0:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 80062d4:	f000 811b 	beq.w	800650e <ai_platform_network_init+0x29a>
 80062d8:	6813      	ldr	r3, [r2, #0]
 80062da:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80062de:	2b00      	cmp	r3, #0
 80062e0:	f000 80f9 	beq.w	80064d6 <ai_platform_network_init+0x262>
 80062e4:	f7fe fc02 	bl	8004aec <_ai_platform_release_crc>
 80062e8:	2d00      	cmp	r5, #0
 80062ea:	f000 8147 	beq.w	800657c <ai_platform_network_init+0x308>
 80062ee:	4b92      	ldr	r3, [pc, #584]	; (8006538 <ai_platform_network_init+0x2c4>)
 80062f0:	682a      	ldr	r2, [r5, #0]
 80062f2:	429a      	cmp	r2, r3
 80062f4:	f040 8090 	bne.w	8006418 <ai_platform_network_init+0x1a4>
 80062f8:	692b      	ldr	r3, [r5, #16]
 80062fa:	89ae      	ldrh	r6, [r5, #12]
 80062fc:	f8b5 c00e 	ldrh.w	ip, [r5, #14]
 8006300:	e9d5 1201 	ldrd	r1, r2, [r5, #4]
 8006304:	62a3      	str	r3, [r4, #40]	; 0x28
 8006306:	e9c4 1207 	strd	r1, r2, [r4, #28]
 800630a:	2303      	movs	r3, #3
 800630c:	84a6      	strh	r6, [r4, #36]	; 0x24
 800630e:	4626      	mov	r6, r4
 8006310:	4620      	mov	r0, r4
 8006312:	f8a4 c026 	strh.w	ip, [r4, #38]	; 0x26
 8006316:	60e3      	str	r3, [r4, #12]
 8006318:	f001 fa54 	bl	80077c4 <ai_layers_init_all>
 800631c:	4630      	mov	r0, r6
 800631e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006322:	f7fe fbe1 	bl	8004ae8 <_ai_platform_acquire_crc>
 8006326:	4b82      	ldr	r3, [pc, #520]	; (8006530 <ai_platform_network_init+0x2bc>)
 8006328:	f46f 618a 	mvn.w	r1, #1104	; 0x450
 800632c:	681b      	ldr	r3, [r3, #0]
 800632e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006332:	185a      	adds	r2, r3, r1
 8006334:	2a01      	cmp	r2, #1
 8006336:	d92b      	bls.n	8006390 <ai_platform_network_init+0x11c>
 8006338:	f240 4249 	movw	r2, #1097	; 0x449
 800633c:	4293      	cmp	r3, r2
 800633e:	d027      	beq.n	8006390 <ai_platform_network_init+0x11c>
 8006340:	4a7c      	ldr	r2, [pc, #496]	; (8006534 <ai_platform_network_init+0x2c0>)
 8006342:	6813      	ldr	r3, [r2, #0]
 8006344:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006348:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 800634c:	d02d      	beq.n	80063aa <ai_platform_network_init+0x136>
 800634e:	6813      	ldr	r3, [r2, #0]
 8006350:	f240 4183 	movw	r1, #1155	; 0x483
 8006354:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006358:	428b      	cmp	r3, r1
 800635a:	f000 8089 	beq.w	8006470 <ai_platform_network_init+0x1fc>
 800635e:	6813      	ldr	r3, [r2, #0]
 8006360:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006364:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 8006368:	f000 80c3 	beq.w	80064f2 <ai_platform_network_init+0x27e>
 800636c:	6813      	ldr	r3, [r2, #0]
 800636e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006372:	2b00      	cmp	r3, #0
 8006374:	d129      	bne.n	80063ca <ai_platform_network_init+0x156>
 8006376:	4a71      	ldr	r2, [pc, #452]	; (800653c <ai_platform_network_init+0x2c8>)
 8006378:	2301      	movs	r3, #1
 800637a:	6093      	str	r3, [r2, #8]
 800637c:	6893      	ldr	r3, [r2, #8]
 800637e:	2b00      	cmp	r3, #0
 8006380:	d1fc      	bne.n	800637c <ai_platform_network_init+0x108>
 8006382:	496f      	ldr	r1, [pc, #444]	; (8006540 <ai_platform_network_init+0x2cc>)
 8006384:	4b6f      	ldr	r3, [pc, #444]	; (8006544 <ai_platform_network_init+0x2d0>)
 8006386:	6011      	str	r1, [r2, #0]
 8006388:	6812      	ldr	r2, [r2, #0]
 800638a:	429a      	cmp	r2, r3
 800638c:	d01d      	beq.n	80063ca <ai_platform_network_init+0x156>
 800638e:	e7fe      	b.n	800638e <ai_platform_network_init+0x11a>
 8006390:	4a6a      	ldr	r2, [pc, #424]	; (800653c <ai_platform_network_init+0x2c8>)
 8006392:	2301      	movs	r3, #1
 8006394:	6093      	str	r3, [r2, #8]
 8006396:	6893      	ldr	r3, [r2, #8]
 8006398:	2b00      	cmp	r3, #0
 800639a:	d1fc      	bne.n	8006396 <ai_platform_network_init+0x122>
 800639c:	4968      	ldr	r1, [pc, #416]	; (8006540 <ai_platform_network_init+0x2cc>)
 800639e:	4b69      	ldr	r3, [pc, #420]	; (8006544 <ai_platform_network_init+0x2d0>)
 80063a0:	6011      	str	r1, [r2, #0]
 80063a2:	6812      	ldr	r2, [r2, #0]
 80063a4:	429a      	cmp	r2, r3
 80063a6:	d010      	beq.n	80063ca <ai_platform_network_init+0x156>
 80063a8:	e7fe      	b.n	80063a8 <ai_platform_network_init+0x134>
 80063aa:	4a67      	ldr	r2, [pc, #412]	; (8006548 <ai_platform_network_init+0x2d4>)
 80063ac:	2301      	movs	r3, #1
 80063ae:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80063b2:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 80063b6:	2b00      	cmp	r3, #0
 80063b8:	d1fb      	bne.n	80063b2 <ai_platform_network_init+0x13e>
 80063ba:	4961      	ldr	r1, [pc, #388]	; (8006540 <ai_platform_network_init+0x2cc>)
 80063bc:	4b61      	ldr	r3, [pc, #388]	; (8006544 <ai_platform_network_init+0x2d0>)
 80063be:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 80063c2:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 80063c6:	429a      	cmp	r2, r3
 80063c8:	d113      	bne.n	80063f2 <ai_platform_network_init+0x17e>
 80063ca:	2600      	movs	r6, #0
 80063cc:	f7fe fb8e 	bl	8004aec <_ai_platform_release_crc>
 80063d0:	4630      	mov	r0, r6
 80063d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80063d6:	4a59      	ldr	r2, [pc, #356]	; (800653c <ai_platform_network_init+0x2c8>)
 80063d8:	2301      	movs	r3, #1
 80063da:	6093      	str	r3, [r2, #8]
 80063dc:	6893      	ldr	r3, [r2, #8]
 80063de:	2b00      	cmp	r3, #0
 80063e0:	d1fc      	bne.n	80063dc <ai_platform_network_init+0x168>
 80063e2:	4b57      	ldr	r3, [pc, #348]	; (8006540 <ai_platform_network_init+0x2cc>)
 80063e4:	6013      	str	r3, [r2, #0]
 80063e6:	4b57      	ldr	r3, [pc, #348]	; (8006544 <ai_platform_network_init+0x2d0>)
 80063e8:	6812      	ldr	r2, [r2, #0]
 80063ea:	429a      	cmp	r2, r3
 80063ec:	f43f af7a 	beq.w	80062e4 <ai_platform_network_init+0x70>
 80063f0:	e7fe      	b.n	80063f0 <ai_platform_network_init+0x17c>
 80063f2:	e7fe      	b.n	80063f2 <ai_platform_network_init+0x17e>
 80063f4:	4a54      	ldr	r2, [pc, #336]	; (8006548 <ai_platform_network_init+0x2d4>)
 80063f6:	2301      	movs	r3, #1
 80063f8:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80063fc:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8006400:	2b00      	cmp	r3, #0
 8006402:	d1fb      	bne.n	80063fc <ai_platform_network_init+0x188>
 8006404:	4b4e      	ldr	r3, [pc, #312]	; (8006540 <ai_platform_network_init+0x2cc>)
 8006406:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 800640a:	4b4e      	ldr	r3, [pc, #312]	; (8006544 <ai_platform_network_init+0x2d0>)
 800640c:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8006410:	429a      	cmp	r2, r3
 8006412:	f43f af67 	beq.w	80062e4 <ai_platform_network_init+0x70>
 8006416:	e7fe      	b.n	8006416 <ai_platform_network_init+0x1a2>
 8006418:	2101      	movs	r1, #1
 800641a:	4628      	mov	r0, r5
 800641c:	f105 081c 	add.w	r8, r5, #28
 8006420:	686e      	ldr	r6, [r5, #4]
 8006422:	f7fe fa79 	bl	8004918 <ai_buffer_get_size>
 8006426:	4607      	mov	r7, r0
 8006428:	2101      	movs	r1, #1
 800642a:	4640      	mov	r0, r8
 800642c:	f8d5 9020 	ldr.w	r9, [r5, #32]
 8006430:	f7fe fa72 	bl	8004918 <ai_buffer_get_size>
 8006434:	2f00      	cmp	r7, #0
 8006436:	d13e      	bne.n	80064b6 <ai_platform_network_init+0x242>
 8006438:	2800      	cmp	r0, #0
 800643a:	f000 808e 	beq.w	800655a <ai_platform_network_init+0x2e6>
 800643e:	f1b9 0f00 	cmp.w	r9, #0
 8006442:	f000 8094 	beq.w	800656e <ai_platform_network_init+0x2fa>
 8006446:	f04f 0c01 	mov.w	ip, #1
 800644a:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800644c:	2600      	movs	r6, #0
 800644e:	83e7      	strh	r7, [r4, #30]
 8006450:	4563      	cmp	r3, ip
 8006452:	83a6      	strh	r6, [r4, #28]
 8006454:	d37a      	bcc.n	800654c <ai_platform_network_init+0x2d8>
 8006456:	f1bc 0f00 	cmp.w	ip, #0
 800645a:	f000 809c 	beq.w	8006596 <ai_platform_network_init+0x322>
 800645e:	6aa5      	ldr	r5, [r4, #40]	; 0x28
 8006460:	e8b8 000f 	ldmia.w	r8!, {r0, r1, r2, r3}
 8006464:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8006466:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800646a:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800646e:	e74c      	b.n	800630a <ai_platform_network_init+0x96>
 8006470:	4a35      	ldr	r2, [pc, #212]	; (8006548 <ai_platform_network_init+0x2d4>)
 8006472:	2301      	movs	r3, #1
 8006474:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8006478:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 800647c:	2b00      	cmp	r3, #0
 800647e:	d1fb      	bne.n	8006478 <ai_platform_network_init+0x204>
 8006480:	492f      	ldr	r1, [pc, #188]	; (8006540 <ai_platform_network_init+0x2cc>)
 8006482:	4b30      	ldr	r3, [pc, #192]	; (8006544 <ai_platform_network_init+0x2d0>)
 8006484:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 8006488:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 800648c:	429a      	cmp	r2, r3
 800648e:	d09c      	beq.n	80063ca <ai_platform_network_init+0x156>
 8006490:	e7fe      	b.n	8006490 <ai_platform_network_init+0x21c>
 8006492:	4a2d      	ldr	r2, [pc, #180]	; (8006548 <ai_platform_network_init+0x2d4>)
 8006494:	2301      	movs	r3, #1
 8006496:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 800649a:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 800649e:	2b00      	cmp	r3, #0
 80064a0:	d1fb      	bne.n	800649a <ai_platform_network_init+0x226>
 80064a2:	4b27      	ldr	r3, [pc, #156]	; (8006540 <ai_platform_network_init+0x2cc>)
 80064a4:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 80064a8:	4b26      	ldr	r3, [pc, #152]	; (8006544 <ai_platform_network_init+0x2d0>)
 80064aa:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 80064ae:	429a      	cmp	r2, r3
 80064b0:	f43f af18 	beq.w	80062e4 <ai_platform_network_init+0x70>
 80064b4:	e7fe      	b.n	80064b4 <ai_platform_network_init+0x240>
 80064b6:	2800      	cmp	r0, #0
 80064b8:	d153      	bne.n	8006562 <ai_platform_network_init+0x2ee>
 80064ba:	4680      	mov	r8, r0
 80064bc:	4684      	mov	ip, r0
 80064be:	2e00      	cmp	r6, #0
 80064c0:	d063      	beq.n	800658a <ai_platform_network_init+0x316>
 80064c2:	8be6      	ldrh	r6, [r4, #30]
 80064c4:	2e00      	cmp	r6, #0
 80064c6:	d168      	bne.n	800659a <ai_platform_network_init+0x326>
 80064c8:	2212      	movs	r2, #18
 80064ca:	2116      	movs	r1, #22
 80064cc:	f104 0010 	add.w	r0, r4, #16
 80064d0:	f000 ffa8 	bl	8007424 <core_set_error>
 80064d4:	e77c      	b.n	80063d0 <ai_platform_network_init+0x15c>
 80064d6:	4a19      	ldr	r2, [pc, #100]	; (800653c <ai_platform_network_init+0x2c8>)
 80064d8:	2301      	movs	r3, #1
 80064da:	6093      	str	r3, [r2, #8]
 80064dc:	6893      	ldr	r3, [r2, #8]
 80064de:	2b00      	cmp	r3, #0
 80064e0:	d1fc      	bne.n	80064dc <ai_platform_network_init+0x268>
 80064e2:	4b17      	ldr	r3, [pc, #92]	; (8006540 <ai_platform_network_init+0x2cc>)
 80064e4:	6013      	str	r3, [r2, #0]
 80064e6:	4b17      	ldr	r3, [pc, #92]	; (8006544 <ai_platform_network_init+0x2d0>)
 80064e8:	6812      	ldr	r2, [r2, #0]
 80064ea:	429a      	cmp	r2, r3
 80064ec:	f43f aefa 	beq.w	80062e4 <ai_platform_network_init+0x70>
 80064f0:	e7fe      	b.n	80064f0 <ai_platform_network_init+0x27c>
 80064f2:	4a12      	ldr	r2, [pc, #72]	; (800653c <ai_platform_network_init+0x2c8>)
 80064f4:	2301      	movs	r3, #1
 80064f6:	6093      	str	r3, [r2, #8]
 80064f8:	6893      	ldr	r3, [r2, #8]
 80064fa:	2b00      	cmp	r3, #0
 80064fc:	d1fc      	bne.n	80064f8 <ai_platform_network_init+0x284>
 80064fe:	4910      	ldr	r1, [pc, #64]	; (8006540 <ai_platform_network_init+0x2cc>)
 8006500:	4b10      	ldr	r3, [pc, #64]	; (8006544 <ai_platform_network_init+0x2d0>)
 8006502:	6011      	str	r1, [r2, #0]
 8006504:	6812      	ldr	r2, [r2, #0]
 8006506:	429a      	cmp	r2, r3
 8006508:	f43f af5f 	beq.w	80063ca <ai_platform_network_init+0x156>
 800650c:	e7fe      	b.n	800650c <ai_platform_network_init+0x298>
 800650e:	4a0b      	ldr	r2, [pc, #44]	; (800653c <ai_platform_network_init+0x2c8>)
 8006510:	2301      	movs	r3, #1
 8006512:	6093      	str	r3, [r2, #8]
 8006514:	6893      	ldr	r3, [r2, #8]
 8006516:	2b00      	cmp	r3, #0
 8006518:	d1fc      	bne.n	8006514 <ai_platform_network_init+0x2a0>
 800651a:	4b09      	ldr	r3, [pc, #36]	; (8006540 <ai_platform_network_init+0x2cc>)
 800651c:	6013      	str	r3, [r2, #0]
 800651e:	4b09      	ldr	r3, [pc, #36]	; (8006544 <ai_platform_network_init+0x2d0>)
 8006520:	6812      	ldr	r2, [r2, #0]
 8006522:	429a      	cmp	r2, r3
 8006524:	f43f aede 	beq.w	80062e4 <ai_platform_network_init+0x70>
 8006528:	e7fe      	b.n	8006528 <ai_platform_network_init+0x2b4>
 800652a:	bf00      	nop
 800652c:	a1c00100 	.word	0xa1c00100
 8006530:	e0042000 	.word	0xe0042000
 8006534:	5c001000 	.word	0x5c001000
 8006538:	a1facade 	.word	0xa1facade
 800653c:	40023000 	.word	0x40023000
 8006540:	f407a5c2 	.word	0xf407a5c2
 8006544:	b5e8b5cd 	.word	0xb5e8b5cd
 8006548:	58024000 	.word	0x58024000
 800654c:	2213      	movs	r2, #19
 800654e:	2116      	movs	r1, #22
 8006550:	f104 0010 	add.w	r0, r4, #16
 8006554:	f000 ff66 	bl	8007424 <core_set_error>
 8006558:	e73a      	b.n	80063d0 <ai_platform_network_init+0x15c>
 800655a:	4607      	mov	r7, r0
 800655c:	4680      	mov	r8, r0
 800655e:	4684      	mov	ip, r0
 8006560:	e773      	b.n	800644a <ai_platform_network_init+0x1d6>
 8006562:	f1b9 0f00 	cmp.w	r9, #0
 8006566:	d002      	beq.n	800656e <ai_platform_network_init+0x2fa>
 8006568:	f04f 0c01 	mov.w	ip, #1
 800656c:	e7a7      	b.n	80064be <ai_platform_network_init+0x24a>
 800656e:	2110      	movs	r1, #16
 8006570:	2213      	movs	r2, #19
 8006572:	2600      	movs	r6, #0
 8006574:	1860      	adds	r0, r4, r1
 8006576:	f000 ff55 	bl	8007424 <core_set_error>
 800657a:	e729      	b.n	80063d0 <ai_platform_network_init+0x15c>
 800657c:	2110      	movs	r1, #16
 800657e:	2211      	movs	r2, #17
 8006580:	462e      	mov	r6, r5
 8006582:	1860      	adds	r0, r4, r1
 8006584:	f000 ff4e 	bl	8007424 <core_set_error>
 8006588:	e722      	b.n	80063d0 <ai_platform_network_init+0x15c>
 800658a:	2110      	movs	r1, #16
 800658c:	2212      	movs	r2, #18
 800658e:	1860      	adds	r0, r4, r1
 8006590:	f000 ff48 	bl	8007424 <core_set_error>
 8006594:	e71c      	b.n	80063d0 <ai_platform_network_init+0x15c>
 8006596:	4666      	mov	r6, ip
 8006598:	e6b7      	b.n	800630a <ai_platform_network_init+0x96>
 800659a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800659c:	6a26      	ldr	r6, [r4, #32]
 800659e:	2701      	movs	r7, #1
 80065a0:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80065a2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80065a6:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 80065aa:	e74e      	b.n	800644a <ai_platform_network_init+0x1d6>

080065ac <ai_platform_network_post_init>:
 80065ac:	b538      	push	{r3, r4, r5, lr}
 80065ae:	2800      	cmp	r0, #0
 80065b0:	d04e      	beq.n	8006650 <ai_platform_network_post_init+0xa4>
 80065b2:	4b8c      	ldr	r3, [pc, #560]	; (80067e4 <ai_platform_network_post_init+0x238>)
 80065b4:	4604      	mov	r4, r0
 80065b6:	6802      	ldr	r2, [r0, #0]
 80065b8:	429a      	cmp	r2, r3
 80065ba:	d149      	bne.n	8006650 <ai_platform_network_post_init+0xa4>
 80065bc:	f7fe fa94 	bl	8004ae8 <_ai_platform_acquire_crc>
 80065c0:	4b89      	ldr	r3, [pc, #548]	; (80067e8 <ai_platform_network_post_init+0x23c>)
 80065c2:	f46f 628a 	mvn.w	r2, #1104	; 0x450
 80065c6:	681b      	ldr	r3, [r3, #0]
 80065c8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80065cc:	189a      	adds	r2, r3, r2
 80065ce:	2a01      	cmp	r2, #1
 80065d0:	f240 8095 	bls.w	80066fe <ai_platform_network_post_init+0x152>
 80065d4:	f240 4249 	movw	r2, #1097	; 0x449
 80065d8:	4293      	cmp	r3, r2
 80065da:	f000 8090 	beq.w	80066fe <ai_platform_network_post_init+0x152>
 80065de:	4a83      	ldr	r2, [pc, #524]	; (80067ec <ai_platform_network_post_init+0x240>)
 80065e0:	6813      	ldr	r3, [r2, #0]
 80065e2:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80065e6:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 80065ea:	f000 8096 	beq.w	800671a <ai_platform_network_post_init+0x16e>
 80065ee:	6813      	ldr	r3, [r2, #0]
 80065f0:	f240 4183 	movw	r1, #1155	; 0x483
 80065f4:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80065f8:	428b      	cmp	r3, r1
 80065fa:	f000 80b8 	beq.w	800676e <ai_platform_network_post_init+0x1c2>
 80065fe:	6813      	ldr	r3, [r2, #0]
 8006600:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006604:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 8006608:	f000 80de 	beq.w	80067c8 <ai_platform_network_post_init+0x21c>
 800660c:	6813      	ldr	r3, [r2, #0]
 800660e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006612:	2b00      	cmp	r3, #0
 8006614:	f000 80bd 	beq.w	8006792 <ai_platform_network_post_init+0x1e6>
 8006618:	f7fe fa68 	bl	8004aec <_ai_platform_release_crc>
 800661c:	68e3      	ldr	r3, [r4, #12]
 800661e:	f013 0502 	ands.w	r5, r3, #2
 8006622:	f000 808c 	beq.w	800673e <ai_platform_network_post_init+0x192>
 8006626:	4620      	mov	r0, r4
 8006628:	f001 f8da 	bl	80077e0 <ai_layers_post_init_all>
 800662c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800662e:	b16b      	cbz	r3, 800664c <ai_platform_network_post_init+0xa0>
 8006630:	6b65      	ldr	r5, [r4, #52]	; 0x34
 8006632:	e007      	b.n	8006644 <ai_platform_network_post_init+0x98>
 8006634:	e9d4 320f 	ldrd	r3, r2, [r4, #60]	; 0x3c
 8006638:	4798      	blx	r3
 800663a:	692b      	ldr	r3, [r5, #16]
 800663c:	b133      	cbz	r3, 800664c <ai_platform_network_post_init+0xa0>
 800663e:	42ab      	cmp	r3, r5
 8006640:	461d      	mov	r5, r3
 8006642:	d003      	beq.n	800664c <ai_platform_network_post_init+0xa0>
 8006644:	4629      	mov	r1, r5
 8006646:	2000      	movs	r0, #0
 8006648:	2d00      	cmp	r5, #0
 800664a:	d1f3      	bne.n	8006634 <ai_platform_network_post_init+0x88>
 800664c:	2001      	movs	r0, #1
 800664e:	bd38      	pop	{r3, r4, r5, pc}
 8006650:	f7fe fa4a 	bl	8004ae8 <_ai_platform_acquire_crc>
 8006654:	4b64      	ldr	r3, [pc, #400]	; (80067e8 <ai_platform_network_post_init+0x23c>)
 8006656:	f46f 618a 	mvn.w	r1, #1104	; 0x450
 800665a:	681b      	ldr	r3, [r3, #0]
 800665c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006660:	185a      	adds	r2, r3, r1
 8006662:	2a01      	cmp	r2, #1
 8006664:	d92a      	bls.n	80066bc <ai_platform_network_post_init+0x110>
 8006666:	f240 4249 	movw	r2, #1097	; 0x449
 800666a:	4293      	cmp	r3, r2
 800666c:	d026      	beq.n	80066bc <ai_platform_network_post_init+0x110>
 800666e:	4a5f      	ldr	r2, [pc, #380]	; (80067ec <ai_platform_network_post_init+0x240>)
 8006670:	6813      	ldr	r3, [r2, #0]
 8006672:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006676:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 800667a:	d02c      	beq.n	80066d6 <ai_platform_network_post_init+0x12a>
 800667c:	6813      	ldr	r3, [r2, #0]
 800667e:	f240 4183 	movw	r1, #1155	; 0x483
 8006682:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006686:	428b      	cmp	r3, r1
 8006688:	d060      	beq.n	800674c <ai_platform_network_post_init+0x1a0>
 800668a:	6813      	ldr	r3, [r2, #0]
 800668c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006690:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 8006694:	f000 808b 	beq.w	80067ae <ai_platform_network_post_init+0x202>
 8006698:	6813      	ldr	r3, [r2, #0]
 800669a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800669e:	2b00      	cmp	r3, #0
 80066a0:	d129      	bne.n	80066f6 <ai_platform_network_post_init+0x14a>
 80066a2:	4a53      	ldr	r2, [pc, #332]	; (80067f0 <ai_platform_network_post_init+0x244>)
 80066a4:	2301      	movs	r3, #1
 80066a6:	6093      	str	r3, [r2, #8]
 80066a8:	6893      	ldr	r3, [r2, #8]
 80066aa:	2b00      	cmp	r3, #0
 80066ac:	d1fc      	bne.n	80066a8 <ai_platform_network_post_init+0xfc>
 80066ae:	4951      	ldr	r1, [pc, #324]	; (80067f4 <ai_platform_network_post_init+0x248>)
 80066b0:	4b51      	ldr	r3, [pc, #324]	; (80067f8 <ai_platform_network_post_init+0x24c>)
 80066b2:	6011      	str	r1, [r2, #0]
 80066b4:	6812      	ldr	r2, [r2, #0]
 80066b6:	429a      	cmp	r2, r3
 80066b8:	d01d      	beq.n	80066f6 <ai_platform_network_post_init+0x14a>
 80066ba:	e7fe      	b.n	80066ba <ai_platform_network_post_init+0x10e>
 80066bc:	4a4c      	ldr	r2, [pc, #304]	; (80067f0 <ai_platform_network_post_init+0x244>)
 80066be:	2301      	movs	r3, #1
 80066c0:	6093      	str	r3, [r2, #8]
 80066c2:	6893      	ldr	r3, [r2, #8]
 80066c4:	2b00      	cmp	r3, #0
 80066c6:	d1fc      	bne.n	80066c2 <ai_platform_network_post_init+0x116>
 80066c8:	494a      	ldr	r1, [pc, #296]	; (80067f4 <ai_platform_network_post_init+0x248>)
 80066ca:	4b4b      	ldr	r3, [pc, #300]	; (80067f8 <ai_platform_network_post_init+0x24c>)
 80066cc:	6011      	str	r1, [r2, #0]
 80066ce:	6812      	ldr	r2, [r2, #0]
 80066d0:	429a      	cmp	r2, r3
 80066d2:	d010      	beq.n	80066f6 <ai_platform_network_post_init+0x14a>
 80066d4:	e7fe      	b.n	80066d4 <ai_platform_network_post_init+0x128>
 80066d6:	4a49      	ldr	r2, [pc, #292]	; (80067fc <ai_platform_network_post_init+0x250>)
 80066d8:	2301      	movs	r3, #1
 80066da:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80066de:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 80066e2:	2b00      	cmp	r3, #0
 80066e4:	d1fb      	bne.n	80066de <ai_platform_network_post_init+0x132>
 80066e6:	4943      	ldr	r1, [pc, #268]	; (80067f4 <ai_platform_network_post_init+0x248>)
 80066e8:	4b43      	ldr	r3, [pc, #268]	; (80067f8 <ai_platform_network_post_init+0x24c>)
 80066ea:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 80066ee:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 80066f2:	429a      	cmp	r2, r3
 80066f4:	d110      	bne.n	8006718 <ai_platform_network_post_init+0x16c>
 80066f6:	f7fe f9f9 	bl	8004aec <_ai_platform_release_crc>
 80066fa:	2000      	movs	r0, #0
 80066fc:	bd38      	pop	{r3, r4, r5, pc}
 80066fe:	4a3c      	ldr	r2, [pc, #240]	; (80067f0 <ai_platform_network_post_init+0x244>)
 8006700:	2301      	movs	r3, #1
 8006702:	6093      	str	r3, [r2, #8]
 8006704:	6893      	ldr	r3, [r2, #8]
 8006706:	2b00      	cmp	r3, #0
 8006708:	d1fc      	bne.n	8006704 <ai_platform_network_post_init+0x158>
 800670a:	493a      	ldr	r1, [pc, #232]	; (80067f4 <ai_platform_network_post_init+0x248>)
 800670c:	4b3a      	ldr	r3, [pc, #232]	; (80067f8 <ai_platform_network_post_init+0x24c>)
 800670e:	6011      	str	r1, [r2, #0]
 8006710:	6812      	ldr	r2, [r2, #0]
 8006712:	429a      	cmp	r2, r3
 8006714:	d080      	beq.n	8006618 <ai_platform_network_post_init+0x6c>
 8006716:	e7fe      	b.n	8006716 <ai_platform_network_post_init+0x16a>
 8006718:	e7fe      	b.n	8006718 <ai_platform_network_post_init+0x16c>
 800671a:	4a38      	ldr	r2, [pc, #224]	; (80067fc <ai_platform_network_post_init+0x250>)
 800671c:	2301      	movs	r3, #1
 800671e:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8006722:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8006726:	2b00      	cmp	r3, #0
 8006728:	d1fb      	bne.n	8006722 <ai_platform_network_post_init+0x176>
 800672a:	4932      	ldr	r1, [pc, #200]	; (80067f4 <ai_platform_network_post_init+0x248>)
 800672c:	4b32      	ldr	r3, [pc, #200]	; (80067f8 <ai_platform_network_post_init+0x24c>)
 800672e:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 8006732:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8006736:	429a      	cmp	r2, r3
 8006738:	f43f af6e 	beq.w	8006618 <ai_platform_network_post_init+0x6c>
 800673c:	e7fe      	b.n	800673c <ai_platform_network_post_init+0x190>
 800673e:	2210      	movs	r2, #16
 8006740:	2111      	movs	r1, #17
 8006742:	18a0      	adds	r0, r4, r2
 8006744:	f000 fe6e 	bl	8007424 <core_set_error>
 8006748:	4628      	mov	r0, r5
 800674a:	bd38      	pop	{r3, r4, r5, pc}
 800674c:	4a2b      	ldr	r2, [pc, #172]	; (80067fc <ai_platform_network_post_init+0x250>)
 800674e:	2301      	movs	r3, #1
 8006750:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8006754:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8006758:	2b00      	cmp	r3, #0
 800675a:	d1fb      	bne.n	8006754 <ai_platform_network_post_init+0x1a8>
 800675c:	4925      	ldr	r1, [pc, #148]	; (80067f4 <ai_platform_network_post_init+0x248>)
 800675e:	4b26      	ldr	r3, [pc, #152]	; (80067f8 <ai_platform_network_post_init+0x24c>)
 8006760:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 8006764:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8006768:	429a      	cmp	r2, r3
 800676a:	d0c4      	beq.n	80066f6 <ai_platform_network_post_init+0x14a>
 800676c:	e7fe      	b.n	800676c <ai_platform_network_post_init+0x1c0>
 800676e:	4a23      	ldr	r2, [pc, #140]	; (80067fc <ai_platform_network_post_init+0x250>)
 8006770:	2301      	movs	r3, #1
 8006772:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8006776:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 800677a:	2b00      	cmp	r3, #0
 800677c:	d1fb      	bne.n	8006776 <ai_platform_network_post_init+0x1ca>
 800677e:	491d      	ldr	r1, [pc, #116]	; (80067f4 <ai_platform_network_post_init+0x248>)
 8006780:	4b1d      	ldr	r3, [pc, #116]	; (80067f8 <ai_platform_network_post_init+0x24c>)
 8006782:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 8006786:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 800678a:	429a      	cmp	r2, r3
 800678c:	f43f af44 	beq.w	8006618 <ai_platform_network_post_init+0x6c>
 8006790:	e7fe      	b.n	8006790 <ai_platform_network_post_init+0x1e4>
 8006792:	4a17      	ldr	r2, [pc, #92]	; (80067f0 <ai_platform_network_post_init+0x244>)
 8006794:	2301      	movs	r3, #1
 8006796:	6093      	str	r3, [r2, #8]
 8006798:	6893      	ldr	r3, [r2, #8]
 800679a:	2b00      	cmp	r3, #0
 800679c:	d1fc      	bne.n	8006798 <ai_platform_network_post_init+0x1ec>
 800679e:	4915      	ldr	r1, [pc, #84]	; (80067f4 <ai_platform_network_post_init+0x248>)
 80067a0:	4b15      	ldr	r3, [pc, #84]	; (80067f8 <ai_platform_network_post_init+0x24c>)
 80067a2:	6011      	str	r1, [r2, #0]
 80067a4:	6812      	ldr	r2, [r2, #0]
 80067a6:	429a      	cmp	r2, r3
 80067a8:	f43f af36 	beq.w	8006618 <ai_platform_network_post_init+0x6c>
 80067ac:	e7fe      	b.n	80067ac <ai_platform_network_post_init+0x200>
 80067ae:	4a10      	ldr	r2, [pc, #64]	; (80067f0 <ai_platform_network_post_init+0x244>)
 80067b0:	2301      	movs	r3, #1
 80067b2:	6093      	str	r3, [r2, #8]
 80067b4:	6893      	ldr	r3, [r2, #8]
 80067b6:	2b00      	cmp	r3, #0
 80067b8:	d1fc      	bne.n	80067b4 <ai_platform_network_post_init+0x208>
 80067ba:	490e      	ldr	r1, [pc, #56]	; (80067f4 <ai_platform_network_post_init+0x248>)
 80067bc:	4b0e      	ldr	r3, [pc, #56]	; (80067f8 <ai_platform_network_post_init+0x24c>)
 80067be:	6011      	str	r1, [r2, #0]
 80067c0:	6812      	ldr	r2, [r2, #0]
 80067c2:	429a      	cmp	r2, r3
 80067c4:	d097      	beq.n	80066f6 <ai_platform_network_post_init+0x14a>
 80067c6:	e7fe      	b.n	80067c6 <ai_platform_network_post_init+0x21a>
 80067c8:	4a09      	ldr	r2, [pc, #36]	; (80067f0 <ai_platform_network_post_init+0x244>)
 80067ca:	2301      	movs	r3, #1
 80067cc:	6093      	str	r3, [r2, #8]
 80067ce:	6893      	ldr	r3, [r2, #8]
 80067d0:	2b00      	cmp	r3, #0
 80067d2:	d1fc      	bne.n	80067ce <ai_platform_network_post_init+0x222>
 80067d4:	4907      	ldr	r1, [pc, #28]	; (80067f4 <ai_platform_network_post_init+0x248>)
 80067d6:	4b08      	ldr	r3, [pc, #32]	; (80067f8 <ai_platform_network_post_init+0x24c>)
 80067d8:	6011      	str	r1, [r2, #0]
 80067da:	6812      	ldr	r2, [r2, #0]
 80067dc:	429a      	cmp	r2, r3
 80067de:	f43f af1b 	beq.w	8006618 <ai_platform_network_post_init+0x6c>
 80067e2:	e7fe      	b.n	80067e2 <ai_platform_network_post_init+0x236>
 80067e4:	a1c00100 	.word	0xa1c00100
 80067e8:	e0042000 	.word	0xe0042000
 80067ec:	5c001000 	.word	0x5c001000
 80067f0:	40023000 	.word	0x40023000
 80067f4:	f407a5c2 	.word	0xf407a5c2
 80067f8:	b5e8b5cd 	.word	0xb5e8b5cd
 80067fc:	58024000 	.word	0x58024000

08006800 <ai_platform_network_process>:
 8006800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006804:	b085      	sub	sp, #20
 8006806:	460e      	mov	r6, r1
 8006808:	4605      	mov	r5, r0
 800680a:	9201      	str	r2, [sp, #4]
 800680c:	b120      	cbz	r0, 8006818 <ai_platform_network_process+0x18>
 800680e:	4b24      	ldr	r3, [pc, #144]	; (80068a0 <ai_platform_network_process+0xa0>)
 8006810:	6802      	ldr	r2, [r0, #0]
 8006812:	429a      	cmp	r2, r3
 8006814:	bf18      	it	ne
 8006816:	2500      	movne	r5, #0
 8006818:	f7fe f966 	bl	8004ae8 <_ai_platform_acquire_crc>
 800681c:	4b21      	ldr	r3, [pc, #132]	; (80068a4 <ai_platform_network_process+0xa4>)
 800681e:	f46f 618a 	mvn.w	r1, #1104	; 0x450
 8006822:	681b      	ldr	r3, [r3, #0]
 8006824:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006828:	185a      	adds	r2, r3, r1
 800682a:	2a01      	cmp	r2, #1
 800682c:	d92b      	bls.n	8006886 <ai_platform_network_process+0x86>
 800682e:	f240 4249 	movw	r2, #1097	; 0x449
 8006832:	4293      	cmp	r3, r2
 8006834:	d027      	beq.n	8006886 <ai_platform_network_process+0x86>
 8006836:	4a1c      	ldr	r2, [pc, #112]	; (80068a8 <ai_platform_network_process+0xa8>)
 8006838:	6813      	ldr	r3, [r2, #0]
 800683a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800683e:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8006842:	d039      	beq.n	80068b8 <ai_platform_network_process+0xb8>
 8006844:	6813      	ldr	r3, [r2, #0]
 8006846:	f240 4183 	movw	r1, #1155	; 0x483
 800684a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800684e:	428b      	cmp	r3, r1
 8006850:	f000 819c 	beq.w	8006b8c <ai_platform_network_process+0x38c>
 8006854:	6813      	ldr	r3, [r2, #0]
 8006856:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800685a:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 800685e:	f000 8179 	beq.w	8006b54 <ai_platform_network_process+0x354>
 8006862:	6813      	ldr	r3, [r2, #0]
 8006864:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006868:	2b00      	cmp	r3, #0
 800686a:	d136      	bne.n	80068da <ai_platform_network_process+0xda>
 800686c:	4a0f      	ldr	r2, [pc, #60]	; (80068ac <ai_platform_network_process+0xac>)
 800686e:	2301      	movs	r3, #1
 8006870:	6093      	str	r3, [r2, #8]
 8006872:	6893      	ldr	r3, [r2, #8]
 8006874:	2b00      	cmp	r3, #0
 8006876:	d1fc      	bne.n	8006872 <ai_platform_network_process+0x72>
 8006878:	4b0d      	ldr	r3, [pc, #52]	; (80068b0 <ai_platform_network_process+0xb0>)
 800687a:	6013      	str	r3, [r2, #0]
 800687c:	4b0d      	ldr	r3, [pc, #52]	; (80068b4 <ai_platform_network_process+0xb4>)
 800687e:	6812      	ldr	r2, [r2, #0]
 8006880:	429a      	cmp	r2, r3
 8006882:	d02a      	beq.n	80068da <ai_platform_network_process+0xda>
 8006884:	e7fe      	b.n	8006884 <ai_platform_network_process+0x84>
 8006886:	4a09      	ldr	r2, [pc, #36]	; (80068ac <ai_platform_network_process+0xac>)
 8006888:	2301      	movs	r3, #1
 800688a:	6093      	str	r3, [r2, #8]
 800688c:	6893      	ldr	r3, [r2, #8]
 800688e:	2b00      	cmp	r3, #0
 8006890:	d1fc      	bne.n	800688c <ai_platform_network_process+0x8c>
 8006892:	4b07      	ldr	r3, [pc, #28]	; (80068b0 <ai_platform_network_process+0xb0>)
 8006894:	6013      	str	r3, [r2, #0]
 8006896:	4b07      	ldr	r3, [pc, #28]	; (80068b4 <ai_platform_network_process+0xb4>)
 8006898:	6812      	ldr	r2, [r2, #0]
 800689a:	429a      	cmp	r2, r3
 800689c:	d01d      	beq.n	80068da <ai_platform_network_process+0xda>
 800689e:	e7fe      	b.n	800689e <ai_platform_network_process+0x9e>
 80068a0:	a1c00100 	.word	0xa1c00100
 80068a4:	e0042000 	.word	0xe0042000
 80068a8:	5c001000 	.word	0x5c001000
 80068ac:	40023000 	.word	0x40023000
 80068b0:	f407a5c2 	.word	0xf407a5c2
 80068b4:	b5e8b5cd 	.word	0xb5e8b5cd
 80068b8:	4ab0      	ldr	r2, [pc, #704]	; (8006b7c <ai_platform_network_process+0x37c>)
 80068ba:	2301      	movs	r3, #1
 80068bc:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80068c0:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 80068c4:	2b00      	cmp	r3, #0
 80068c6:	d1fb      	bne.n	80068c0 <ai_platform_network_process+0xc0>
 80068c8:	4bad      	ldr	r3, [pc, #692]	; (8006b80 <ai_platform_network_process+0x380>)
 80068ca:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 80068ce:	4bad      	ldr	r3, [pc, #692]	; (8006b84 <ai_platform_network_process+0x384>)
 80068d0:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 80068d4:	429a      	cmp	r2, r3
 80068d6:	f040 812b 	bne.w	8006b30 <ai_platform_network_process+0x330>
 80068da:	f7fe f907 	bl	8004aec <_ai_platform_release_crc>
 80068de:	2d00      	cmp	r5, #0
 80068e0:	f000 8172 	beq.w	8006bc8 <ai_platform_network_process+0x3c8>
 80068e4:	8dab      	ldrh	r3, [r5, #44]	; 0x2c
 80068e6:	2b00      	cmp	r3, #0
 80068e8:	f000 8123 	beq.w	8006b32 <ai_platform_network_process+0x332>
 80068ec:	68eb      	ldr	r3, [r5, #12]
 80068ee:	2200      	movs	r2, #0
 80068f0:	f8d5 8030 	ldr.w	r8, [r5, #48]	; 0x30
 80068f4:	f003 0303 	and.w	r3, r3, #3
 80068f8:	616a      	str	r2, [r5, #20]
 80068fa:	2b03      	cmp	r3, #3
 80068fc:	f040 811f 	bne.w	8006b3e <ai_platform_network_process+0x33e>
 8006900:	2e00      	cmp	r6, #0
 8006902:	f000 8156 	beq.w	8006bb2 <ai_platform_network_process+0x3b2>
 8006906:	fab8 f788 	clz	r7, r8
 800690a:	097f      	lsrs	r7, r7, #5
 800690c:	f1b8 0f00 	cmp.w	r8, #0
 8006910:	f000 814f 	beq.w	8006bb2 <ai_platform_network_process+0x3b2>
 8006914:	f8b8 3000 	ldrh.w	r3, [r8]
 8006918:	2b00      	cmp	r3, #0
 800691a:	f000 814a 	beq.w	8006bb2 <ai_platform_network_process+0x3b2>
 800691e:	69b3      	ldr	r3, [r6, #24]
 8006920:	681b      	ldr	r3, [r3, #0]
 8006922:	e9cd 3502 	strd	r3, r5, [sp, #8]
 8006926:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800692a:	2b00      	cmp	r3, #0
 800692c:	d072      	beq.n	8006a14 <ai_platform_network_process+0x214>
 800692e:	f853 4027 	ldr.w	r4, [r3, r7, lsl #2]
 8006932:	2c00      	cmp	r4, #0
 8006934:	d06e      	beq.n	8006a14 <ai_platform_network_process+0x214>
 8006936:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800693a:	ea4f 1b07 	mov.w	fp, r7, lsl #4
 800693e:	f8d3 a000 	ldr.w	sl, [r3]
 8006942:	eb1a 1907 	adds.w	r9, sl, r7, lsl #4
 8006946:	f000 8133 	beq.w	8006bb0 <ai_platform_network_process+0x3b0>
 800694a:	69a3      	ldr	r3, [r4, #24]
 800694c:	2101      	movs	r1, #1
 800694e:	4630      	mov	r0, r6
 8006950:	685d      	ldr	r5, [r3, #4]
 8006952:	f7fd ffe1 	bl	8004918 <ai_buffer_get_size>
 8006956:	4285      	cmp	r5, r0
 8006958:	f0c0 8138 	bcc.w	8006bcc <ai_platform_network_process+0x3cc>
 800695c:	68e0      	ldr	r0, [r4, #12]
 800695e:	69b1      	ldr	r1, [r6, #24]
 8006960:	68c2      	ldr	r2, [r0, #12]
 8006962:	68cb      	ldr	r3, [r1, #12]
 8006964:	429a      	cmp	r2, r3
 8006966:	f040 8131 	bne.w	8006bcc <ai_platform_network_process+0x3cc>
 800696a:	6882      	ldr	r2, [r0, #8]
 800696c:	688b      	ldr	r3, [r1, #8]
 800696e:	429a      	cmp	r2, r3
 8006970:	f040 812c 	bne.w	8006bcc <ai_platform_network_process+0x3cc>
 8006974:	6842      	ldr	r2, [r0, #4]
 8006976:	684b      	ldr	r3, [r1, #4]
 8006978:	429a      	cmp	r2, r3
 800697a:	f040 8127 	bne.w	8006bcc <ai_platform_network_process+0x3cc>
 800697e:	69a3      	ldr	r3, [r4, #24]
 8006980:	e9d3 0100 	ldrd	r0, r1, [r3]
 8006984:	f007 ffdc 	bl	800e940 <ai_array_get_data_byte_size>
 8006988:	4605      	mov	r5, r0
 800698a:	4620      	mov	r0, r4
 800698c:	f008 f800 	bl	800e990 <get_tensor_byte_size>
 8006990:	4285      	cmp	r5, r0
 8006992:	f0c0 811b 	bcc.w	8006bcc <ai_platform_network_process+0x3cc>
 8006996:	69a3      	ldr	r3, [r4, #24]
 8006998:	6818      	ldr	r0, [r3, #0]
 800699a:	f007 ff3d 	bl	800e818 <ai_array_to_buffer_fmt>
 800699e:	6833      	ldr	r3, [r6, #0]
 80069a0:	4058      	eors	r0, r3
 80069a2:	f030 407e 	bics.w	r0, r0, #4261412864	; 0xfe000000
 80069a6:	f040 81c8 	bne.w	8006d3a <ai_platform_network_process+0x53a>
 80069aa:	6873      	ldr	r3, [r6, #4]
 80069ac:	2b00      	cmp	r3, #0
 80069ae:	f000 81bb 	beq.w	8006d28 <ai_platform_network_process+0x528>
 80069b2:	69b3      	ldr	r3, [r6, #24]
 80069b4:	681b      	ldr	r3, [r3, #0]
 80069b6:	2b00      	cmp	r3, #0
 80069b8:	f000 81c8 	beq.w	8006d4c <ai_platform_network_process+0x54c>
 80069bc:	9a02      	ldr	r2, [sp, #8]
 80069be:	4620      	mov	r0, r4
 80069c0:	3701      	adds	r7, #1
 80069c2:	361c      	adds	r6, #28
 80069c4:	429a      	cmp	r2, r3
 80069c6:	bf38      	it	cc
 80069c8:	461a      	movcc	r2, r3
 80069ca:	9202      	str	r2, [sp, #8]
 80069cc:	f007 ffe0 	bl	800e990 <get_tensor_byte_size>
 80069d0:	f8c9 0008 	str.w	r0, [r9, #8]
 80069d4:	f856 3c04 	ldr.w	r3, [r6, #-4]
 80069d8:	681b      	ldr	r3, [r3, #0]
 80069da:	fb00 f303 	mul.w	r3, r0, r3
 80069de:	f8c9 300c 	str.w	r3, [r9, #12]
 80069e2:	f856 1c18 	ldr.w	r1, [r6, #-24]
 80069e6:	440b      	add	r3, r1
 80069e8:	f8c9 1004 	str.w	r1, [r9, #4]
 80069ec:	f84a 300b 	str.w	r3, [sl, fp]
 80069f0:	69a0      	ldr	r0, [r4, #24]
 80069f2:	6803      	ldr	r3, [r0, #0]
 80069f4:	009a      	lsls	r2, r3, #2
 80069f6:	f100 80bb 	bmi.w	8006b70 <ai_platform_network_process+0x370>
 80069fa:	e9d0 3202 	ldrd	r3, r2, [r0, #8]
 80069fe:	1a9b      	subs	r3, r3, r2
 8006a00:	4419      	add	r1, r3
 8006a02:	6081      	str	r1, [r0, #8]
 8006a04:	69a3      	ldr	r3, [r4, #24]
 8006a06:	f8d9 2004 	ldr.w	r2, [r9, #4]
 8006a0a:	60da      	str	r2, [r3, #12]
 8006a0c:	f8b8 3000 	ldrh.w	r3, [r8]
 8006a10:	42bb      	cmp	r3, r7
 8006a12:	d888      	bhi.n	8006926 <ai_platform_network_process+0x126>
 8006a14:	9d03      	ldr	r5, [sp, #12]
 8006a16:	9b01      	ldr	r3, [sp, #4]
 8006a18:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
 8006a1a:	2b00      	cmp	r3, #0
 8006a1c:	f000 819f 	beq.w	8006d5e <ai_platform_network_process+0x55e>
 8006a20:	2a01      	cmp	r2, #1
 8006a22:	f240 8179 	bls.w	8006d18 <ai_platform_network_process+0x518>
 8006a26:	f8d5 9030 	ldr.w	r9, [r5, #48]	; 0x30
 8006a2a:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 8006a2e:	2b00      	cmp	r3, #0
 8006a30:	f000 8172 	beq.w	8006d18 <ai_platform_network_process+0x518>
 8006a34:	9e01      	ldr	r6, [sp, #4]
 8006a36:	2700      	movs	r7, #0
 8006a38:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8006a3c:	2b00      	cmp	r3, #0
 8006a3e:	f000 80d3 	beq.w	8006be8 <ai_platform_network_process+0x3e8>
 8006a42:	f853 4027 	ldr.w	r4, [r3, r7, lsl #2]
 8006a46:	2c00      	cmp	r4, #0
 8006a48:	f000 80ce 	beq.w	8006be8 <ai_platform_network_process+0x3e8>
 8006a4c:	f8d9 3014 	ldr.w	r3, [r9, #20]
 8006a50:	ea4f 1b07 	mov.w	fp, r7, lsl #4
 8006a54:	f8d3 8000 	ldr.w	r8, [r3]
 8006a58:	eb18 1a07 	adds.w	sl, r8, r7, lsl #4
 8006a5c:	f000 819d 	beq.w	8006d9a <ai_platform_network_process+0x59a>
 8006a60:	69a3      	ldr	r3, [r4, #24]
 8006a62:	2101      	movs	r1, #1
 8006a64:	4630      	mov	r0, r6
 8006a66:	685b      	ldr	r3, [r3, #4]
 8006a68:	9301      	str	r3, [sp, #4]
 8006a6a:	f7fd ff55 	bl	8004918 <ai_buffer_get_size>
 8006a6e:	9b01      	ldr	r3, [sp, #4]
 8006a70:	4283      	cmp	r3, r0
 8006a72:	f0c0 8151 	bcc.w	8006d18 <ai_platform_network_process+0x518>
 8006a76:	68e0      	ldr	r0, [r4, #12]
 8006a78:	69b1      	ldr	r1, [r6, #24]
 8006a7a:	68c2      	ldr	r2, [r0, #12]
 8006a7c:	68cb      	ldr	r3, [r1, #12]
 8006a7e:	429a      	cmp	r2, r3
 8006a80:	f040 814a 	bne.w	8006d18 <ai_platform_network_process+0x518>
 8006a84:	6882      	ldr	r2, [r0, #8]
 8006a86:	688b      	ldr	r3, [r1, #8]
 8006a88:	429a      	cmp	r2, r3
 8006a8a:	f040 8145 	bne.w	8006d18 <ai_platform_network_process+0x518>
 8006a8e:	6842      	ldr	r2, [r0, #4]
 8006a90:	684b      	ldr	r3, [r1, #4]
 8006a92:	429a      	cmp	r2, r3
 8006a94:	f040 8140 	bne.w	8006d18 <ai_platform_network_process+0x518>
 8006a98:	69a3      	ldr	r3, [r4, #24]
 8006a9a:	e9d3 0100 	ldrd	r0, r1, [r3]
 8006a9e:	f007 ff4f 	bl	800e940 <ai_array_get_data_byte_size>
 8006aa2:	9001      	str	r0, [sp, #4]
 8006aa4:	4620      	mov	r0, r4
 8006aa6:	f007 ff73 	bl	800e990 <get_tensor_byte_size>
 8006aaa:	9b01      	ldr	r3, [sp, #4]
 8006aac:	4283      	cmp	r3, r0
 8006aae:	f0c0 8133 	bcc.w	8006d18 <ai_platform_network_process+0x518>
 8006ab2:	69a3      	ldr	r3, [r4, #24]
 8006ab4:	6818      	ldr	r0, [r3, #0]
 8006ab6:	f007 feaf 	bl	800e818 <ai_array_to_buffer_fmt>
 8006aba:	6833      	ldr	r3, [r6, #0]
 8006abc:	4058      	eors	r0, r3
 8006abe:	f030 407e 	bics.w	r0, r0, #4261412864	; 0xfe000000
 8006ac2:	f040 815a 	bne.w	8006d7a <ai_platform_network_process+0x57a>
 8006ac6:	6873      	ldr	r3, [r6, #4]
 8006ac8:	2b00      	cmp	r3, #0
 8006aca:	f000 814e 	beq.w	8006d6a <ai_platform_network_process+0x56a>
 8006ace:	69b3      	ldr	r3, [r6, #24]
 8006ad0:	681b      	ldr	r3, [r3, #0]
 8006ad2:	2b00      	cmp	r3, #0
 8006ad4:	f000 8159 	beq.w	8006d8a <ai_platform_network_process+0x58a>
 8006ad8:	9a02      	ldr	r2, [sp, #8]
 8006ada:	4620      	mov	r0, r4
 8006adc:	3701      	adds	r7, #1
 8006ade:	361c      	adds	r6, #28
 8006ae0:	429a      	cmp	r2, r3
 8006ae2:	bf38      	it	cc
 8006ae4:	461a      	movcc	r2, r3
 8006ae6:	9202      	str	r2, [sp, #8]
 8006ae8:	f007 ff52 	bl	800e990 <get_tensor_byte_size>
 8006aec:	f8ca 0008 	str.w	r0, [sl, #8]
 8006af0:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8006af4:	681b      	ldr	r3, [r3, #0]
 8006af6:	fb00 f303 	mul.w	r3, r0, r3
 8006afa:	f8ca 300c 	str.w	r3, [sl, #12]
 8006afe:	f856 1c18 	ldr.w	r1, [r6, #-24]
 8006b02:	440b      	add	r3, r1
 8006b04:	f8ca 1004 	str.w	r1, [sl, #4]
 8006b08:	f848 300b 	str.w	r3, [r8, fp]
 8006b0c:	69a0      	ldr	r0, [r4, #24]
 8006b0e:	6803      	ldr	r3, [r0, #0]
 8006b10:	009b      	lsls	r3, r3, #2
 8006b12:	d464      	bmi.n	8006bde <ai_platform_network_process+0x3de>
 8006b14:	e9d0 3202 	ldrd	r3, r2, [r0, #8]
 8006b18:	1a9b      	subs	r3, r3, r2
 8006b1a:	4419      	add	r1, r3
 8006b1c:	6081      	str	r1, [r0, #8]
 8006b1e:	69a3      	ldr	r3, [r4, #24]
 8006b20:	f8da 2004 	ldr.w	r2, [sl, #4]
 8006b24:	60da      	str	r2, [r3, #12]
 8006b26:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 8006b2a:	429f      	cmp	r7, r3
 8006b2c:	d384      	bcc.n	8006a38 <ai_platform_network_process+0x238>
 8006b2e:	e05b      	b.n	8006be8 <ai_platform_network_process+0x3e8>
 8006b30:	e7fe      	b.n	8006b30 <ai_platform_network_process+0x330>
 8006b32:	68ea      	ldr	r2, [r5, #12]
 8006b34:	616b      	str	r3, [r5, #20]
 8006b36:	f002 0203 	and.w	r2, r2, #3
 8006b3a:	2a03      	cmp	r2, #3
 8006b3c:	d039      	beq.n	8006bb2 <ai_platform_network_process+0x3b2>
 8006b3e:	2230      	movs	r2, #48	; 0x30
 8006b40:	2111      	movs	r1, #17
 8006b42:	f105 0010 	add.w	r0, r5, #16
 8006b46:	2400      	movs	r4, #0
 8006b48:	f000 fc6c 	bl	8007424 <core_set_error>
 8006b4c:	4620      	mov	r0, r4
 8006b4e:	b005      	add	sp, #20
 8006b50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006b54:	4a0c      	ldr	r2, [pc, #48]	; (8006b88 <ai_platform_network_process+0x388>)
 8006b56:	2301      	movs	r3, #1
 8006b58:	6093      	str	r3, [r2, #8]
 8006b5a:	6893      	ldr	r3, [r2, #8]
 8006b5c:	2b00      	cmp	r3, #0
 8006b5e:	d1fc      	bne.n	8006b5a <ai_platform_network_process+0x35a>
 8006b60:	4b07      	ldr	r3, [pc, #28]	; (8006b80 <ai_platform_network_process+0x380>)
 8006b62:	6013      	str	r3, [r2, #0]
 8006b64:	4b07      	ldr	r3, [pc, #28]	; (8006b84 <ai_platform_network_process+0x384>)
 8006b66:	6812      	ldr	r2, [r2, #0]
 8006b68:	429a      	cmp	r2, r3
 8006b6a:	f43f aeb6 	beq.w	80068da <ai_platform_network_process+0xda>
 8006b6e:	e7fe      	b.n	8006b6e <ai_platform_network_process+0x36e>
 8006b70:	f8b8 3000 	ldrh.w	r3, [r8]
 8006b74:	429f      	cmp	r7, r3
 8006b76:	f4ff aed6 	bcc.w	8006926 <ai_platform_network_process+0x126>
 8006b7a:	e74b      	b.n	8006a14 <ai_platform_network_process+0x214>
 8006b7c:	58024000 	.word	0x58024000
 8006b80:	f407a5c2 	.word	0xf407a5c2
 8006b84:	b5e8b5cd 	.word	0xb5e8b5cd
 8006b88:	40023000 	.word	0x40023000
 8006b8c:	4a87      	ldr	r2, [pc, #540]	; (8006dac <ai_platform_network_process+0x5ac>)
 8006b8e:	2301      	movs	r3, #1
 8006b90:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8006b94:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8006b98:	2b00      	cmp	r3, #0
 8006b9a:	d1fb      	bne.n	8006b94 <ai_platform_network_process+0x394>
 8006b9c:	4b84      	ldr	r3, [pc, #528]	; (8006db0 <ai_platform_network_process+0x5b0>)
 8006b9e:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 8006ba2:	4b84      	ldr	r3, [pc, #528]	; (8006db4 <ai_platform_network_process+0x5b4>)
 8006ba4:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8006ba8:	429a      	cmp	r2, r3
 8006baa:	f43f ae96 	beq.w	80068da <ai_platform_network_process+0xda>
 8006bae:	e7fe      	b.n	8006bae <ai_platform_network_process+0x3ae>
 8006bb0:	9d03      	ldr	r5, [sp, #12]
 8006bb2:	2400      	movs	r4, #0
 8006bb4:	2217      	movs	r2, #23
 8006bb6:	2112      	movs	r1, #18
 8006bb8:	f105 0010 	add.w	r0, r5, #16
 8006bbc:	f000 fc32 	bl	8007424 <core_set_error>
 8006bc0:	4620      	mov	r0, r4
 8006bc2:	b005      	add	sp, #20
 8006bc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006bc8:	462c      	mov	r4, r5
 8006bca:	e7bf      	b.n	8006b4c <ai_platform_network_process+0x34c>
 8006bcc:	9d03      	ldr	r5, [sp, #12]
 8006bce:	2218      	movs	r2, #24
 8006bd0:	2112      	movs	r1, #18
 8006bd2:	2400      	movs	r4, #0
 8006bd4:	f105 0010 	add.w	r0, r5, #16
 8006bd8:	f000 fc24 	bl	8007424 <core_set_error>
 8006bdc:	e7b6      	b.n	8006b4c <ai_platform_network_process+0x34c>
 8006bde:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 8006be2:	429f      	cmp	r7, r3
 8006be4:	f4ff af28 	bcc.w	8006a38 <ai_platform_network_process+0x238>
 8006be8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8006bec:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
 8006bee:	82ab      	strh	r3, [r5, #20]
 8006bf0:	2a00      	cmp	r2, #0
 8006bf2:	f040 808b 	bne.w	8006d0c <ai_platform_network_process+0x50c>
 8006bf6:	4616      	mov	r6, r2
 8006bf8:	4617      	mov	r7, r2
 8006bfa:	8aec      	ldrh	r4, [r5, #22]
 8006bfc:	429c      	cmp	r4, r3
 8006bfe:	d2a5      	bcs.n	8006b4c <ai_platform_network_process+0x34c>
 8006c00:	46ab      	mov	fp, r5
 8006c02:	2e00      	cmp	r6, #0
 8006c04:	d030      	beq.n	8006c68 <ai_platform_network_process+0x468>
 8006c06:	f04f 0800 	mov.w	r8, #0
 8006c0a:	e014      	b.n	8006c36 <ai_platform_network_process+0x436>
 8006c0c:	6882      	ldr	r2, [r0, #8]
 8006c0e:	68c5      	ldr	r5, [r0, #12]
 8006c10:	6863      	ldr	r3, [r4, #4]
 8006c12:	1b52      	subs	r2, r2, r5
 8006c14:	4413      	add	r3, r2
 8006c16:	6083      	str	r3, [r0, #8]
 8006c18:	698b      	ldr	r3, [r1, #24]
 8006c1a:	6862      	ldr	r2, [r4, #4]
 8006c1c:	60da      	str	r2, [r3, #12]
 8006c1e:	f859 200a 	ldr.w	r2, [r9, sl]
 8006c22:	f108 0801 	add.w	r8, r8, #1
 8006c26:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 8006c2a:	440b      	add	r3, r1
 8006c2c:	4293      	cmp	r3, r2
 8006c2e:	d301      	bcc.n	8006c34 <ai_platform_network_process+0x434>
 8006c30:	68e3      	ldr	r3, [r4, #12]
 8006c32:	1ad3      	subs	r3, r2, r3
 8006c34:	6063      	str	r3, [r4, #4]
 8006c36:	8833      	ldrh	r3, [r6, #0]
 8006c38:	ea4f 1a08 	mov.w	sl, r8, lsl #4
 8006c3c:	4543      	cmp	r3, r8
 8006c3e:	d913      	bls.n	8006c68 <ai_platform_network_process+0x468>
 8006c40:	6873      	ldr	r3, [r6, #4]
 8006c42:	b18b      	cbz	r3, 8006c68 <ai_platform_network_process+0x468>
 8006c44:	f853 1028 	ldr.w	r1, [r3, r8, lsl #2]
 8006c48:	b171      	cbz	r1, 8006c68 <ai_platform_network_process+0x468>
 8006c4a:	6988      	ldr	r0, [r1, #24]
 8006c4c:	68b2      	ldr	r2, [r6, #8]
 8006c4e:	6803      	ldr	r3, [r0, #0]
 8006c50:	f8d2 9000 	ldr.w	r9, [r2]
 8006c54:	009d      	lsls	r5, r3, #2
 8006c56:	eb09 1408 	add.w	r4, r9, r8, lsl #4
 8006c5a:	d5d7      	bpl.n	8006c0c <ai_platform_network_process+0x40c>
 8006c5c:	6881      	ldr	r1, [r0, #8]
 8006c5e:	68a2      	ldr	r2, [r4, #8]
 8006c60:	6860      	ldr	r0, [r4, #4]
 8006c62:	f004 ffe1 	bl	800bc28 <st_int8_copy>
 8006c66:	e7da      	b.n	8006c1e <ai_platform_network_process+0x41e>
 8006c68:	4658      	mov	r0, fp
 8006c6a:	f000 fdcd 	bl	8007808 <ai_layers_forward_all>
 8006c6e:	2f00      	cmp	r7, #0
 8006c70:	d03d      	beq.n	8006cee <ai_platform_network_process+0x4ee>
 8006c72:	2400      	movs	r4, #0
 8006c74:	e016      	b.n	8006ca4 <ai_platform_network_process+0x4a4>
 8006c76:	e9d8 3201 	ldrd	r3, r2, [r8, #4]
 8006c7a:	f859 100a 	ldr.w	r1, [r9, sl]
 8006c7e:	4413      	add	r3, r2
 8006c80:	428b      	cmp	r3, r1
 8006c82:	d302      	bcc.n	8006c8a <ai_platform_network_process+0x48a>
 8006c84:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8006c88:	1acb      	subs	r3, r1, r3
 8006c8a:	f8c8 3004 	str.w	r3, [r8, #4]
 8006c8e:	6981      	ldr	r1, [r0, #24]
 8006c90:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 8006c94:	1b52      	subs	r2, r2, r5
 8006c96:	4413      	add	r3, r2
 8006c98:	608b      	str	r3, [r1, #8]
 8006c9a:	6983      	ldr	r3, [r0, #24]
 8006c9c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8006ca0:	60da      	str	r2, [r3, #12]
 8006ca2:	3401      	adds	r4, #1
 8006ca4:	883b      	ldrh	r3, [r7, #0]
 8006ca6:	42a3      	cmp	r3, r4
 8006ca8:	d921      	bls.n	8006cee <ai_platform_network_process+0x4ee>
 8006caa:	687b      	ldr	r3, [r7, #4]
 8006cac:	b1fb      	cbz	r3, 8006cee <ai_platform_network_process+0x4ee>
 8006cae:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8006cb2:	b1e0      	cbz	r0, 8006cee <ai_platform_network_process+0x4ee>
 8006cb4:	68ba      	ldr	r2, [r7, #8]
 8006cb6:	ea4f 1a04 	mov.w	sl, r4, lsl #4
 8006cba:	6983      	ldr	r3, [r0, #24]
 8006cbc:	f8d2 9000 	ldr.w	r9, [r2]
 8006cc0:	681a      	ldr	r2, [r3, #0]
 8006cc2:	eb09 1804 	add.w	r8, r9, r4, lsl #4
 8006cc6:	0092      	lsls	r2, r2, #2
 8006cc8:	d5d5      	bpl.n	8006c76 <ai_platform_network_process+0x476>
 8006cca:	6898      	ldr	r0, [r3, #8]
 8006ccc:	e9d8 1201 	ldrd	r1, r2, [r8, #4]
 8006cd0:	f004 ffaa 	bl	800bc28 <st_int8_copy>
 8006cd4:	f859 200a 	ldr.w	r2, [r9, sl]
 8006cd8:	e9d8 3101 	ldrd	r3, r1, [r8, #4]
 8006cdc:	440b      	add	r3, r1
 8006cde:	4293      	cmp	r3, r2
 8006ce0:	d302      	bcc.n	8006ce8 <ai_platform_network_process+0x4e8>
 8006ce2:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8006ce6:	1ad3      	subs	r3, r2, r3
 8006ce8:	f8c8 3004 	str.w	r3, [r8, #4]
 8006cec:	e7d9      	b.n	8006ca2 <ai_platform_network_process+0x4a2>
 8006cee:	f8bb 4016 	ldrh.w	r4, [fp, #22]
 8006cf2:	f8bb 3014 	ldrh.w	r3, [fp, #20]
 8006cf6:	3401      	adds	r4, #1
 8006cf8:	b2a4      	uxth	r4, r4
 8006cfa:	42a3      	cmp	r3, r4
 8006cfc:	f8ab 4016 	strh.w	r4, [fp, #22]
 8006d00:	f63f af7f 	bhi.w	8006c02 <ai_platform_network_process+0x402>
 8006d04:	4620      	mov	r0, r4
 8006d06:	b005      	add	sp, #20
 8006d08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006d0c:	2a01      	cmp	r2, #1
 8006d0e:	6b2e      	ldr	r6, [r5, #48]	; 0x30
 8006d10:	d029      	beq.n	8006d66 <ai_platform_network_process+0x566>
 8006d12:	f106 070c 	add.w	r7, r6, #12
 8006d16:	e770      	b.n	8006bfa <ai_platform_network_process+0x3fa>
 8006d18:	2218      	movs	r2, #24
 8006d1a:	2113      	movs	r1, #19
 8006d1c:	f105 0010 	add.w	r0, r5, #16
 8006d20:	2400      	movs	r4, #0
 8006d22:	f000 fb7f 	bl	8007424 <core_set_error>
 8006d26:	e711      	b.n	8006b4c <ai_platform_network_process+0x34c>
 8006d28:	9d03      	ldr	r5, [sp, #12]
 8006d2a:	4604      	mov	r4, r0
 8006d2c:	2217      	movs	r2, #23
 8006d2e:	2112      	movs	r1, #18
 8006d30:	f105 0010 	add.w	r0, r5, #16
 8006d34:	f000 fb76 	bl	8007424 <core_set_error>
 8006d38:	e708      	b.n	8006b4c <ai_platform_network_process+0x34c>
 8006d3a:	9d03      	ldr	r5, [sp, #12]
 8006d3c:	2219      	movs	r2, #25
 8006d3e:	2112      	movs	r1, #18
 8006d40:	2400      	movs	r4, #0
 8006d42:	f105 0010 	add.w	r0, r5, #16
 8006d46:	f000 fb6d 	bl	8007424 <core_set_error>
 8006d4a:	e6ff      	b.n	8006b4c <ai_platform_network_process+0x34c>
 8006d4c:	9d03      	ldr	r5, [sp, #12]
 8006d4e:	4604      	mov	r4, r0
 8006d50:	2221      	movs	r2, #33	; 0x21
 8006d52:	2112      	movs	r1, #18
 8006d54:	f105 0010 	add.w	r0, r5, #16
 8006d58:	f000 fb64 	bl	8007424 <core_set_error>
 8006d5c:	e6f6      	b.n	8006b4c <ai_platform_network_process+0x34c>
 8006d5e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8006d62:	82ab      	strh	r3, [r5, #20]
 8006d64:	e744      	b.n	8006bf0 <ai_platform_network_process+0x3f0>
 8006d66:	2700      	movs	r7, #0
 8006d68:	e747      	b.n	8006bfa <ai_platform_network_process+0x3fa>
 8006d6a:	4604      	mov	r4, r0
 8006d6c:	2217      	movs	r2, #23
 8006d6e:	2113      	movs	r1, #19
 8006d70:	f105 0010 	add.w	r0, r5, #16
 8006d74:	f000 fb56 	bl	8007424 <core_set_error>
 8006d78:	e6e8      	b.n	8006b4c <ai_platform_network_process+0x34c>
 8006d7a:	2219      	movs	r2, #25
 8006d7c:	2113      	movs	r1, #19
 8006d7e:	f105 0010 	add.w	r0, r5, #16
 8006d82:	2400      	movs	r4, #0
 8006d84:	f000 fb4e 	bl	8007424 <core_set_error>
 8006d88:	e6e0      	b.n	8006b4c <ai_platform_network_process+0x34c>
 8006d8a:	4604      	mov	r4, r0
 8006d8c:	2221      	movs	r2, #33	; 0x21
 8006d8e:	2113      	movs	r1, #19
 8006d90:	f105 0010 	add.w	r0, r5, #16
 8006d94:	f000 fb46 	bl	8007424 <core_set_error>
 8006d98:	e6d8      	b.n	8006b4c <ai_platform_network_process+0x34c>
 8006d9a:	2217      	movs	r2, #23
 8006d9c:	2113      	movs	r1, #19
 8006d9e:	f105 0010 	add.w	r0, r5, #16
 8006da2:	4654      	mov	r4, sl
 8006da4:	f000 fb3e 	bl	8007424 <core_set_error>
 8006da8:	e6d0      	b.n	8006b4c <ai_platform_network_process+0x34c>
 8006daa:	bf00      	nop
 8006dac:	58024000 	.word	0x58024000
 8006db0:	f407a5c2 	.word	0xf407a5c2
 8006db4:	b5e8b5cd 	.word	0xb5e8b5cd

08006db8 <ai_platform_observer_node_info>:
 8006db8:	b570      	push	{r4, r5, r6, lr}
 8006dba:	4604      	mov	r4, r0
 8006dbc:	460d      	mov	r5, r1
 8006dbe:	b120      	cbz	r0, 8006dca <ai_platform_observer_node_info+0x12>
 8006dc0:	4b61      	ldr	r3, [pc, #388]	; (8006f48 <ai_platform_observer_node_info+0x190>)
 8006dc2:	6802      	ldr	r2, [r0, #0]
 8006dc4:	429a      	cmp	r2, r3
 8006dc6:	bf18      	it	ne
 8006dc8:	2400      	movne	r4, #0
 8006dca:	f7fd fe8d 	bl	8004ae8 <_ai_platform_acquire_crc>
 8006dce:	4b5f      	ldr	r3, [pc, #380]	; (8006f4c <ai_platform_observer_node_info+0x194>)
 8006dd0:	f46f 628a 	mvn.w	r2, #1104	; 0x450
 8006dd4:	681b      	ldr	r3, [r3, #0]
 8006dd6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006dda:	189a      	adds	r2, r3, r2
 8006ddc:	2a01      	cmp	r2, #1
 8006dde:	d929      	bls.n	8006e34 <ai_platform_observer_node_info+0x7c>
 8006de0:	f240 4249 	movw	r2, #1097	; 0x449
 8006de4:	4293      	cmp	r3, r2
 8006de6:	d025      	beq.n	8006e34 <ai_platform_observer_node_info+0x7c>
 8006de8:	4a59      	ldr	r2, [pc, #356]	; (8006f50 <ai_platform_observer_node_info+0x198>)
 8006dea:	6813      	ldr	r3, [r2, #0]
 8006dec:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006df0:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8006df4:	d02b      	beq.n	8006e4e <ai_platform_observer_node_info+0x96>
 8006df6:	6813      	ldr	r3, [r2, #0]
 8006df8:	f240 4183 	movw	r1, #1155	; 0x483
 8006dfc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006e00:	428b      	cmp	r3, r1
 8006e02:	d06c      	beq.n	8006ede <ai_platform_observer_node_info+0x126>
 8006e04:	6813      	ldr	r3, [r2, #0]
 8006e06:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006e0a:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 8006e0e:	d051      	beq.n	8006eb4 <ai_platform_observer_node_info+0xfc>
 8006e10:	6813      	ldr	r3, [r2, #0]
 8006e12:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006e16:	2b00      	cmp	r3, #0
 8006e18:	d129      	bne.n	8006e6e <ai_platform_observer_node_info+0xb6>
 8006e1a:	4a4e      	ldr	r2, [pc, #312]	; (8006f54 <ai_platform_observer_node_info+0x19c>)
 8006e1c:	2301      	movs	r3, #1
 8006e1e:	6093      	str	r3, [r2, #8]
 8006e20:	6893      	ldr	r3, [r2, #8]
 8006e22:	2b00      	cmp	r3, #0
 8006e24:	d1fc      	bne.n	8006e20 <ai_platform_observer_node_info+0x68>
 8006e26:	4b4c      	ldr	r3, [pc, #304]	; (8006f58 <ai_platform_observer_node_info+0x1a0>)
 8006e28:	6013      	str	r3, [r2, #0]
 8006e2a:	4b4c      	ldr	r3, [pc, #304]	; (8006f5c <ai_platform_observer_node_info+0x1a4>)
 8006e2c:	6812      	ldr	r2, [r2, #0]
 8006e2e:	429a      	cmp	r2, r3
 8006e30:	d01d      	beq.n	8006e6e <ai_platform_observer_node_info+0xb6>
 8006e32:	e7fe      	b.n	8006e32 <ai_platform_observer_node_info+0x7a>
 8006e34:	4a47      	ldr	r2, [pc, #284]	; (8006f54 <ai_platform_observer_node_info+0x19c>)
 8006e36:	2301      	movs	r3, #1
 8006e38:	6093      	str	r3, [r2, #8]
 8006e3a:	6893      	ldr	r3, [r2, #8]
 8006e3c:	2b00      	cmp	r3, #0
 8006e3e:	d1fc      	bne.n	8006e3a <ai_platform_observer_node_info+0x82>
 8006e40:	4b45      	ldr	r3, [pc, #276]	; (8006f58 <ai_platform_observer_node_info+0x1a0>)
 8006e42:	6013      	str	r3, [r2, #0]
 8006e44:	4b45      	ldr	r3, [pc, #276]	; (8006f5c <ai_platform_observer_node_info+0x1a4>)
 8006e46:	6812      	ldr	r2, [r2, #0]
 8006e48:	429a      	cmp	r2, r3
 8006e4a:	d010      	beq.n	8006e6e <ai_platform_observer_node_info+0xb6>
 8006e4c:	e7fe      	b.n	8006e4c <ai_platform_observer_node_info+0x94>
 8006e4e:	4a44      	ldr	r2, [pc, #272]	; (8006f60 <ai_platform_observer_node_info+0x1a8>)
 8006e50:	2301      	movs	r3, #1
 8006e52:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8006e56:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8006e5a:	2b00      	cmp	r3, #0
 8006e5c:	d1fb      	bne.n	8006e56 <ai_platform_observer_node_info+0x9e>
 8006e5e:	4b3e      	ldr	r3, [pc, #248]	; (8006f58 <ai_platform_observer_node_info+0x1a0>)
 8006e60:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 8006e64:	4b3d      	ldr	r3, [pc, #244]	; (8006f5c <ai_platform_observer_node_info+0x1a4>)
 8006e66:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8006e6a:	429a      	cmp	r2, r3
 8006e6c:	d121      	bne.n	8006eb2 <ai_platform_observer_node_info+0xfa>
 8006e6e:	f7fd fe3d 	bl	8004aec <_ai_platform_release_crc>
 8006e72:	2d00      	cmp	r5, #0
 8006e74:	bf18      	it	ne
 8006e76:	2c00      	cmpne	r4, #0
 8006e78:	bf0c      	ite	eq
 8006e7a:	2601      	moveq	r6, #1
 8006e7c:	2600      	movne	r6, #0
 8006e7e:	d026      	beq.n	8006ece <ai_platform_observer_node_info+0x116>
 8006e80:	68e3      	ldr	r3, [r4, #12]
 8006e82:	079b      	lsls	r3, r3, #30
 8006e84:	d54b      	bpl.n	8006f1e <ai_platform_observer_node_info+0x166>
 8006e86:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006e88:	4631      	mov	r1, r6
 8006e8a:	e000      	b.n	8006e8e <ai_platform_observer_node_info+0xd6>
 8006e8c:	b14a      	cbz	r2, 8006ea2 <ai_platform_observer_node_info+0xea>
 8006e8e:	b288      	uxth	r0, r1
 8006e90:	3101      	adds	r1, #1
 8006e92:	b133      	cbz	r3, 8006ea2 <ai_platform_observer_node_info+0xea>
 8006e94:	882a      	ldrh	r2, [r5, #0]
 8006e96:	4282      	cmp	r2, r0
 8006e98:	d032      	beq.n	8006f00 <ai_platform_observer_node_info+0x148>
 8006e9a:	691a      	ldr	r2, [r3, #16]
 8006e9c:	429a      	cmp	r2, r3
 8006e9e:	4613      	mov	r3, r2
 8006ea0:	d1f4      	bne.n	8006e8c <ai_platform_observer_node_info+0xd4>
 8006ea2:	2214      	movs	r2, #20
 8006ea4:	f104 0010 	add.w	r0, r4, #16
 8006ea8:	4611      	mov	r1, r2
 8006eaa:	f000 fabb 	bl	8007424 <core_set_error>
 8006eae:	4630      	mov	r0, r6
 8006eb0:	bd70      	pop	{r4, r5, r6, pc}
 8006eb2:	e7fe      	b.n	8006eb2 <ai_platform_observer_node_info+0xfa>
 8006eb4:	4a27      	ldr	r2, [pc, #156]	; (8006f54 <ai_platform_observer_node_info+0x19c>)
 8006eb6:	2301      	movs	r3, #1
 8006eb8:	6093      	str	r3, [r2, #8]
 8006eba:	6893      	ldr	r3, [r2, #8]
 8006ebc:	2b00      	cmp	r3, #0
 8006ebe:	d1fc      	bne.n	8006eba <ai_platform_observer_node_info+0x102>
 8006ec0:	4b25      	ldr	r3, [pc, #148]	; (8006f58 <ai_platform_observer_node_info+0x1a0>)
 8006ec2:	6013      	str	r3, [r2, #0]
 8006ec4:	4b25      	ldr	r3, [pc, #148]	; (8006f5c <ai_platform_observer_node_info+0x1a4>)
 8006ec6:	6812      	ldr	r2, [r2, #0]
 8006ec8:	429a      	cmp	r2, r3
 8006eca:	d0d0      	beq.n	8006e6e <ai_platform_observer_node_info+0xb6>
 8006ecc:	e7fe      	b.n	8006ecc <ai_platform_observer_node_info+0x114>
 8006ece:	b364      	cbz	r4, 8006f2a <ai_platform_observer_node_info+0x172>
 8006ed0:	2210      	movs	r2, #16
 8006ed2:	2600      	movs	r6, #0
 8006ed4:	18a0      	adds	r0, r4, r2
 8006ed6:	4611      	mov	r1, r2
 8006ed8:	f000 faa4 	bl	8007424 <core_set_error>
 8006edc:	e7e7      	b.n	8006eae <ai_platform_observer_node_info+0xf6>
 8006ede:	4a20      	ldr	r2, [pc, #128]	; (8006f60 <ai_platform_observer_node_info+0x1a8>)
 8006ee0:	2301      	movs	r3, #1
 8006ee2:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8006ee6:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8006eea:	2b00      	cmp	r3, #0
 8006eec:	d1fb      	bne.n	8006ee6 <ai_platform_observer_node_info+0x12e>
 8006eee:	4b1a      	ldr	r3, [pc, #104]	; (8006f58 <ai_platform_observer_node_info+0x1a0>)
 8006ef0:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 8006ef4:	4b19      	ldr	r3, [pc, #100]	; (8006f5c <ai_platform_observer_node_info+0x1a4>)
 8006ef6:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8006efa:	429a      	cmp	r2, r3
 8006efc:	d0b7      	beq.n	8006e6e <ai_platform_observer_node_info+0xb6>
 8006efe:	e7fe      	b.n	8006efe <ai_platform_observer_node_info+0x146>
 8006f00:	6999      	ldr	r1, [r3, #24]
 8006f02:	f240 120f 	movw	r2, #271	; 0x10f
 8006f06:	60e9      	str	r1, [r5, #12]
 8006f08:	8819      	ldrh	r1, [r3, #0]
 8006f0a:	4291      	cmp	r1, r2
 8006f0c:	d00f      	beq.n	8006f2e <ai_platform_observer_node_info+0x176>
 8006f0e:	8859      	ldrh	r1, [r3, #2]
 8006f10:	2200      	movs	r2, #0
 8006f12:	2601      	movs	r6, #1
 8006f14:	80a9      	strh	r1, [r5, #4]
 8006f16:	881b      	ldrh	r3, [r3, #0]
 8006f18:	60aa      	str	r2, [r5, #8]
 8006f1a:	806b      	strh	r3, [r5, #2]
 8006f1c:	e7c7      	b.n	8006eae <ai_platform_observer_node_info+0xf6>
 8006f1e:	2210      	movs	r2, #16
 8006f20:	2111      	movs	r1, #17
 8006f22:	18a0      	adds	r0, r4, r2
 8006f24:	f000 fa7e 	bl	8007424 <core_set_error>
 8006f28:	e7c1      	b.n	8006eae <ai_platform_observer_node_info+0xf6>
 8006f2a:	4626      	mov	r6, r4
 8006f2c:	e7bf      	b.n	8006eae <ai_platform_observer_node_info+0xf6>
 8006f2e:	69da      	ldr	r2, [r3, #28]
 8006f30:	2601      	movs	r6, #1
 8006f32:	8853      	ldrh	r3, [r2, #2]
 8006f34:	80ab      	strh	r3, [r5, #4]
 8006f36:	8813      	ldrh	r3, [r2, #0]
 8006f38:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8006f3c:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8006f40:	806b      	strh	r3, [r5, #2]
 8006f42:	6993      	ldr	r3, [r2, #24]
 8006f44:	60ab      	str	r3, [r5, #8]
 8006f46:	e7b2      	b.n	8006eae <ai_platform_observer_node_info+0xf6>
 8006f48:	a1c00100 	.word	0xa1c00100
 8006f4c:	e0042000 	.word	0xe0042000
 8006f50:	5c001000 	.word	0x5c001000
 8006f54:	40023000 	.word	0x40023000
 8006f58:	f407a5c2 	.word	0xf407a5c2
 8006f5c:	b5e8b5cd 	.word	0xb5e8b5cd
 8006f60:	58024000 	.word	0x58024000

08006f64 <ai_platform_observer_register>:
 8006f64:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006f68:	2800      	cmp	r0, #0
 8006f6a:	d042      	beq.n	8006ff2 <ai_platform_observer_register+0x8e>
 8006f6c:	4690      	mov	r8, r2
 8006f6e:	461e      	mov	r6, r3
 8006f70:	6802      	ldr	r2, [r0, #0]
 8006f72:	4604      	mov	r4, r0
 8006f74:	4b96      	ldr	r3, [pc, #600]	; (80071d0 <ai_platform_observer_register+0x26c>)
 8006f76:	429a      	cmp	r2, r3
 8006f78:	d13b      	bne.n	8006ff2 <ai_platform_observer_register+0x8e>
 8006f7a:	460f      	mov	r7, r1
 8006f7c:	f7fd fdb4 	bl	8004ae8 <_ai_platform_acquire_crc>
 8006f80:	4b94      	ldr	r3, [pc, #592]	; (80071d4 <ai_platform_observer_register+0x270>)
 8006f82:	f46f 628a 	mvn.w	r2, #1104	; 0x450
 8006f86:	681b      	ldr	r3, [r3, #0]
 8006f88:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006f8c:	189a      	adds	r2, r3, r2
 8006f8e:	2a01      	cmp	r2, #1
 8006f90:	f240 8088 	bls.w	80070a4 <ai_platform_observer_register+0x140>
 8006f94:	f240 4249 	movw	r2, #1097	; 0x449
 8006f98:	4293      	cmp	r3, r2
 8006f9a:	f000 8083 	beq.w	80070a4 <ai_platform_observer_register+0x140>
 8006f9e:	4a8e      	ldr	r2, [pc, #568]	; (80071d8 <ai_platform_observer_register+0x274>)
 8006fa0:	6813      	ldr	r3, [r2, #0]
 8006fa2:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006fa6:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8006faa:	f000 8089 	beq.w	80070c0 <ai_platform_observer_register+0x15c>
 8006fae:	6813      	ldr	r3, [r2, #0]
 8006fb0:	f240 4183 	movw	r1, #1155	; 0x483
 8006fb4:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006fb8:	428b      	cmp	r3, r1
 8006fba:	f000 80d6 	beq.w	800716a <ai_platform_observer_register+0x206>
 8006fbe:	6813      	ldr	r3, [r2, #0]
 8006fc0:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006fc4:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 8006fc8:	f000 80ee 	beq.w	80071a8 <ai_platform_observer_register+0x244>
 8006fcc:	6813      	ldr	r3, [r2, #0]
 8006fce:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006fd2:	2b00      	cmp	r3, #0
 8006fd4:	f040 8084 	bne.w	80070e0 <ai_platform_observer_register+0x17c>
 8006fd8:	4a80      	ldr	r2, [pc, #512]	; (80071dc <ai_platform_observer_register+0x278>)
 8006fda:	2301      	movs	r3, #1
 8006fdc:	6093      	str	r3, [r2, #8]
 8006fde:	6893      	ldr	r3, [r2, #8]
 8006fe0:	2b00      	cmp	r3, #0
 8006fe2:	d1fc      	bne.n	8006fde <ai_platform_observer_register+0x7a>
 8006fe4:	4b7e      	ldr	r3, [pc, #504]	; (80071e0 <ai_platform_observer_register+0x27c>)
 8006fe6:	6013      	str	r3, [r2, #0]
 8006fe8:	4b7e      	ldr	r3, [pc, #504]	; (80071e4 <ai_platform_observer_register+0x280>)
 8006fea:	6812      	ldr	r2, [r2, #0]
 8006fec:	429a      	cmp	r2, r3
 8006fee:	d077      	beq.n	80070e0 <ai_platform_observer_register+0x17c>
 8006ff0:	e7fe      	b.n	8006ff0 <ai_platform_observer_register+0x8c>
 8006ff2:	f7fd fd79 	bl	8004ae8 <_ai_platform_acquire_crc>
 8006ff6:	4b77      	ldr	r3, [pc, #476]	; (80071d4 <ai_platform_observer_register+0x270>)
 8006ff8:	f46f 618a 	mvn.w	r1, #1104	; 0x450
 8006ffc:	681b      	ldr	r3, [r3, #0]
 8006ffe:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8007002:	185a      	adds	r2, r3, r1
 8007004:	2a01      	cmp	r2, #1
 8007006:	d92b      	bls.n	8007060 <ai_platform_observer_register+0xfc>
 8007008:	f240 4249 	movw	r2, #1097	; 0x449
 800700c:	4293      	cmp	r3, r2
 800700e:	d027      	beq.n	8007060 <ai_platform_observer_register+0xfc>
 8007010:	4a71      	ldr	r2, [pc, #452]	; (80071d8 <ai_platform_observer_register+0x274>)
 8007012:	6813      	ldr	r3, [r2, #0]
 8007014:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8007018:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 800701c:	d02d      	beq.n	800707a <ai_platform_observer_register+0x116>
 800701e:	6813      	ldr	r3, [r2, #0]
 8007020:	f240 4183 	movw	r1, #1155	; 0x483
 8007024:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8007028:	428b      	cmp	r3, r1
 800702a:	f000 808d 	beq.w	8007148 <ai_platform_observer_register+0x1e4>
 800702e:	6813      	ldr	r3, [r2, #0]
 8007030:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8007034:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 8007038:	f000 80a8 	beq.w	800718c <ai_platform_observer_register+0x228>
 800703c:	6813      	ldr	r3, [r2, #0]
 800703e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8007042:	2b00      	cmp	r3, #0
 8007044:	d129      	bne.n	800709a <ai_platform_observer_register+0x136>
 8007046:	4a65      	ldr	r2, [pc, #404]	; (80071dc <ai_platform_observer_register+0x278>)
 8007048:	2301      	movs	r3, #1
 800704a:	6093      	str	r3, [r2, #8]
 800704c:	6893      	ldr	r3, [r2, #8]
 800704e:	2b00      	cmp	r3, #0
 8007050:	d1fc      	bne.n	800704c <ai_platform_observer_register+0xe8>
 8007052:	4963      	ldr	r1, [pc, #396]	; (80071e0 <ai_platform_observer_register+0x27c>)
 8007054:	4b63      	ldr	r3, [pc, #396]	; (80071e4 <ai_platform_observer_register+0x280>)
 8007056:	6011      	str	r1, [r2, #0]
 8007058:	6812      	ldr	r2, [r2, #0]
 800705a:	429a      	cmp	r2, r3
 800705c:	d01d      	beq.n	800709a <ai_platform_observer_register+0x136>
 800705e:	e7fe      	b.n	800705e <ai_platform_observer_register+0xfa>
 8007060:	4a5e      	ldr	r2, [pc, #376]	; (80071dc <ai_platform_observer_register+0x278>)
 8007062:	2301      	movs	r3, #1
 8007064:	6093      	str	r3, [r2, #8]
 8007066:	6893      	ldr	r3, [r2, #8]
 8007068:	2b00      	cmp	r3, #0
 800706a:	d1fc      	bne.n	8007066 <ai_platform_observer_register+0x102>
 800706c:	495c      	ldr	r1, [pc, #368]	; (80071e0 <ai_platform_observer_register+0x27c>)
 800706e:	4b5d      	ldr	r3, [pc, #372]	; (80071e4 <ai_platform_observer_register+0x280>)
 8007070:	6011      	str	r1, [r2, #0]
 8007072:	6812      	ldr	r2, [r2, #0]
 8007074:	429a      	cmp	r2, r3
 8007076:	d010      	beq.n	800709a <ai_platform_observer_register+0x136>
 8007078:	e7fe      	b.n	8007078 <ai_platform_observer_register+0x114>
 800707a:	4a5b      	ldr	r2, [pc, #364]	; (80071e8 <ai_platform_observer_register+0x284>)
 800707c:	2301      	movs	r3, #1
 800707e:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8007082:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8007086:	2b00      	cmp	r3, #0
 8007088:	d1fb      	bne.n	8007082 <ai_platform_observer_register+0x11e>
 800708a:	4955      	ldr	r1, [pc, #340]	; (80071e0 <ai_platform_observer_register+0x27c>)
 800708c:	4b55      	ldr	r3, [pc, #340]	; (80071e4 <ai_platform_observer_register+0x280>)
 800708e:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 8007092:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8007096:	429a      	cmp	r2, r3
 8007098:	d111      	bne.n	80070be <ai_platform_observer_register+0x15a>
 800709a:	f7fd fd27 	bl	8004aec <_ai_platform_release_crc>
 800709e:	2000      	movs	r0, #0
 80070a0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80070a4:	4b4d      	ldr	r3, [pc, #308]	; (80071dc <ai_platform_observer_register+0x278>)
 80070a6:	2201      	movs	r2, #1
 80070a8:	609a      	str	r2, [r3, #8]
 80070aa:	689d      	ldr	r5, [r3, #8]
 80070ac:	2d00      	cmp	r5, #0
 80070ae:	d1fc      	bne.n	80070aa <ai_platform_observer_register+0x146>
 80070b0:	4a4b      	ldr	r2, [pc, #300]	; (80071e0 <ai_platform_observer_register+0x27c>)
 80070b2:	601a      	str	r2, [r3, #0]
 80070b4:	681a      	ldr	r2, [r3, #0]
 80070b6:	4b4b      	ldr	r3, [pc, #300]	; (80071e4 <ai_platform_observer_register+0x280>)
 80070b8:	429a      	cmp	r2, r3
 80070ba:	d011      	beq.n	80070e0 <ai_platform_observer_register+0x17c>
 80070bc:	e7fe      	b.n	80070bc <ai_platform_observer_register+0x158>
 80070be:	e7fe      	b.n	80070be <ai_platform_observer_register+0x15a>
 80070c0:	4a49      	ldr	r2, [pc, #292]	; (80071e8 <ai_platform_observer_register+0x284>)
 80070c2:	2301      	movs	r3, #1
 80070c4:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80070c8:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 80070cc:	2b00      	cmp	r3, #0
 80070ce:	d1fb      	bne.n	80070c8 <ai_platform_observer_register+0x164>
 80070d0:	4b43      	ldr	r3, [pc, #268]	; (80071e0 <ai_platform_observer_register+0x27c>)
 80070d2:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 80070d6:	4b43      	ldr	r3, [pc, #268]	; (80071e4 <ai_platform_observer_register+0x280>)
 80070d8:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 80070dc:	429a      	cmp	r2, r3
 80070de:	d10c      	bne.n	80070fa <ai_platform_observer_register+0x196>
 80070e0:	f7fd fd04 	bl	8004aec <_ai_platform_release_crc>
 80070e4:	6c25      	ldr	r5, [r4, #64]	; 0x40
 80070e6:	b14d      	cbz	r5, 80070fc <ai_platform_observer_register+0x198>
 80070e8:	2240      	movs	r2, #64	; 0x40
 80070ea:	2111      	movs	r1, #17
 80070ec:	f104 0010 	add.w	r0, r4, #16
 80070f0:	f000 f998 	bl	8007424 <core_set_error>
 80070f4:	2000      	movs	r0, #0
 80070f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80070fa:	e7fe      	b.n	80070fa <ai_platform_observer_register+0x196>
 80070fc:	2014      	movs	r0, #20
 80070fe:	f000 faed 	bl	80076dc <core_mem_alloc>
 8007102:	4681      	mov	r9, r0
 8007104:	2800      	cmp	r0, #0
 8007106:	d05c      	beq.n	80071c2 <ai_platform_observer_register+0x25e>
 8007108:	81c5      	strh	r5, [r0, #14]
 800710a:	2101      	movs	r1, #1
 800710c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800710e:	e007      	b.n	8007120 <ai_platform_observer_register+0x1bc>
 8007110:	f8a9 100e 	strh.w	r1, [r9, #14]
 8007114:	b2a9      	uxth	r1, r5
 8007116:	691a      	ldr	r2, [r3, #16]
 8007118:	b12a      	cbz	r2, 8007126 <ai_platform_observer_register+0x1c2>
 800711a:	429a      	cmp	r2, r3
 800711c:	4613      	mov	r3, r2
 800711e:	d002      	beq.n	8007126 <ai_platform_observer_register+0x1c2>
 8007120:	1c4d      	adds	r5, r1, #1
 8007122:	2b00      	cmp	r3, #0
 8007124:	d1f4      	bne.n	8007110 <ai_platform_observer_register+0x1ac>
 8007126:	2200      	movs	r2, #0
 8007128:	b2f3      	uxtb	r3, r6
 800712a:	f8c9 7000 	str.w	r7, [r9]
 800712e:	2001      	movs	r0, #1
 8007130:	f8a9 200c 	strh.w	r2, [r9, #12]
 8007134:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8007138:	4a2c      	ldr	r2, [pc, #176]	; (80071ec <ai_platform_observer_register+0x288>)
 800713a:	f8c9 8004 	str.w	r8, [r9, #4]
 800713e:	f8c9 3008 	str.w	r3, [r9, #8]
 8007142:	e9c4 290f 	strd	r2, r9, [r4, #60]	; 0x3c
 8007146:	e7ab      	b.n	80070a0 <ai_platform_observer_register+0x13c>
 8007148:	4a27      	ldr	r2, [pc, #156]	; (80071e8 <ai_platform_observer_register+0x284>)
 800714a:	2301      	movs	r3, #1
 800714c:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8007150:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8007154:	2b00      	cmp	r3, #0
 8007156:	d1fb      	bne.n	8007150 <ai_platform_observer_register+0x1ec>
 8007158:	4921      	ldr	r1, [pc, #132]	; (80071e0 <ai_platform_observer_register+0x27c>)
 800715a:	4b22      	ldr	r3, [pc, #136]	; (80071e4 <ai_platform_observer_register+0x280>)
 800715c:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 8007160:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8007164:	429a      	cmp	r2, r3
 8007166:	d098      	beq.n	800709a <ai_platform_observer_register+0x136>
 8007168:	e7fe      	b.n	8007168 <ai_platform_observer_register+0x204>
 800716a:	4a1f      	ldr	r2, [pc, #124]	; (80071e8 <ai_platform_observer_register+0x284>)
 800716c:	2301      	movs	r3, #1
 800716e:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8007172:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8007176:	2b00      	cmp	r3, #0
 8007178:	d1fb      	bne.n	8007172 <ai_platform_observer_register+0x20e>
 800717a:	4b19      	ldr	r3, [pc, #100]	; (80071e0 <ai_platform_observer_register+0x27c>)
 800717c:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 8007180:	4b18      	ldr	r3, [pc, #96]	; (80071e4 <ai_platform_observer_register+0x280>)
 8007182:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8007186:	429a      	cmp	r2, r3
 8007188:	d0aa      	beq.n	80070e0 <ai_platform_observer_register+0x17c>
 800718a:	e7fe      	b.n	800718a <ai_platform_observer_register+0x226>
 800718c:	4a13      	ldr	r2, [pc, #76]	; (80071dc <ai_platform_observer_register+0x278>)
 800718e:	2301      	movs	r3, #1
 8007190:	6093      	str	r3, [r2, #8]
 8007192:	6893      	ldr	r3, [r2, #8]
 8007194:	2b00      	cmp	r3, #0
 8007196:	d1fc      	bne.n	8007192 <ai_platform_observer_register+0x22e>
 8007198:	4911      	ldr	r1, [pc, #68]	; (80071e0 <ai_platform_observer_register+0x27c>)
 800719a:	4b12      	ldr	r3, [pc, #72]	; (80071e4 <ai_platform_observer_register+0x280>)
 800719c:	6011      	str	r1, [r2, #0]
 800719e:	6812      	ldr	r2, [r2, #0]
 80071a0:	429a      	cmp	r2, r3
 80071a2:	f43f af7a 	beq.w	800709a <ai_platform_observer_register+0x136>
 80071a6:	e7fe      	b.n	80071a6 <ai_platform_observer_register+0x242>
 80071a8:	4a0c      	ldr	r2, [pc, #48]	; (80071dc <ai_platform_observer_register+0x278>)
 80071aa:	2301      	movs	r3, #1
 80071ac:	6093      	str	r3, [r2, #8]
 80071ae:	6893      	ldr	r3, [r2, #8]
 80071b0:	2b00      	cmp	r3, #0
 80071b2:	d1fc      	bne.n	80071ae <ai_platform_observer_register+0x24a>
 80071b4:	4b0a      	ldr	r3, [pc, #40]	; (80071e0 <ai_platform_observer_register+0x27c>)
 80071b6:	6013      	str	r3, [r2, #0]
 80071b8:	4b0a      	ldr	r3, [pc, #40]	; (80071e4 <ai_platform_observer_register+0x280>)
 80071ba:	6812      	ldr	r2, [r2, #0]
 80071bc:	429a      	cmp	r2, r3
 80071be:	d08f      	beq.n	80070e0 <ai_platform_observer_register+0x17c>
 80071c0:	e7fe      	b.n	80071c0 <ai_platform_observer_register+0x25c>
 80071c2:	2210      	movs	r2, #16
 80071c4:	2131      	movs	r1, #49	; 0x31
 80071c6:	18a0      	adds	r0, r4, r2
 80071c8:	f000 f92c 	bl	8007424 <core_set_error>
 80071cc:	4648      	mov	r0, r9
 80071ce:	e767      	b.n	80070a0 <ai_platform_observer_register+0x13c>
 80071d0:	a1c00100 	.word	0xa1c00100
 80071d4:	e0042000 	.word	0xe0042000
 80071d8:	5c001000 	.word	0x5c001000
 80071dc:	40023000 	.word	0x40023000
 80071e0:	f407a5c2 	.word	0xf407a5c2
 80071e4:	b5e8b5cd 	.word	0xb5e8b5cd
 80071e8:	58024000 	.word	0x58024000
 80071ec:	080049c5 	.word	0x080049c5

080071f0 <ai_platform_observer_unregister>:
 80071f0:	b510      	push	{r4, lr}
 80071f2:	2800      	cmp	r0, #0
 80071f4:	d03c      	beq.n	8007270 <ai_platform_observer_unregister+0x80>
 80071f6:	4b80      	ldr	r3, [pc, #512]	; (80073f8 <ai_platform_observer_unregister+0x208>)
 80071f8:	4604      	mov	r4, r0
 80071fa:	6802      	ldr	r2, [r0, #0]
 80071fc:	429a      	cmp	r2, r3
 80071fe:	d137      	bne.n	8007270 <ai_platform_observer_unregister+0x80>
 8007200:	f7fd fc72 	bl	8004ae8 <_ai_platform_acquire_crc>
 8007204:	4b7d      	ldr	r3, [pc, #500]	; (80073fc <ai_platform_observer_unregister+0x20c>)
 8007206:	f46f 628a 	mvn.w	r2, #1104	; 0x450
 800720a:	681b      	ldr	r3, [r3, #0]
 800720c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8007210:	189a      	adds	r2, r3, r2
 8007212:	2a01      	cmp	r2, #1
 8007214:	f240 8083 	bls.w	800731e <ai_platform_observer_unregister+0x12e>
 8007218:	f240 4249 	movw	r2, #1097	; 0x449
 800721c:	4293      	cmp	r3, r2
 800721e:	d07e      	beq.n	800731e <ai_platform_observer_unregister+0x12e>
 8007220:	4a77      	ldr	r2, [pc, #476]	; (8007400 <ai_platform_observer_unregister+0x210>)
 8007222:	6813      	ldr	r3, [r2, #0]
 8007224:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8007228:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 800722c:	f000 8085 	beq.w	800733a <ai_platform_observer_unregister+0x14a>
 8007230:	6813      	ldr	r3, [r2, #0]
 8007232:	f240 4183 	movw	r1, #1155	; 0x483
 8007236:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800723a:	428b      	cmp	r3, r1
 800723c:	f000 80a0 	beq.w	8007380 <ai_platform_observer_unregister+0x190>
 8007240:	6813      	ldr	r3, [r2, #0]
 8007242:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8007246:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 800724a:	f000 80c6 	beq.w	80073da <ai_platform_observer_unregister+0x1ea>
 800724e:	6813      	ldr	r3, [r2, #0]
 8007250:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8007254:	2b00      	cmp	r3, #0
 8007256:	f000 80a5 	beq.w	80073a4 <ai_platform_observer_unregister+0x1b4>
 800725a:	f7fd fc47 	bl	8004aec <_ai_platform_release_crc>
 800725e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8007260:	b108      	cbz	r0, 8007266 <ai_platform_observer_unregister+0x76>
 8007262:	f000 fa49 	bl	80076f8 <core_mem_free>
 8007266:	2300      	movs	r3, #0
 8007268:	2001      	movs	r0, #1
 800726a:	e9c4 330f 	strd	r3, r3, [r4, #60]	; 0x3c
 800726e:	bd10      	pop	{r4, pc}
 8007270:	f7fd fc3a 	bl	8004ae8 <_ai_platform_acquire_crc>
 8007274:	4b61      	ldr	r3, [pc, #388]	; (80073fc <ai_platform_observer_unregister+0x20c>)
 8007276:	f46f 618a 	mvn.w	r1, #1104	; 0x450
 800727a:	681b      	ldr	r3, [r3, #0]
 800727c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8007280:	185a      	adds	r2, r3, r1
 8007282:	2a01      	cmp	r2, #1
 8007284:	d92a      	bls.n	80072dc <ai_platform_observer_unregister+0xec>
 8007286:	f240 4249 	movw	r2, #1097	; 0x449
 800728a:	4293      	cmp	r3, r2
 800728c:	d026      	beq.n	80072dc <ai_platform_observer_unregister+0xec>
 800728e:	4a5c      	ldr	r2, [pc, #368]	; (8007400 <ai_platform_observer_unregister+0x210>)
 8007290:	6813      	ldr	r3, [r2, #0]
 8007292:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8007296:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 800729a:	d02c      	beq.n	80072f6 <ai_platform_observer_unregister+0x106>
 800729c:	6813      	ldr	r3, [r2, #0]
 800729e:	f240 4183 	movw	r1, #1155	; 0x483
 80072a2:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80072a6:	428b      	cmp	r3, r1
 80072a8:	d059      	beq.n	800735e <ai_platform_observer_unregister+0x16e>
 80072aa:	6813      	ldr	r3, [r2, #0]
 80072ac:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80072b0:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 80072b4:	f000 8084 	beq.w	80073c0 <ai_platform_observer_unregister+0x1d0>
 80072b8:	6813      	ldr	r3, [r2, #0]
 80072ba:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80072be:	2b00      	cmp	r3, #0
 80072c0:	d129      	bne.n	8007316 <ai_platform_observer_unregister+0x126>
 80072c2:	4a50      	ldr	r2, [pc, #320]	; (8007404 <ai_platform_observer_unregister+0x214>)
 80072c4:	2301      	movs	r3, #1
 80072c6:	6093      	str	r3, [r2, #8]
 80072c8:	6893      	ldr	r3, [r2, #8]
 80072ca:	2b00      	cmp	r3, #0
 80072cc:	d1fc      	bne.n	80072c8 <ai_platform_observer_unregister+0xd8>
 80072ce:	494e      	ldr	r1, [pc, #312]	; (8007408 <ai_platform_observer_unregister+0x218>)
 80072d0:	4b4e      	ldr	r3, [pc, #312]	; (800740c <ai_platform_observer_unregister+0x21c>)
 80072d2:	6011      	str	r1, [r2, #0]
 80072d4:	6812      	ldr	r2, [r2, #0]
 80072d6:	429a      	cmp	r2, r3
 80072d8:	d01d      	beq.n	8007316 <ai_platform_observer_unregister+0x126>
 80072da:	e7fe      	b.n	80072da <ai_platform_observer_unregister+0xea>
 80072dc:	4a49      	ldr	r2, [pc, #292]	; (8007404 <ai_platform_observer_unregister+0x214>)
 80072de:	2301      	movs	r3, #1
 80072e0:	6093      	str	r3, [r2, #8]
 80072e2:	6893      	ldr	r3, [r2, #8]
 80072e4:	2b00      	cmp	r3, #0
 80072e6:	d1fc      	bne.n	80072e2 <ai_platform_observer_unregister+0xf2>
 80072e8:	4947      	ldr	r1, [pc, #284]	; (8007408 <ai_platform_observer_unregister+0x218>)
 80072ea:	4b48      	ldr	r3, [pc, #288]	; (800740c <ai_platform_observer_unregister+0x21c>)
 80072ec:	6011      	str	r1, [r2, #0]
 80072ee:	6812      	ldr	r2, [r2, #0]
 80072f0:	429a      	cmp	r2, r3
 80072f2:	d010      	beq.n	8007316 <ai_platform_observer_unregister+0x126>
 80072f4:	e7fe      	b.n	80072f4 <ai_platform_observer_unregister+0x104>
 80072f6:	4a46      	ldr	r2, [pc, #280]	; (8007410 <ai_platform_observer_unregister+0x220>)
 80072f8:	2301      	movs	r3, #1
 80072fa:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80072fe:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8007302:	2b00      	cmp	r3, #0
 8007304:	d1fb      	bne.n	80072fe <ai_platform_observer_unregister+0x10e>
 8007306:	4940      	ldr	r1, [pc, #256]	; (8007408 <ai_platform_observer_unregister+0x218>)
 8007308:	4b40      	ldr	r3, [pc, #256]	; (800740c <ai_platform_observer_unregister+0x21c>)
 800730a:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 800730e:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8007312:	429a      	cmp	r2, r3
 8007314:	d110      	bne.n	8007338 <ai_platform_observer_unregister+0x148>
 8007316:	f7fd fbe9 	bl	8004aec <_ai_platform_release_crc>
 800731a:	2000      	movs	r0, #0
 800731c:	bd10      	pop	{r4, pc}
 800731e:	4a39      	ldr	r2, [pc, #228]	; (8007404 <ai_platform_observer_unregister+0x214>)
 8007320:	2301      	movs	r3, #1
 8007322:	6093      	str	r3, [r2, #8]
 8007324:	6893      	ldr	r3, [r2, #8]
 8007326:	2b00      	cmp	r3, #0
 8007328:	d1fc      	bne.n	8007324 <ai_platform_observer_unregister+0x134>
 800732a:	4937      	ldr	r1, [pc, #220]	; (8007408 <ai_platform_observer_unregister+0x218>)
 800732c:	4b37      	ldr	r3, [pc, #220]	; (800740c <ai_platform_observer_unregister+0x21c>)
 800732e:	6011      	str	r1, [r2, #0]
 8007330:	6812      	ldr	r2, [r2, #0]
 8007332:	429a      	cmp	r2, r3
 8007334:	d091      	beq.n	800725a <ai_platform_observer_unregister+0x6a>
 8007336:	e7fe      	b.n	8007336 <ai_platform_observer_unregister+0x146>
 8007338:	e7fe      	b.n	8007338 <ai_platform_observer_unregister+0x148>
 800733a:	4a35      	ldr	r2, [pc, #212]	; (8007410 <ai_platform_observer_unregister+0x220>)
 800733c:	2301      	movs	r3, #1
 800733e:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8007342:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8007346:	2b00      	cmp	r3, #0
 8007348:	d1fb      	bne.n	8007342 <ai_platform_observer_unregister+0x152>
 800734a:	492f      	ldr	r1, [pc, #188]	; (8007408 <ai_platform_observer_unregister+0x218>)
 800734c:	4b2f      	ldr	r3, [pc, #188]	; (800740c <ai_platform_observer_unregister+0x21c>)
 800734e:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 8007352:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8007356:	429a      	cmp	r2, r3
 8007358:	f43f af7f 	beq.w	800725a <ai_platform_observer_unregister+0x6a>
 800735c:	e7fe      	b.n	800735c <ai_platform_observer_unregister+0x16c>
 800735e:	4a2c      	ldr	r2, [pc, #176]	; (8007410 <ai_platform_observer_unregister+0x220>)
 8007360:	2301      	movs	r3, #1
 8007362:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8007366:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 800736a:	2b00      	cmp	r3, #0
 800736c:	d1fb      	bne.n	8007366 <ai_platform_observer_unregister+0x176>
 800736e:	4926      	ldr	r1, [pc, #152]	; (8007408 <ai_platform_observer_unregister+0x218>)
 8007370:	4b26      	ldr	r3, [pc, #152]	; (800740c <ai_platform_observer_unregister+0x21c>)
 8007372:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 8007376:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 800737a:	429a      	cmp	r2, r3
 800737c:	d0cb      	beq.n	8007316 <ai_platform_observer_unregister+0x126>
 800737e:	e7fe      	b.n	800737e <ai_platform_observer_unregister+0x18e>
 8007380:	4a23      	ldr	r2, [pc, #140]	; (8007410 <ai_platform_observer_unregister+0x220>)
 8007382:	2301      	movs	r3, #1
 8007384:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8007388:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 800738c:	2b00      	cmp	r3, #0
 800738e:	d1fb      	bne.n	8007388 <ai_platform_observer_unregister+0x198>
 8007390:	491d      	ldr	r1, [pc, #116]	; (8007408 <ai_platform_observer_unregister+0x218>)
 8007392:	4b1e      	ldr	r3, [pc, #120]	; (800740c <ai_platform_observer_unregister+0x21c>)
 8007394:	f8c2 1c00 	str.w	r1, [r2, #3072]	; 0xc00
 8007398:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 800739c:	429a      	cmp	r2, r3
 800739e:	f43f af5c 	beq.w	800725a <ai_platform_observer_unregister+0x6a>
 80073a2:	e7fe      	b.n	80073a2 <ai_platform_observer_unregister+0x1b2>
 80073a4:	4a17      	ldr	r2, [pc, #92]	; (8007404 <ai_platform_observer_unregister+0x214>)
 80073a6:	2301      	movs	r3, #1
 80073a8:	6093      	str	r3, [r2, #8]
 80073aa:	6893      	ldr	r3, [r2, #8]
 80073ac:	2b00      	cmp	r3, #0
 80073ae:	d1fc      	bne.n	80073aa <ai_platform_observer_unregister+0x1ba>
 80073b0:	4915      	ldr	r1, [pc, #84]	; (8007408 <ai_platform_observer_unregister+0x218>)
 80073b2:	4b16      	ldr	r3, [pc, #88]	; (800740c <ai_platform_observer_unregister+0x21c>)
 80073b4:	6011      	str	r1, [r2, #0]
 80073b6:	6812      	ldr	r2, [r2, #0]
 80073b8:	429a      	cmp	r2, r3
 80073ba:	f43f af4e 	beq.w	800725a <ai_platform_observer_unregister+0x6a>
 80073be:	e7fe      	b.n	80073be <ai_platform_observer_unregister+0x1ce>
 80073c0:	4a10      	ldr	r2, [pc, #64]	; (8007404 <ai_platform_observer_unregister+0x214>)
 80073c2:	2301      	movs	r3, #1
 80073c4:	6093      	str	r3, [r2, #8]
 80073c6:	6893      	ldr	r3, [r2, #8]
 80073c8:	2b00      	cmp	r3, #0
 80073ca:	d1fc      	bne.n	80073c6 <ai_platform_observer_unregister+0x1d6>
 80073cc:	490e      	ldr	r1, [pc, #56]	; (8007408 <ai_platform_observer_unregister+0x218>)
 80073ce:	4b0f      	ldr	r3, [pc, #60]	; (800740c <ai_platform_observer_unregister+0x21c>)
 80073d0:	6011      	str	r1, [r2, #0]
 80073d2:	6812      	ldr	r2, [r2, #0]
 80073d4:	429a      	cmp	r2, r3
 80073d6:	d09e      	beq.n	8007316 <ai_platform_observer_unregister+0x126>
 80073d8:	e7fe      	b.n	80073d8 <ai_platform_observer_unregister+0x1e8>
 80073da:	4a0a      	ldr	r2, [pc, #40]	; (8007404 <ai_platform_observer_unregister+0x214>)
 80073dc:	2301      	movs	r3, #1
 80073de:	6093      	str	r3, [r2, #8]
 80073e0:	6893      	ldr	r3, [r2, #8]
 80073e2:	2b00      	cmp	r3, #0
 80073e4:	d1fc      	bne.n	80073e0 <ai_platform_observer_unregister+0x1f0>
 80073e6:	4908      	ldr	r1, [pc, #32]	; (8007408 <ai_platform_observer_unregister+0x218>)
 80073e8:	4b08      	ldr	r3, [pc, #32]	; (800740c <ai_platform_observer_unregister+0x21c>)
 80073ea:	6011      	str	r1, [r2, #0]
 80073ec:	6812      	ldr	r2, [r2, #0]
 80073ee:	429a      	cmp	r2, r3
 80073f0:	f43f af33 	beq.w	800725a <ai_platform_observer_unregister+0x6a>
 80073f4:	e7fe      	b.n	80073f4 <ai_platform_observer_unregister+0x204>
 80073f6:	bf00      	nop
 80073f8:	a1c00100 	.word	0xa1c00100
 80073fc:	e0042000 	.word	0xe0042000
 8007400:	5c001000 	.word	0x5c001000
 8007404:	40023000 	.word	0x40023000
 8007408:	f407a5c2 	.word	0xf407a5c2
 800740c:	b5e8b5cd 	.word	0xb5e8b5cd
 8007410:	58024000 	.word	0x58024000

08007414 <core_init>:
 8007414:	2001      	movs	r0, #1
 8007416:	4770      	bx	lr

08007418 <core_get_error>:
 8007418:	4603      	mov	r3, r0
 800741a:	2200      	movs	r2, #0
 800741c:	6800      	ldr	r0, [r0, #0]
 800741e:	601a      	str	r2, [r3, #0]
 8007420:	4770      	bx	lr
 8007422:	bf00      	nop

08007424 <core_set_error>:
 8007424:	4603      	mov	r3, r0
 8007426:	7800      	ldrb	r0, [r0, #0]
 8007428:	b108      	cbz	r0, 800742e <core_set_error+0xa>
 800742a:	2000      	movs	r0, #0
 800742c:	4770      	bx	lr
 800742e:	7019      	strb	r1, [r3, #0]
 8007430:	2001      	movs	r0, #1
 8007432:	6819      	ldr	r1, [r3, #0]
 8007434:	f362 211f 	bfi	r1, r2, #8, #24
 8007438:	6019      	str	r1, [r3, #0]
 800743a:	4770      	bx	lr

0800743c <node_convert>:
 800743c:	6982      	ldr	r2, [r0, #24]
 800743e:	8813      	ldrh	r3, [r2, #0]
 8007440:	2b00      	cmp	r3, #0
 8007442:	d04a      	beq.n	80074da <node_convert+0x9e>
 8007444:	6852      	ldr	r2, [r2, #4]
 8007446:	6850      	ldr	r0, [r2, #4]
 8007448:	b100      	cbz	r0, 800744c <node_convert+0x10>
 800744a:	6800      	ldr	r0, [r0, #0]
 800744c:	2b01      	cmp	r3, #1
 800744e:	f000 813d 	beq.w	80076cc <node_convert+0x290>
 8007452:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007456:	6915      	ldr	r5, [r2, #16]
 8007458:	b105      	cbz	r5, 800745c <node_convert+0x20>
 800745a:	682d      	ldr	r5, [r5, #0]
 800745c:	6883      	ldr	r3, [r0, #8]
 800745e:	0a1b      	lsrs	r3, r3, #8
 8007460:	f000 80ee 	beq.w	8007640 <node_convert+0x204>
 8007464:	68c1      	ldr	r1, [r0, #12]
 8007466:	2401      	movs	r4, #1
 8007468:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800746c:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8007470:	4299      	cmp	r1, r3
 8007472:	fb02 f404 	mul.w	r4, r2, r4
 8007476:	d1f9      	bne.n	800746c <node_convert+0x30>
 8007478:	6982      	ldr	r2, [r0, #24]
 800747a:	69af      	ldr	r7, [r5, #24]
 800747c:	6813      	ldr	r3, [r2, #0]
 800747e:	f3c3 4143 	ubfx	r1, r3, #17, #4
 8007482:	2901      	cmp	r1, #1
 8007484:	d02b      	beq.n	80074de <node_convert+0xa2>
 8007486:	6801      	ldr	r1, [r0, #0]
 8007488:	68bd      	ldr	r5, [r7, #8]
 800748a:	2900      	cmp	r1, #0
 800748c:	d069      	beq.n	8007562 <node_convert+0x126>
 800748e:	684e      	ldr	r6, [r1, #4]
 8007490:	f3c3 50c0 	ubfx	r0, r3, #23, #1
 8007494:	6892      	ldr	r2, [r2, #8]
 8007496:	2e00      	cmp	r6, #0
 8007498:	f000 80b8 	beq.w	800760c <node_convert+0x1d0>
 800749c:	884b      	ldrh	r3, [r1, #2]
 800749e:	2b00      	cmp	r3, #0
 80074a0:	f000 8089 	beq.w	80075b6 <node_convert+0x17a>
 80074a4:	6833      	ldr	r3, [r6, #0]
 80074a6:	ed93 7a00 	vldr	s14, [r3]
 80074aa:	6873      	ldr	r3, [r6, #4]
 80074ac:	2800      	cmp	r0, #0
 80074ae:	f000 80c5 	beq.w	800763c <node_convert+0x200>
 80074b2:	f993 0000 	ldrsb.w	r0, [r3]
 80074b6:	b174      	cbz	r4, 80074d6 <node_convert+0x9a>
 80074b8:	4629      	mov	r1, r5
 80074ba:	4414      	add	r4, r2
 80074bc:	f912 3b01 	ldrsb.w	r3, [r2], #1
 80074c0:	1a1b      	subs	r3, r3, r0
 80074c2:	42a2      	cmp	r2, r4
 80074c4:	ee07 3a90 	vmov	s15, r3
 80074c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80074cc:	ee67 7a87 	vmul.f32	s15, s15, s14
 80074d0:	ece1 7a01 	vstmia	r1!, {s15}
 80074d4:	d1f2      	bne.n	80074bc <node_convert+0x80>
 80074d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80074da:	685b      	ldr	r3, [r3, #4]
 80074dc:	deff      	udf	#255	; 0xff
 80074de:	682e      	ldr	r6, [r5, #0]
 80074e0:	6895      	ldr	r5, [r2, #8]
 80074e2:	2e00      	cmp	r6, #0
 80074e4:	f000 80ae 	beq.w	8007644 <node_convert+0x208>
 80074e8:	683b      	ldr	r3, [r7, #0]
 80074ea:	6871      	ldr	r1, [r6, #4]
 80074ec:	68ba      	ldr	r2, [r7, #8]
 80074ee:	f3c3 53c0 	ubfx	r3, r3, #23, #1
 80074f2:	2900      	cmp	r1, #0
 80074f4:	d064      	beq.n	80075c0 <node_convert+0x184>
 80074f6:	8870      	ldrh	r0, [r6, #2]
 80074f8:	2800      	cmp	r0, #0
 80074fa:	d067      	beq.n	80075cc <node_convert+0x190>
 80074fc:	6808      	ldr	r0, [r1, #0]
 80074fe:	edd0 7a00 	vldr	s15, [r0]
 8007502:	2b00      	cmp	r3, #0
 8007504:	f000 80d7 	beq.w	80076b6 <node_convert+0x27a>
 8007508:	684b      	ldr	r3, [r1, #4]
 800750a:	f993 3000 	ldrsb.w	r3, [r3]
 800750e:	ee06 3a90 	vmov	s13, r3
 8007512:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8007516:	2c00      	cmp	r4, #0
 8007518:	d0dd      	beq.n	80074d6 <node_convert+0x9a>
 800751a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800751e:	4414      	add	r4, r2
 8007520:	eef6 5a00 	vmov.f32	s11, #96	; 0x3f000000  0.5
 8007524:	ed9f 5a6b 	vldr	s10, [pc, #428]	; 80076d4 <node_convert+0x298>
 8007528:	ee87 6a27 	vdiv.f32	s12, s14, s15
 800752c:	ecb5 7a01 	vldmia	r5!, {s14}
 8007530:	eef0 7a66 	vmov.f32	s15, s13
 8007534:	eee7 7a06 	vfma.f32	s15, s14, s12
 8007538:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800753c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007540:	bfac      	ite	ge
 8007542:	ee77 7aa5 	vaddge.f32	s15, s15, s11
 8007546:	ee77 7ac5 	vsublt.f32	s15, s15, s10
 800754a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800754e:	ee17 3a90 	vmov	r3, s15
 8007552:	f303 0307 	ssat	r3, #8, r3
 8007556:	f802 3b01 	strb.w	r3, [r2], #1
 800755a:	42a2      	cmp	r2, r4
 800755c:	d1e6      	bne.n	800752c <node_convert+0xf0>
 800755e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007562:	f3c3 11c6 	ubfx	r1, r3, #7, #7
 8007566:	f003 067f 	and.w	r6, r3, #127	; 0x7f
 800756a:	f3c3 53c0 	ubfx	r3, r3, #23, #1
 800756e:	6890      	ldr	r0, [r2, #8]
 8007570:	1b8e      	subs	r6, r1, r6
 8007572:	2908      	cmp	r1, #8
 8007574:	4622      	mov	r2, r4
 8007576:	4629      	mov	r1, r5
 8007578:	f106 0640 	add.w	r6, r6, #64	; 0x40
 800757c:	eba6 0603 	sub.w	r6, r6, r3
 8007580:	f000 808b 	beq.w	800769a <node_convert+0x25e>
 8007584:	f007 f87e 	bl	800e684 <arm_q15_to_float>
 8007588:	2e00      	cmp	r6, #0
 800758a:	d0a4      	beq.n	80074d6 <node_convert+0x9a>
 800758c:	ee07 6a90 	vmov	s15, r6
 8007590:	eeb0 0a00 	vmov.f32	s0, #0	; 0x40000000  2.0
 8007594:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8007598:	f009 feba 	bl	8011310 <powf>
 800759c:	2c00      	cmp	r4, #0
 800759e:	d09a      	beq.n	80074d6 <node_convert+0x9a>
 80075a0:	2300      	movs	r3, #0
 80075a2:	ecf5 7a01 	vldmia	r5!, {s15}
 80075a6:	3301      	adds	r3, #1
 80075a8:	ee67 7a80 	vmul.f32	s15, s15, s0
 80075ac:	429c      	cmp	r4, r3
 80075ae:	ed45 7a01 	vstr	s15, [r5, #-4]
 80075b2:	d1f6      	bne.n	80075a2 <node_convert+0x166>
 80075b4:	e78f      	b.n	80074d6 <node_convert+0x9a>
 80075b6:	b358      	cbz	r0, 8007610 <node_convert+0x1d4>
 80075b8:	ed9f 7a47 	vldr	s14, [pc, #284]	; 80076d8 <node_convert+0x29c>
 80075bc:	4618      	mov	r0, r3
 80075be:	e77a      	b.n	80074b6 <node_convert+0x7a>
 80075c0:	b133      	cbz	r3, 80075d0 <node_convert+0x194>
 80075c2:	eddf 6a45 	vldr	s13, [pc, #276]	; 80076d8 <node_convert+0x29c>
 80075c6:	eef0 7a66 	vmov.f32	s15, s13
 80075ca:	e7a4      	b.n	8007516 <node_convert+0xda>
 80075cc:	2b00      	cmp	r3, #0
 80075ce:	d1f8      	bne.n	80075c2 <node_convert+0x186>
 80075d0:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 80075d4:	eddf 7a40 	vldr	s15, [pc, #256]	; 80076d8 <node_convert+0x29c>
 80075d8:	2c00      	cmp	r4, #0
 80075da:	f43f af7c 	beq.w	80074d6 <node_convert+0x9a>
 80075de:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80075e2:	4414      	add	r4, r2
 80075e4:	ee87 6a27 	vdiv.f32	s12, s14, s15
 80075e8:	ecb5 7a01 	vldmia	r5!, {s14}
 80075ec:	eef0 7a66 	vmov.f32	s15, s13
 80075f0:	eee7 7a06 	vfma.f32	s15, s14, s12
 80075f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80075f8:	ee17 3a90 	vmov	r3, s15
 80075fc:	f383 0308 	usat	r3, #8, r3
 8007600:	f802 3b01 	strb.w	r3, [r2], #1
 8007604:	42a2      	cmp	r2, r4
 8007606:	d1ef      	bne.n	80075e8 <node_convert+0x1ac>
 8007608:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800760c:	2800      	cmp	r0, #0
 800760e:	d147      	bne.n	80076a0 <node_convert+0x264>
 8007610:	ed9f 7a31 	vldr	s14, [pc, #196]	; 80076d8 <node_convert+0x29c>
 8007614:	2c00      	cmp	r4, #0
 8007616:	f43f af5e 	beq.w	80074d6 <node_convert+0x9a>
 800761a:	4629      	mov	r1, r5
 800761c:	4414      	add	r4, r2
 800761e:	f812 3b01 	ldrb.w	r3, [r2], #1
 8007622:	1a1b      	subs	r3, r3, r0
 8007624:	42a2      	cmp	r2, r4
 8007626:	ee07 3a90 	vmov	s15, r3
 800762a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800762e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8007632:	ece1 7a01 	vstmia	r1!, {s15}
 8007636:	d1f2      	bne.n	800761e <node_convert+0x1e2>
 8007638:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800763c:	7818      	ldrb	r0, [r3, #0]
 800763e:	e7e9      	b.n	8007614 <node_convert+0x1d8>
 8007640:	2401      	movs	r4, #1
 8007642:	e719      	b.n	8007478 <node_convert+0x3c>
 8007644:	683a      	ldr	r2, [r7, #0]
 8007646:	f3c2 18c6 	ubfx	r8, r2, #7, #7
 800764a:	f002 037f 	and.w	r3, r2, #127	; 0x7f
 800764e:	f3c2 52c0 	ubfx	r2, r2, #23, #1
 8007652:	eba8 0303 	sub.w	r3, r8, r3
 8007656:	3340      	adds	r3, #64	; 0x40
 8007658:	1a9b      	subs	r3, r3, r2
 800765a:	d014      	beq.n	8007686 <node_convert+0x24a>
 800765c:	425b      	negs	r3, r3
 800765e:	eeb0 0a00 	vmov.f32	s0, #0	; 0x40000000  2.0
 8007662:	ee00 3a90 	vmov	s1, r3
 8007666:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 800766a:	f009 fe51 	bl	8011310 <powf>
 800766e:	b154      	cbz	r4, 8007686 <node_convert+0x24a>
 8007670:	4633      	mov	r3, r6
 8007672:	462a      	mov	r2, r5
 8007674:	ecf2 7a01 	vldmia	r2!, {s15}
 8007678:	3301      	adds	r3, #1
 800767a:	ee67 7a80 	vmul.f32	s15, s15, s0
 800767e:	42a3      	cmp	r3, r4
 8007680:	ed42 7a01 	vstr	s15, [r2, #-4]
 8007684:	d1f6      	bne.n	8007674 <node_convert+0x238>
 8007686:	f1b8 0f08 	cmp.w	r8, #8
 800768a:	d00d      	beq.n	80076a8 <node_convert+0x26c>
 800768c:	4622      	mov	r2, r4
 800768e:	68b9      	ldr	r1, [r7, #8]
 8007690:	4628      	mov	r0, r5
 8007692:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007696:	f006 be73 	b.w	800e380 <arm_float_to_q15>
 800769a:	f007 f859 	bl	800e750 <arm_q7_to_float>
 800769e:	e773      	b.n	8007588 <node_convert+0x14c>
 80076a0:	ed9f 7a0d 	vldr	s14, [pc, #52]	; 80076d8 <node_convert+0x29c>
 80076a4:	4630      	mov	r0, r6
 80076a6:	e706      	b.n	80074b6 <node_convert+0x7a>
 80076a8:	4622      	mov	r2, r4
 80076aa:	68b9      	ldr	r1, [r7, #8]
 80076ac:	4628      	mov	r0, r5
 80076ae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80076b2:	f006 bf1b 	b.w	800e4ec <arm_float_to_q7>
 80076b6:	684b      	ldr	r3, [r1, #4]
 80076b8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80076bc:	781b      	ldrb	r3, [r3, #0]
 80076be:	ee06 3a90 	vmov	s13, r3
 80076c2:	eef8 6a66 	vcvt.f32.u32	s13, s13
 80076c6:	ee76 6a87 	vadd.f32	s13, s13, s14
 80076ca:	e785      	b.n	80075d8 <node_convert+0x19c>
 80076cc:	2300      	movs	r3, #0
 80076ce:	685b      	ldr	r3, [r3, #4]
 80076d0:	deff      	udf	#255	; 0xff
 80076d2:	bf00      	nop
 80076d4:	3efffffc 	.word	0x3efffffc
 80076d8:	00000000 	.word	0x00000000

080076dc <core_mem_alloc>:
 80076dc:	b150      	cbz	r0, 80076f4 <core_mem_alloc+0x18>
 80076de:	3004      	adds	r0, #4
 80076e0:	b508      	push	{r3, lr}
 80076e2:	f7fc f8dd 	bl	80038a0 <__wrap_malloc>
 80076e6:	4603      	mov	r3, r0
 80076e8:	b110      	cbz	r0, 80076f0 <core_mem_alloc+0x14>
 80076ea:	3004      	adds	r0, #4
 80076ec:	601b      	str	r3, [r3, #0]
 80076ee:	bd08      	pop	{r3, pc}
 80076f0:	2000      	movs	r0, #0
 80076f2:	bd08      	pop	{r3, pc}
 80076f4:	2000      	movs	r0, #0
 80076f6:	4770      	bx	lr

080076f8 <core_mem_free>:
 80076f8:	b150      	cbz	r0, 8007710 <core_mem_free+0x18>
 80076fa:	b508      	push	{r3, lr}
 80076fc:	1f03      	subs	r3, r0, #4
 80076fe:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8007702:	4293      	cmp	r3, r2
 8007704:	d103      	bne.n	800770e <core_mem_free+0x16>
 8007706:	4618      	mov	r0, r3
 8007708:	f7fc f8f2 	bl	80038f0 <__wrap_free>
 800770c:	2000      	movs	r0, #0
 800770e:	bd08      	pop	{r3, pc}
 8007710:	4770      	bx	lr
 8007712:	bf00      	nop

08007714 <ai_check_custom_types>:
 8007714:	b082      	sub	sp, #8
 8007716:	4b12      	ldr	r3, [pc, #72]	; (8007760 <ai_check_custom_types+0x4c>)
 8007718:	9301      	str	r3, [sp, #4]
 800771a:	b118      	cbz	r0, 8007724 <ai_check_custom_types+0x10>
 800771c:	7803      	ldrb	r3, [r0, #0]
 800771e:	2b03      	cmp	r3, #3
 8007720:	d002      	beq.n	8007728 <ai_check_custom_types+0x14>
 8007722:	2000      	movs	r0, #0
 8007724:	b002      	add	sp, #8
 8007726:	4770      	bx	lr
 8007728:	f89d 2004 	ldrb.w	r2, [sp, #4]
 800772c:	4293      	cmp	r3, r2
 800772e:	d004      	beq.n	800773a <ai_check_custom_types+0x26>
 8007730:	2001      	movs	r0, #1
 8007732:	f080 0001 	eor.w	r0, r0, #1
 8007736:	b002      	add	sp, #8
 8007738:	4770      	bx	lr
 800773a:	7842      	ldrb	r2, [r0, #1]
 800773c:	3001      	adds	r0, #1
 800773e:	f89d 3005 	ldrb.w	r3, [sp, #5]
 8007742:	429a      	cmp	r2, r3
 8007744:	d1f4      	bne.n	8007730 <ai_check_custom_types+0x1c>
 8007746:	f810 2f01 	ldrb.w	r2, [r0, #1]!
 800774a:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800774e:	429a      	cmp	r2, r3
 8007750:	d1ee      	bne.n	8007730 <ai_check_custom_types+0x1c>
 8007752:	7842      	ldrb	r2, [r0, #1]
 8007754:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8007758:	429a      	cmp	r2, r3
 800775a:	d1e9      	bne.n	8007730 <ai_check_custom_types+0x1c>
 800775c:	2000      	movs	r0, #0
 800775e:	e7e8      	b.n	8007732 <ai_check_custom_types+0x1e>
 8007760:	84048403 	.word	0x84048403

08007764 <ai_layer_type_name>:
 8007764:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
 8007768:	d809      	bhi.n	800777e <ai_layer_type_name+0x1a>
 800776a:	f5b0 7f99 	cmp.w	r0, #306	; 0x132
 800776e:	d217      	bcs.n	80077a0 <ai_layer_type_name+0x3c>
 8007770:	f5b0 7f82 	cmp.w	r0, #260	; 0x104
 8007774:	d80e      	bhi.n	8007794 <ai_layer_type_name+0x30>
 8007776:	28ff      	cmp	r0, #255	; 0xff
 8007778:	d805      	bhi.n	8007786 <ai_layer_type_name+0x22>
 800777a:	480f      	ldr	r0, [pc, #60]	; (80077b8 <ai_layer_type_name+0x54>)
 800777c:	4770      	bx	lr
 800777e:	f5a0 73c0 	sub.w	r3, r0, #384	; 0x180
 8007782:	2b03      	cmp	r3, #3
 8007784:	d8f9      	bhi.n	800777a <ai_layer_type_name+0x16>
 8007786:	f5a0 7080 	sub.w	r0, r0, #256	; 0x100
 800778a:	4b0c      	ldr	r3, [pc, #48]	; (80077bc <ai_layer_type_name+0x58>)
 800778c:	b280      	uxth	r0, r0
 800778e:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8007792:	4770      	bx	lr
 8007794:	f5a0 7383 	sub.w	r3, r0, #262	; 0x106
 8007798:	2b27      	cmp	r3, #39	; 0x27
 800779a:	d9f4      	bls.n	8007786 <ai_layer_type_name+0x22>
 800779c:	4806      	ldr	r0, [pc, #24]	; (80077b8 <ai_layer_type_name+0x54>)
 800779e:	4770      	bx	lr
 80077a0:	f5a0 7399 	sub.w	r3, r0, #306	; 0x132
 80077a4:	2201      	movs	r2, #1
 80077a6:	4906      	ldr	r1, [pc, #24]	; (80077c0 <ai_layer_type_name+0x5c>)
 80077a8:	b29b      	uxth	r3, r3
 80077aa:	fa02 f303 	lsl.w	r3, r2, r3
 80077ae:	420b      	tst	r3, r1
 80077b0:	d1e9      	bne.n	8007786 <ai_layer_type_name+0x22>
 80077b2:	4801      	ldr	r0, [pc, #4]	; (80077b8 <ai_layer_type_name+0x54>)
 80077b4:	4770      	bx	lr
 80077b6:	bf00      	nop
 80077b8:	080364b4 	.word	0x080364b4
 80077bc:	080366a0 	.word	0x080366a0
 80077c0:	00012007 	.word	0x00012007

080077c4 <ai_layers_init_all>:
 80077c4:	2100      	movs	r1, #0
 80077c6:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80077c8:	b13b      	cbz	r3, 80077da <ai_layers_init_all+0x16>
 80077ca:	691a      	ldr	r2, [r3, #16]
 80077cc:	3101      	adds	r1, #1
 80077ce:	60d8      	str	r0, [r3, #12]
 80077d0:	429a      	cmp	r2, r3
 80077d2:	4613      	mov	r3, r2
 80077d4:	d001      	beq.n	80077da <ai_layers_init_all+0x16>
 80077d6:	2a00      	cmp	r2, #0
 80077d8:	d1f6      	bne.n	80077c8 <ai_layers_init_all+0x4>
 80077da:	4608      	mov	r0, r1
 80077dc:	4770      	bx	lr
 80077de:	bf00      	nop

080077e0 <ai_layers_post_init_all>:
 80077e0:	b538      	push	{r3, r4, r5, lr}
 80077e2:	2500      	movs	r5, #0
 80077e4:	6b44      	ldr	r4, [r0, #52]	; 0x34
 80077e6:	b16c      	cbz	r4, 8007804 <ai_layers_post_init_all+0x24>
 80077e8:	6863      	ldr	r3, [r4, #4]
 80077ea:	07db      	lsls	r3, r3, #31
 80077ec:	d504      	bpl.n	80077f8 <ai_layers_post_init_all+0x18>
 80077ee:	6a23      	ldr	r3, [r4, #32]
 80077f0:	4620      	mov	r0, r4
 80077f2:	b10b      	cbz	r3, 80077f8 <ai_layers_post_init_all+0x18>
 80077f4:	3501      	adds	r5, #1
 80077f6:	4798      	blx	r3
 80077f8:	6923      	ldr	r3, [r4, #16]
 80077fa:	42a3      	cmp	r3, r4
 80077fc:	461c      	mov	r4, r3
 80077fe:	d001      	beq.n	8007804 <ai_layers_post_init_all+0x24>
 8007800:	2b00      	cmp	r3, #0
 8007802:	d1f0      	bne.n	80077e6 <ai_layers_post_init_all+0x6>
 8007804:	4628      	mov	r0, r5
 8007806:	bd38      	pop	{r3, r4, r5, pc}

08007808 <ai_layers_forward_all>:
 8007808:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800780c:	f8d0 803c 	ldr.w	r8, [r0, #60]	; 0x3c
 8007810:	4604      	mov	r4, r0
 8007812:	f1b8 0f00 	cmp.w	r8, #0
 8007816:	d02a      	beq.n	800786e <ai_layers_forward_all+0x66>
 8007818:	6b41      	ldr	r1, [r0, #52]	; 0x34
 800781a:	6381      	str	r1, [r0, #56]	; 0x38
 800781c:	b319      	cbz	r1, 8007866 <ai_layers_forward_all+0x5e>
 800781e:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8007820:	2001      	movs	r0, #1
 8007822:	47c0      	blx	r8
 8007824:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 8007826:	b1f6      	cbz	r6, 8007866 <ai_layers_forward_all+0x5e>
 8007828:	2700      	movs	r7, #0
 800782a:	4631      	mov	r1, r6
 800782c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800782e:	2002      	movs	r0, #2
 8007830:	47c0      	blx	r8
 8007832:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 8007834:	4628      	mov	r0, r5
 8007836:	696b      	ldr	r3, [r5, #20]
 8007838:	4798      	blx	r3
 800783a:	692e      	ldr	r6, [r5, #16]
 800783c:	2003      	movs	r0, #3
 800783e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007840:	42b5      	cmp	r5, r6
 8007842:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8007844:	d007      	beq.n	8007856 <ai_layers_forward_all+0x4e>
 8007846:	47c0      	blx	r8
 8007848:	3701      	adds	r7, #1
 800784a:	63a6      	str	r6, [r4, #56]	; 0x38
 800784c:	2e00      	cmp	r6, #0
 800784e:	d1ec      	bne.n	800782a <ai_layers_forward_all+0x22>
 8007850:	4638      	mov	r0, r7
 8007852:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007856:	2003      	movs	r0, #3
 8007858:	3701      	adds	r7, #1
 800785a:	47c0      	blx	r8
 800785c:	2300      	movs	r3, #0
 800785e:	4638      	mov	r0, r7
 8007860:	63a3      	str	r3, [r4, #56]	; 0x38
 8007862:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007866:	2700      	movs	r7, #0
 8007868:	4638      	mov	r0, r7
 800786a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800786e:	6b45      	ldr	r5, [r0, #52]	; 0x34
 8007870:	6385      	str	r5, [r0, #56]	; 0x38
 8007872:	2d00      	cmp	r5, #0
 8007874:	d0f7      	beq.n	8007866 <ai_layers_forward_all+0x5e>
 8007876:	4647      	mov	r7, r8
 8007878:	696b      	ldr	r3, [r5, #20]
 800787a:	4628      	mov	r0, r5
 800787c:	4798      	blx	r3
 800787e:	462b      	mov	r3, r5
 8007880:	692d      	ldr	r5, [r5, #16]
 8007882:	429d      	cmp	r5, r3
 8007884:	d004      	beq.n	8007890 <ai_layers_forward_all+0x88>
 8007886:	3701      	adds	r7, #1
 8007888:	63a5      	str	r5, [r4, #56]	; 0x38
 800788a:	2d00      	cmp	r5, #0
 800788c:	d1f4      	bne.n	8007878 <ai_layers_forward_all+0x70>
 800788e:	e7df      	b.n	8007850 <ai_layers_forward_all+0x48>
 8007890:	2300      	movs	r3, #0
 8007892:	3701      	adds	r7, #1
 8007894:	63a3      	str	r3, [r4, #56]	; 0x38
 8007896:	e7db      	b.n	8007850 <ai_layers_forward_all+0x48>

08007898 <ai_layers_destroy_all>:
 8007898:	b538      	push	{r3, r4, r5, lr}
 800789a:	2500      	movs	r5, #0
 800789c:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800789e:	b16c      	cbz	r4, 80078bc <ai_layers_destroy_all+0x24>
 80078a0:	6863      	ldr	r3, [r4, #4]
 80078a2:	075b      	lsls	r3, r3, #29
 80078a4:	d504      	bpl.n	80078b0 <ai_layers_destroy_all+0x18>
 80078a6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80078a8:	4620      	mov	r0, r4
 80078aa:	b10b      	cbz	r3, 80078b0 <ai_layers_destroy_all+0x18>
 80078ac:	3501      	adds	r5, #1
 80078ae:	4798      	blx	r3
 80078b0:	6923      	ldr	r3, [r4, #16]
 80078b2:	42a3      	cmp	r3, r4
 80078b4:	461c      	mov	r4, r3
 80078b6:	d001      	beq.n	80078bc <ai_layers_destroy_all+0x24>
 80078b8:	2b00      	cmp	r3, #0
 80078ba:	d1f0      	bne.n	800789e <ai_layers_destroy_all+0x6>
 80078bc:	4628      	mov	r0, r5
 80078be:	bd38      	pop	{r3, r4, r5, pc}

080078c0 <func_dummy>:
 80078c0:	4770      	bx	lr
 80078c2:	bf00      	nop

080078c4 <forward_conv2d_sssa8_ch>:
 80078c4:	6982      	ldr	r2, [r0, #24]
 80078c6:	8813      	ldrh	r3, [r2, #0]
 80078c8:	2b00      	cmp	r3, #0
 80078ca:	f000 8123 	beq.w	8007b14 <forward_conv2d_sssa8_ch+0x250>
 80078ce:	6852      	ldr	r2, [r2, #4]
 80078d0:	6851      	ldr	r1, [r2, #4]
 80078d2:	b101      	cbz	r1, 80078d6 <forward_conv2d_sssa8_ch+0x12>
 80078d4:	6809      	ldr	r1, [r1, #0]
 80078d6:	2b01      	cmp	r3, #1
 80078d8:	f000 813e 	beq.w	8007b58 <forward_conv2d_sssa8_ch+0x294>
 80078dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80078e0:	ed2d 8b02 	vpush	{d8}
 80078e4:	f8d2 9010 	ldr.w	r9, [r2, #16]
 80078e8:	b0a7      	sub	sp, #156	; 0x9c
 80078ea:	f1b9 0f00 	cmp.w	r9, #0
 80078ee:	d001      	beq.n	80078f4 <forward_conv2d_sssa8_ch+0x30>
 80078f0:	f8d9 9000 	ldr.w	r9, [r9]
 80078f4:	2b02      	cmp	r3, #2
 80078f6:	f000 810a 	beq.w	8007b0e <forward_conv2d_sssa8_ch+0x24a>
 80078fa:	69d4      	ldr	r4, [r2, #28]
 80078fc:	2c00      	cmp	r4, #0
 80078fe:	f000 8125 	beq.w	8007b4c <forward_conv2d_sssa8_ch+0x288>
 8007902:	8b15      	ldrh	r5, [r2, #24]
 8007904:	f8d4 c000 	ldr.w	ip, [r4]
 8007908:	2d01      	cmp	r5, #1
 800790a:	f200 8105 	bhi.w	8007b18 <forward_conv2d_sssa8_ch+0x254>
 800790e:	2500      	movs	r5, #0
 8007910:	2b03      	cmp	r3, #3
 8007912:	f000 8124 	beq.w	8007b5e <forward_conv2d_sssa8_ch+0x29a>
 8007916:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8007918:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800791a:	2b00      	cmp	r3, #0
 800791c:	f000 8119 	beq.w	8007b52 <forward_conv2d_sssa8_ch+0x28e>
 8007920:	681e      	ldr	r6, [r3, #0]
 8007922:	921a      	str	r2, [sp, #104]	; 0x68
 8007924:	9613      	str	r6, [sp, #76]	; 0x4c
 8007926:	2a00      	cmp	r2, #0
 8007928:	f000 8107 	beq.w	8007b3a <forward_conv2d_sssa8_ch+0x276>
 800792c:	685f      	ldr	r7, [r3, #4]
 800792e:	4632      	mov	r2, r6
 8007930:	69ab      	ldr	r3, [r5, #24]
 8007932:	f8d1 800c 	ldr.w	r8, [r1, #12]
 8007936:	68fd      	ldr	r5, [r7, #12]
 8007938:	689b      	ldr	r3, [r3, #8]
 800793a:	f8b8 6004 	ldrh.w	r6, [r8, #4]
 800793e:	9325      	str	r3, [sp, #148]	; 0x94
 8007940:	686b      	ldr	r3, [r5, #4]
 8007942:	ee08 6a10 	vmov	s16, r6
 8007946:	f8d0 e03c 	ldr.w	lr, [r0, #60]	; 0x3c
 800794a:	b29e      	uxth	r6, r3
 800794c:	f8dc a00c 	ldr.w	sl, [ip, #12]
 8007950:	6992      	ldr	r2, [r2, #24]
 8007952:	9612      	str	r6, [sp, #72]	; 0x48
 8007954:	68ee      	ldr	r6, [r5, #12]
 8007956:	68ad      	ldr	r5, [r5, #8]
 8007958:	f8d2 b008 	ldr.w	fp, [r2, #8]
 800795c:	951c      	str	r5, [sp, #112]	; 0x70
 800795e:	f8d8 500c 	ldr.w	r5, [r8, #12]
 8007962:	961b      	str	r6, [sp, #108]	; 0x6c
 8007964:	951d      	str	r5, [sp, #116]	; 0x74
 8007966:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800796a:	951e      	str	r5, [sp, #120]	; 0x78
 800796c:	8d05      	ldrh	r5, [r0, #40]	; 0x28
 800796e:	951f      	str	r5, [sp, #124]	; 0x7c
 8007970:	8d85      	ldrh	r5, [r0, #44]	; 0x2c
 8007972:	9520      	str	r5, [sp, #128]	; 0x80
 8007974:	f8be 5000 	ldrh.w	r5, [lr]
 8007978:	9521      	str	r5, [sp, #132]	; 0x84
 800797a:	f8be 5004 	ldrh.w	r5, [lr, #4]
 800797e:	9522      	str	r5, [sp, #136]	; 0x88
 8007980:	f8da 5008 	ldr.w	r5, [sl, #8]
 8007984:	9523      	str	r5, [sp, #140]	; 0x8c
 8007986:	f8da 5004 	ldr.w	r5, [sl, #4]
 800798a:	9524      	str	r5, [sp, #144]	; 0x90
 800798c:	2c00      	cmp	r4, #0
 800798e:	f000 80cb 	beq.w	8007b28 <forward_conv2d_sssa8_ch+0x264>
 8007992:	68a4      	ldr	r4, [r4, #8]
 8007994:	2c00      	cmp	r4, #0
 8007996:	f000 80c7 	beq.w	8007b28 <forward_conv2d_sssa8_ch+0x264>
 800799a:	f8d4 8018 	ldr.w	r8, [r4, #24]
 800799e:	f1b8 0f00 	cmp.w	r8, #0
 80079a2:	bf18      	it	ne
 80079a4:	46a0      	movne	r8, r4
 80079a6:	680d      	ldr	r5, [r1, #0]
 80079a8:	683e      	ldr	r6, [r7, #0]
 80079aa:	f8dc 4000 	ldr.w	r4, [ip]
 80079ae:	2d00      	cmp	r5, #0
 80079b0:	f000 80b7 	beq.w	8007b22 <forward_conv2d_sssa8_ch+0x25e>
 80079b4:	f8d5 e004 	ldr.w	lr, [r5, #4]
 80079b8:	f1be 0f00 	cmp.w	lr, #0
 80079bc:	f000 80b1 	beq.w	8007b22 <forward_conv2d_sssa8_ch+0x25e>
 80079c0:	f8b5 a002 	ldrh.w	sl, [r5, #2]
 80079c4:	f1ba 0f00 	cmp.w	sl, #0
 80079c8:	f000 80ab 	beq.w	8007b22 <forward_conv2d_sssa8_ch+0x25e>
 80079cc:	f8de e000 	ldr.w	lr, [lr]
 80079d0:	ed9e 0a00 	vldr	s0, [lr]
 80079d4:	2e00      	cmp	r6, #0
 80079d6:	f000 80a1 	beq.w	8007b1c <forward_conv2d_sssa8_ch+0x258>
 80079da:	f8d6 e004 	ldr.w	lr, [r6, #4]
 80079de:	f1be 0f00 	cmp.w	lr, #0
 80079e2:	f000 809b 	beq.w	8007b1c <forward_conv2d_sssa8_ch+0x258>
 80079e6:	f8b6 a002 	ldrh.w	sl, [r6, #2]
 80079ea:	f1ba 0f00 	cmp.w	sl, #0
 80079ee:	f000 8095 	beq.w	8007b1c <forward_conv2d_sssa8_ch+0x258>
 80079f2:	f8de e000 	ldr.w	lr, [lr]
 80079f6:	edde 0a00 	vldr	s1, [lr]
 80079fa:	f8d1 e018 	ldr.w	lr, [r1, #24]
 80079fe:	f8dc 1018 	ldr.w	r1, [ip, #24]
 8007a02:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
 8007a06:	6889      	ldr	r1, [r1, #8]
 8007a08:	f8de a008 	ldr.w	sl, [lr, #8]
 8007a0c:	9116      	str	r1, [sp, #88]	; 0x58
 8007a0e:	69b9      	ldr	r1, [r7, #24]
 8007a10:	9014      	str	r0, [sp, #80]	; 0x50
 8007a12:	6889      	ldr	r1, [r1, #8]
 8007a14:	9115      	str	r1, [sp, #84]	; 0x54
 8007a16:	b114      	cbz	r4, 8007a1e <forward_conv2d_sssa8_ch+0x15a>
 8007a18:	6864      	ldr	r4, [r4, #4]
 8007a1a:	b104      	cbz	r4, 8007a1e <forward_conv2d_sssa8_ch+0x15a>
 8007a1c:	6824      	ldr	r4, [r4, #0]
 8007a1e:	b29b      	uxth	r3, r3
 8007a20:	b145      	cbz	r5, 8007a34 <forward_conv2d_sssa8_ch+0x170>
 8007a22:	6869      	ldr	r1, [r5, #4]
 8007a24:	2900      	cmp	r1, #0
 8007a26:	f000 808d 	beq.w	8007b44 <forward_conv2d_sssa8_ch+0x280>
 8007a2a:	886d      	ldrh	r5, [r5, #2]
 8007a2c:	b115      	cbz	r5, 8007a34 <forward_conv2d_sssa8_ch+0x170>
 8007a2e:	6849      	ldr	r1, [r1, #4]
 8007a30:	f991 5000 	ldrsb.w	r5, [r1]
 8007a34:	b146      	cbz	r6, 8007a48 <forward_conv2d_sssa8_ch+0x184>
 8007a36:	6871      	ldr	r1, [r6, #4]
 8007a38:	2900      	cmp	r1, #0
 8007a3a:	f000 8085 	beq.w	8007b48 <forward_conv2d_sssa8_ch+0x284>
 8007a3e:	8876      	ldrh	r6, [r6, #2]
 8007a40:	b116      	cbz	r6, 8007a48 <forward_conv2d_sssa8_ch+0x184>
 8007a42:	6849      	ldr	r1, [r1, #4]
 8007a44:	f991 6000 	ldrsb.w	r6, [r1]
 8007a48:	9319      	str	r3, [sp, #100]	; 0x64
 8007a4a:	edcd 0a18 	vstr	s1, [sp, #96]	; 0x60
 8007a4e:	ed8d 0a17 	vstr	s0, [sp, #92]	; 0x5c
 8007a52:	e9d2 0100 	ldrd	r0, r1, [r2]
 8007a56:	f006 ff4b 	bl	800e8f0 <ai_array_get_byte_size>
 8007a5a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8007a5c:	eddd 0a18 	vldr	s1, [sp, #96]	; 0x60
 8007a60:	465a      	mov	r2, fp
 8007a62:	eba0 0343 	sub.w	r3, r0, r3, lsl #1
 8007a66:	ed9d 0a17 	vldr	s0, [sp, #92]	; 0x5c
 8007a6a:	4620      	mov	r0, r4
 8007a6c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8007a6e:	445b      	add	r3, fp
 8007a70:	2401      	movs	r4, #1
 8007a72:	f003 fcc7 	bl	800b404 <align_factor_ch>
 8007a76:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8007a78:	699b      	ldr	r3, [r3, #24]
 8007a7a:	e9d3 0100 	ldrd	r0, r1, [r3]
 8007a7e:	f006 ff37 	bl	800e8f0 <ai_array_get_byte_size>
 8007a82:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8007a84:	f8bd 2074 	ldrh.w	r2, [sp, #116]	; 0x74
 8007a88:	930c      	str	r3, [sp, #48]	; 0x30
 8007a8a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8007a8c:	f8bd 1078 	ldrh.w	r1, [sp, #120]	; 0x78
 8007a90:	9509      	str	r5, [sp, #36]	; 0x24
 8007a92:	e9cd 630a 	strd	r6, r3, [sp, #40]	; 0x28
 8007a96:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8007a98:	9308      	str	r3, [sp, #32]
 8007a9a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8007a9c:	9307      	str	r3, [sp, #28]
 8007a9e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8007aa0:	9306      	str	r3, [sp, #24]
 8007aa2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8007aa4:	9305      	str	r3, [sp, #20]
 8007aa6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8007aa8:	9304      	str	r3, [sp, #16]
 8007aaa:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8007aac:	9301      	str	r3, [sp, #4]
 8007aae:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8007ab0:	9300      	str	r3, [sp, #0]
 8007ab2:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8007ab6:	930d      	str	r3, [sp, #52]	; 0x34
 8007ab8:	f8bd 308c 	ldrh.w	r3, [sp, #140]	; 0x8c
 8007abc:	9303      	str	r3, [sp, #12]
 8007abe:	f8bd 3090 	ldrh.w	r3, [sp, #144]	; 0x90
 8007ac2:	9302      	str	r3, [sp, #8]
 8007ac4:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8007ac8:	e9cd 0b10 	strd	r0, fp, [sp, #64]	; 0x40
 8007acc:	930e      	str	r3, [sp, #56]	; 0x38
 8007ace:	4650      	mov	r0, sl
 8007ad0:	ee18 3a10 	vmov	r3, s16
 8007ad4:	940f      	str	r4, [sp, #60]	; 0x3c
 8007ad6:	f000 ff45 	bl	8008964 <forward_lite_conv2d_sssa8_ch>
 8007ada:	68bb      	ldr	r3, [r7, #8]
 8007adc:	4622      	mov	r2, r4
 8007ade:	0a1b      	lsrs	r3, r3, #8
 8007ae0:	d008      	beq.n	8007af4 <forward_conv2d_sssa8_ch+0x230>
 8007ae2:	68f8      	ldr	r0, [r7, #12]
 8007ae4:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8007ae8:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8007aec:	4298      	cmp	r0, r3
 8007aee:	fb01 f202 	mul.w	r2, r1, r2
 8007af2:	d1f9      	bne.n	8007ae8 <forward_conv2d_sssa8_ch+0x224>
 8007af4:	eddd 7a1a 	vldr	s15, [sp, #104]	; 0x68
 8007af8:	4643      	mov	r3, r8
 8007afa:	4639      	mov	r1, r7
 8007afc:	4648      	mov	r0, r9
 8007afe:	ee17 ca90 	vmov	ip, s15
 8007b02:	b027      	add	sp, #156	; 0x9c
 8007b04:	ecbd 8b02 	vpop	{d8}
 8007b08:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007b0c:	4760      	bx	ip
 8007b0e:	2300      	movs	r3, #0
 8007b10:	685b      	ldr	r3, [r3, #4]
 8007b12:	deff      	udf	#255	; 0xff
 8007b14:	685b      	ldr	r3, [r3, #4]
 8007b16:	deff      	udf	#255	; 0xff
 8007b18:	6865      	ldr	r5, [r4, #4]
 8007b1a:	e6f9      	b.n	8007910 <forward_conv2d_sssa8_ch+0x4c>
 8007b1c:	eddf 0a12 	vldr	s1, [pc, #72]	; 8007b68 <forward_conv2d_sssa8_ch+0x2a4>
 8007b20:	e76b      	b.n	80079fa <forward_conv2d_sssa8_ch+0x136>
 8007b22:	ed9f 0a11 	vldr	s0, [pc, #68]	; 8007b68 <forward_conv2d_sssa8_ch+0x2a4>
 8007b26:	e755      	b.n	80079d4 <forward_conv2d_sssa8_ch+0x110>
 8007b28:	f8d0 8020 	ldr.w	r8, [r0, #32]
 8007b2c:	f1b8 0f00 	cmp.w	r8, #0
 8007b30:	f43f af39 	beq.w	80079a6 <forward_conv2d_sssa8_ch+0xe2>
 8007b34:	f8d8 8008 	ldr.w	r8, [r8, #8]
 8007b38:	e735      	b.n	80079a6 <forward_conv2d_sssa8_ch+0xe2>
 8007b3a:	4b0c      	ldr	r3, [pc, #48]	; (8007b6c <forward_conv2d_sssa8_ch+0x2a8>)
 8007b3c:	464f      	mov	r7, r9
 8007b3e:	4632      	mov	r2, r6
 8007b40:	931a      	str	r3, [sp, #104]	; 0x68
 8007b42:	e6f5      	b.n	8007930 <forward_conv2d_sssa8_ch+0x6c>
 8007b44:	460d      	mov	r5, r1
 8007b46:	e775      	b.n	8007a34 <forward_conv2d_sssa8_ch+0x170>
 8007b48:	460e      	mov	r6, r1
 8007b4a:	e77d      	b.n	8007a48 <forward_conv2d_sssa8_ch+0x184>
 8007b4c:	46a4      	mov	ip, r4
 8007b4e:	4625      	mov	r5, r4
 8007b50:	e6de      	b.n	8007910 <forward_conv2d_sssa8_ch+0x4c>
 8007b52:	b93a      	cbnz	r2, 8007b64 <forward_conv2d_sssa8_ch+0x2a0>
 8007b54:	6993      	ldr	r3, [r2, #24]
 8007b56:	deff      	udf	#255	; 0xff
 8007b58:	2300      	movs	r3, #0
 8007b5a:	685b      	ldr	r3, [r3, #4]
 8007b5c:	deff      	udf	#255	; 0xff
 8007b5e:	2300      	movs	r3, #0
 8007b60:	685b      	ldr	r3, [r3, #4]
 8007b62:	deff      	udf	#255	; 0xff
 8007b64:	68db      	ldr	r3, [r3, #12]
 8007b66:	deff      	udf	#255	; 0xff
 8007b68:	00000000 	.word	0x00000000
 8007b6c:	080078c1 	.word	0x080078c1

08007b70 <forward_dense_integer_SSSA>:
 8007b70:	6982      	ldr	r2, [r0, #24]
 8007b72:	8813      	ldrh	r3, [r2, #0]
 8007b74:	2b00      	cmp	r3, #0
 8007b76:	f000 80c8 	beq.w	8007d0a <forward_dense_integer_SSSA+0x19a>
 8007b7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007b7e:	6852      	ldr	r2, [r2, #4]
 8007b80:	b093      	sub	sp, #76	; 0x4c
 8007b82:	6854      	ldr	r4, [r2, #4]
 8007b84:	b104      	cbz	r4, 8007b88 <forward_dense_integer_SSSA+0x18>
 8007b86:	6824      	ldr	r4, [r4, #0]
 8007b88:	2b01      	cmp	r3, #1
 8007b8a:	f000 8161 	beq.w	8007e50 <forward_dense_integer_SSSA+0x2e0>
 8007b8e:	6911      	ldr	r1, [r2, #16]
 8007b90:	b101      	cbz	r1, 8007b94 <forward_dense_integer_SSSA+0x24>
 8007b92:	6809      	ldr	r1, [r1, #0]
 8007b94:	2b02      	cmp	r3, #2
 8007b96:	f000 815e 	beq.w	8007e56 <forward_dense_integer_SSSA+0x2e6>
 8007b9a:	69d5      	ldr	r5, [r2, #28]
 8007b9c:	2d00      	cmp	r5, #0
 8007b9e:	f000 8108 	beq.w	8007db2 <forward_dense_integer_SSSA+0x242>
 8007ba2:	8b16      	ldrh	r6, [r2, #24]
 8007ba4:	6828      	ldr	r0, [r5, #0]
 8007ba6:	2e01      	cmp	r6, #1
 8007ba8:	f240 812d 	bls.w	8007e06 <forward_dense_integer_SSSA+0x296>
 8007bac:	686d      	ldr	r5, [r5, #4]
 8007bae:	2b03      	cmp	r3, #3
 8007bb0:	f000 8154 	beq.w	8007e5c <forward_dense_integer_SSSA+0x2ec>
 8007bb4:	f8d2 9028 	ldr.w	r9, [r2, #40]	; 0x28
 8007bb8:	69ab      	ldr	r3, [r5, #24]
 8007bba:	f1b9 0f00 	cmp.w	r9, #0
 8007bbe:	f000 810f 	beq.w	8007de0 <forward_dense_integer_SSSA+0x270>
 8007bc2:	689b      	ldr	r3, [r3, #8]
 8007bc4:	68e2      	ldr	r2, [r4, #12]
 8007bc6:	930b      	str	r3, [sp, #44]	; 0x2c
 8007bc8:	68cb      	ldr	r3, [r1, #12]
 8007bca:	6856      	ldr	r6, [r2, #4]
 8007bcc:	f8d9 9000 	ldr.w	r9, [r9]
 8007bd0:	f8d4 e018 	ldr.w	lr, [r4, #24]
 8007bd4:	698d      	ldr	r5, [r1, #24]
 8007bd6:	960f      	str	r6, [sp, #60]	; 0x3c
 8007bd8:	e9d3 a201 	ldrd	sl, r2, [r3, #4]
 8007bdc:	68db      	ldr	r3, [r3, #12]
 8007bde:	fb03 f302 	mul.w	r3, r3, r2
 8007be2:	b2b2      	uxth	r2, r6
 8007be4:	930c      	str	r3, [sp, #48]	; 0x30
 8007be6:	fa1f f38a 	uxth.w	r3, sl
 8007bea:	f1b9 0f00 	cmp.w	r9, #0
 8007bee:	d003      	beq.n	8007bf8 <forward_dense_integer_SSSA+0x88>
 8007bf0:	f8d9 6018 	ldr.w	r6, [r9, #24]
 8007bf4:	f8d6 9008 	ldr.w	r9, [r6, #8]
 8007bf8:	6827      	ldr	r7, [r4, #0]
 8007bfa:	f8d0 b000 	ldr.w	fp, [r0]
 8007bfe:	680c      	ldr	r4, [r1, #0]
 8007c00:	6981      	ldr	r1, [r0, #24]
 8007c02:	2f00      	cmp	r7, #0
 8007c04:	f000 8083 	beq.w	8007d0e <forward_dense_integer_SSSA+0x19e>
 8007c08:	f8d7 c004 	ldr.w	ip, [r7, #4]
 8007c0c:	f1bc 0f00 	cmp.w	ip, #0
 8007c10:	f000 80b1 	beq.w	8007d76 <forward_dense_integer_SSSA+0x206>
 8007c14:	8878      	ldrh	r0, [r7, #2]
 8007c16:	2800      	cmp	r0, #0
 8007c18:	f000 809c 	beq.w	8007d54 <forward_dense_integer_SSSA+0x1e4>
 8007c1c:	f8dc 6000 	ldr.w	r6, [ip]
 8007c20:	edd6 7a00 	vldr	s15, [r6]
 8007c24:	2c00      	cmp	r4, #0
 8007c26:	f000 809a 	beq.w	8007d5e <forward_dense_integer_SSSA+0x1ee>
 8007c2a:	f8d4 8004 	ldr.w	r8, [r4, #4]
 8007c2e:	f1b8 0f00 	cmp.w	r8, #0
 8007c32:	f000 80a9 	beq.w	8007d88 <forward_dense_integer_SSSA+0x218>
 8007c36:	8860      	ldrh	r0, [r4, #2]
 8007c38:	2800      	cmp	r0, #0
 8007c3a:	d074      	beq.n	8007d26 <forward_dense_integer_SSSA+0x1b6>
 8007c3c:	68ae      	ldr	r6, [r5, #8]
 8007c3e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8007c42:	6889      	ldr	r1, [r1, #8]
 8007c44:	950d      	str	r5, [sp, #52]	; 0x34
 8007c46:	f8d8 5000 	ldr.w	r5, [r8]
 8007c4a:	ed95 0a00 	vldr	s0, [r5]
 8007c4e:	f1bc 0f00 	cmp.w	ip, #0
 8007c52:	d076      	beq.n	8007d42 <forward_dense_integer_SSSA+0x1d2>
 8007c54:	8878      	ldrh	r0, [r7, #2]
 8007c56:	2800      	cmp	r0, #0
 8007c58:	f000 80a3 	beq.w	8007da2 <forward_dense_integer_SSSA+0x232>
 8007c5c:	f8dc 0004 	ldr.w	r0, [ip, #4]
 8007c60:	f990 7000 	ldrsb.w	r7, [r0]
 8007c64:	2c00      	cmp	r4, #0
 8007c66:	f000 80eb 	beq.w	8007e40 <forward_dense_integer_SSSA+0x2d0>
 8007c6a:	f1b8 0f00 	cmp.w	r8, #0
 8007c6e:	f000 809d 	beq.w	8007dac <forward_dense_integer_SSSA+0x23c>
 8007c72:	8860      	ldrh	r0, [r4, #2]
 8007c74:	2800      	cmp	r0, #0
 8007c76:	d167      	bne.n	8007d48 <forward_dense_integer_SSSA+0x1d8>
 8007c78:	900a      	str	r0, [sp, #40]	; 0x28
 8007c7a:	910e      	str	r1, [sp, #56]	; 0x38
 8007c7c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8007c80:	f1bb 0f00 	cmp.w	fp, #0
 8007c84:	f000 80de 	beq.w	8007e44 <forward_dense_integer_SSSA+0x2d4>
 8007c88:	f8db 0004 	ldr.w	r0, [fp, #4]
 8007c8c:	2800      	cmp	r0, #0
 8007c8e:	f000 80d9 	beq.w	8007e44 <forward_dense_integer_SSSA+0x2d4>
 8007c92:	6800      	ldr	r0, [r0, #0]
 8007c94:	2400      	movs	r4, #0
 8007c96:	f10d 0842 	add.w	r8, sp, #66	; 0x42
 8007c9a:	f8ad 4042 	strh.w	r4, [sp, #66]	; 0x42
 8007c9e:	9411      	str	r4, [sp, #68]	; 0x44
 8007ca0:	ed90 7a00 	vldr	s14, [r0]
 8007ca4:	4640      	mov	r0, r8
 8007ca6:	ee67 7a87 	vmul.f32	s15, s15, s14
 8007caa:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8007cae:	f003 fb57 	bl	800b360 <align_factor>
 8007cb2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007cb4:	9011      	str	r0, [sp, #68]	; 0x44
 8007cb6:	b32b      	cbz	r3, 8007d04 <forward_dense_integer_SSSA+0x194>
 8007cb8:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
 8007cbc:	4699      	mov	r9, r3
 8007cbe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007cc0:	fa1f fa8a 	uxth.w	sl, sl
 8007cc4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8007cc6:	f8bd b03c 	ldrh.w	fp, [sp, #60]	; 0x3c
 8007cca:	970d      	str	r7, [sp, #52]	; 0x34
 8007ccc:	461f      	mov	r7, r3
 8007cce:	9a08      	ldr	r2, [sp, #32]
 8007cd0:	990e      	ldr	r1, [sp, #56]	; 0x38
 8007cd2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007cd4:	3401      	adds	r4, #1
 8007cd6:	4628      	mov	r0, r5
 8007cd8:	9605      	str	r6, [sp, #20]
 8007cda:	9306      	str	r3, [sp, #24]
 8007cdc:	4456      	add	r6, sl
 8007cde:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007ce0:	445d      	add	r5, fp
 8007ce2:	9304      	str	r3, [sp, #16]
 8007ce4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007ce6:	9303      	str	r3, [sp, #12]
 8007ce8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8007cea:	e9cd 8301 	strd	r8, r3, [sp, #4]
 8007cee:	ab11      	add	r3, sp, #68	; 0x44
 8007cf0:	9300      	str	r3, [sp, #0]
 8007cf2:	463b      	mov	r3, r7
 8007cf4:	e9cd 1208 	strd	r1, r2, [sp, #32]
 8007cf8:	f003 fc3e 	bl	800b578 <st_sssa8_fully_connected>
 8007cfc:	454c      	cmp	r4, r9
 8007cfe:	e9dd 1208 	ldrd	r1, r2, [sp, #32]
 8007d02:	d1e6      	bne.n	8007cd2 <forward_dense_integer_SSSA+0x162>
 8007d04:	b013      	add	sp, #76	; 0x4c
 8007d06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007d0a:	685b      	ldr	r3, [r3, #4]
 8007d0c:	deff      	udf	#255	; 0xff
 8007d0e:	2c00      	cmp	r4, #0
 8007d10:	d056      	beq.n	8007dc0 <forward_dense_integer_SSSA+0x250>
 8007d12:	f8d4 8004 	ldr.w	r8, [r4, #4]
 8007d16:	f1b8 0f00 	cmp.w	r8, #0
 8007d1a:	d05d      	beq.n	8007dd8 <forward_dense_integer_SSSA+0x268>
 8007d1c:	8860      	ldrh	r0, [r4, #2]
 8007d1e:	2800      	cmp	r0, #0
 8007d20:	d173      	bne.n	8007e0a <forward_dense_integer_SSSA+0x29a>
 8007d22:	eddf 7a50 	vldr	s15, [pc, #320]	; 8007e64 <forward_dense_integer_SSSA+0x2f4>
 8007d26:	68ae      	ldr	r6, [r5, #8]
 8007d28:	f8de 5008 	ldr.w	r5, [lr, #8]
 8007d2c:	6889      	ldr	r1, [r1, #8]
 8007d2e:	950d      	str	r5, [sp, #52]	; 0x34
 8007d30:	2f00      	cmp	r7, #0
 8007d32:	d041      	beq.n	8007db8 <forward_dense_integer_SSSA+0x248>
 8007d34:	f8d7 c004 	ldr.w	ip, [r7, #4]
 8007d38:	ed9f 0a4a 	vldr	s0, [pc, #296]	; 8007e64 <forward_dense_integer_SSSA+0x2f4>
 8007d3c:	f1bc 0f00 	cmp.w	ip, #0
 8007d40:	d188      	bne.n	8007c54 <forward_dense_integer_SSSA+0xe4>
 8007d42:	4667      	mov	r7, ip
 8007d44:	2800      	cmp	r0, #0
 8007d46:	d097      	beq.n	8007c78 <forward_dense_integer_SSSA+0x108>
 8007d48:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8007d4c:	f990 0000 	ldrsb.w	r0, [r0]
 8007d50:	900a      	str	r0, [sp, #40]	; 0x28
 8007d52:	e792      	b.n	8007c7a <forward_dense_integer_SSSA+0x10a>
 8007d54:	eddf 7a43 	vldr	s15, [pc, #268]	; 8007e64 <forward_dense_integer_SSSA+0x2f4>
 8007d58:	2c00      	cmp	r4, #0
 8007d5a:	f47f af66 	bne.w	8007c2a <forward_dense_integer_SSSA+0xba>
 8007d5e:	68ae      	ldr	r6, [r5, #8]
 8007d60:	f8de 5008 	ldr.w	r5, [lr, #8]
 8007d64:	6889      	ldr	r1, [r1, #8]
 8007d66:	950d      	str	r5, [sp, #52]	; 0x34
 8007d68:	2800      	cmp	r0, #0
 8007d6a:	d15a      	bne.n	8007e22 <forward_dense_integer_SSSA+0x2b2>
 8007d6c:	4607      	mov	r7, r0
 8007d6e:	ed9f 0a3d 	vldr	s0, [pc, #244]	; 8007e64 <forward_dense_integer_SSSA+0x2f4>
 8007d72:	900a      	str	r0, [sp, #40]	; 0x28
 8007d74:	e781      	b.n	8007c7a <forward_dense_integer_SSSA+0x10a>
 8007d76:	b31c      	cbz	r4, 8007dc0 <forward_dense_integer_SSSA+0x250>
 8007d78:	f8d4 8004 	ldr.w	r8, [r4, #4]
 8007d7c:	eddf 7a39 	vldr	s15, [pc, #228]	; 8007e64 <forward_dense_integer_SSSA+0x2f4>
 8007d80:	f1b8 0f00 	cmp.w	r8, #0
 8007d84:	f47f af57 	bne.w	8007c36 <forward_dense_integer_SSSA+0xc6>
 8007d88:	f8de 0008 	ldr.w	r0, [lr, #8]
 8007d8c:	68ae      	ldr	r6, [r5, #8]
 8007d8e:	6889      	ldr	r1, [r1, #8]
 8007d90:	900d      	str	r0, [sp, #52]	; 0x34
 8007d92:	f1bc 0f00 	cmp.w	ip, #0
 8007d96:	d00e      	beq.n	8007db6 <forward_dense_integer_SSSA+0x246>
 8007d98:	8878      	ldrh	r0, [r7, #2]
 8007d9a:	2800      	cmp	r0, #0
 8007d9c:	d149      	bne.n	8007e32 <forward_dense_integer_SSSA+0x2c2>
 8007d9e:	ed9f 0a31 	vldr	s0, [pc, #196]	; 8007e64 <forward_dense_integer_SSSA+0x2f4>
 8007da2:	2700      	movs	r7, #0
 8007da4:	f1b8 0f00 	cmp.w	r8, #0
 8007da8:	f47f af63 	bne.w	8007c72 <forward_dense_integer_SSSA+0x102>
 8007dac:	2000      	movs	r0, #0
 8007dae:	900a      	str	r0, [sp, #40]	; 0x28
 8007db0:	e763      	b.n	8007c7a <forward_dense_integer_SSSA+0x10a>
 8007db2:	4628      	mov	r0, r5
 8007db4:	e6fb      	b.n	8007bae <forward_dense_integer_SSSA+0x3e>
 8007db6:	4667      	mov	r7, ip
 8007db8:	ed9f 0a2a 	vldr	s0, [pc, #168]	; 8007e64 <forward_dense_integer_SSSA+0x2f4>
 8007dbc:	970a      	str	r7, [sp, #40]	; 0x28
 8007dbe:	e75c      	b.n	8007c7a <forward_dense_integer_SSSA+0x10a>
 8007dc0:	eddf 7a28 	vldr	s15, [pc, #160]	; 8007e64 <forward_dense_integer_SSSA+0x2f4>
 8007dc4:	4627      	mov	r7, r4
 8007dc6:	f8de 0008 	ldr.w	r0, [lr, #8]
 8007dca:	eeb0 0a67 	vmov.f32	s0, s15
 8007dce:	68ae      	ldr	r6, [r5, #8]
 8007dd0:	6889      	ldr	r1, [r1, #8]
 8007dd2:	900d      	str	r0, [sp, #52]	; 0x34
 8007dd4:	970a      	str	r7, [sp, #40]	; 0x28
 8007dd6:	e750      	b.n	8007c7a <forward_dense_integer_SSSA+0x10a>
 8007dd8:	eddf 7a22 	vldr	s15, [pc, #136]	; 8007e64 <forward_dense_integer_SSSA+0x2f4>
 8007ddc:	4647      	mov	r7, r8
 8007dde:	e7f2      	b.n	8007dc6 <forward_dense_integer_SSSA+0x256>
 8007de0:	689b      	ldr	r3, [r3, #8]
 8007de2:	68e2      	ldr	r2, [r4, #12]
 8007de4:	930b      	str	r3, [sp, #44]	; 0x2c
 8007de6:	68cb      	ldr	r3, [r1, #12]
 8007de8:	6856      	ldr	r6, [r2, #4]
 8007dea:	f8d4 e018 	ldr.w	lr, [r4, #24]
 8007dee:	698d      	ldr	r5, [r1, #24]
 8007df0:	960f      	str	r6, [sp, #60]	; 0x3c
 8007df2:	e9d3 a201 	ldrd	sl, r2, [r3, #4]
 8007df6:	68db      	ldr	r3, [r3, #12]
 8007df8:	fb03 f302 	mul.w	r3, r3, r2
 8007dfc:	b2b2      	uxth	r2, r6
 8007dfe:	930c      	str	r3, [sp, #48]	; 0x30
 8007e00:	fa1f f38a 	uxth.w	r3, sl
 8007e04:	e6f8      	b.n	8007bf8 <forward_dense_integer_SSSA+0x88>
 8007e06:	2500      	movs	r5, #0
 8007e08:	e6d1      	b.n	8007bae <forward_dense_integer_SSSA+0x3e>
 8007e0a:	f8de 0008 	ldr.w	r0, [lr, #8]
 8007e0e:	68ae      	ldr	r6, [r5, #8]
 8007e10:	900d      	str	r0, [sp, #52]	; 0x34
 8007e12:	f8d8 0000 	ldr.w	r0, [r8]
 8007e16:	6889      	ldr	r1, [r1, #8]
 8007e18:	eddf 7a12 	vldr	s15, [pc, #72]	; 8007e64 <forward_dense_integer_SSSA+0x2f4>
 8007e1c:	ed90 0a00 	vldr	s0, [r0]
 8007e20:	e792      	b.n	8007d48 <forward_dense_integer_SSSA+0x1d8>
 8007e22:	f8dc 0004 	ldr.w	r0, [ip, #4]
 8007e26:	ed9f 0a0f 	vldr	s0, [pc, #60]	; 8007e64 <forward_dense_integer_SSSA+0x2f4>
 8007e2a:	f990 7000 	ldrsb.w	r7, [r0]
 8007e2e:	940a      	str	r4, [sp, #40]	; 0x28
 8007e30:	e723      	b.n	8007c7a <forward_dense_integer_SSSA+0x10a>
 8007e32:	f8dc 0004 	ldr.w	r0, [ip, #4]
 8007e36:	ed9f 0a0b 	vldr	s0, [pc, #44]	; 8007e64 <forward_dense_integer_SSSA+0x2f4>
 8007e3a:	f990 7000 	ldrsb.w	r7, [r0]
 8007e3e:	e7b5      	b.n	8007dac <forward_dense_integer_SSSA+0x23c>
 8007e40:	940a      	str	r4, [sp, #40]	; 0x28
 8007e42:	e71a      	b.n	8007c7a <forward_dense_integer_SSSA+0x10a>
 8007e44:	2300      	movs	r3, #0
 8007e46:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8007e4a:	9311      	str	r3, [sp, #68]	; 0x44
 8007e4c:	681b      	ldr	r3, [r3, #0]
 8007e4e:	deff      	udf	#255	; 0xff
 8007e50:	2300      	movs	r3, #0
 8007e52:	685b      	ldr	r3, [r3, #4]
 8007e54:	deff      	udf	#255	; 0xff
 8007e56:	2300      	movs	r3, #0
 8007e58:	685b      	ldr	r3, [r3, #4]
 8007e5a:	deff      	udf	#255	; 0xff
 8007e5c:	2300      	movs	r3, #0
 8007e5e:	685b      	ldr	r3, [r3, #4]
 8007e60:	deff      	udf	#255	; 0xff
 8007e62:	bf00      	nop
 8007e64:	00000000 	.word	0x00000000

08007e68 <func_dummy>:
 8007e68:	4770      	bx	lr
 8007e6a:	bf00      	nop

08007e6c <forward_dw_3x3_sssa8_ch>:
 8007e6c:	6983      	ldr	r3, [r0, #24]
 8007e6e:	881a      	ldrh	r2, [r3, #0]
 8007e70:	2a00      	cmp	r2, #0
 8007e72:	f000 80d8 	beq.w	8008026 <forward_dw_3x3_sssa8_ch+0x1ba>
 8007e76:	6859      	ldr	r1, [r3, #4]
 8007e78:	684b      	ldr	r3, [r1, #4]
 8007e7a:	b103      	cbz	r3, 8007e7e <forward_dw_3x3_sssa8_ch+0x12>
 8007e7c:	681b      	ldr	r3, [r3, #0]
 8007e7e:	2a01      	cmp	r2, #1
 8007e80:	f000 80f2 	beq.w	8008068 <forward_dw_3x3_sssa8_ch+0x1fc>
 8007e84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007e88:	f8d1 8010 	ldr.w	r8, [r1, #16]
 8007e8c:	b097      	sub	sp, #92	; 0x5c
 8007e8e:	f1b8 0f00 	cmp.w	r8, #0
 8007e92:	d001      	beq.n	8007e98 <forward_dw_3x3_sssa8_ch+0x2c>
 8007e94:	f8d8 8000 	ldr.w	r8, [r8]
 8007e98:	2a02      	cmp	r2, #2
 8007e9a:	f000 80c1 	beq.w	8008020 <forward_dw_3x3_sssa8_ch+0x1b4>
 8007e9e:	69cc      	ldr	r4, [r1, #28]
 8007ea0:	2c00      	cmp	r4, #0
 8007ea2:	f000 80d8 	beq.w	8008056 <forward_dw_3x3_sssa8_ch+0x1ea>
 8007ea6:	8b0d      	ldrh	r5, [r1, #24]
 8007ea8:	f8d4 e000 	ldr.w	lr, [r4]
 8007eac:	2d01      	cmp	r5, #1
 8007eae:	f200 80bc 	bhi.w	800802a <forward_dw_3x3_sssa8_ch+0x1be>
 8007eb2:	2500      	movs	r5, #0
 8007eb4:	2a03      	cmp	r2, #3
 8007eb6:	f000 80da 	beq.w	800806e <forward_dw_3x3_sssa8_ch+0x202>
 8007eba:	6a8a      	ldr	r2, [r1, #40]	; 0x28
 8007ebc:	2a00      	cmp	r2, #0
 8007ebe:	f000 80cf 	beq.w	8008060 <forward_dw_3x3_sssa8_ch+0x1f4>
 8007ec2:	6a41      	ldr	r1, [r0, #36]	; 0x24
 8007ec4:	6817      	ldr	r7, [r2, #0]
 8007ec6:	910e      	str	r1, [sp, #56]	; 0x38
 8007ec8:	2900      	cmp	r1, #0
 8007eca:	f000 80bc 	beq.w	8008046 <forward_dw_3x3_sssa8_ch+0x1da>
 8007ece:	6856      	ldr	r6, [r2, #4]
 8007ed0:	69a9      	ldr	r1, [r5, #24]
 8007ed2:	69ba      	ldr	r2, [r7, #24]
 8007ed4:	6889      	ldr	r1, [r1, #8]
 8007ed6:	8d07      	ldrh	r7, [r0, #40]	; 0x28
 8007ed8:	9115      	str	r1, [sp, #84]	; 0x54
 8007eda:	9713      	str	r7, [sp, #76]	; 0x4c
 8007edc:	68f1      	ldr	r1, [r6, #12]
 8007ede:	8d87      	ldrh	r7, [r0, #44]	; 0x2c
 8007ee0:	68dd      	ldr	r5, [r3, #12]
 8007ee2:	9714      	str	r7, [sp, #80]	; 0x50
 8007ee4:	68cf      	ldr	r7, [r1, #12]
 8007ee6:	f8d1 c004 	ldr.w	ip, [r1, #4]
 8007eea:	f8b5 b004 	ldrh.w	fp, [r5, #4]
 8007eee:	6889      	ldr	r1, [r1, #8]
 8007ef0:	970f      	str	r7, [sp, #60]	; 0x3c
 8007ef2:	68ef      	ldr	r7, [r5, #12]
 8007ef4:	68ad      	ldr	r5, [r5, #8]
 8007ef6:	9110      	str	r1, [sp, #64]	; 0x40
 8007ef8:	fa1f f18c 	uxth.w	r1, ip
 8007efc:	6892      	ldr	r2, [r2, #8]
 8007efe:	9711      	str	r7, [sp, #68]	; 0x44
 8007f00:	9512      	str	r5, [sp, #72]	; 0x48
 8007f02:	2c00      	cmp	r4, #0
 8007f04:	f000 8099 	beq.w	800803a <forward_dw_3x3_sssa8_ch+0x1ce>
 8007f08:	68a4      	ldr	r4, [r4, #8]
 8007f0a:	2c00      	cmp	r4, #0
 8007f0c:	f000 8095 	beq.w	800803a <forward_dw_3x3_sssa8_ch+0x1ce>
 8007f10:	69a7      	ldr	r7, [r4, #24]
 8007f12:	2f00      	cmp	r7, #0
 8007f14:	bf18      	it	ne
 8007f16:	4627      	movne	r7, r4
 8007f18:	681c      	ldr	r4, [r3, #0]
 8007f1a:	6835      	ldr	r5, [r6, #0]
 8007f1c:	f8de 0000 	ldr.w	r0, [lr]
 8007f20:	2c00      	cmp	r4, #0
 8007f22:	f000 8087 	beq.w	8008034 <forward_dw_3x3_sssa8_ch+0x1c8>
 8007f26:	f8d4 9004 	ldr.w	r9, [r4, #4]
 8007f2a:	f1b9 0f00 	cmp.w	r9, #0
 8007f2e:	f000 8081 	beq.w	8008034 <forward_dw_3x3_sssa8_ch+0x1c8>
 8007f32:	f8b4 a002 	ldrh.w	sl, [r4, #2]
 8007f36:	f1ba 0f00 	cmp.w	sl, #0
 8007f3a:	d07b      	beq.n	8008034 <forward_dw_3x3_sssa8_ch+0x1c8>
 8007f3c:	f8d9 9000 	ldr.w	r9, [r9]
 8007f40:	ed99 0a00 	vldr	s0, [r9]
 8007f44:	2d00      	cmp	r5, #0
 8007f46:	d072      	beq.n	800802e <forward_dw_3x3_sssa8_ch+0x1c2>
 8007f48:	f8d5 9004 	ldr.w	r9, [r5, #4]
 8007f4c:	f1b9 0f00 	cmp.w	r9, #0
 8007f50:	d06d      	beq.n	800802e <forward_dw_3x3_sssa8_ch+0x1c2>
 8007f52:	f8b5 a002 	ldrh.w	sl, [r5, #2]
 8007f56:	f1ba 0f00 	cmp.w	sl, #0
 8007f5a:	d068      	beq.n	800802e <forward_dw_3x3_sssa8_ch+0x1c2>
 8007f5c:	f8d9 9000 	ldr.w	r9, [r9]
 8007f60:	edd9 0a00 	vldr	s1, [r9]
 8007f64:	f8d3 9018 	ldr.w	r9, [r3, #24]
 8007f68:	f8de 3018 	ldr.w	r3, [lr, #24]
 8007f6c:	f8d9 9008 	ldr.w	r9, [r9, #8]
 8007f70:	689b      	ldr	r3, [r3, #8]
 8007f72:	930c      	str	r3, [sp, #48]	; 0x30
 8007f74:	69b3      	ldr	r3, [r6, #24]
 8007f76:	f8d3 a008 	ldr.w	sl, [r3, #8]
 8007f7a:	b110      	cbz	r0, 8007f82 <forward_dw_3x3_sssa8_ch+0x116>
 8007f7c:	6840      	ldr	r0, [r0, #4]
 8007f7e:	b100      	cbz	r0, 8007f82 <forward_dw_3x3_sssa8_ch+0x116>
 8007f80:	6800      	ldr	r0, [r0, #0]
 8007f82:	b13c      	cbz	r4, 8007f94 <forward_dw_3x3_sssa8_ch+0x128>
 8007f84:	6863      	ldr	r3, [r4, #4]
 8007f86:	2b00      	cmp	r3, #0
 8007f88:	d061      	beq.n	800804e <forward_dw_3x3_sssa8_ch+0x1e2>
 8007f8a:	8864      	ldrh	r4, [r4, #2]
 8007f8c:	b114      	cbz	r4, 8007f94 <forward_dw_3x3_sssa8_ch+0x128>
 8007f8e:	685b      	ldr	r3, [r3, #4]
 8007f90:	f993 4000 	ldrsb.w	r4, [r3]
 8007f94:	b13d      	cbz	r5, 8007fa6 <forward_dw_3x3_sssa8_ch+0x13a>
 8007f96:	686b      	ldr	r3, [r5, #4]
 8007f98:	2b00      	cmp	r3, #0
 8007f9a:	d05a      	beq.n	8008052 <forward_dw_3x3_sssa8_ch+0x1e6>
 8007f9c:	886d      	ldrh	r5, [r5, #2]
 8007f9e:	b115      	cbz	r5, 8007fa6 <forward_dw_3x3_sssa8_ch+0x13a>
 8007fa0:	685b      	ldr	r3, [r3, #4]
 8007fa2:	f993 5000 	ldrsb.w	r5, [r3]
 8007fa6:	fa1f fc8c 	uxth.w	ip, ip
 8007faa:	231a      	movs	r3, #26
 8007fac:	920d      	str	r2, [sp, #52]	; 0x34
 8007fae:	fb03 230c 	mla	r3, r3, ip, r2
 8007fb2:	f003 fa27 	bl	800b404 <align_factor_ch>
 8007fb6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8007fb8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8007fba:	4648      	mov	r0, r9
 8007fbc:	9303      	str	r3, [sp, #12]
 8007fbe:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8007fc0:	9404      	str	r4, [sp, #16]
 8007fc2:	2400      	movs	r4, #0
 8007fc4:	9302      	str	r3, [sp, #8]
 8007fc6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8007fc8:	920a      	str	r2, [sp, #40]	; 0x28
 8007fca:	9301      	str	r3, [sp, #4]
 8007fcc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007fce:	f8bd 2044 	ldrh.w	r2, [sp, #68]	; 0x44
 8007fd2:	9300      	str	r3, [sp, #0]
 8007fd4:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8007fd8:	f8bd 1048 	ldrh.w	r1, [sp, #72]	; 0x48
 8007fdc:	9308      	str	r3, [sp, #32]
 8007fde:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8007fe2:	9409      	str	r4, [sp, #36]	; 0x24
 8007fe4:	9307      	str	r3, [sp, #28]
 8007fe6:	465b      	mov	r3, fp
 8007fe8:	e9cd 5a05 	strd	r5, sl, [sp, #20]
 8007fec:	f001 fa2a 	bl	8009444 <forward_lite_dw_3x3_sssa8_ch>
 8007ff0:	68b3      	ldr	r3, [r6, #8]
 8007ff2:	0a1b      	lsrs	r3, r3, #8
 8007ff4:	d032      	beq.n	800805c <forward_dw_3x3_sssa8_ch+0x1f0>
 8007ff6:	68f0      	ldr	r0, [r6, #12]
 8007ff8:	2201      	movs	r2, #1
 8007ffa:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8007ffe:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8008002:	4298      	cmp	r0, r3
 8008004:	fb01 f202 	mul.w	r2, r1, r2
 8008008:	d1f9      	bne.n	8007ffe <forward_dw_3x3_sssa8_ch+0x192>
 800800a:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 800800e:	463b      	mov	r3, r7
 8008010:	4631      	mov	r1, r6
 8008012:	4640      	mov	r0, r8
 8008014:	ee17 ca90 	vmov	ip, s15
 8008018:	b017      	add	sp, #92	; 0x5c
 800801a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800801e:	4760      	bx	ip
 8008020:	2300      	movs	r3, #0
 8008022:	685b      	ldr	r3, [r3, #4]
 8008024:	deff      	udf	#255	; 0xff
 8008026:	6853      	ldr	r3, [r2, #4]
 8008028:	deff      	udf	#255	; 0xff
 800802a:	6865      	ldr	r5, [r4, #4]
 800802c:	e742      	b.n	8007eb4 <forward_dw_3x3_sssa8_ch+0x48>
 800802e:	eddf 0a12 	vldr	s1, [pc, #72]	; 8008078 <forward_dw_3x3_sssa8_ch+0x20c>
 8008032:	e797      	b.n	8007f64 <forward_dw_3x3_sssa8_ch+0xf8>
 8008034:	ed9f 0a10 	vldr	s0, [pc, #64]	; 8008078 <forward_dw_3x3_sssa8_ch+0x20c>
 8008038:	e784      	b.n	8007f44 <forward_dw_3x3_sssa8_ch+0xd8>
 800803a:	6a07      	ldr	r7, [r0, #32]
 800803c:	2f00      	cmp	r7, #0
 800803e:	f43f af6b 	beq.w	8007f18 <forward_dw_3x3_sssa8_ch+0xac>
 8008042:	68bf      	ldr	r7, [r7, #8]
 8008044:	e768      	b.n	8007f18 <forward_dw_3x3_sssa8_ch+0xac>
 8008046:	4a0d      	ldr	r2, [pc, #52]	; (800807c <forward_dw_3x3_sssa8_ch+0x210>)
 8008048:	4646      	mov	r6, r8
 800804a:	920e      	str	r2, [sp, #56]	; 0x38
 800804c:	e740      	b.n	8007ed0 <forward_dw_3x3_sssa8_ch+0x64>
 800804e:	461c      	mov	r4, r3
 8008050:	e7a0      	b.n	8007f94 <forward_dw_3x3_sssa8_ch+0x128>
 8008052:	461d      	mov	r5, r3
 8008054:	e7a7      	b.n	8007fa6 <forward_dw_3x3_sssa8_ch+0x13a>
 8008056:	46a6      	mov	lr, r4
 8008058:	4625      	mov	r5, r4
 800805a:	e72b      	b.n	8007eb4 <forward_dw_3x3_sssa8_ch+0x48>
 800805c:	2201      	movs	r2, #1
 800805e:	e7d4      	b.n	800800a <forward_dw_3x3_sssa8_ch+0x19e>
 8008060:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8008062:	b93b      	cbnz	r3, 8008074 <forward_dw_3x3_sssa8_ch+0x208>
 8008064:	699b      	ldr	r3, [r3, #24]
 8008066:	deff      	udf	#255	; 0xff
 8008068:	2300      	movs	r3, #0
 800806a:	685b      	ldr	r3, [r3, #4]
 800806c:	deff      	udf	#255	; 0xff
 800806e:	2300      	movs	r3, #0
 8008070:	685b      	ldr	r3, [r3, #4]
 8008072:	deff      	udf	#255	; 0xff
 8008074:	68d3      	ldr	r3, [r2, #12]
 8008076:	deff      	udf	#255	; 0xff
 8008078:	00000000 	.word	0x00000000
 800807c:	08007e69 	.word	0x08007e69

08008080 <forward_pad>:
 8008080:	7f03      	ldrb	r3, [r0, #28]
 8008082:	2b03      	cmp	r3, #3
 8008084:	d80b      	bhi.n	800809e <forward_pad+0x1e>
 8008086:	e8df f003 	tbb	[pc, r3]
 800808a:	0608      	.short	0x0608
 800808c:	0204      	.short	0x0204
 800808e:	f000 b915 	b.w	80082bc <forward_pad_8bit_ch1st_3x3_constant>
 8008092:	f000 b98f 	b.w	80083b4 <forward_pad_edge>
 8008096:	f000 b9cf 	b.w	8008438 <forward_pad_reflect>
 800809a:	f000 b941 	b.w	8008320 <forward_pad_constant>
 800809e:	4770      	bx	lr

080080a0 <forward_transpose>:
 80080a0:	6983      	ldr	r3, [r0, #24]
 80080a2:	881a      	ldrh	r2, [r3, #0]
 80080a4:	2a00      	cmp	r2, #0
 80080a6:	d035      	beq.n	8008114 <forward_transpose+0x74>
 80080a8:	6859      	ldr	r1, [r3, #4]
 80080aa:	684b      	ldr	r3, [r1, #4]
 80080ac:	b103      	cbz	r3, 80080b0 <forward_transpose+0x10>
 80080ae:	681b      	ldr	r3, [r3, #0]
 80080b0:	2a01      	cmp	r2, #1
 80080b2:	f000 80a3 	beq.w	80081fc <forward_transpose+0x15c>
 80080b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80080ba:	690c      	ldr	r4, [r1, #16]
 80080bc:	b08b      	sub	sp, #44	; 0x2c
 80080be:	b104      	cbz	r4, 80080c2 <forward_transpose+0x22>
 80080c0:	6824      	ldr	r4, [r4, #0]
 80080c2:	6a05      	ldr	r5, [r0, #32]
 80080c4:	e9d3 6204 	ldrd	r6, r2, [r3, #16]
 80080c8:	6869      	ldr	r1, [r5, #4]
 80080ca:	f5b6 6fa0 	cmp.w	r6, #1280	; 0x500
 80080ce:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80080d2:	9100      	str	r1, [sp, #0]
 80080d4:	68a9      	ldr	r1, [r5, #8]
 80080d6:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80080da:	9106      	str	r1, [sp, #24]
 80080dc:	68e9      	ldr	r1, [r5, #12]
 80080de:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80080e2:	9107      	str	r1, [sp, #28]
 80080e4:	d318      	bcc.n	8008118 <forward_transpose+0x78>
 80080e6:	69c1      	ldr	r1, [r0, #28]
 80080e8:	f5b1 6fa0 	cmp.w	r1, #1280	; 0x500
 80080ec:	f0c0 8082 	bcc.w	80081f4 <forward_transpose+0x154>
 80080f0:	6929      	ldr	r1, [r5, #16]
 80080f2:	0089      	lsls	r1, r1, #2
 80080f4:	f026 06ff 	bic.w	r6, r6, #255	; 0xff
 80080f8:	5851      	ldr	r1, [r2, r1]
 80080fa:	f5b6 6fc0 	cmp.w	r6, #1536	; 0x600
 80080fe:	9102      	str	r1, [sp, #8]
 8008100:	d111      	bne.n	8008126 <forward_transpose+0x86>
 8008102:	69c1      	ldr	r1, [r0, #28]
 8008104:	f5b1 6fc0 	cmp.w	r1, #1536	; 0x600
 8008108:	d376      	bcc.n	80081f8 <forward_transpose+0x158>
 800810a:	6969      	ldr	r1, [r5, #20]
 800810c:	0089      	lsls	r1, r1, #2
 800810e:	5852      	ldr	r2, [r2, r1]
 8008110:	9203      	str	r2, [sp, #12]
 8008112:	e00a      	b.n	800812a <forward_transpose+0x8a>
 8008114:	6853      	ldr	r3, [r2, #4]
 8008116:	deff      	udf	#255	; 0xff
 8008118:	f026 06ff 	bic.w	r6, r6, #255	; 0xff
 800811c:	2100      	movs	r1, #0
 800811e:	f5b6 6fc0 	cmp.w	r6, #1536	; 0x600
 8008122:	9102      	str	r1, [sp, #8]
 8008124:	d0ed      	beq.n	8008102 <forward_transpose+0x62>
 8008126:	2200      	movs	r2, #0
 8008128:	9203      	str	r2, [sp, #12]
 800812a:	699b      	ldr	r3, [r3, #24]
 800812c:	69a2      	ldr	r2, [r4, #24]
 800812e:	68e1      	ldr	r1, [r4, #12]
 8008130:	6896      	ldr	r6, [r2, #8]
 8008132:	681a      	ldr	r2, [r3, #0]
 8008134:	689b      	ldr	r3, [r3, #8]
 8008136:	f3c2 2283 	ubfx	r2, r2, #10, #4
 800813a:	9301      	str	r3, [sp, #4]
 800813c:	68cb      	ldr	r3, [r1, #12]
 800813e:	2b00      	cmp	r3, #0
 8008140:	d055      	beq.n	80081ee <forward_transpose+0x14e>
 8008142:	2300      	movs	r3, #0
 8008144:	6888      	ldr	r0, [r1, #8]
 8008146:	9305      	str	r3, [sp, #20]
 8008148:	2800      	cmp	r0, #0
 800814a:	d050      	beq.n	80081ee <forward_transpose+0x14e>
 800814c:	68a5      	ldr	r5, [r4, #8]
 800814e:	2000      	movs	r0, #0
 8008150:	4692      	mov	sl, r2
 8008152:	9308      	str	r3, [sp, #32]
 8008154:	f3c5 2517 	ubfx	r5, r5, #8, #24
 8008158:	9004      	str	r0, [sp, #16]
 800815a:	469b      	mov	fp, r3
 800815c:	f04f 0800 	mov.w	r8, #0
 8008160:	9309      	str	r3, [sp, #36]	; 0x24
 8008162:	2d04      	cmp	r5, #4
 8008164:	bf8c      	ite	hi
 8008166:	690b      	ldrhi	r3, [r1, #16]
 8008168:	2301      	movls	r3, #1
 800816a:	4598      	cmp	r8, r3
 800816c:	d229      	bcs.n	80081c2 <forward_transpose+0x122>
 800816e:	2d05      	cmp	r5, #5
 8008170:	46d9      	mov	r9, fp
 8008172:	f04f 0700 	mov.w	r7, #0
 8008176:	d91d      	bls.n	80081b4 <forward_transpose+0x114>
 8008178:	694a      	ldr	r2, [r1, #20]
 800817a:	4297      	cmp	r7, r2
 800817c:	d21c      	bcs.n	80081b8 <forward_transpose+0x118>
 800817e:	684a      	ldr	r2, [r1, #4]
 8008180:	b192      	cbz	r2, 80081a8 <forward_transpose+0x108>
 8008182:	2500      	movs	r5, #0
 8008184:	9b00      	ldr	r3, [sp, #0]
 8008186:	4631      	mov	r1, r6
 8008188:	4652      	mov	r2, sl
 800818a:	4456      	add	r6, sl
 800818c:	fb03 9005 	mla	r0, r3, r5, r9
 8008190:	9b01      	ldr	r3, [sp, #4]
 8008192:	3501      	adds	r5, #1
 8008194:	4418      	add	r0, r3
 8008196:	f003 fd47 	bl	800bc28 <st_int8_copy>
 800819a:	68e1      	ldr	r1, [r4, #12]
 800819c:	684b      	ldr	r3, [r1, #4]
 800819e:	429d      	cmp	r5, r3
 80081a0:	d3f0      	bcc.n	8008184 <forward_transpose+0xe4>
 80081a2:	68a3      	ldr	r3, [r4, #8]
 80081a4:	f3c3 2517 	ubfx	r5, r3, #8, #24
 80081a8:	9b03      	ldr	r3, [sp, #12]
 80081aa:	2d05      	cmp	r5, #5
 80081ac:	f107 0701 	add.w	r7, r7, #1
 80081b0:	4499      	add	r9, r3
 80081b2:	d8e1      	bhi.n	8008178 <forward_transpose+0xd8>
 80081b4:	2f00      	cmp	r7, #0
 80081b6:	d0e2      	beq.n	800817e <forward_transpose+0xde>
 80081b8:	9b02      	ldr	r3, [sp, #8]
 80081ba:	f108 0801 	add.w	r8, r8, #1
 80081be:	449b      	add	fp, r3
 80081c0:	e7cf      	b.n	8008162 <forward_transpose+0xc2>
 80081c2:	9a04      	ldr	r2, [sp, #16]
 80081c4:	9806      	ldr	r0, [sp, #24]
 80081c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80081c8:	3201      	adds	r2, #1
 80081ca:	4403      	add	r3, r0
 80081cc:	6888      	ldr	r0, [r1, #8]
 80081ce:	9204      	str	r2, [sp, #16]
 80081d0:	4282      	cmp	r2, r0
 80081d2:	d3c2      	bcc.n	800815a <forward_transpose+0xba>
 80081d4:	9d05      	ldr	r5, [sp, #20]
 80081d6:	4652      	mov	r2, sl
 80081d8:	9b08      	ldr	r3, [sp, #32]
 80081da:	3501      	adds	r5, #1
 80081dc:	462f      	mov	r7, r5
 80081de:	9505      	str	r5, [sp, #20]
 80081e0:	68cd      	ldr	r5, [r1, #12]
 80081e2:	42af      	cmp	r7, r5
 80081e4:	d203      	bcs.n	80081ee <forward_transpose+0x14e>
 80081e6:	9d07      	ldr	r5, [sp, #28]
 80081e8:	442b      	add	r3, r5
 80081ea:	2800      	cmp	r0, #0
 80081ec:	d1ae      	bne.n	800814c <forward_transpose+0xac>
 80081ee:	b00b      	add	sp, #44	; 0x2c
 80081f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80081f4:	2104      	movs	r1, #4
 80081f6:	e77d      	b.n	80080f4 <forward_transpose+0x54>
 80081f8:	2104      	movs	r1, #4
 80081fa:	e788      	b.n	800810e <forward_transpose+0x6e>
 80081fc:	2300      	movs	r3, #0
 80081fe:	685b      	ldr	r3, [r3, #4]
 8008200:	deff      	udf	#255	; 0xff
 8008202:	bf00      	nop

08008204 <forward_sm_integer>:
 8008204:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008208:	6983      	ldr	r3, [r0, #24]
 800820a:	b086      	sub	sp, #24
 800820c:	881f      	ldrh	r7, [r3, #0]
 800820e:	2f00      	cmp	r7, #0
 8008210:	d042      	beq.n	8008298 <forward_sm_integer+0x94>
 8008212:	f8d3 8004 	ldr.w	r8, [r3, #4]
 8008216:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800821a:	b106      	cbz	r6, 800821e <forward_sm_integer+0x1a>
 800821c:	6836      	ldr	r6, [r6, #0]
 800821e:	2f01      	cmp	r7, #1
 8008220:	d043      	beq.n	80082aa <forward_sm_integer+0xa6>
 8008222:	f8d8 3010 	ldr.w	r3, [r8, #16]
 8008226:	2b00      	cmp	r3, #0
 8008228:	d044      	beq.n	80082b4 <forward_sm_integer+0xb0>
 800822a:	f8d3 e000 	ldr.w	lr, [r3]
 800822e:	e9d6 1502 	ldrd	r1, r5, [r6, #8]
 8008232:	f8de 300c 	ldr.w	r3, [lr, #12]
 8008236:	0a09      	lsrs	r1, r1, #8
 8008238:	f8d3 c004 	ldr.w	ip, [r3, #4]
 800823c:	686b      	ldr	r3, [r5, #4]
 800823e:	d032      	beq.n	80082a6 <forward_sm_integer+0xa2>
 8008240:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 8008244:	2201      	movs	r2, #1
 8008246:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800824a:	428d      	cmp	r5, r1
 800824c:	fb04 f202 	mul.w	r2, r4, r2
 8008250:	d1f9      	bne.n	8008246 <forward_sm_integer+0x42>
 8008252:	69c1      	ldr	r1, [r0, #28]
 8008254:	2f03      	cmp	r7, #3
 8008256:	688c      	ldr	r4, [r1, #8]
 8008258:	d927      	bls.n	80082aa <forward_sm_integer+0xa6>
 800825a:	f8d8 1028 	ldr.w	r1, [r8, #40]	; 0x28
 800825e:	b339      	cbz	r1, 80082b0 <forward_sm_integer+0xac>
 8008260:	6809      	ldr	r1, [r1, #0]
 8008262:	69b0      	ldr	r0, [r6, #24]
 8008264:	6989      	ldr	r1, [r1, #24]
 8008266:	4e14      	ldr	r6, [pc, #80]	; (80082b8 <forward_sm_integer+0xb4>)
 8008268:	688d      	ldr	r5, [r1, #8]
 800826a:	6801      	ldr	r1, [r0, #0]
 800826c:	f021 417e 	bic.w	r1, r1, #4261412864	; 0xfe000000
 8008270:	42b1      	cmp	r1, r6
 8008272:	f8de 6018 	ldr.w	r6, [lr, #24]
 8008276:	6881      	ldr	r1, [r0, #8]
 8008278:	68b0      	ldr	r0, [r6, #8]
 800827a:	9505      	str	r5, [sp, #20]
 800827c:	68a5      	ldr	r5, [r4, #8]
 800827e:	9504      	str	r5, [sp, #16]
 8008280:	6865      	ldr	r5, [r4, #4]
 8008282:	9503      	str	r5, [sp, #12]
 8008284:	6824      	ldr	r4, [r4, #0]
 8008286:	9300      	str	r3, [sp, #0]
 8008288:	e9cd c401 	strd	ip, r4, [sp, #4]
 800828c:	d006      	beq.n	800829c <forward_sm_integer+0x98>
 800828e:	f002 f9bf 	bl	800a610 <forward_lite_nl_softmax_iu8ou8>
 8008292:	b006      	add	sp, #24
 8008294:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008298:	687b      	ldr	r3, [r7, #4]
 800829a:	deff      	udf	#255	; 0xff
 800829c:	f001 fd9e 	bl	8009ddc <forward_lite_nl_softmax_is8os8>
 80082a0:	b006      	add	sp, #24
 80082a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80082a6:	2201      	movs	r2, #1
 80082a8:	e7d3      	b.n	8008252 <forward_sm_integer+0x4e>
 80082aa:	2300      	movs	r3, #0
 80082ac:	685b      	ldr	r3, [r3, #4]
 80082ae:	deff      	udf	#255	; 0xff
 80082b0:	698b      	ldr	r3, [r1, #24]
 80082b2:	deff      	udf	#255	; 0xff
 80082b4:	68db      	ldr	r3, [r3, #12]
 80082b6:	deff      	udf	#255	; 0xff
 80082b8:	00840440 	.word	0x00840440

080082bc <forward_pad_8bit_ch1st_3x3_constant>:
 80082bc:	6982      	ldr	r2, [r0, #24]
 80082be:	8811      	ldrh	r1, [r2, #0]
 80082c0:	b331      	cbz	r1, 8008310 <forward_pad_8bit_ch1st_3x3_constant+0x54>
 80082c2:	4603      	mov	r3, r0
 80082c4:	6850      	ldr	r0, [r2, #4]
 80082c6:	6842      	ldr	r2, [r0, #4]
 80082c8:	b102      	cbz	r2, 80082cc <forward_pad_8bit_ch1st_3x3_constant+0x10>
 80082ca:	6812      	ldr	r2, [r2, #0]
 80082cc:	2901      	cmp	r1, #1
 80082ce:	d021      	beq.n	8008314 <forward_pad_8bit_ch1st_3x3_constant+0x58>
 80082d0:	6901      	ldr	r1, [r0, #16]
 80082d2:	b311      	cbz	r1, 800831a <forward_pad_8bit_ch1st_3x3_constant+0x5e>
 80082d4:	b570      	push	{r4, r5, r6, lr}
 80082d6:	68d5      	ldr	r5, [r2, #12]
 80082d8:	b084      	sub	sp, #16
 80082da:	6809      	ldr	r1, [r1, #0]
 80082dc:	e9d2 6205 	ldrd	r6, r2, [r2, #20]
 80082e0:	e9d3 4309 	ldrd	r4, r3, [r3, #36]	; 0x24
 80082e4:	6890      	ldr	r0, [r2, #8]
 80082e6:	f9b4 4000 	ldrsh.w	r4, [r4]
 80082ea:	e9d1 2105 	ldrd	r2, r1, [r1, #20]
 80082ee:	68d2      	ldr	r2, [r2, #12]
 80082f0:	6889      	ldr	r1, [r1, #8]
 80082f2:	fb02 f404 	mul.w	r4, r2, r4
 80082f6:	689a      	ldr	r2, [r3, #8]
 80082f8:	68eb      	ldr	r3, [r5, #12]
 80082fa:	9403      	str	r4, [sp, #12]
 80082fc:	68f4      	ldr	r4, [r6, #12]
 80082fe:	9402      	str	r4, [sp, #8]
 8008300:	6874      	ldr	r4, [r6, #4]
 8008302:	9401      	str	r4, [sp, #4]
 8008304:	686c      	ldr	r4, [r5, #4]
 8008306:	9400      	str	r4, [sp, #0]
 8008308:	f002 fda4 	bl	800ae54 <forward_lite_pad_8bit_ch1st_3x3_constant>
 800830c:	b004      	add	sp, #16
 800830e:	bd70      	pop	{r4, r5, r6, pc}
 8008310:	684b      	ldr	r3, [r1, #4]
 8008312:	deff      	udf	#255	; 0xff
 8008314:	2300      	movs	r3, #0
 8008316:	685b      	ldr	r3, [r3, #4]
 8008318:	deff      	udf	#255	; 0xff
 800831a:	698b      	ldr	r3, [r1, #24]
 800831c:	deff      	udf	#255	; 0xff
 800831e:	bf00      	nop

08008320 <forward_pad_constant>:
 8008320:	6982      	ldr	r2, [r0, #24]
 8008322:	8813      	ldrh	r3, [r2, #0]
 8008324:	2b00      	cmp	r3, #0
 8008326:	d03d      	beq.n	80083a4 <forward_pad_constant+0x84>
 8008328:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800832c:	6852      	ldr	r2, [r2, #4]
 800832e:	b088      	sub	sp, #32
 8008330:	6854      	ldr	r4, [r2, #4]
 8008332:	b104      	cbz	r4, 8008336 <forward_pad_constant+0x16>
 8008334:	6824      	ldr	r4, [r4, #0]
 8008336:	2b01      	cmp	r3, #1
 8008338:	d036      	beq.n	80083a8 <forward_pad_constant+0x88>
 800833a:	6913      	ldr	r3, [r2, #16]
 800833c:	2b00      	cmp	r3, #0
 800833e:	d036      	beq.n	80083ae <forward_pad_constant+0x8e>
 8008340:	6819      	ldr	r1, [r3, #0]
 8008342:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008344:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8008346:	689a      	ldr	r2, [r3, #8]
 8008348:	f9b5 700c 	ldrsh.w	r7, [r5, #12]
 800834c:	69a6      	ldr	r6, [r4, #24]
 800834e:	f8d4 c014 	ldr.w	ip, [r4, #20]
 8008352:	68b0      	ldr	r0, [r6, #8]
 8008354:	e9d1 3105 	ldrd	r3, r1, [r1, #20]
 8008358:	e9d3 8e02 	ldrd	r8, lr, [r3, #8]
 800835c:	6889      	ldr	r1, [r1, #8]
 800835e:	fb08 f707 	mul.w	r7, r8, r7
 8008362:	6833      	ldr	r3, [r6, #0]
 8008364:	9706      	str	r7, [sp, #24]
 8008366:	f3c3 13c6 	ubfx	r3, r3, #7, #7
 800836a:	f9b5 6004 	ldrsh.w	r6, [r5, #4]
 800836e:	fb08 f606 	mul.w	r6, r8, r6
 8008372:	9605      	str	r6, [sp, #20]
 8008374:	f9b5 6008 	ldrsh.w	r6, [r5, #8]
 8008378:	fb0e f606 	mul.w	r6, lr, r6
 800837c:	9604      	str	r6, [sp, #16]
 800837e:	f9b5 5000 	ldrsh.w	r5, [r5]
 8008382:	fb0e f505 	mul.w	r5, lr, r5
 8008386:	9503      	str	r5, [sp, #12]
 8008388:	f8dc 500c 	ldr.w	r5, [ip, #12]
 800838c:	9502      	str	r5, [sp, #8]
 800838e:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8008392:	9501      	str	r5, [sp, #4]
 8008394:	68e4      	ldr	r4, [r4, #12]
 8008396:	68e4      	ldr	r4, [r4, #12]
 8008398:	9400      	str	r4, [sp, #0]
 800839a:	f002 fe27 	bl	800afec <forward_lite_pad_constant>
 800839e:	b008      	add	sp, #32
 80083a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80083a4:	685b      	ldr	r3, [r3, #4]
 80083a6:	deff      	udf	#255	; 0xff
 80083a8:	2300      	movs	r3, #0
 80083aa:	685b      	ldr	r3, [r3, #4]
 80083ac:	deff      	udf	#255	; 0xff
 80083ae:	699b      	ldr	r3, [r3, #24]
 80083b0:	deff      	udf	#255	; 0xff
 80083b2:	bf00      	nop

080083b4 <forward_pad_edge>:
 80083b4:	6982      	ldr	r2, [r0, #24]
 80083b6:	8813      	ldrh	r3, [r2, #0]
 80083b8:	2b00      	cmp	r3, #0
 80083ba:	d035      	beq.n	8008428 <forward_pad_edge+0x74>
 80083bc:	6851      	ldr	r1, [r2, #4]
 80083be:	684a      	ldr	r2, [r1, #4]
 80083c0:	b102      	cbz	r2, 80083c4 <forward_pad_edge+0x10>
 80083c2:	6812      	ldr	r2, [r2, #0]
 80083c4:	2b01      	cmp	r3, #1
 80083c6:	d031      	beq.n	800842c <forward_pad_edge+0x78>
 80083c8:	690b      	ldr	r3, [r1, #16]
 80083ca:	2b00      	cmp	r3, #0
 80083cc:	d031      	beq.n	8008432 <forward_pad_edge+0x7e>
 80083ce:	b5f0      	push	{r4, r5, r6, r7, lr}
 80083d0:	681b      	ldr	r3, [r3, #0]
 80083d2:	b089      	sub	sp, #36	; 0x24
 80083d4:	6a45      	ldr	r5, [r0, #36]	; 0x24
 80083d6:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80083da:	f9b5 6008 	ldrsh.w	r6, [r5, #8]
 80083de:	6990      	ldr	r0, [r2, #24]
 80083e0:	6957      	ldr	r7, [r2, #20]
 80083e2:	6880      	ldr	r0, [r0, #8]
 80083e4:	f8de 200c 	ldr.w	r2, [lr, #12]
 80083e8:	e9d3 c105 	ldrd	ip, r1, [r3, #20]
 80083ec:	f9b5 3000 	ldrsh.w	r3, [r5]
 80083f0:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80083f4:	6889      	ldr	r1, [r1, #8]
 80083f6:	fb04 f606 	mul.w	r6, r4, r6
 80083fa:	9606      	str	r6, [sp, #24]
 80083fc:	f8dc c008 	ldr.w	ip, [ip, #8]
 8008400:	f9b5 6004 	ldrsh.w	r6, [r5, #4]
 8008404:	9403      	str	r4, [sp, #12]
 8008406:	fb0c f606 	mul.w	r6, ip, r6
 800840a:	fb03 f404 	mul.w	r4, r3, r4
 800840e:	9605      	str	r6, [sp, #20]
 8008410:	9404      	str	r4, [sp, #16]
 8008412:	68bc      	ldr	r4, [r7, #8]
 8008414:	9402      	str	r4, [sp, #8]
 8008416:	68fc      	ldr	r4, [r7, #12]
 8008418:	9401      	str	r4, [sp, #4]
 800841a:	f9b5 400c 	ldrsh.w	r4, [r5, #12]
 800841e:	9400      	str	r4, [sp, #0]
 8008420:	f002 fe84 	bl	800b12c <forward_lite_pad_edge>
 8008424:	b009      	add	sp, #36	; 0x24
 8008426:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008428:	685b      	ldr	r3, [r3, #4]
 800842a:	deff      	udf	#255	; 0xff
 800842c:	2300      	movs	r3, #0
 800842e:	685b      	ldr	r3, [r3, #4]
 8008430:	deff      	udf	#255	; 0xff
 8008432:	699b      	ldr	r3, [r3, #24]
 8008434:	deff      	udf	#255	; 0xff
 8008436:	bf00      	nop

08008438 <forward_pad_reflect>:
 8008438:	6982      	ldr	r2, [r0, #24]
 800843a:	8813      	ldrh	r3, [r2, #0]
 800843c:	2b00      	cmp	r3, #0
 800843e:	d044      	beq.n	80084ca <forward_pad_reflect+0x92>
 8008440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008444:	6852      	ldr	r2, [r2, #4]
 8008446:	b08f      	sub	sp, #60	; 0x3c
 8008448:	6857      	ldr	r7, [r2, #4]
 800844a:	b107      	cbz	r7, 800844e <forward_pad_reflect+0x16>
 800844c:	683f      	ldr	r7, [r7, #0]
 800844e:	2b01      	cmp	r3, #1
 8008450:	d03d      	beq.n	80084ce <forward_pad_reflect+0x96>
 8008452:	6913      	ldr	r3, [r2, #16]
 8008454:	2b00      	cmp	r3, #0
 8008456:	d03d      	beq.n	80084d4 <forward_pad_reflect+0x9c>
 8008458:	6819      	ldr	r1, [r3, #0]
 800845a:	68fa      	ldr	r2, [r7, #12]
 800845c:	e9d2 8302 	ldrd	r8, r3, [r2, #8]
 8008460:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 8008464:	f5b4 6fa0 	cmp.w	r4, #1280	; 0x500
 8008468:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800846a:	e9d1 0105 	ldrd	r0, r1, [r1, #20]
 800846e:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8008472:	f9b4 e004 	ldrsh.w	lr, [r4, #4]
 8008476:	f9b4 b000 	ldrsh.w	fp, [r4]
 800847a:	6889      	ldr	r1, [r1, #8]
 800847c:	e9d0 5c02 	ldrd	r5, ip, [r0, #8]
 8008480:	e9d7 7005 	ldrd	r7, r0, [r7, #20]
 8008484:	fb05 f606 	mul.w	r6, r5, r6
 8008488:	6880      	ldr	r0, [r0, #8]
 800848a:	e9d2 a902 	ldrd	sl, r9, [r2, #8]
 800848e:	bf2c      	ite	cs
 8008490:	6912      	ldrcs	r2, [r2, #16]
 8008492:	2201      	movcc	r2, #1
 8008494:	960c      	str	r6, [sp, #48]	; 0x30
 8008496:	fb05 f60e 	mul.w	r6, r5, lr
 800849a:	960b      	str	r6, [sp, #44]	; 0x2c
 800849c:	fb0c f60b 	mul.w	r6, ip, fp
 80084a0:	960a      	str	r6, [sp, #40]	; 0x28
 80084a2:	f9b4 4008 	ldrsh.w	r4, [r4, #8]
 80084a6:	9409      	str	r4, [sp, #36]	; 0x24
 80084a8:	e9cd eb07 	strd	lr, fp, [sp, #28]
 80084ac:	e9cd c505 	strd	ip, r5, [sp, #20]
 80084b0:	68bc      	ldr	r4, [r7, #8]
 80084b2:	9404      	str	r4, [sp, #16]
 80084b4:	68fc      	ldr	r4, [r7, #12]
 80084b6:	f8cd 8000 	str.w	r8, [sp]
 80084ba:	9403      	str	r4, [sp, #12]
 80084bc:	e9cd 9a01 	strd	r9, sl, [sp, #4]
 80084c0:	f002 fea6 	bl	800b210 <forward_lite_pad_reflect>
 80084c4:	b00f      	add	sp, #60	; 0x3c
 80084c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80084ca:	685b      	ldr	r3, [r3, #4]
 80084cc:	deff      	udf	#255	; 0xff
 80084ce:	2300      	movs	r3, #0
 80084d0:	685b      	ldr	r3, [r3, #4]
 80084d2:	deff      	udf	#255	; 0xff
 80084d4:	68db      	ldr	r3, [r3, #12]
 80084d6:	deff      	udf	#255	; 0xff

080084d8 <forward_ap_integer_INT8>:
 80084d8:	6983      	ldr	r3, [r0, #24]
 80084da:	881a      	ldrh	r2, [r3, #0]
 80084dc:	2a00      	cmp	r2, #0
 80084de:	d074      	beq.n	80085ca <forward_ap_integer_INT8+0xf2>
 80084e0:	6859      	ldr	r1, [r3, #4]
 80084e2:	684b      	ldr	r3, [r1, #4]
 80084e4:	b103      	cbz	r3, 80084e8 <forward_ap_integer_INT8+0x10>
 80084e6:	681b      	ldr	r3, [r3, #0]
 80084e8:	2a01      	cmp	r2, #1
 80084ea:	f000 80e0 	beq.w	80086ae <forward_ap_integer_INT8+0x1d6>
 80084ee:	690a      	ldr	r2, [r1, #16]
 80084f0:	2a00      	cmp	r2, #0
 80084f2:	f000 80df 	beq.w	80086b4 <forward_ap_integer_INT8+0x1dc>
 80084f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80084fa:	68de      	ldr	r6, [r3, #12]
 80084fc:	b095      	sub	sp, #84	; 0x54
 80084fe:	6811      	ldr	r1, [r2, #0]
 8008500:	681c      	ldr	r4, [r3, #0]
 8008502:	f8d3 b018 	ldr.w	fp, [r3, #24]
 8008506:	f8b6 c004 	ldrh.w	ip, [r6, #4]
 800850a:	8932      	ldrh	r2, [r6, #8]
 800850c:	89b3      	ldrh	r3, [r6, #12]
 800850e:	8b86      	ldrh	r6, [r0, #28]
 8008510:	6b07      	ldr	r7, [r0, #48]	; 0x30
 8008512:	960d      	str	r6, [sp, #52]	; 0x34
 8008514:	8c06      	ldrh	r6, [r0, #32]
 8008516:	68cd      	ldr	r5, [r1, #12]
 8008518:	960e      	str	r6, [sp, #56]	; 0x38
 800851a:	88be      	ldrh	r6, [r7, #4]
 800851c:	f8b5 e008 	ldrh.w	lr, [r5, #8]
 8008520:	960f      	str	r6, [sp, #60]	; 0x3c
 8008522:	883e      	ldrh	r6, [r7, #0]
 8008524:	f8b5 800c 	ldrh.w	r8, [r5, #12]
 8008528:	9610      	str	r6, [sp, #64]	; 0x40
 800852a:	8c86      	ldrh	r6, [r0, #36]	; 0x24
 800852c:	8d00      	ldrh	r0, [r0, #40]	; 0x28
 800852e:	9611      	str	r6, [sp, #68]	; 0x44
 8008530:	f8d1 a018 	ldr.w	sl, [r1, #24]
 8008534:	680e      	ldr	r6, [r1, #0]
 8008536:	9012      	str	r0, [sp, #72]	; 0x48
 8008538:	2c00      	cmp	r4, #0
 800853a:	d060      	beq.n	80085fe <forward_ap_integer_INT8+0x126>
 800853c:	f8d4 9004 	ldr.w	r9, [r4, #4]
 8008540:	f1b9 0f00 	cmp.w	r9, #0
 8008544:	d043      	beq.n	80085ce <forward_ap_integer_INT8+0xf6>
 8008546:	8865      	ldrh	r5, [r4, #2]
 8008548:	2d00      	cmp	r5, #0
 800854a:	d06e      	beq.n	800862a <forward_ap_integer_INT8+0x152>
 800854c:	f8d9 1000 	ldr.w	r1, [r9]
 8008550:	ed91 0a00 	vldr	s0, [r1]
 8008554:	2e00      	cmp	r6, #0
 8008556:	d06c      	beq.n	8008632 <forward_ap_integer_INT8+0x15a>
 8008558:	6877      	ldr	r7, [r6, #4]
 800855a:	2f00      	cmp	r7, #0
 800855c:	d03e      	beq.n	80085dc <forward_ap_integer_INT8+0x104>
 800855e:	8871      	ldrh	r1, [r6, #2]
 8008560:	9113      	str	r1, [sp, #76]	; 0x4c
 8008562:	2900      	cmp	r1, #0
 8008564:	d053      	beq.n	800860e <forward_ap_integer_INT8+0x136>
 8008566:	683d      	ldr	r5, [r7, #0]
 8008568:	f8db 0008 	ldr.w	r0, [fp, #8]
 800856c:	f8da 1008 	ldr.w	r1, [sl, #8]
 8008570:	edd5 0a00 	vldr	s1, [r5]
 8008574:	f1b9 0f00 	cmp.w	r9, #0
 8008578:	d055      	beq.n	8008626 <forward_ap_integer_INT8+0x14e>
 800857a:	8864      	ldrh	r4, [r4, #2]
 800857c:	2c00      	cmp	r4, #0
 800857e:	d039      	beq.n	80085f4 <forward_ap_integer_INT8+0x11c>
 8008580:	f8d9 4004 	ldr.w	r4, [r9, #4]
 8008584:	f994 4000 	ldrsb.w	r4, [r4]
 8008588:	2e00      	cmp	r6, #0
 800858a:	d036      	beq.n	80085fa <forward_ap_integer_INT8+0x122>
 800858c:	2f00      	cmp	r7, #0
 800858e:	d034      	beq.n	80085fa <forward_ap_integer_INT8+0x122>
 8008590:	8875      	ldrh	r5, [r6, #2]
 8008592:	9513      	str	r5, [sp, #76]	; 0x4c
 8008594:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8008596:	b115      	cbz	r5, 800859e <forward_ap_integer_INT8+0xc6>
 8008598:	687d      	ldr	r5, [r7, #4]
 800859a:	f995 5000 	ldrsb.w	r5, [r5]
 800859e:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
 80085a2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80085a4:	9406      	str	r4, [sp, #24]
 80085a6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80085a8:	9405      	str	r4, [sp, #20]
 80085aa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80085ac:	9404      	str	r4, [sp, #16]
 80085ae:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80085b0:	9403      	str	r4, [sp, #12]
 80085b2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80085b4:	9402      	str	r4, [sp, #8]
 80085b6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80085b8:	e9cd e807 	strd	lr, r8, [sp, #28]
 80085bc:	e9cd c400 	strd	ip, r4, [sp]
 80085c0:	f005 fcd6 	bl	800df70 <st_int8_avepool>
 80085c4:	b015      	add	sp, #84	; 0x54
 80085c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80085ca:	6853      	ldr	r3, [r2, #4]
 80085cc:	deff      	udf	#255	; 0xff
 80085ce:	2e00      	cmp	r6, #0
 80085d0:	d039      	beq.n	8008646 <forward_ap_integer_INT8+0x16e>
 80085d2:	6877      	ldr	r7, [r6, #4]
 80085d4:	ed9f 0a38 	vldr	s0, [pc, #224]	; 80086b8 <forward_ap_integer_INT8+0x1e0>
 80085d8:	2f00      	cmp	r7, #0
 80085da:	d1c0      	bne.n	800855e <forward_ap_integer_INT8+0x86>
 80085dc:	f8db 0008 	ldr.w	r0, [fp, #8]
 80085e0:	f8da 1008 	ldr.w	r1, [sl, #8]
 80085e4:	f1b9 0f00 	cmp.w	r9, #0
 80085e8:	d05c      	beq.n	80086a4 <forward_ap_integer_INT8+0x1cc>
 80085ea:	8864      	ldrh	r4, [r4, #2]
 80085ec:	2c00      	cmp	r4, #0
 80085ee:	d152      	bne.n	8008696 <forward_ap_integer_INT8+0x1be>
 80085f0:	eddf 0a31 	vldr	s1, [pc, #196]	; 80086b8 <forward_ap_integer_INT8+0x1e0>
 80085f4:	2400      	movs	r4, #0
 80085f6:	2f00      	cmp	r7, #0
 80085f8:	d1ca      	bne.n	8008590 <forward_ap_integer_INT8+0xb8>
 80085fa:	2500      	movs	r5, #0
 80085fc:	e7cf      	b.n	800859e <forward_ap_integer_INT8+0xc6>
 80085fe:	b316      	cbz	r6, 8008646 <forward_ap_integer_INT8+0x16e>
 8008600:	6877      	ldr	r7, [r6, #4]
 8008602:	b35f      	cbz	r7, 800865c <forward_ap_integer_INT8+0x184>
 8008604:	8871      	ldrh	r1, [r6, #2]
 8008606:	9113      	str	r1, [sp, #76]	; 0x4c
 8008608:	bb99      	cbnz	r1, 8008672 <forward_ap_integer_INT8+0x19a>
 800860a:	ed9f 0a2b 	vldr	s0, [pc, #172]	; 80086b8 <forward_ap_integer_INT8+0x1e0>
 800860e:	f8db 0008 	ldr.w	r0, [fp, #8]
 8008612:	f8da 1008 	ldr.w	r1, [sl, #8]
 8008616:	b194      	cbz	r4, 800863e <forward_ap_integer_INT8+0x166>
 8008618:	f8d4 9004 	ldr.w	r9, [r4, #4]
 800861c:	eddf 0a26 	vldr	s1, [pc, #152]	; 80086b8 <forward_ap_integer_INT8+0x1e0>
 8008620:	f1b9 0f00 	cmp.w	r9, #0
 8008624:	d1a9      	bne.n	800857a <forward_ap_integer_INT8+0xa2>
 8008626:	464c      	mov	r4, r9
 8008628:	e7b4      	b.n	8008594 <forward_ap_integer_INT8+0xbc>
 800862a:	ed9f 0a23 	vldr	s0, [pc, #140]	; 80086b8 <forward_ap_integer_INT8+0x1e0>
 800862e:	2e00      	cmp	r6, #0
 8008630:	d192      	bne.n	8008558 <forward_ap_integer_INT8+0x80>
 8008632:	f8db 0008 	ldr.w	r0, [fp, #8]
 8008636:	f8da 1008 	ldr.w	r1, [sl, #8]
 800863a:	bb25      	cbnz	r5, 8008686 <forward_ap_integer_INT8+0x1ae>
 800863c:	462c      	mov	r4, r5
 800863e:	eddf 0a1e 	vldr	s1, [pc, #120]	; 80086b8 <forward_ap_integer_INT8+0x1e0>
 8008642:	4625      	mov	r5, r4
 8008644:	e7ab      	b.n	800859e <forward_ap_integer_INT8+0xc6>
 8008646:	ed9f 0a1c 	vldr	s0, [pc, #112]	; 80086b8 <forward_ap_integer_INT8+0x1e0>
 800864a:	4634      	mov	r4, r6
 800864c:	f8db 0008 	ldr.w	r0, [fp, #8]
 8008650:	4635      	mov	r5, r6
 8008652:	eef0 0a40 	vmov.f32	s1, s0
 8008656:	f8da 1008 	ldr.w	r1, [sl, #8]
 800865a:	e7a0      	b.n	800859e <forward_ap_integer_INT8+0xc6>
 800865c:	ed9f 0a16 	vldr	s0, [pc, #88]	; 80086b8 <forward_ap_integer_INT8+0x1e0>
 8008660:	463c      	mov	r4, r7
 8008662:	f8db 0008 	ldr.w	r0, [fp, #8]
 8008666:	463d      	mov	r5, r7
 8008668:	eef0 0a40 	vmov.f32	s1, s0
 800866c:	f8da 1008 	ldr.w	r1, [sl, #8]
 8008670:	e795      	b.n	800859e <forward_ap_integer_INT8+0xc6>
 8008672:	683d      	ldr	r5, [r7, #0]
 8008674:	f8db 0008 	ldr.w	r0, [fp, #8]
 8008678:	f8da 1008 	ldr.w	r1, [sl, #8]
 800867c:	ed9f 0a0e 	vldr	s0, [pc, #56]	; 80086b8 <forward_ap_integer_INT8+0x1e0>
 8008680:	edd5 0a00 	vldr	s1, [r5]
 8008684:	e788      	b.n	8008598 <forward_ap_integer_INT8+0xc0>
 8008686:	f8d9 4004 	ldr.w	r4, [r9, #4]
 800868a:	4635      	mov	r5, r6
 800868c:	eddf 0a0a 	vldr	s1, [pc, #40]	; 80086b8 <forward_ap_integer_INT8+0x1e0>
 8008690:	f994 4000 	ldrsb.w	r4, [r4]
 8008694:	e783      	b.n	800859e <forward_ap_integer_INT8+0xc6>
 8008696:	f8d9 4004 	ldr.w	r4, [r9, #4]
 800869a:	eddf 0a07 	vldr	s1, [pc, #28]	; 80086b8 <forward_ap_integer_INT8+0x1e0>
 800869e:	f994 4000 	ldrsb.w	r4, [r4]
 80086a2:	e7aa      	b.n	80085fa <forward_ap_integer_INT8+0x122>
 80086a4:	464c      	mov	r4, r9
 80086a6:	eddf 0a04 	vldr	s1, [pc, #16]	; 80086b8 <forward_ap_integer_INT8+0x1e0>
 80086aa:	464d      	mov	r5, r9
 80086ac:	e777      	b.n	800859e <forward_ap_integer_INT8+0xc6>
 80086ae:	2300      	movs	r3, #0
 80086b0:	685b      	ldr	r3, [r3, #4]
 80086b2:	deff      	udf	#255	; 0xff
 80086b4:	68d3      	ldr	r3, [r2, #12]
 80086b6:	deff      	udf	#255	; 0xff
 80086b8:	00000000 	.word	0x00000000

080086bc <func_dummy>:
 80086bc:	4770      	bx	lr
 80086be:	bf00      	nop

080086c0 <forward_pw_sssa8_ch>:
 80086c0:	6982      	ldr	r2, [r0, #24]
 80086c2:	8813      	ldrh	r3, [r2, #0]
 80086c4:	2b00      	cmp	r3, #0
 80086c6:	f000 811b 	beq.w	8008900 <forward_pw_sssa8_ch+0x240>
 80086ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80086ce:	ed2d 8b02 	vpush	{d8}
 80086d2:	6855      	ldr	r5, [r2, #4]
 80086d4:	b09b      	sub	sp, #108	; 0x6c
 80086d6:	6869      	ldr	r1, [r5, #4]
 80086d8:	b101      	cbz	r1, 80086dc <forward_pw_sssa8_ch+0x1c>
 80086da:	6809      	ldr	r1, [r1, #0]
 80086dc:	2b01      	cmp	r3, #1
 80086de:	f000 8135 	beq.w	800894c <forward_pw_sssa8_ch+0x28c>
 80086e2:	f8d5 b010 	ldr.w	fp, [r5, #16]
 80086e6:	f1bb 0f00 	cmp.w	fp, #0
 80086ea:	d001      	beq.n	80086f0 <forward_pw_sssa8_ch+0x30>
 80086ec:	f8db b000 	ldr.w	fp, [fp]
 80086f0:	2b02      	cmp	r3, #2
 80086f2:	f000 8102 	beq.w	80088fa <forward_pw_sssa8_ch+0x23a>
 80086f6:	69ea      	ldr	r2, [r5, #28]
 80086f8:	2a00      	cmp	r2, #0
 80086fa:	f000 8120 	beq.w	800893e <forward_pw_sssa8_ch+0x27e>
 80086fe:	8b2e      	ldrh	r6, [r5, #24]
 8008700:	6814      	ldr	r4, [r2, #0]
 8008702:	2e01      	cmp	r6, #1
 8008704:	f200 80fe 	bhi.w	8008904 <forward_pw_sssa8_ch+0x244>
 8008708:	2600      	movs	r6, #0
 800870a:	2b03      	cmp	r3, #3
 800870c:	f000 8121 	beq.w	8008952 <forward_pw_sssa8_ch+0x292>
 8008710:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8008712:	2b00      	cmp	r3, #0
 8008714:	f000 8116 	beq.w	8008944 <forward_pw_sssa8_ch+0x284>
 8008718:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800871a:	681f      	ldr	r7, [r3, #0]
 800871c:	9518      	str	r5, [sp, #96]	; 0x60
 800871e:	9710      	str	r7, [sp, #64]	; 0x40
 8008720:	2d00      	cmp	r5, #0
 8008722:	f000 8108 	beq.w	8008936 <forward_pw_sssa8_ch+0x276>
 8008726:	685f      	ldr	r7, [r3, #4]
 8008728:	69b3      	ldr	r3, [r6, #24]
 800872a:	9e10      	ldr	r6, [sp, #64]	; 0x40
 800872c:	689b      	ldr	r3, [r3, #8]
 800872e:	f8d6 e018 	ldr.w	lr, [r6, #24]
 8008732:	9319      	str	r3, [sp, #100]	; 0x64
 8008734:	68cb      	ldr	r3, [r1, #12]
 8008736:	f8d7 c00c 	ldr.w	ip, [r7, #12]
 800873a:	685e      	ldr	r6, [r3, #4]
 800873c:	68dd      	ldr	r5, [r3, #12]
 800873e:	689b      	ldr	r3, [r3, #8]
 8008740:	950d      	str	r5, [sp, #52]	; 0x34
 8008742:	b2b5      	uxth	r5, r6
 8008744:	9311      	str	r3, [sp, #68]	; 0x44
 8008746:	ee08 5a10 	vmov	s16, r5
 800874a:	f8dc 500c 	ldr.w	r5, [ip, #12]
 800874e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8008752:	9514      	str	r5, [sp, #80]	; 0x50
 8008754:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8008758:	f8de a008 	ldr.w	sl, [lr, #8]
 800875c:	9515      	str	r5, [sp, #84]	; 0x54
 800875e:	b29d      	uxth	r5, r3
 8008760:	9616      	str	r6, [sp, #88]	; 0x58
 8008762:	950f      	str	r5, [sp, #60]	; 0x3c
 8008764:	2a00      	cmp	r2, #0
 8008766:	f000 80d5 	beq.w	8008914 <forward_pw_sssa8_ch+0x254>
 800876a:	6892      	ldr	r2, [r2, #8]
 800876c:	2a00      	cmp	r2, #0
 800876e:	f000 80d1 	beq.w	8008914 <forward_pw_sssa8_ch+0x254>
 8008772:	f8d2 8018 	ldr.w	r8, [r2, #24]
 8008776:	f1b8 0f00 	cmp.w	r8, #0
 800877a:	bf18      	it	ne
 800877c:	4690      	movne	r8, r2
 800877e:	680d      	ldr	r5, [r1, #0]
 8008780:	683e      	ldr	r6, [r7, #0]
 8008782:	6822      	ldr	r2, [r4, #0]
 8008784:	2d00      	cmp	r5, #0
 8008786:	f000 80c2 	beq.w	800890e <forward_pw_sssa8_ch+0x24e>
 800878a:	f8d5 c004 	ldr.w	ip, [r5, #4]
 800878e:	f1bc 0f00 	cmp.w	ip, #0
 8008792:	f000 80bc 	beq.w	800890e <forward_pw_sssa8_ch+0x24e>
 8008796:	f8b5 9002 	ldrh.w	r9, [r5, #2]
 800879a:	f1b9 0f00 	cmp.w	r9, #0
 800879e:	f000 80b6 	beq.w	800890e <forward_pw_sssa8_ch+0x24e>
 80087a2:	f8dc c000 	ldr.w	ip, [ip]
 80087a6:	ed9c 0a00 	vldr	s0, [ip]
 80087aa:	2e00      	cmp	r6, #0
 80087ac:	f000 80ac 	beq.w	8008908 <forward_pw_sssa8_ch+0x248>
 80087b0:	f8d6 c004 	ldr.w	ip, [r6, #4]
 80087b4:	f1bc 0f00 	cmp.w	ip, #0
 80087b8:	f000 80a6 	beq.w	8008908 <forward_pw_sssa8_ch+0x248>
 80087bc:	f8b6 9002 	ldrh.w	r9, [r6, #2]
 80087c0:	f1b9 0f00 	cmp.w	r9, #0
 80087c4:	f000 80a0 	beq.w	8008908 <forward_pw_sssa8_ch+0x248>
 80087c8:	f8dc c000 	ldr.w	ip, [ip]
 80087cc:	eddc 0a00 	vldr	s1, [ip]
 80087d0:	f8d1 c018 	ldr.w	ip, [r1, #24]
 80087d4:	69a1      	ldr	r1, [r4, #24]
 80087d6:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
 80087da:	6889      	ldr	r1, [r1, #8]
 80087dc:	f8dc 9008 	ldr.w	r9, [ip, #8]
 80087e0:	9113      	str	r1, [sp, #76]	; 0x4c
 80087e2:	69b9      	ldr	r1, [r7, #24]
 80087e4:	9012      	str	r0, [sp, #72]	; 0x48
 80087e6:	6889      	ldr	r1, [r1, #8]
 80087e8:	910e      	str	r1, [sp, #56]	; 0x38
 80087ea:	b112      	cbz	r2, 80087f2 <forward_pw_sssa8_ch+0x132>
 80087ec:	6852      	ldr	r2, [r2, #4]
 80087ee:	b102      	cbz	r2, 80087f2 <forward_pw_sssa8_ch+0x132>
 80087f0:	6812      	ldr	r2, [r2, #0]
 80087f2:	b29b      	uxth	r3, r3
 80087f4:	e9dd 1014 	ldrd	r1, r0, [sp, #80]	; 0x50
 80087f8:	fb00 f101 	mul.w	r1, r0, r1
 80087fc:	980e      	ldr	r0, [sp, #56]	; 0x38
 80087fe:	fb03 0101 	mla	r1, r3, r1, r0
 8008802:	4589      	cmp	r9, r1
 8008804:	f080 808f 	bcs.w	8008926 <forward_pw_sssa8_ch+0x266>
 8008808:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800880a:	9911      	ldr	r1, [sp, #68]	; 0x44
 800880c:	f8bd c058 	ldrh.w	ip, [sp, #88]	; 0x58
 8008810:	fb01 f404 	mul.w	r4, r1, r4
 8008814:	fb0c 9404 	mla	r4, ip, r4, r9
 8008818:	42a0      	cmp	r0, r4
 800881a:	bf2c      	ite	cs
 800881c:	2400      	movcs	r4, #0
 800881e:	2401      	movcc	r4, #1
 8008820:	b145      	cbz	r5, 8008834 <forward_pw_sssa8_ch+0x174>
 8008822:	6869      	ldr	r1, [r5, #4]
 8008824:	2900      	cmp	r1, #0
 8008826:	f000 8082 	beq.w	800892e <forward_pw_sssa8_ch+0x26e>
 800882a:	886d      	ldrh	r5, [r5, #2]
 800882c:	b115      	cbz	r5, 8008834 <forward_pw_sssa8_ch+0x174>
 800882e:	6849      	ldr	r1, [r1, #4]
 8008830:	f991 5000 	ldrsb.w	r5, [r1]
 8008834:	b13e      	cbz	r6, 8008846 <forward_pw_sssa8_ch+0x186>
 8008836:	6871      	ldr	r1, [r6, #4]
 8008838:	2900      	cmp	r1, #0
 800883a:	d07a      	beq.n	8008932 <forward_pw_sssa8_ch+0x272>
 800883c:	8876      	ldrh	r6, [r6, #2]
 800883e:	b116      	cbz	r6, 8008846 <forward_pw_sssa8_ch+0x186>
 8008840:	6849      	ldr	r1, [r1, #4]
 8008842:	f991 6000 	ldrsb.w	r6, [r1]
 8008846:	edcd 0a15 	vstr	s1, [sp, #84]	; 0x54
 800884a:	ed8d 0a14 	vstr	s0, [sp, #80]	; 0x50
 800884e:	e9de 0100 	ldrd	r0, r1, [lr]
 8008852:	e9cd 2316 	strd	r2, r3, [sp, #88]	; 0x58
 8008856:	f006 f84b 	bl	800e8f0 <ai_array_get_byte_size>
 800885a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800885c:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800885e:	eba0 0343 	sub.w	r3, r0, r3, lsl #1
 8008862:	eddd 0a15 	vldr	s1, [sp, #84]	; 0x54
 8008866:	4610      	mov	r0, r2
 8008868:	ed9d 0a14 	vldr	s0, [sp, #80]	; 0x50
 800886c:	4453      	add	r3, sl
 800886e:	4652      	mov	r2, sl
 8008870:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8008872:	f002 fdc7 	bl	800b404 <align_factor_ch>
 8008876:	2c00      	cmp	r4, #0
 8008878:	d157      	bne.n	800892a <forward_pw_sssa8_ch+0x26a>
 800887a:	2301      	movs	r3, #1
 800887c:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8008880:	930d      	str	r3, [sp, #52]	; 0x34
 8008882:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8008884:	2401      	movs	r4, #1
 8008886:	9214      	str	r2, [sp, #80]	; 0x50
 8008888:	699b      	ldr	r3, [r3, #24]
 800888a:	e9d3 0100 	ldrd	r0, r1, [r3]
 800888e:	f006 f82f 	bl	800e8f0 <ai_array_get_byte_size>
 8008892:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008894:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8008896:	9307      	str	r3, [sp, #28]
 8008898:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800889a:	9009      	str	r0, [sp, #36]	; 0x24
 800889c:	4648      	mov	r0, r9
 800889e:	9306      	str	r3, [sp, #24]
 80088a0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80088a2:	f8bd 1044 	ldrh.w	r1, [sp, #68]	; 0x44
 80088a6:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80088aa:	9503      	str	r5, [sp, #12]
 80088ac:	9408      	str	r4, [sp, #32]
 80088ae:	e9cd 6304 	strd	r6, r3, [sp, #16]
 80088b2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80088b4:	9302      	str	r3, [sp, #8]
 80088b6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80088b8:	9301      	str	r3, [sp, #4]
 80088ba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80088bc:	9300      	str	r3, [sp, #0]
 80088be:	ee18 3a10 	vmov	r3, s16
 80088c2:	f001 f9d3 	bl	8009c6c <forward_lite_pw_sssa8_ch>
 80088c6:	68bb      	ldr	r3, [r7, #8]
 80088c8:	4622      	mov	r2, r4
 80088ca:	0a1b      	lsrs	r3, r3, #8
 80088cc:	d008      	beq.n	80088e0 <forward_pw_sssa8_ch+0x220>
 80088ce:	68f8      	ldr	r0, [r7, #12]
 80088d0:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 80088d4:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80088d8:	4298      	cmp	r0, r3
 80088da:	fb01 f202 	mul.w	r2, r1, r2
 80088de:	d1f9      	bne.n	80088d4 <forward_pw_sssa8_ch+0x214>
 80088e0:	eddd 7a18 	vldr	s15, [sp, #96]	; 0x60
 80088e4:	4643      	mov	r3, r8
 80088e6:	4639      	mov	r1, r7
 80088e8:	4658      	mov	r0, fp
 80088ea:	ee17 ca90 	vmov	ip, s15
 80088ee:	b01b      	add	sp, #108	; 0x6c
 80088f0:	ecbd 8b02 	vpop	{d8}
 80088f4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80088f8:	4760      	bx	ip
 80088fa:	2300      	movs	r3, #0
 80088fc:	685b      	ldr	r3, [r3, #4]
 80088fe:	deff      	udf	#255	; 0xff
 8008900:	685b      	ldr	r3, [r3, #4]
 8008902:	deff      	udf	#255	; 0xff
 8008904:	6856      	ldr	r6, [r2, #4]
 8008906:	e700      	b.n	800870a <forward_pw_sssa8_ch+0x4a>
 8008908:	eddf 0a14 	vldr	s1, [pc, #80]	; 800895c <forward_pw_sssa8_ch+0x29c>
 800890c:	e760      	b.n	80087d0 <forward_pw_sssa8_ch+0x110>
 800890e:	ed9f 0a13 	vldr	s0, [pc, #76]	; 800895c <forward_pw_sssa8_ch+0x29c>
 8008912:	e74a      	b.n	80087aa <forward_pw_sssa8_ch+0xea>
 8008914:	f8d0 8020 	ldr.w	r8, [r0, #32]
 8008918:	f1b8 0f00 	cmp.w	r8, #0
 800891c:	f43f af2f 	beq.w	800877e <forward_pw_sssa8_ch+0xbe>
 8008920:	f8d8 8008 	ldr.w	r8, [r8, #8]
 8008924:	e72b      	b.n	800877e <forward_pw_sssa8_ch+0xbe>
 8008926:	2400      	movs	r4, #0
 8008928:	e77a      	b.n	8008820 <forward_pw_sssa8_ch+0x160>
 800892a:	4622      	mov	r2, r4
 800892c:	e7a9      	b.n	8008882 <forward_pw_sssa8_ch+0x1c2>
 800892e:	460d      	mov	r5, r1
 8008930:	e780      	b.n	8008834 <forward_pw_sssa8_ch+0x174>
 8008932:	460e      	mov	r6, r1
 8008934:	e787      	b.n	8008846 <forward_pw_sssa8_ch+0x186>
 8008936:	4b0a      	ldr	r3, [pc, #40]	; (8008960 <forward_pw_sssa8_ch+0x2a0>)
 8008938:	465f      	mov	r7, fp
 800893a:	9318      	str	r3, [sp, #96]	; 0x60
 800893c:	e6f4      	b.n	8008728 <forward_pw_sssa8_ch+0x68>
 800893e:	4614      	mov	r4, r2
 8008940:	4616      	mov	r6, r2
 8008942:	e6e2      	b.n	800870a <forward_pw_sssa8_ch+0x4a>
 8008944:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8008946:	b93a      	cbnz	r2, 8008958 <forward_pw_sssa8_ch+0x298>
 8008948:	6993      	ldr	r3, [r2, #24]
 800894a:	deff      	udf	#255	; 0xff
 800894c:	2300      	movs	r3, #0
 800894e:	685b      	ldr	r3, [r3, #4]
 8008950:	deff      	udf	#255	; 0xff
 8008952:	2300      	movs	r3, #0
 8008954:	685b      	ldr	r3, [r3, #4]
 8008956:	deff      	udf	#255	; 0xff
 8008958:	68db      	ldr	r3, [r3, #12]
 800895a:	deff      	udf	#255	; 0xff
 800895c:	00000000 	.word	0x00000000
 8008960:	080086bd 	.word	0x080086bd

08008964 <forward_lite_conv2d_sssa8_ch>:
 8008964:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008968:	ed2d 8b08 	vpush	{d8-d11}
 800896c:	b0d5      	sub	sp, #340	; 0x154
 800896e:	469a      	mov	sl, r3
 8008970:	4689      	mov	r9, r1
 8008972:	f8bd 319c 	ldrh.w	r3, [sp, #412]	; 0x19c
 8008976:	f8dd b1d8 	ldr.w	fp, [sp, #472]	; 0x1d8
 800897a:	9213      	str	r2, [sp, #76]	; 0x4c
 800897c:	ee09 3a10 	vmov	s18, r3
 8008980:	f8bd 21a0 	ldrh.w	r2, [sp, #416]	; 0x1a0
 8008984:	ebab 0543 	sub.w	r5, fp, r3, lsl #1
 8008988:	f89d 11c4 	ldrb.w	r1, [sp, #452]	; 0x1c4
 800898c:	9225      	str	r2, [sp, #148]	; 0x94
 800898e:	9a77      	ldr	r2, [sp, #476]	; 0x1dc
 8008990:	f8bd 61d0 	ldrh.w	r6, [sp, #464]	; 0x1d0
 8008994:	4415      	add	r5, r2
 8008996:	f8bd 21a4 	ldrh.w	r2, [sp, #420]	; 0x1a4
 800899a:	9011      	str	r0, [sp, #68]	; 0x44
 800899c:	922a      	str	r2, [sp, #168]	; 0xa8
 800899e:	f8bd 21a8 	ldrh.w	r2, [sp, #424]	; 0x1a8
 80089a2:	f8bd 01cc 	ldrh.w	r0, [sp, #460]	; 0x1cc
 80089a6:	9214      	str	r2, [sp, #80]	; 0x50
 80089a8:	f8bd 21ac 	ldrh.w	r2, [sp, #428]	; 0x1ac
 80089ac:	9629      	str	r6, [sp, #164]	; 0xa4
 80089ae:	005e      	lsls	r6, r3, #1
 80089b0:	9224      	str	r2, [sp, #144]	; 0x90
 80089b2:	07cb      	lsls	r3, r1, #31
 80089b4:	f8bd 21b0 	ldrh.w	r2, [sp, #432]	; 0x1b0
 80089b8:	f99d 81bc 	ldrsb.w	r8, [sp, #444]	; 0x1bc
 80089bc:	9220      	str	r2, [sp, #128]	; 0x80
 80089be:	f8bd 21b4 	ldrh.w	r2, [sp, #436]	; 0x1b4
 80089c2:	f99d 41c0 	ldrsb.w	r4, [sp, #448]	; 0x1c0
 80089c6:	922b      	str	r2, [sp, #172]	; 0xac
 80089c8:	f8bd 71d4 	ldrh.w	r7, [sp, #468]	; 0x1d4
 80089cc:	9a6e      	ldr	r2, [sp, #440]	; 0x1b8
 80089ce:	9126      	str	r1, [sp, #152]	; 0x98
 80089d0:	9012      	str	r0, [sp, #72]	; 0x48
 80089d2:	f140 8429 	bpl.w	8009228 <forward_lite_conv2d_sssa8_ch+0x8c4>
 80089d6:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80089d8:	1c83      	adds	r3, r0, #2
 80089da:	3102      	adds	r1, #2
 80089dc:	fb01 f303 	mul.w	r3, r1, r3
 80089e0:	931d      	str	r3, [sp, #116]	; 0x74
 80089e2:	9b77      	ldr	r3, [sp, #476]	; 0x1dc
 80089e4:	4650      	mov	r0, sl
 80089e6:	9966      	ldr	r1, [sp, #408]	; 0x198
 80089e8:	9201      	str	r2, [sp, #4]
 80089ea:	ee19 2a10 	vmov	r2, s18
 80089ee:	e9cd 8302 	strd	r8, r3, [sp, #8]
 80089f2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80089f4:	9300      	str	r3, [sp, #0]
 80089f6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80089f8:	f002 fd34 	bl	800b464 <st_sssa8_ch_convolve_rank1upd>
 80089fc:	ee19 2a10 	vmov	r2, s18
 8008a00:	9977      	ldr	r1, [sp, #476]	; 0x1dc
 8008a02:	18b3      	adds	r3, r6, r2
 8008a04:	9825      	ldr	r0, [sp, #148]	; 0x94
 8008a06:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8008a0a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8008a0c:	fb10 f303 	smulbb	r3, r0, r3
 8008a10:	9119      	str	r1, [sp, #100]	; 0x64
 8008a12:	fb13 f30a 	smulbb	r3, r3, sl
 8008a16:	b29b      	uxth	r3, r3
 8008a18:	931c      	str	r3, [sp, #112]	; 0x70
 8008a1a:	ebc2 7342 	rsb	r3, r2, r2, lsl #29
 8008a1e:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 8008a22:	ee0a 3a10 	vmov	s20, r3
 8008a26:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8008a2a:	9323      	str	r3, [sp, #140]	; 0x8c
 8008a2c:	b1d2      	cbz	r2, 8008a64 <forward_lite_conv2d_sssa8_ch+0x100>
 8008a2e:	1d19      	adds	r1, r3, #4
 8008a30:	f04f 0c01 	mov.w	ip, #1
 8008a34:	eb05 0e06 	add.w	lr, r5, r6
 8008a38:	f935 3b02 	ldrsh.w	r3, [r5], #2
 8008a3c:	1e5a      	subs	r2, r3, #1
 8008a3e:	fa0c f003 	lsl.w	r0, ip, r3
 8008a42:	fa04 f303 	lsl.w	r3, r4, r3
 8008a46:	b292      	uxth	r2, r2
 8008a48:	eb03 0350 	add.w	r3, r3, r0, lsr #1
 8008a4c:	2a14      	cmp	r2, #20
 8008a4e:	f200 8184 	bhi.w	8008d5a <forward_lite_conv2d_sssa8_ch+0x3f6>
 8008a52:	45ae      	cmp	lr, r5
 8008a54:	f841 3c04 	str.w	r3, [r1, #-4]
 8008a58:	f101 0104 	add.w	r1, r1, #4
 8008a5c:	d1ec      	bne.n	8008a38 <forward_lite_conv2d_sssa8_ch+0xd4>
 8008a5e:	9b77      	ldr	r3, [sp, #476]	; 0x1dc
 8008a60:	eb03 050b 	add.w	r5, r3, fp
 8008a64:	1bab      	subs	r3, r5, r6
 8008a66:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8008a68:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 8008a6a:	aa34      	add	r2, sp, #208	; 0xd0
 8008a6c:	9322      	str	r3, [sp, #136]	; 0x88
 8008a6e:	a94a      	add	r1, sp, #296	; 0x128
 8008a70:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8008a72:	fb06 f504 	mul.w	r5, r6, r4
 8008a76:	a840      	add	r0, sp, #256	; 0x100
 8008a78:	fb0a fb04 	mul.w	fp, sl, r4
 8008a7c:	9335      	str	r3, [sp, #212]	; 0xd4
 8008a7e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8008a80:	943e      	str	r4, [sp, #248]	; 0xf8
 8008a82:	933a      	str	r3, [sp, #232]	; 0xe8
 8008a84:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8008a86:	fb0a f405 	mul.w	r4, sl, r5
 8008a8a:	f8cd 90d8 	str.w	r9, [sp, #216]	; 0xd8
 8008a8e:	9339      	str	r3, [sp, #228]	; 0xe4
 8008a90:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8008a92:	963d      	str	r6, [sp, #244]	; 0xf4
 8008a94:	934c      	str	r3, [sp, #304]	; 0x130
 8008a96:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8008a98:	934d      	str	r3, [sp, #308]	; 0x134
 8008a9a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8008a9c:	934e      	str	r3, [sp, #312]	; 0x138
 8008a9e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8008aa0:	934f      	str	r3, [sp, #316]	; 0x13c
 8008aa2:	ab3c      	add	r3, sp, #240	; 0xf0
 8008aa4:	9300      	str	r3, [sp, #0]
 8008aa6:	ab38      	add	r3, sp, #224	; 0xe0
 8008aa8:	f003 fbc8 	bl	800c23c <ai_padding_opt_init>
 8008aac:	ee19 3a10 	vmov	r3, s18
 8008ab0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8008ab2:	fb03 f404 	mul.w	r4, r3, r4
 8008ab6:	fb0b f306 	mul.w	r3, fp, r6
 8008aba:	f5b4 6f20 	cmp.w	r4, #2560	; 0xa00
 8008abe:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8008ac2:	bfa8      	it	ge
 8008ac4:	f44f 6420 	movge.w	r4, #2560	; 0xa00
 8008ac8:	2f01      	cmp	r7, #1
 8008aca:	ee09 3a90 	vmov	s19, r3
 8008ace:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8008ad0:	f003 0202 	and.w	r2, r3, #2
 8008ad4:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8008ad8:	9230      	str	r2, [sp, #192]	; 0xc0
 8008ada:	931e      	str	r3, [sp, #120]	; 0x78
 8008adc:	f000 838f 	beq.w	80091fe <forward_lite_conv2d_sssa8_ch+0x89a>
 8008ae0:	2300      	movs	r3, #0
 8008ae2:	932e      	str	r3, [sp, #184]	; 0xb8
 8008ae4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8008ae6:	2b01      	cmp	r3, #1
 8008ae8:	f240 824c 	bls.w	8008f84 <forward_lite_conv2d_sssa8_ch+0x620>
 8008aec:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8008aee:	ee19 2a10 	vmov	r2, s18
 8008af2:	fbb4 f3f3 	udiv	r3, r4, r3
 8008af6:	b29b      	uxth	r3, r3
 8008af8:	4293      	cmp	r3, r2
 8008afa:	4619      	mov	r1, r3
 8008afc:	bf28      	it	cs
 8008afe:	4611      	movcs	r1, r2
 8008b00:	fbb2 f3f1 	udiv	r3, r2, r1
 8008b04:	fb01 2213 	mls	r2, r1, r3, r2
 8008b08:	b29b      	uxth	r3, r3
 8008b0a:	911f      	str	r1, [sp, #124]	; 0x7c
 8008b0c:	b292      	uxth	r2, r2
 8008b0e:	2a00      	cmp	r2, #0
 8008b10:	f040 812b 	bne.w	8008d6a <forward_lite_conv2d_sssa8_ch+0x406>
 8008b14:	1e5a      	subs	r2, r3, #1
 8008b16:	b292      	uxth	r2, r2
 8008b18:	922d      	str	r2, [sp, #180]	; 0xb4
 8008b1a:	2b00      	cmp	r3, #0
 8008b1c:	f000 8219 	beq.w	8008f52 <forward_lite_conv2d_sssa8_ch+0x5ee>
 8008b20:	fb0a f505 	mul.w	r5, sl, r5
 8008b24:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8008b26:	fa0f f688 	sxth.w	r6, r8
 8008b2a:	ed8d 9a2f 	vstr	s18, [sp, #188]	; 0xbc
 8008b2e:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 8008b32:	ea4f 084a 	mov.w	r8, sl, lsl #1
 8008b36:	ee0a 6a90 	vmov	s21, r6
 8008b3a:	9318      	str	r3, [sp, #96]	; 0x60
 8008b3c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8008b3e:	f8cd 80b0 	str.w	r8, [sp, #176]	; 0xb0
 8008b42:	46d0      	mov	r8, sl
 8008b44:	f1a3 0303 	sub.w	r3, r3, #3
 8008b48:	fab3 f383 	clz	r3, r3
 8008b4c:	095b      	lsrs	r3, r3, #5
 8008b4e:	9328      	str	r3, [sp, #160]	; 0xa0
 8008b50:	f00a 0303 	and.w	r3, sl, #3
 8008b54:	930f      	str	r3, [sp, #60]	; 0x3c
 8008b56:	ea4f 034b 	mov.w	r3, fp, lsl #1
 8008b5a:	931a      	str	r3, [sp, #104]	; 0x68
 8008b5c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8008b5e:	b953      	cbnz	r3, 8008b76 <forward_lite_conv2d_sssa8_ch+0x212>
 8008b60:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8008b62:	2b00      	cmp	r3, #0
 8008b64:	f040 8206 	bne.w	8008f74 <forward_lite_conv2d_sssa8_ch+0x610>
 8008b68:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8008b6a:	ee19 1a90 	vmov	r1, s19
 8008b6e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8008b70:	9866      	ldr	r0, [sp, #408]	; 0x198
 8008b72:	f003 faa9 	bl	800c0c8 <st_int8_to16_dual_interleaved>
 8008b76:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8008b78:	2b03      	cmp	r3, #3
 8008b7a:	f000 81ef 	beq.w	8008f5c <forward_lite_conv2d_sssa8_ch+0x5f8>
 8008b7e:	9b72      	ldr	r3, [sp, #456]	; 0x1c8
 8008b80:	931b      	str	r3, [sp, #108]	; 0x6c
 8008b82:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8008b84:	2b00      	cmp	r3, #0
 8008b86:	f000 80b3 	beq.w	8008cf0 <forward_lite_conv2d_sssa8_ch+0x38c>
 8008b8a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8008b8c:	2400      	movs	r4, #0
 8008b8e:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8008b90:	ee08 ba90 	vmov	s17, fp
 8008b94:	425b      	negs	r3, r3
 8008b96:	4626      	mov	r6, r4
 8008b98:	b29b      	uxth	r3, r3
 8008b9a:	9321      	str	r3, [sp, #132]	; 0x84
 8008b9c:	a840      	add	r0, sp, #256	; 0x100
 8008b9e:	f003 fba7 	bl	800c2f0 <ai_padding_opt_phase1>
 8008ba2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8008ba4:	2b00      	cmp	r3, #0
 8008ba6:	f000 81ca 	beq.w	8008f3e <forward_lite_conv2d_sssa8_ch+0x5da>
 8008baa:	b2a3      	uxth	r3, r4
 8008bac:	9327      	str	r3, [sp, #156]	; 0x9c
 8008bae:	e9dd 322a 	ldrd	r3, r2, [sp, #168]	; 0xa8
 8008bb2:	1a9b      	subs	r3, r3, r2
 8008bb4:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8008bb6:	fb06 3302 	mla	r3, r6, r2, r3
 8008bba:	f9bd 2084 	ldrsh.w	r2, [sp, #132]	; 0x84
 8008bbe:	930d      	str	r3, [sp, #52]	; 0x34
 8008bc0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8008bc2:	425b      	negs	r3, r3
 8008bc4:	b29b      	uxth	r3, r3
 8008bc6:	930b      	str	r3, [sp, #44]	; 0x2c
 8008bc8:	2300      	movs	r3, #0
 8008bca:	930c      	str	r3, [sp, #48]	; 0x30
 8008bcc:	e9cd 3216 	strd	r3, r2, [sp, #88]	; 0x58
 8008bd0:	9b40      	ldr	r3, [sp, #256]	; 0x100
 8008bd2:	2b00      	cmp	r3, #0
 8008bd4:	f000 80e6 	beq.w	8008da4 <forward_lite_conv2d_sssa8_ch+0x440>
 8008bd8:	3b01      	subs	r3, #1
 8008bda:	9340      	str	r3, [sp, #256]	; 0x100
 8008bdc:	2301      	movs	r3, #1
 8008bde:	f8ad 3126 	strh.w	r3, [sp, #294]	; 0x126
 8008be2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008be4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8008be6:	4293      	cmp	r3, r2
 8008be8:	f280 80ea 	bge.w	8008dc0 <forward_lite_conv2d_sssa8_ch+0x45c>
 8008bec:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8008bee:	46c3      	mov	fp, r8
 8008bf0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8008bf2:	ee1a 7a90 	vmov	r7, s21
 8008bf6:	9916      	ldr	r1, [sp, #88]	; 0x58
 8008bf8:	f8dd a0b0 	ldr.w	sl, [sp, #176]	; 0xb0
 8008bfc:	fb01 3402 	mla	r4, r1, r2, r3
 8008c00:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8008c02:	1ae4      	subs	r4, r4, r3
 8008c04:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8008c08:	9310      	str	r3, [sp, #64]	; 0x40
 8008c0a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8008c0e:	930e      	str	r3, [sp, #56]	; 0x38
 8008c10:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008c12:	461a      	mov	r2, r3
 8008c14:	930a      	str	r3, [sp, #40]	; 0x28
 8008c16:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008c18:	42a3      	cmp	r3, r4
 8008c1a:	da25      	bge.n	8008c68 <forward_lite_conv2d_sssa8_ch+0x304>
 8008c1c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8008c1e:	ea4f 78d1 	mov.w	r8, r1, lsr #31
 8008c22:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8008c24:	4291      	cmp	r1, r2
 8008c26:	bfd8      	it	le
 8008c28:	f048 0801 	orrle.w	r8, r8, #1
 8008c2c:	fb09 f202 	mul.w	r2, r9, r2
 8008c30:	9215      	str	r2, [sp, #84]	; 0x54
 8008c32:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8008c34:	2a00      	cmp	r2, #0
 8008c36:	f000 809c 	beq.w	8008d72 <forward_lite_conv2d_sssa8_ch+0x40e>
 8008c3a:	461e      	mov	r6, r3
 8008c3c:	469e      	mov	lr, r3
 8008c3e:	0ff3      	lsrs	r3, r6, #31
 8008c40:	4629      	mov	r1, r5
 8008c42:	465a      	mov	r2, fp
 8008c44:	4638      	mov	r0, r7
 8008c46:	45f1      	cmp	r9, lr
 8008c48:	bfd8      	it	le
 8008c4a:	f043 0301 	orrle.w	r3, r3, #1
 8008c4e:	b91b      	cbnz	r3, 8008c58 <forward_lite_conv2d_sssa8_ch+0x2f4>
 8008c50:	f1b8 0f00 	cmp.w	r8, #0
 8008c54:	f000 8144 	beq.w	8008ee0 <forward_lite_conv2d_sssa8_ch+0x57c>
 8008c58:	f005 fb64 	bl	800e324 <arm_fill_q15>
 8008c5c:	3601      	adds	r6, #1
 8008c5e:	4455      	add	r5, sl
 8008c60:	b236      	sxth	r6, r6
 8008c62:	42a6      	cmp	r6, r4
 8008c64:	46b6      	mov	lr, r6
 8008c66:	dbea      	blt.n	8008c3e <forward_lite_conv2d_sssa8_ch+0x2da>
 8008c68:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008c6a:	990d      	ldr	r1, [sp, #52]	; 0x34
 8008c6c:	3201      	adds	r2, #1
 8008c6e:	b213      	sxth	r3, r2
 8008c70:	428b      	cmp	r3, r1
 8008c72:	461a      	mov	r2, r3
 8008c74:	930a      	str	r3, [sp, #40]	; 0x28
 8008c76:	dbce      	blt.n	8008c16 <forward_lite_conv2d_sssa8_ch+0x2b2>
 8008c78:	46d8      	mov	r8, fp
 8008c7a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8008c7c:	42ab      	cmp	r3, r5
 8008c7e:	f000 80a6 	beq.w	8008dce <forward_lite_conv2d_sssa8_ch+0x46a>
 8008c82:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008c84:	9914      	ldr	r1, [sp, #80]	; 0x50
 8008c86:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8008c88:	440b      	add	r3, r1
 8008c8a:	3201      	adds	r2, #1
 8008c8c:	b29b      	uxth	r3, r3
 8008c8e:	b212      	sxth	r2, r2
 8008c90:	930b      	str	r3, [sp, #44]	; 0x2c
 8008c92:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8008c94:	920c      	str	r2, [sp, #48]	; 0x30
 8008c96:	429a      	cmp	r2, r3
 8008c98:	9216      	str	r2, [sp, #88]	; 0x58
 8008c9a:	db99      	blt.n	8008bd0 <forward_lite_conv2d_sssa8_ch+0x26c>
 8008c9c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8008c9e:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8008ca0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 8008ca2:	4413      	add	r3, r2
 8008ca4:	3401      	adds	r4, #1
 8008ca6:	b29b      	uxth	r3, r3
 8008ca8:	b224      	sxth	r4, r4
 8008caa:	9321      	str	r3, [sp, #132]	; 0x84
 8008cac:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8008cae:	4626      	mov	r6, r4
 8008cb0:	429c      	cmp	r4, r3
 8008cb2:	f6ff af73 	blt.w	8008b9c <forward_lite_conv2d_sssa8_ch+0x238>
 8008cb6:	9919      	ldr	r1, [sp, #100]	; 0x64
 8008cb8:	ee18 ba90 	vmov	fp, s17
 8008cbc:	42a9      	cmp	r1, r5
 8008cbe:	d017      	beq.n	8008cf0 <forward_lite_conv2d_sssa8_ch+0x38c>
 8008cc0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8008cc2:	ee1a 2a10 	vmov	r2, s20
 8008cc6:	ee19 0a90 	vmov	r0, s19
 8008cca:	9307      	str	r3, [sp, #28]
 8008ccc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8008cce:	9306      	str	r3, [sp, #24]
 8008cd0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8008cd2:	9305      	str	r3, [sp, #20]
 8008cd4:	9b77      	ldr	r3, [sp, #476]	; 0x1dc
 8008cd6:	9304      	str	r3, [sp, #16]
 8008cd8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8008cda:	9303      	str	r3, [sp, #12]
 8008cdc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8008cde:	9302      	str	r3, [sp, #8]
 8008ce0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8008ce2:	9301      	str	r3, [sp, #4]
 8008ce4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8008ce6:	9300      	str	r3, [sp, #0]
 8008ce8:	ee19 3a10 	vmov	r3, s18
 8008cec:	f003 ff04 	bl	800caf8 <st_sssa8_ch_nn_mat_mult_kernel_single_opt>
 8008cf0:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8008cf2:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8008cf4:	1a9b      	subs	r3, r3, r2
 8008cf6:	b299      	uxth	r1, r3
 8008cf8:	4613      	mov	r3, r2
 8008cfa:	428a      	cmp	r2, r1
 8008cfc:	912f      	str	r1, [sp, #188]	; 0xbc
 8008cfe:	bf28      	it	cs
 8008d00:	460b      	movcs	r3, r1
 8008d02:	2b00      	cmp	r3, #0
 8008d04:	f000 811e 	beq.w	8008f44 <forward_lite_conv2d_sssa8_ch+0x5e0>
 8008d08:	9966      	ldr	r1, [sp, #408]	; 0x198
 8008d0a:	981c      	ldr	r0, [sp, #112]	; 0x70
 8008d0c:	fb00 1102 	mla	r1, r0, r2, r1
 8008d10:	9166      	str	r1, [sp, #408]	; 0x198
 8008d12:	ee1a 1a10 	vmov	r1, s20
 8008d16:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8008d1a:	ee0a 1a10 	vmov	s20, r1
 8008d1e:	9922      	ldr	r1, [sp, #136]	; 0x88
 8008d20:	eb01 0142 	add.w	r1, r1, r2, lsl #1
 8008d24:	9122      	str	r1, [sp, #136]	; 0x88
 8008d26:	9977      	ldr	r1, [sp, #476]	; 0x1dc
 8008d28:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8008d2c:	9177      	str	r1, [sp, #476]	; 0x1dc
 8008d2e:	9923      	ldr	r1, [sp, #140]	; 0x8c
 8008d30:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8008d34:	9123      	str	r1, [sp, #140]	; 0x8c
 8008d36:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8008d38:	2900      	cmp	r1, #0
 8008d3a:	f000 8115 	beq.w	8008f68 <forward_lite_conv2d_sssa8_ch+0x604>
 8008d3e:	9972      	ldr	r1, [sp, #456]	; 0x1c8
 8008d40:	981d      	ldr	r0, [sp, #116]	; 0x74
 8008d42:	931f      	str	r3, [sp, #124]	; 0x7c
 8008d44:	fb00 1202 	mla	r2, r0, r2, r1
 8008d48:	9272      	str	r2, [sp, #456]	; 0x1c8
 8008d4a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8008d4c:	1e53      	subs	r3, r2, #1
 8008d4e:	b29b      	uxth	r3, r3
 8008d50:	2a00      	cmp	r2, #0
 8008d52:	f000 80fe 	beq.w	8008f52 <forward_lite_conv2d_sssa8_ch+0x5ee>
 8008d56:	932d      	str	r3, [sp, #180]	; 0xb4
 8008d58:	e700      	b.n	8008b5c <forward_lite_conv2d_sssa8_ch+0x1f8>
 8008d5a:	45ae      	cmp	lr, r5
 8008d5c:	f841 4c04 	str.w	r4, [r1, #-4]
 8008d60:	f101 0104 	add.w	r1, r1, #4
 8008d64:	f47f ae68 	bne.w	8008a38 <forward_lite_conv2d_sssa8_ch+0xd4>
 8008d68:	e679      	b.n	8008a5e <forward_lite_conv2d_sssa8_ch+0xfa>
 8008d6a:	1c5a      	adds	r2, r3, #1
 8008d6c:	932d      	str	r3, [sp, #180]	; 0xb4
 8008d6e:	b293      	uxth	r3, r2
 8008d70:	e6d3      	b.n	8008b1a <forward_lite_conv2d_sssa8_ch+0x1b6>
 8008d72:	469c      	mov	ip, r3
 8008d74:	461e      	mov	r6, r3
 8008d76:	45e1      	cmp	r9, ip
 8008d78:	465a      	mov	r2, fp
 8008d7a:	4629      	mov	r1, r5
 8008d7c:	4638      	mov	r0, r7
 8008d7e:	bfcc      	ite	gt
 8008d80:	2300      	movgt	r3, #0
 8008d82:	2301      	movle	r3, #1
 8008d84:	ea53 73d6 	orrs.w	r3, r3, r6, lsr #31
 8008d88:	d103      	bne.n	8008d92 <forward_lite_conv2d_sssa8_ch+0x42e>
 8008d8a:	f1b8 0f00 	cmp.w	r8, #0
 8008d8e:	f000 809e 	beq.w	8008ece <forward_lite_conv2d_sssa8_ch+0x56a>
 8008d92:	f005 fac7 	bl	800e324 <arm_fill_q15>
 8008d96:	3601      	adds	r6, #1
 8008d98:	4455      	add	r5, sl
 8008d9a:	b236      	sxth	r6, r6
 8008d9c:	42a6      	cmp	r6, r4
 8008d9e:	46b4      	mov	ip, r6
 8008da0:	dbe9      	blt.n	8008d76 <forward_lite_conv2d_sssa8_ch+0x412>
 8008da2:	e761      	b.n	8008c68 <forward_lite_conv2d_sssa8_ch+0x304>
 8008da4:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8008da6:	2b00      	cmp	r3, #0
 8008da8:	d13d      	bne.n	8008e26 <forward_lite_conv2d_sssa8_ch+0x4c2>
 8008daa:	9b42      	ldr	r3, [sp, #264]	; 0x108
 8008dac:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8008dae:	3b01      	subs	r3, #1
 8008db0:	9342      	str	r3, [sp, #264]	; 0x108
 8008db2:	2301      	movs	r3, #1
 8008db4:	f8ad 3126 	strh.w	r3, [sp, #294]	; 0x126
 8008db8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008dba:	4293      	cmp	r3, r2
 8008dbc:	f6ff af16 	blt.w	8008bec <forward_lite_conv2d_sssa8_ch+0x288>
 8008dc0:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8008dc4:	9310      	str	r3, [sp, #64]	; 0x40
 8008dc6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8008dc8:	42ab      	cmp	r3, r5
 8008dca:	f47f af5a 	bne.w	8008c82 <forward_lite_conv2d_sssa8_ch+0x31e>
 8008dce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008dd0:	2b00      	cmp	r3, #0
 8008dd2:	f040 808e 	bne.w	8008ef2 <forward_lite_conv2d_sssa8_ch+0x58e>
 8008dd6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8008dd8:	2b00      	cmp	r3, #0
 8008dda:	f000 808a 	beq.w	8008ef2 <forward_lite_conv2d_sssa8_ch+0x58e>
 8008dde:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8008de0:	ee1a 2a10 	vmov	r2, s20
 8008de4:	9919      	ldr	r1, [sp, #100]	; 0x64
 8008de6:	ee19 0a90 	vmov	r0, s19
 8008dea:	9308      	str	r3, [sp, #32]
 8008dec:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8008dee:	9307      	str	r3, [sp, #28]
 8008df0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8008df2:	9306      	str	r3, [sp, #24]
 8008df4:	9b77      	ldr	r3, [sp, #476]	; 0x1dc
 8008df6:	9305      	str	r3, [sp, #20]
 8008df8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8008dfa:	9304      	str	r3, [sp, #16]
 8008dfc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8008dfe:	9303      	str	r3, [sp, #12]
 8008e00:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8008e02:	9302      	str	r3, [sp, #8]
 8008e04:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8008e06:	9300      	str	r3, [sp, #0]
 8008e08:	2302      	movs	r3, #2
 8008e0a:	9301      	str	r3, [sp, #4]
 8008e0c:	ee19 3a10 	vmov	r3, s18
 8008e10:	f003 fa88 	bl	800c324 <st_sssa8_ch_nn_mat_mult_kernel_opt>
 8008e14:	901b      	str	r0, [sp, #108]	; 0x6c
 8008e16:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8008e18:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8008e1a:	3b01      	subs	r3, #1
 8008e1c:	4293      	cmp	r3, r2
 8008e1e:	f000 8089 	beq.w	8008f34 <forward_lite_conv2d_sssa8_ch+0x5d0>
 8008e22:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8008e24:	e72d      	b.n	8008c82 <forward_lite_conv2d_sssa8_ch+0x31e>
 8008e26:	3b01      	subs	r3, #1
 8008e28:	9341      	str	r3, [sp, #260]	; 0x104
 8008e2a:	f8bd 3124 	ldrh.w	r3, [sp, #292]	; 0x124
 8008e2e:	2b01      	cmp	r3, #1
 8008e30:	f8ad 3126 	strh.w	r3, [sp, #294]	; 0x126
 8008e34:	f43f aed5 	beq.w	8008be2 <forward_lite_conv2d_sssa8_ch+0x27e>
 8008e38:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8008e3c:	f9bd 402c 	ldrsh.w	r4, [sp, #44]	; 0x2c
 8008e40:	9310      	str	r3, [sp, #64]	; 0x40
 8008e42:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8008e44:	bb0b      	cbnz	r3, 8008e8a <forward_lite_conv2d_sssa8_ch+0x526>
 8008e46:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008e48:	990d      	ldr	r1, [sp, #52]	; 0x34
 8008e4a:	428b      	cmp	r3, r1
 8008e4c:	f6bf af15 	bge.w	8008c7a <forward_lite_conv2d_sssa8_ch+0x316>
 8008e50:	46ab      	mov	fp, r5
 8008e52:	464f      	mov	r7, r9
 8008e54:	4625      	mov	r5, r4
 8008e56:	461e      	mov	r6, r3
 8008e58:	4618      	mov	r0, r3
 8008e5a:	ee18 2a90 	vmov	r2, s17
 8008e5e:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 8008e60:	4689      	mov	r9, r1
 8008e62:	f8dd a044 	ldr.w	sl, [sp, #68]	; 0x44
 8008e66:	3601      	adds	r6, #1
 8008e68:	fb00 5007 	mla	r0, r0, r7, r5
 8008e6c:	4659      	mov	r1, fp
 8008e6e:	920a      	str	r2, [sp, #40]	; 0x28
 8008e70:	b236      	sxth	r6, r6
 8008e72:	fb08 a000 	mla	r0, r8, r0, sl
 8008e76:	f002 fff9 	bl	800be6c <st_int8_to16_no_shift_interleaved>
 8008e7a:	44a3      	add	fp, r4
 8008e7c:	454e      	cmp	r6, r9
 8008e7e:	4630      	mov	r0, r6
 8008e80:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008e82:	dbf0      	blt.n	8008e66 <forward_lite_conv2d_sssa8_ch+0x502>
 8008e84:	465d      	mov	r5, fp
 8008e86:	46b9      	mov	r9, r7
 8008e88:	e6f7      	b.n	8008c7a <forward_lite_conv2d_sssa8_ch+0x316>
 8008e8a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008e8c:	990d      	ldr	r1, [sp, #52]	; 0x34
 8008e8e:	428b      	cmp	r3, r1
 8008e90:	f6bf aef3 	bge.w	8008c7a <forward_lite_conv2d_sssa8_ch+0x316>
 8008e94:	46ab      	mov	fp, r5
 8008e96:	464f      	mov	r7, r9
 8008e98:	4625      	mov	r5, r4
 8008e9a:	461e      	mov	r6, r3
 8008e9c:	4618      	mov	r0, r3
 8008e9e:	ee18 2a90 	vmov	r2, s17
 8008ea2:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 8008ea4:	4689      	mov	r9, r1
 8008ea6:	f8dd a044 	ldr.w	sl, [sp, #68]	; 0x44
 8008eaa:	3601      	adds	r6, #1
 8008eac:	fb00 5007 	mla	r0, r0, r7, r5
 8008eb0:	4659      	mov	r1, fp
 8008eb2:	920a      	str	r2, [sp, #40]	; 0x28
 8008eb4:	b236      	sxth	r6, r6
 8008eb6:	fb08 a000 	mla	r0, r8, r0, sl
 8008eba:	f002 ff75 	bl	800bda8 <st_int8_to16_no_shift>
 8008ebe:	44a3      	add	fp, r4
 8008ec0:	454e      	cmp	r6, r9
 8008ec2:	4630      	mov	r0, r6
 8008ec4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008ec6:	dbf0      	blt.n	8008eaa <forward_lite_conv2d_sssa8_ch+0x546>
 8008ec8:	465d      	mov	r5, fp
 8008eca:	46b9      	mov	r9, r7
 8008ecc:	e6d5      	b.n	8008c7a <forward_lite_conv2d_sssa8_ch+0x316>
 8008ece:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8008ed0:	eb03 000c 	add.w	r0, r3, ip
 8008ed4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8008ed6:	fb0b 3000 	mla	r0, fp, r0, r3
 8008eda:	f002 ffc7 	bl	800be6c <st_int8_to16_no_shift_interleaved>
 8008ede:	e75a      	b.n	8008d96 <forward_lite_conv2d_sssa8_ch+0x432>
 8008ee0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8008ee2:	eb03 000e 	add.w	r0, r3, lr
 8008ee6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8008ee8:	fb0b 3000 	mla	r0, fp, r0, r3
 8008eec:	f002 ff5c 	bl	800bda8 <st_int8_to16_no_shift>
 8008ef0:	e6b4      	b.n	8008c5c <forward_lite_conv2d_sssa8_ch+0x2f8>
 8008ef2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8008ef4:	ee1a 2a10 	vmov	r2, s20
 8008ef8:	9919      	ldr	r1, [sp, #100]	; 0x64
 8008efa:	ee19 0a90 	vmov	r0, s19
 8008efe:	9308      	str	r3, [sp, #32]
 8008f00:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8008f02:	9307      	str	r3, [sp, #28]
 8008f04:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8008f06:	9306      	str	r3, [sp, #24]
 8008f08:	9b77      	ldr	r3, [sp, #476]	; 0x1dc
 8008f0a:	9305      	str	r3, [sp, #20]
 8008f0c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8008f0e:	9304      	str	r3, [sp, #16]
 8008f10:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8008f12:	9303      	str	r3, [sp, #12]
 8008f14:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8008f16:	9302      	str	r3, [sp, #8]
 8008f18:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8008f1a:	9300      	str	r3, [sp, #0]
 8008f1c:	2300      	movs	r3, #0
 8008f1e:	9301      	str	r3, [sp, #4]
 8008f20:	ee19 3a10 	vmov	r3, s18
 8008f24:	f003 f9fe 	bl	800c324 <st_sssa8_ch_nn_mat_mult_kernel_opt>
 8008f28:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8008f2a:	901b      	str	r0, [sp, #108]	; 0x6c
 8008f2c:	2b03      	cmp	r3, #3
 8008f2e:	f47f af78 	bne.w	8008e22 <forward_lite_conv2d_sssa8_ch+0x4be>
 8008f32:	e770      	b.n	8008e16 <forward_lite_conv2d_sssa8_ch+0x4b2>
 8008f34:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8008f36:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8008f38:	3302      	adds	r3, #2
 8008f3a:	931b      	str	r3, [sp, #108]	; 0x6c
 8008f3c:	e6a1      	b.n	8008c82 <forward_lite_conv2d_sssa8_ch+0x31e>
 8008f3e:	b2a3      	uxth	r3, r4
 8008f40:	9327      	str	r3, [sp, #156]	; 0x9c
 8008f42:	e6ab      	b.n	8008c9c <forward_lite_conv2d_sssa8_ch+0x338>
 8008f44:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8008f46:	931f      	str	r3, [sp, #124]	; 0x7c
 8008f48:	1e53      	subs	r3, r2, #1
 8008f4a:	b29b      	uxth	r3, r3
 8008f4c:	2a00      	cmp	r2, #0
 8008f4e:	f47f af02 	bne.w	8008d56 <forward_lite_conv2d_sssa8_ch+0x3f2>
 8008f52:	b055      	add	sp, #340	; 0x154
 8008f54:	ecbd 8b08 	vpop	{d8-d11}
 8008f58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008f5c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8008f5e:	9a72      	ldr	r2, [sp, #456]	; 0x1c8
 8008f60:	3303      	adds	r3, #3
 8008f62:	18d3      	adds	r3, r2, r3
 8008f64:	931b      	str	r3, [sp, #108]	; 0x6c
 8008f66:	e60c      	b.n	8008b82 <forward_lite_conv2d_sssa8_ch+0x21e>
 8008f68:	4611      	mov	r1, r2
 8008f6a:	9a72      	ldr	r2, [sp, #456]	; 0x1c8
 8008f6c:	931f      	str	r3, [sp, #124]	; 0x7c
 8008f6e:	440a      	add	r2, r1
 8008f70:	9272      	str	r2, [sp, #456]	; 0x1c8
 8008f72:	e6ea      	b.n	8008d4a <forward_lite_conv2d_sssa8_ch+0x3e6>
 8008f74:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8008f76:	ee19 1a90 	vmov	r1, s19
 8008f7a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8008f7c:	9866      	ldr	r0, [sp, #408]	; 0x198
 8008f7e:	f002 ffb9 	bl	800bef4 <st_int8_to16_dual>
 8008f82:	e5f8      	b.n	8008b76 <forward_lite_conv2d_sssa8_ch+0x212>
 8008f84:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8008f86:	ee19 1a10 	vmov	r1, s18
 8008f8a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8008f8c:	fb02 f303 	mul.w	r3, r2, r3
 8008f90:	9a72      	ldr	r2, [sp, #456]	; 0x1c8
 8008f92:	fb01 2303 	mla	r3, r1, r3, r2
 8008f96:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8008f98:	429a      	cmp	r2, r3
 8008f9a:	f4bf ada7 	bcs.w	8008aec <forward_lite_conv2d_sssa8_ch+0x188>
 8008f9e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8008fa0:	fb03 f309 	mul.w	r3, r3, r9
 8008fa4:	fb0a 2303 	mla	r3, sl, r3, r2
 8008fa8:	9a72      	ldr	r2, [sp, #456]	; 0x1c8
 8008faa:	429a      	cmp	r2, r3
 8008fac:	f4bf ad9e 	bcs.w	8008aec <forward_lite_conv2d_sssa8_ch+0x188>
 8008fb0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8008fb2:	fbb4 f3f3 	udiv	r3, r4, r3
 8008fb6:	b29b      	uxth	r3, r3
 8008fb8:	4619      	mov	r1, r3
 8008fba:	ee19 3a10 	vmov	r3, s18
 8008fbe:	4299      	cmp	r1, r3
 8008fc0:	bf28      	it	cs
 8008fc2:	4619      	movcs	r1, r3
 8008fc4:	fbb3 f2f1 	udiv	r2, r3, r1
 8008fc8:	fb01 3312 	mls	r3, r1, r2, r3
 8008fcc:	b292      	uxth	r2, r2
 8008fce:	9131      	str	r1, [sp, #196]	; 0xc4
 8008fd0:	b29b      	uxth	r3, r3
 8008fd2:	922f      	str	r2, [sp, #188]	; 0xbc
 8008fd4:	b11b      	cbz	r3, 8008fde <forward_lite_conv2d_sssa8_ch+0x67a>
 8008fd6:	4613      	mov	r3, r2
 8008fd8:	3301      	adds	r3, #1
 8008fda:	b29b      	uxth	r3, r3
 8008fdc:	932f      	str	r3, [sp, #188]	; 0xbc
 8008fde:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8008fe0:	2b00      	cmp	r3, #0
 8008fe2:	d0b6      	beq.n	8008f52 <forward_lite_conv2d_sssa8_ch+0x5ee>
 8008fe4:	fb0a f505 	mul.w	r5, sl, r5
 8008fe8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8008fea:	fa0f f788 	sxth.w	r7, r8
 8008fee:	2400      	movs	r4, #0
 8008ff0:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 8008ff4:	ea4f 084a 	mov.w	r8, sl, lsl #1
 8008ff8:	4625      	mov	r5, r4
 8008ffa:	9316      	str	r3, [sp, #88]	; 0x58
 8008ffc:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8008ffe:	f8cd 80b0 	str.w	r8, [sp, #176]	; 0xb0
 8009002:	46d0      	mov	r8, sl
 8009004:	3b01      	subs	r3, #1
 8009006:	b29b      	uxth	r3, r3
 8009008:	9333      	str	r3, [sp, #204]	; 0xcc
 800900a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 800900c:	425b      	negs	r3, r3
 800900e:	b29b      	uxth	r3, r3
 8009010:	9330      	str	r3, [sp, #192]	; 0xc0
 8009012:	f00a 0303 	and.w	r3, sl, #3
 8009016:	930d      	str	r3, [sp, #52]	; 0x34
 8009018:	ea4f 034b 	mov.w	r3, fp, lsl #1
 800901c:	9317      	str	r3, [sp, #92]	; 0x5c
 800901e:	a840      	add	r0, sp, #256	; 0x100
 8009020:	f003 f966 	bl	800c2f0 <ai_padding_opt_phase1>
 8009024:	ee19 3a10 	vmov	r3, s18
 8009028:	9a72      	ldr	r2, [sp, #456]	; 0x1c8
 800902a:	fb05 f303 	mul.w	r3, r5, r3
 800902e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8009030:	fb01 2303 	mla	r3, r1, r3, r2
 8009034:	931b      	str	r3, [sp, #108]	; 0x6c
 8009036:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8009038:	b953      	cbnz	r3, 8009050 <forward_lite_conv2d_sssa8_ch+0x6ec>
 800903a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800903c:	2b00      	cmp	r3, #0
 800903e:	f040 81ea 	bne.w	8009416 <forward_lite_conv2d_sssa8_ch+0xab2>
 8009042:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8009044:	ee19 1a90 	vmov	r1, s19
 8009048:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800904a:	9866      	ldr	r0, [sp, #408]	; 0x198
 800904c:	f003 f83c 	bl	800c0c8 <st_int8_to16_dual_interleaved>
 8009050:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8009052:	2b00      	cmp	r3, #0
 8009054:	f000 81ea 	beq.w	800942c <forward_lite_conv2d_sssa8_ch+0xac8>
 8009058:	b2a3      	uxth	r3, r4
 800905a:	eef0 aa4a 	vmov.f32	s21, s20
 800905e:	ee08 ba90 	vmov	s17, fp
 8009062:	ee0b 7a10 	vmov	s22, r7
 8009066:	9332      	str	r3, [sp, #200]	; 0xc8
 8009068:	ed8d 9a28 	vstr	s18, [sp, #160]	; 0xa0
 800906c:	e9dd 322a 	ldrd	r3, r2, [sp, #168]	; 0xa8
 8009070:	1a9b      	subs	r3, r3, r2
 8009072:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8009074:	fb05 3302 	mla	r3, r5, r2, r3
 8009078:	930c      	str	r3, [sp, #48]	; 0x30
 800907a:	f9bd 30c0 	ldrsh.w	r3, [sp, #192]	; 0xc0
 800907e:	9315      	str	r3, [sp, #84]	; 0x54
 8009080:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8009082:	9327      	str	r3, [sp, #156]	; 0x9c
 8009084:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8009086:	931a      	str	r3, [sp, #104]	; 0x68
 8009088:	9b66      	ldr	r3, [sp, #408]	; 0x198
 800908a:	932d      	str	r3, [sp, #180]	; 0xb4
 800908c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800908e:	931f      	str	r3, [sp, #124]	; 0x7c
 8009090:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8009092:	9326      	str	r3, [sp, #152]	; 0x98
 8009094:	9b77      	ldr	r3, [sp, #476]	; 0x1dc
 8009096:	9321      	str	r3, [sp, #132]	; 0x84
 8009098:	9a44      	ldr	r2, [sp, #272]	; 0x110
 800909a:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 800909c:	9241      	str	r2, [sp, #260]	; 0x104
 800909e:	9a45      	ldr	r2, [sp, #276]	; 0x114
 80090a0:	9340      	str	r3, [sp, #256]	; 0x100
 80090a2:	9242      	str	r2, [sp, #264]	; 0x108
 80090a4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80090a6:	2a00      	cmp	r2, #0
 80090a8:	f000 815e 	beq.w	8009368 <forward_lite_conv2d_sssa8_ch+0xa04>
 80090ac:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80090ae:	2100      	movs	r1, #0
 80090b0:	9c19      	ldr	r4, [sp, #100]	; 0x64
 80090b2:	4252      	negs	r2, r2
 80090b4:	b292      	uxth	r2, r2
 80090b6:	920b      	str	r2, [sp, #44]	; 0x2c
 80090b8:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80090ba:	9218      	str	r2, [sp, #96]	; 0x60
 80090bc:	460a      	mov	r2, r1
 80090be:	2b00      	cmp	r3, #0
 80090c0:	d060      	beq.n	8009184 <forward_lite_conv2d_sssa8_ch+0x820>
 80090c2:	3b01      	subs	r3, #1
 80090c4:	9340      	str	r3, [sp, #256]	; 0x100
 80090c6:	2301      	movs	r3, #1
 80090c8:	f8ad 3126 	strh.w	r3, [sp, #294]	; 0x126
 80090cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80090ce:	9815      	ldr	r0, [sp, #84]	; 0x54
 80090d0:	4283      	cmp	r3, r0
 80090d2:	dd64      	ble.n	800919e <forward_lite_conv2d_sssa8_ch+0x83a>
 80090d4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80090d6:	46c3      	mov	fp, r8
 80090d8:	9814      	ldr	r0, [sp, #80]	; 0x50
 80090da:	ee1b 7a10 	vmov	r7, s22
 80090de:	f8dd a0b0 	ldr.w	sl, [sp, #176]	; 0xb0
 80090e2:	fb02 3200 	mla	r2, r2, r0, r3
 80090e6:	b28b      	uxth	r3, r1
 80090e8:	930f      	str	r3, [sp, #60]	; 0x3c
 80090ea:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80090ec:	1ad5      	subs	r5, r2, r3
 80090ee:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80090f2:	930e      	str	r3, [sp, #56]	; 0x38
 80090f4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80090f6:	461a      	mov	r2, r3
 80090f8:	930a      	str	r3, [sp, #40]	; 0x28
 80090fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80090fc:	429d      	cmp	r5, r3
 80090fe:	dd25      	ble.n	800914c <forward_lite_conv2d_sssa8_ch+0x7e8>
 8009100:	990a      	ldr	r1, [sp, #40]	; 0x28
 8009102:	ea4f 78d1 	mov.w	r8, r1, lsr #31
 8009106:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8009108:	4291      	cmp	r1, r2
 800910a:	bfd8      	it	le
 800910c:	f048 0801 	orrle.w	r8, r8, #1
 8009110:	fb02 f209 	mul.w	r2, r2, r9
 8009114:	9210      	str	r2, [sp, #64]	; 0x40
 8009116:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8009118:	2a00      	cmp	r2, #0
 800911a:	f000 808c 	beq.w	8009236 <forward_lite_conv2d_sssa8_ch+0x8d2>
 800911e:	461e      	mov	r6, r3
 8009120:	469e      	mov	lr, r3
 8009122:	0ff3      	lsrs	r3, r6, #31
 8009124:	4621      	mov	r1, r4
 8009126:	465a      	mov	r2, fp
 8009128:	4638      	mov	r0, r7
 800912a:	45f1      	cmp	r9, lr
 800912c:	bfd8      	it	le
 800912e:	f043 0301 	orrle.w	r3, r3, #1
 8009132:	b91b      	cbnz	r3, 800913c <forward_lite_conv2d_sssa8_ch+0x7d8>
 8009134:	f1b8 0f00 	cmp.w	r8, #0
 8009138:	f000 80e8 	beq.w	800930c <forward_lite_conv2d_sssa8_ch+0x9a8>
 800913c:	f005 f8f2 	bl	800e324 <arm_fill_q15>
 8009140:	3601      	adds	r6, #1
 8009142:	4454      	add	r4, sl
 8009144:	b236      	sxth	r6, r6
 8009146:	42b5      	cmp	r5, r6
 8009148:	46b6      	mov	lr, r6
 800914a:	dcea      	bgt.n	8009122 <forward_lite_conv2d_sssa8_ch+0x7be>
 800914c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800914e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8009150:	3201      	adds	r2, #1
 8009152:	b213      	sxth	r3, r2
 8009154:	428b      	cmp	r3, r1
 8009156:	461a      	mov	r2, r3
 8009158:	930a      	str	r3, [sp, #40]	; 0x28
 800915a:	dbce      	blt.n	80090fa <forward_lite_conv2d_sssa8_ch+0x796>
 800915c:	46d8      	mov	r8, fp
 800915e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8009160:	42a3      	cmp	r3, r4
 8009162:	d021      	beq.n	80091a8 <forward_lite_conv2d_sssa8_ch+0x844>
 8009164:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009166:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8009168:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800916a:	4413      	add	r3, r2
 800916c:	3101      	adds	r1, #1
 800916e:	b29b      	uxth	r3, r3
 8009170:	b209      	sxth	r1, r1
 8009172:	930b      	str	r3, [sp, #44]	; 0x2c
 8009174:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8009176:	460a      	mov	r2, r1
 8009178:	4299      	cmp	r1, r3
 800917a:	f280 80d9 	bge.w	8009330 <forward_lite_conv2d_sssa8_ch+0x9cc>
 800917e:	9b40      	ldr	r3, [sp, #256]	; 0x100
 8009180:	2b00      	cmp	r3, #0
 8009182:	d19e      	bne.n	80090c2 <forward_lite_conv2d_sssa8_ch+0x75e>
 8009184:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8009186:	2b00      	cmp	r3, #0
 8009188:	d16d      	bne.n	8009266 <forward_lite_conv2d_sssa8_ch+0x902>
 800918a:	9b42      	ldr	r3, [sp, #264]	; 0x108
 800918c:	9815      	ldr	r0, [sp, #84]	; 0x54
 800918e:	3b01      	subs	r3, #1
 8009190:	9342      	str	r3, [sp, #264]	; 0x108
 8009192:	2301      	movs	r3, #1
 8009194:	f8ad 3126 	strh.w	r3, [sp, #294]	; 0x126
 8009198:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800919a:	4283      	cmp	r3, r0
 800919c:	dc9a      	bgt.n	80090d4 <forward_lite_conv2d_sssa8_ch+0x770>
 800919e:	b28b      	uxth	r3, r1
 80091a0:	930f      	str	r3, [sp, #60]	; 0x3c
 80091a2:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80091a4:	42a3      	cmp	r3, r4
 80091a6:	d1dd      	bne.n	8009164 <forward_lite_conv2d_sssa8_ch+0x800>
 80091a8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80091aa:	ee1a 2a90 	vmov	r2, s21
 80091ae:	9919      	ldr	r1, [sp, #100]	; 0x64
 80091b0:	ee19 0a90 	vmov	r0, s19
 80091b4:	9308      	str	r3, [sp, #32]
 80091b6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80091b8:	9307      	str	r3, [sp, #28]
 80091ba:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80091bc:	9306      	str	r3, [sp, #24]
 80091be:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80091c0:	9305      	str	r3, [sp, #20]
 80091c2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80091c4:	9304      	str	r3, [sp, #16]
 80091c6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80091c8:	9303      	str	r3, [sp, #12]
 80091ca:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80091cc:	9302      	str	r3, [sp, #8]
 80091ce:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80091d0:	9300      	str	r3, [sp, #0]
 80091d2:	2300      	movs	r3, #0
 80091d4:	9301      	str	r3, [sp, #4]
 80091d6:	ee19 3a10 	vmov	r3, s18
 80091da:	f003 f8a3 	bl	800c324 <st_sssa8_ch_nn_mat_mult_kernel_opt>
 80091de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80091e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80091e2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80091e4:	4413      	add	r3, r2
 80091e6:	9018      	str	r0, [sp, #96]	; 0x60
 80091e8:	3101      	adds	r1, #1
 80091ea:	b29b      	uxth	r3, r3
 80091ec:	b209      	sxth	r1, r1
 80091ee:	930b      	str	r3, [sp, #44]	; 0x2c
 80091f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80091f2:	460a      	mov	r2, r1
 80091f4:	428b      	cmp	r3, r1
 80091f6:	f340 80b7 	ble.w	8009368 <forward_lite_conv2d_sssa8_ch+0xa04>
 80091fa:	9c19      	ldr	r4, [sp, #100]	; 0x64
 80091fc:	e7bf      	b.n	800917e <forward_lite_conv2d_sssa8_ch+0x81a>
 80091fe:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8009200:	ee19 1a10 	vmov	r1, s18
 8009204:	fb01 f302 	mul.w	r3, r1, r2
 8009208:	42a3      	cmp	r3, r4
 800920a:	f73f ac69 	bgt.w	8008ae0 <forward_lite_conv2d_sssa8_ch+0x17c>
 800920e:	f01a 0f03 	tst.w	sl, #3
 8009212:	972e      	str	r7, [sp, #184]	; 0xb8
 8009214:	f040 810d 	bne.w	8009432 <forward_lite_conv2d_sssa8_ch+0xace>
 8009218:	ee19 3a10 	vmov	r3, s18
 800921c:	ee19 1a90 	vmov	r1, s19
 8009220:	9866      	ldr	r0, [sp, #408]	; 0x198
 8009222:	f002 ff51 	bl	800c0c8 <st_int8_to16_dual_interleaved>
 8009226:	e45d      	b.n	8008ae4 <forward_lite_conv2d_sssa8_ch+0x180>
 8009228:	4603      	mov	r3, r0
 800922a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800922c:	fb01 f303 	mul.w	r3, r1, r3
 8009230:	931d      	str	r3, [sp, #116]	; 0x74
 8009232:	f7ff bbd6 	b.w	80089e2 <forward_lite_conv2d_sssa8_ch+0x7e>
 8009236:	469c      	mov	ip, r3
 8009238:	461e      	mov	r6, r3
 800923a:	45e1      	cmp	r9, ip
 800923c:	465a      	mov	r2, fp
 800923e:	4621      	mov	r1, r4
 8009240:	4638      	mov	r0, r7
 8009242:	bfcc      	ite	gt
 8009244:	2300      	movgt	r3, #0
 8009246:	2301      	movle	r3, #1
 8009248:	ea53 73d6 	orrs.w	r3, r3, r6, lsr #31
 800924c:	d102      	bne.n	8009254 <forward_lite_conv2d_sssa8_ch+0x8f0>
 800924e:	f1b8 0f00 	cmp.w	r8, #0
 8009252:	d064      	beq.n	800931e <forward_lite_conv2d_sssa8_ch+0x9ba>
 8009254:	f005 f866 	bl	800e324 <arm_fill_q15>
 8009258:	3601      	adds	r6, #1
 800925a:	4454      	add	r4, sl
 800925c:	b236      	sxth	r6, r6
 800925e:	42ae      	cmp	r6, r5
 8009260:	46b4      	mov	ip, r6
 8009262:	dbea      	blt.n	800923a <forward_lite_conv2d_sssa8_ch+0x8d6>
 8009264:	e772      	b.n	800914c <forward_lite_conv2d_sssa8_ch+0x7e8>
 8009266:	3b01      	subs	r3, #1
 8009268:	9341      	str	r3, [sp, #260]	; 0x104
 800926a:	f8bd 3124 	ldrh.w	r3, [sp, #292]	; 0x124
 800926e:	2b01      	cmp	r3, #1
 8009270:	f8ad 3126 	strh.w	r3, [sp, #294]	; 0x126
 8009274:	f43f af2a 	beq.w	80090cc <forward_lite_conv2d_sssa8_ch+0x768>
 8009278:	b28b      	uxth	r3, r1
 800927a:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	; 0x2c
 800927e:	930f      	str	r3, [sp, #60]	; 0x3c
 8009280:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009282:	bb0b      	cbnz	r3, 80092c8 <forward_lite_conv2d_sssa8_ch+0x964>
 8009284:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009286:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8009288:	4293      	cmp	r3, r2
 800928a:	f77f af68 	ble.w	800915e <forward_lite_conv2d_sssa8_ch+0x7fa>
 800928e:	4616      	mov	r6, r2
 8009290:	4610      	mov	r0, r2
 8009292:	46a3      	mov	fp, r4
 8009294:	464f      	mov	r7, r9
 8009296:	462c      	mov	r4, r5
 8009298:	ee18 2a90 	vmov	r2, s17
 800929c:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 800929e:	4699      	mov	r9, r3
 80092a0:	f8dd a044 	ldr.w	sl, [sp, #68]	; 0x44
 80092a4:	3601      	adds	r6, #1
 80092a6:	fb00 4007 	mla	r0, r0, r7, r4
 80092aa:	4659      	mov	r1, fp
 80092ac:	920a      	str	r2, [sp, #40]	; 0x28
 80092ae:	b236      	sxth	r6, r6
 80092b0:	fb08 a000 	mla	r0, r8, r0, sl
 80092b4:	f002 fdda 	bl	800be6c <st_int8_to16_no_shift_interleaved>
 80092b8:	44ab      	add	fp, r5
 80092ba:	454e      	cmp	r6, r9
 80092bc:	4630      	mov	r0, r6
 80092be:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80092c0:	dbf0      	blt.n	80092a4 <forward_lite_conv2d_sssa8_ch+0x940>
 80092c2:	465c      	mov	r4, fp
 80092c4:	46b9      	mov	r9, r7
 80092c6:	e74a      	b.n	800915e <forward_lite_conv2d_sssa8_ch+0x7fa>
 80092c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80092ca:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80092cc:	4293      	cmp	r3, r2
 80092ce:	f77f af46 	ble.w	800915e <forward_lite_conv2d_sssa8_ch+0x7fa>
 80092d2:	4616      	mov	r6, r2
 80092d4:	4610      	mov	r0, r2
 80092d6:	46a3      	mov	fp, r4
 80092d8:	464f      	mov	r7, r9
 80092da:	462c      	mov	r4, r5
 80092dc:	ee18 2a90 	vmov	r2, s17
 80092e0:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 80092e2:	4699      	mov	r9, r3
 80092e4:	f8dd a044 	ldr.w	sl, [sp, #68]	; 0x44
 80092e8:	3601      	adds	r6, #1
 80092ea:	fb00 4007 	mla	r0, r0, r7, r4
 80092ee:	4659      	mov	r1, fp
 80092f0:	920a      	str	r2, [sp, #40]	; 0x28
 80092f2:	b236      	sxth	r6, r6
 80092f4:	fb08 a000 	mla	r0, r8, r0, sl
 80092f8:	f002 fd56 	bl	800bda8 <st_int8_to16_no_shift>
 80092fc:	44ab      	add	fp, r5
 80092fe:	454e      	cmp	r6, r9
 8009300:	4630      	mov	r0, r6
 8009302:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8009304:	dbf0      	blt.n	80092e8 <forward_lite_conv2d_sssa8_ch+0x984>
 8009306:	465c      	mov	r4, fp
 8009308:	46b9      	mov	r9, r7
 800930a:	e728      	b.n	800915e <forward_lite_conv2d_sssa8_ch+0x7fa>
 800930c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800930e:	eb03 000e 	add.w	r0, r3, lr
 8009312:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8009314:	fb0b 3000 	mla	r0, fp, r0, r3
 8009318:	f002 fd46 	bl	800bda8 <st_int8_to16_no_shift>
 800931c:	e710      	b.n	8009140 <forward_lite_conv2d_sssa8_ch+0x7dc>
 800931e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8009320:	eb03 000c 	add.w	r0, r3, ip
 8009324:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8009326:	fb0b 3000 	mla	r0, fp, r0, r3
 800932a:	f002 fd9f 	bl	800be6c <st_int8_to16_no_shift_interleaved>
 800932e:	e793      	b.n	8009258 <forward_lite_conv2d_sssa8_ch+0x8f4>
 8009330:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8009332:	429c      	cmp	r4, r3
 8009334:	d018      	beq.n	8009368 <forward_lite_conv2d_sssa8_ch+0xa04>
 8009336:	4619      	mov	r1, r3
 8009338:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800933a:	ee1a 2a90 	vmov	r2, s21
 800933e:	ee19 0a90 	vmov	r0, s19
 8009342:	9307      	str	r3, [sp, #28]
 8009344:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8009346:	9306      	str	r3, [sp, #24]
 8009348:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800934a:	9305      	str	r3, [sp, #20]
 800934c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800934e:	9304      	str	r3, [sp, #16]
 8009350:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8009352:	9303      	str	r3, [sp, #12]
 8009354:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8009356:	9302      	str	r3, [sp, #8]
 8009358:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800935a:	9301      	str	r3, [sp, #4]
 800935c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800935e:	9300      	str	r3, [sp, #0]
 8009360:	ee19 3a10 	vmov	r3, s18
 8009364:	f003 fbc8 	bl	800caf8 <st_sssa8_ch_nn_mat_mult_kernel_single_opt>
 8009368:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800936a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800936c:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800936e:	1a9b      	subs	r3, r3, r2
 8009370:	4411      	add	r1, r2
 8009372:	911b      	str	r1, [sp, #108]	; 0x6c
 8009374:	b299      	uxth	r1, r3
 8009376:	4613      	mov	r3, r2
 8009378:	428a      	cmp	r2, r1
 800937a:	9128      	str	r1, [sp, #160]	; 0xa0
 800937c:	bf28      	it	cs
 800937e:	460b      	movcs	r3, r1
 8009380:	b29b      	uxth	r3, r3
 8009382:	2b00      	cmp	r3, #0
 8009384:	d03e      	beq.n	8009404 <forward_lite_conv2d_sssa8_ch+0xaa0>
 8009386:	ee1a 4a90 	vmov	r4, s21
 800938a:	982d      	ldr	r0, [sp, #180]	; 0xb4
 800938c:	991c      	ldr	r1, [sp, #112]	; 0x70
 800938e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8009392:	fb01 0002 	mla	r0, r1, r2, r0
 8009396:	ee0a 4a90 	vmov	s21, r4
 800939a:	9c26      	ldr	r4, [sp, #152]	; 0x98
 800939c:	902d      	str	r0, [sp, #180]	; 0xb4
 800939e:	eb04 0442 	add.w	r4, r4, r2, lsl #1
 80093a2:	9426      	str	r4, [sp, #152]	; 0x98
 80093a4:	9c21      	ldr	r4, [sp, #132]	; 0x84
 80093a6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 80093aa:	9421      	str	r4, [sp, #132]	; 0x84
 80093ac:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 80093ae:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80093b2:	921f      	str	r2, [sp, #124]	; 0x7c
 80093b4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80093b6:	bb3a      	cbnz	r2, 8009408 <forward_lite_conv2d_sssa8_ch+0xaa4>
 80093b8:	460a      	mov	r2, r1
 80093ba:	ee19 1a90 	vmov	r1, s19
 80093be:	931a      	str	r3, [sp, #104]	; 0x68
 80093c0:	f002 fe82 	bl	800c0c8 <st_int8_to16_dual_interleaved>
 80093c4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80093c6:	3b01      	subs	r3, #1
 80093c8:	b29b      	uxth	r3, r3
 80093ca:	461a      	mov	r2, r3
 80093cc:	9327      	str	r3, [sp, #156]	; 0x9c
 80093ce:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80093d2:	429a      	cmp	r2, r3
 80093d4:	f47f ae60 	bne.w	8009098 <forward_lite_conv2d_sssa8_ch+0x734>
 80093d8:	ee18 ba90 	vmov	fp, s17
 80093dc:	ee1b 7a10 	vmov	r7, s22
 80093e0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80093e2:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80093e4:	9c32      	ldr	r4, [sp, #200]	; 0xc8
 80093e6:	4413      	add	r3, r2
 80093e8:	3401      	adds	r4, #1
 80093ea:	b29b      	uxth	r3, r3
 80093ec:	b224      	sxth	r4, r4
 80093ee:	9330      	str	r3, [sp, #192]	; 0xc0
 80093f0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80093f2:	4625      	mov	r5, r4
 80093f4:	429c      	cmp	r4, r3
 80093f6:	f6ff ae12 	blt.w	800901e <forward_lite_conv2d_sssa8_ch+0x6ba>
 80093fa:	b055      	add	sp, #340	; 0x154
 80093fc:	ecbd 8b08 	vpop	{d8-d11}
 8009400:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009404:	931a      	str	r3, [sp, #104]	; 0x68
 8009406:	e7dd      	b.n	80093c4 <forward_lite_conv2d_sssa8_ch+0xa60>
 8009408:	460a      	mov	r2, r1
 800940a:	ee19 1a90 	vmov	r1, s19
 800940e:	931a      	str	r3, [sp, #104]	; 0x68
 8009410:	f002 fd70 	bl	800bef4 <st_int8_to16_dual>
 8009414:	e7d6      	b.n	80093c4 <forward_lite_conv2d_sssa8_ch+0xa60>
 8009416:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8009418:	ee19 1a90 	vmov	r1, s19
 800941c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800941e:	9866      	ldr	r0, [sp, #408]	; 0x198
 8009420:	f002 fd68 	bl	800bef4 <st_int8_to16_dual>
 8009424:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8009426:	2b00      	cmp	r3, #0
 8009428:	f47f ae16 	bne.w	8009058 <forward_lite_conv2d_sssa8_ch+0x6f4>
 800942c:	b2a3      	uxth	r3, r4
 800942e:	9332      	str	r3, [sp, #200]	; 0xc8
 8009430:	e7d6      	b.n	80093e0 <forward_lite_conv2d_sssa8_ch+0xa7c>
 8009432:	ee19 3a10 	vmov	r3, s18
 8009436:	ee19 1a90 	vmov	r1, s19
 800943a:	9866      	ldr	r0, [sp, #408]	; 0x198
 800943c:	f002 fd5a 	bl	800bef4 <st_int8_to16_dual>
 8009440:	f7ff bb50 	b.w	8008ae4 <forward_lite_conv2d_sssa8_ch+0x180>

08009444 <forward_lite_dw_3x3_sssa8_ch>:
 8009444:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009448:	b09b      	sub	sp, #108	; 0x6c
 800944a:	461f      	mov	r7, r3
 800944c:	f8bd 2098 	ldrh.w	r2, [sp, #152]	; 0x98
 8009450:	f8bd 3094 	ldrh.w	r3, [sp, #148]	; 0x94
 8009454:	9207      	str	r2, [sp, #28]
 8009456:	f99d 20a0 	ldrsb.w	r2, [sp, #160]	; 0xa0
 800945a:	9306      	str	r3, [sp, #24]
 800945c:	9204      	str	r2, [sp, #16]
 800945e:	f99d 20a4 	ldrsb.w	r2, [sp, #164]	; 0xa4
 8009462:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8009464:	9208      	str	r2, [sp, #32]
 8009466:	f8bd 20ac 	ldrh.w	r2, [sp, #172]	; 0xac
 800946a:	f8dd e090 	ldr.w	lr, [sp, #144]	; 0x90
 800946e:	920f      	str	r2, [sp, #60]	; 0x3c
 8009470:	f8bd 20b0 	ldrh.w	r2, [sp, #176]	; 0xb0
 8009474:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8009478:	9017      	str	r0, [sp, #92]	; 0x5c
 800947a:	9103      	str	r1, [sp, #12]
 800947c:	9215      	str	r2, [sp, #84]	; 0x54
 800947e:	2b00      	cmp	r3, #0
 8009480:	f000 82b2 	beq.w	80099e8 <forward_lite_dw_3x3_sssa8_ch+0x5a4>
 8009484:	00fb      	lsls	r3, r7, #3
 8009486:	0079      	lsls	r1, r7, #1
 8009488:	9305      	str	r3, [sp, #20]
 800948a:	9a08      	ldr	r2, [sp, #32]
 800948c:	2f03      	cmp	r7, #3
 800948e:	9b03      	ldr	r3, [sp, #12]
 8009490:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8009494:	9806      	ldr	r0, [sp, #24]
 8009496:	fb07 f303 	mul.w	r3, r7, r3
 800949a:	f102 0201 	add.w	r2, r2, #1
 800949e:	fb07 f000 	mul.w	r0, r7, r0
 80094a2:	920a      	str	r2, [sp, #40]	; 0x28
 80094a4:	9a07      	ldr	r2, [sp, #28]
 80094a6:	9010      	str	r0, [sp, #64]	; 0x40
 80094a8:	fb03 f202 	mul.w	r2, r3, r2
 80094ac:	eba3 0301 	sub.w	r3, r3, r1
 80094b0:	9216      	str	r2, [sp, #88]	; 0x58
 80094b2:	9303      	str	r3, [sp, #12]
 80094b4:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80094b6:	9b05      	ldr	r3, [sp, #20]
 80094b8:	441a      	add	r2, r3
 80094ba:	443b      	add	r3, r7
 80094bc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80094c0:	9212      	str	r2, [sp, #72]	; 0x48
 80094c2:	9311      	str	r3, [sp, #68]	; 0x44
 80094c4:	9b04      	ldr	r3, [sp, #16]
 80094c6:	f1c3 0300 	rsb	r3, r3, #0
 80094ca:	eac3 4e03 	pkhbt	lr, r3, r3, lsl #16
 80094ce:	bf8c      	ite	hi
 80094d0:	1efb      	subhi	r3, r7, #3
 80094d2:	2300      	movls	r3, #0
 80094d4:	930b      	str	r3, [sp, #44]	; 0x2c
 80094d6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80094d8:	2b00      	cmp	r3, #0
 80094da:	f000 8278 	beq.w	80099ce <forward_lite_dw_3x3_sssa8_ch+0x58a>
 80094de:	f007 0203 	and.w	r2, r7, #3
 80094e2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80094e4:	920d      	str	r2, [sp, #52]	; 0x34
 80094e6:	2b00      	cmp	r3, #0
 80094e8:	f000 8271 	beq.w	80099ce <forward_lite_dw_3x3_sssa8_ch+0x58a>
 80094ec:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80094f0:	2100      	movs	r1, #0
 80094f2:	4675      	mov	r5, lr
 80094f4:	46c3      	mov	fp, r8
 80094f6:	9307      	str	r3, [sp, #28]
 80094f8:	1e53      	subs	r3, r2, #1
 80094fa:	9114      	str	r1, [sp, #80]	; 0x50
 80094fc:	b29b      	uxth	r3, r3
 80094fe:	9708      	str	r7, [sp, #32]
 8009500:	9313      	str	r3, [sp, #76]	; 0x4c
 8009502:	460b      	mov	r3, r1
 8009504:	46d8      	mov	r8, fp
 8009506:	46ab      	mov	fp, r5
 8009508:	e9dd 1216 	ldrd	r1, r2, [sp, #88]	; 0x58
 800950c:	fb03 2301 	mla	r3, r3, r1, r2
 8009510:	9306      	str	r3, [sp, #24]
 8009512:	2300      	movs	r3, #0
 8009514:	930e      	str	r3, [sp, #56]	; 0x38
 8009516:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009518:	2b00      	cmp	r3, #0
 800951a:	f000 825b 	beq.w	80099d4 <forward_lite_dw_3x3_sssa8_ch+0x590>
 800951e:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8009520:	f108 0104 	add.w	r1, r8, #4
 8009524:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8009526:	2500      	movs	r5, #0
 8009528:	f102 0010 	add.w	r0, r2, #16
 800952c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800952e:	f103 0410 	add.w	r4, r3, #16
 8009532:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8009534:	3208      	adds	r2, #8
 8009536:	f8dd a020 	ldr.w	sl, [sp, #32]
 800953a:	3348      	adds	r3, #72	; 0x48
 800953c:	9002      	str	r0, [sp, #8]
 800953e:	9201      	str	r2, [sp, #4]
 8009540:	f1c8 0200 	rsb	r2, r8, #0
 8009544:	9104      	str	r1, [sp, #16]
 8009546:	920c      	str	r2, [sp, #48]	; 0x30
 8009548:	9906      	ldr	r1, [sp, #24]
 800954a:	9409      	str	r4, [sp, #36]	; 0x24
 800954c:	194a      	adds	r2, r1, r5
 800954e:	9305      	str	r3, [sp, #20]
 8009550:	5949      	ldr	r1, [r1, r5]
 8009552:	f852 c00a 	ldr.w	ip, [r2, sl]
 8009556:	eb02 074a 	add.w	r7, r2, sl, lsl #1
 800955a:	eac1 460c 	pkhbt	r6, r1, ip, lsl #16
 800955e:	f853 5c48 	ldr.w	r5, [r3, #-72]
 8009562:	eacc 4c21 	pkhtb	ip, ip, r1, asr #16
 8009566:	fa2b fe86 	sxtab16	lr, fp, r6
 800956a:	f854 1c10 	ldr.w	r1, [r4, #-16]
 800956e:	fb25 110e 	smlad	r1, r5, lr, r1
 8009572:	fa2b fe96 	sxtab16	lr, fp, r6, ror #8
 8009576:	f853 5c44 	ldr.w	r5, [r3, #-68]
 800957a:	f854 6c0c 	ldr.w	r6, [r4, #-12]
 800957e:	fb25 6e0e 	smlad	lr, r5, lr, r6
 8009582:	f853 5c40 	ldr.w	r5, [r3, #-64]
 8009586:	f854 6c08 	ldr.w	r6, [r4, #-8]
 800958a:	fa2b f88c 	sxtab16	r8, fp, ip
 800958e:	fb25 6808 	smlad	r8, r5, r8, r6
 8009592:	fa2b fc9c 	sxtab16	ip, fp, ip, ror #8
 8009596:	f853 5c3c 	ldr.w	r5, [r3, #-60]
 800959a:	f854 6c04 	ldr.w	r6, [r4, #-4]
 800959e:	fb25 6c0c 	smlad	ip, r5, ip, r6
 80095a2:	9d03      	ldr	r5, [sp, #12]
 80095a4:	f852 201a 	ldr.w	r2, [r2, sl, lsl #1]
 80095a8:	eb07 0905 	add.w	r9, r7, r5
 80095ac:	597e      	ldr	r6, [r7, r5]
 80095ae:	f853 0c38 	ldr.w	r0, [r3, #-56]
 80095b2:	eac2 4506 	pkhbt	r5, r2, r6, lsl #16
 80095b6:	eb09 070a 	add.w	r7, r9, sl
 80095ba:	eac6 4222 	pkhtb	r2, r6, r2, asr #16
 80095be:	fa2b f685 	sxtab16	r6, fp, r5
 80095c2:	fb20 1106 	smlad	r1, r0, r6, r1
 80095c6:	fa2b f595 	sxtab16	r5, fp, r5, ror #8
 80095ca:	f853 0c34 	ldr.w	r0, [r3, #-52]
 80095ce:	fb20 ee05 	smlad	lr, r0, r5, lr
 80095d2:	f853 0c30 	ldr.w	r0, [r3, #-48]
 80095d6:	fa2b f582 	sxtab16	r5, fp, r2
 80095da:	fb20 8805 	smlad	r8, r0, r5, r8
 80095de:	fa2b f292 	sxtab16	r2, fp, r2, ror #8
 80095e2:	f853 0c2c 	ldr.w	r0, [r3, #-44]
 80095e6:	fb20 cc02 	smlad	ip, r0, r2, ip
 80095ea:	4457      	add	r7, sl
 80095ec:	9d03      	ldr	r5, [sp, #12]
 80095ee:	f859 200a 	ldr.w	r2, [r9, sl]
 80095f2:	197d      	adds	r5, r7, r5
 80095f4:	f859 901a 	ldr.w	r9, [r9, sl, lsl #1]
 80095f8:	f853 0c28 	ldr.w	r0, [r3, #-40]
 80095fc:	eac2 4609 	pkhbt	r6, r2, r9, lsl #16
 8009600:	eac9 4922 	pkhtb	r9, r9, r2, asr #16
 8009604:	fa2b f286 	sxtab16	r2, fp, r6
 8009608:	fb20 1102 	smlad	r1, r0, r2, r1
 800960c:	fa2b f696 	sxtab16	r6, fp, r6, ror #8
 8009610:	f853 0c24 	ldr.w	r0, [r3, #-36]
 8009614:	fb20 ee06 	smlad	lr, r0, r6, lr
 8009618:	f853 2c20 	ldr.w	r2, [r3, #-32]
 800961c:	fa2b f689 	sxtab16	r6, fp, r9
 8009620:	fb22 8806 	smlad	r8, r2, r6, r8
 8009624:	fa2b f999 	sxtab16	r9, fp, r9, ror #8
 8009628:	f853 0c1c 	ldr.w	r0, [r3, #-28]
 800962c:	fb20 cc09 	smlad	ip, r0, r9, ip
 8009630:	9a03      	ldr	r2, [sp, #12]
 8009632:	f855 900a 	ldr.w	r9, [r5, sl]
 8009636:	58be      	ldr	r6, [r7, r2]
 8009638:	f853 7c18 	ldr.w	r7, [r3, #-24]
 800963c:	eac6 4209 	pkhbt	r2, r6, r9, lsl #16
 8009640:	eac9 4926 	pkhtb	r9, r9, r6, asr #16
 8009644:	fa2b f682 	sxtab16	r6, fp, r2
 8009648:	fb27 1706 	smlad	r7, r7, r6, r1
 800964c:	fa2b f292 	sxtab16	r2, fp, r2, ror #8
 8009650:	f853 1c14 	ldr.w	r1, [r3, #-20]
 8009654:	fb21 ee02 	smlad	lr, r1, r2, lr
 8009658:	f853 1c10 	ldr.w	r1, [r3, #-16]
 800965c:	fa2b f289 	sxtab16	r2, fp, r9
 8009660:	fb21 8802 	smlad	r8, r1, r2, r8
 8009664:	fa2b f999 	sxtab16	r9, fp, r9, ror #8
 8009668:	f853 2c0c 	ldr.w	r2, [r3, #-12]
 800966c:	fb22 cc09 	smlad	ip, r2, r9, ip
 8009670:	f855 501a 	ldr.w	r5, [r5, sl, lsl #1]
 8009674:	9901      	ldr	r1, [sp, #4]
 8009676:	9807      	ldr	r0, [sp, #28]
 8009678:	f345 2907 	sbfx	r9, r5, #8, #8
 800967c:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8009680:	b269      	sxtb	r1, r5
 8009682:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 8009686:	eba9 0900 	sub.w	r9, r9, r0
 800968a:	1a09      	subs	r1, r1, r0
 800968c:	3607      	adds	r6, #7
 800968e:	fb12 7701 	smlabb	r7, r2, r1, r7
 8009692:	f345 4207 	sbfx	r2, r5, #16, #8
 8009696:	9902      	ldr	r1, [sp, #8]
 8009698:	ebc0 6525 	rsb	r5, r0, r5, asr #24
 800969c:	1a12      	subs	r2, r2, r0
 800969e:	027f      	lsls	r7, r7, #9
 80096a0:	f851 1c10 	ldr.w	r1, [r1, #-16]
 80096a4:	2000      	movs	r0, #0
 80096a6:	fb57 0701 	smmla	r7, r7, r1, r0
 80096aa:	f833 1c06 	ldrh.w	r1, [r3, #-6]
 80096ae:	fa47 f606 	asr.w	r6, r7, r6
 80096b2:	980a      	ldr	r0, [sp, #40]	; 0x28
 80096b4:	fb11 ee09 	smlabb	lr, r1, r9, lr
 80096b8:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 80096bc:	f833 9c02 	ldrh.w	r9, [r3, #-2]
 80096c0:	4406      	add	r6, r0
 80096c2:	fb11 8802 	smlabb	r8, r1, r2, r8
 80096c6:	9902      	ldr	r1, [sp, #8]
 80096c8:	9a01      	ldr	r2, [sp, #4]
 80096ca:	fb19 c505 	smlabb	r5, r9, r5, ip
 80096ce:	1076      	asrs	r6, r6, #1
 80096d0:	4689      	mov	r9, r1
 80096d2:	4694      	mov	ip, r2
 80096d4:	f306 0607 	ssat	r6, #8, r6
 80096d8:	9f04      	ldr	r7, [sp, #16]
 80096da:	ea4f 2e4e 	mov.w	lr, lr, lsl #9
 80096de:	f807 6c04 	strb.w	r6, [r7, #-4]
 80096e2:	2600      	movs	r6, #0
 80096e4:	f932 2c06 	ldrsh.w	r2, [r2, #-6]
 80096e8:	f851 1c0c 	ldr.w	r1, [r1, #-12]
 80096ec:	3207      	adds	r2, #7
 80096ee:	fb5e 6e01 	smmla	lr, lr, r1, r6
 80096f2:	fa4e f202 	asr.w	r2, lr, r2
 80096f6:	4402      	add	r2, r0
 80096f8:	1052      	asrs	r2, r2, #1
 80096fa:	f302 0207 	ssat	r2, #8, r2
 80096fe:	f807 2c03 	strb.w	r2, [r7, #-3]
 8009702:	f04f 0e00 	mov.w	lr, #0
 8009706:	f93c 6c04 	ldrsh.w	r6, [ip, #-4]
 800970a:	ea4f 2848 	mov.w	r8, r8, lsl #9
 800970e:	f859 1c08 	ldr.w	r1, [r9, #-8]
 8009712:	3607      	adds	r6, #7
 8009714:	fb58 e801 	smmla	r8, r8, r1, lr
 8009718:	fa48 f806 	asr.w	r8, r8, r6
 800971c:	4480      	add	r8, r0
 800971e:	ea4f 0868 	mov.w	r8, r8, asr #1
 8009722:	f308 0807 	ssat	r8, #8, r8
 8009726:	f807 8c02 	strb.w	r8, [r7, #-2]
 800972a:	026d      	lsls	r5, r5, #9
 800972c:	f93c 1c02 	ldrsh.w	r1, [ip, #-2]
 8009730:	f859 2c04 	ldr.w	r2, [r9, #-4]
 8009734:	3107      	adds	r1, #7
 8009736:	fb55 e502 	smmla	r5, r5, r2, lr
 800973a:	410d      	asrs	r5, r1
 800973c:	4405      	add	r5, r0
 800973e:	106d      	asrs	r5, r5, #1
 8009740:	f305 0507 	ssat	r5, #8, r5
 8009744:	464a      	mov	r2, r9
 8009746:	f807 5c01 	strb.w	r5, [r7, #-1]
 800974a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800974c:	3410      	adds	r4, #16
 800974e:	3210      	adds	r2, #16
 8009750:	3348      	adds	r3, #72	; 0x48
 8009752:	9202      	str	r2, [sp, #8]
 8009754:	4662      	mov	r2, ip
 8009756:	3208      	adds	r2, #8
 8009758:	9201      	str	r2, [sp, #4]
 800975a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800975c:	19d5      	adds	r5, r2, r7
 800975e:	1d3a      	adds	r2, r7, #4
 8009760:	b2ad      	uxth	r5, r5
 8009762:	9204      	str	r2, [sp, #16]
 8009764:	428d      	cmp	r5, r1
 8009766:	462a      	mov	r2, r5
 8009768:	f4ff aeee 	bcc.w	8009548 <forward_lite_dw_3x3_sssa8_ch+0x104>
 800976c:	46ca      	mov	sl, r9
 800976e:	46b8      	mov	r8, r7
 8009770:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009772:	2b00      	cmp	r3, #0
 8009774:	f000 8115 	beq.w	80099a2 <forward_lite_dw_3x3_sssa8_ch+0x55e>
 8009778:	9b06      	ldr	r3, [sp, #24]
 800977a:	f04f 0e00 	mov.w	lr, #0
 800977e:	9e07      	ldr	r6, [sp, #28]
 8009780:	9d05      	ldr	r5, [sp, #20]
 8009782:	189c      	adds	r4, r3, r2
 8009784:	9909      	ldr	r1, [sp, #36]	; 0x24
 8009786:	569b      	ldrsb	r3, [r3, r2]
 8009788:	9f08      	ldr	r7, [sp, #32]
 800978a:	1b98      	subs	r0, r3, r6
 800978c:	680b      	ldr	r3, [r1, #0]
 800978e:	8829      	ldrh	r1, [r5, #0]
 8009790:	fb10 3301 	smlabb	r3, r0, r1, r3
 8009794:	57e1      	ldrsb	r1, [r4, r7]
 8009796:	4630      	mov	r0, r6
 8009798:	1b89      	subs	r1, r1, r6
 800979a:	eb04 0647 	add.w	r6, r4, r7, lsl #1
 800979e:	f914 4017 	ldrsb.w	r4, [r4, r7, lsl #1]
 80097a2:	462f      	mov	r7, r5
 80097a4:	1a24      	subs	r4, r4, r0
 80097a6:	8868      	ldrh	r0, [r5, #2]
 80097a8:	fb11 3300 	smlabb	r3, r1, r0, r3
 80097ac:	9903      	ldr	r1, [sp, #12]
 80097ae:	88b8      	ldrh	r0, [r7, #4]
 80097b0:	1875      	adds	r5, r6, r1
 80097b2:	5671      	ldrsb	r1, [r6, r1]
 80097b4:	9e07      	ldr	r6, [sp, #28]
 80097b6:	fb14 3000 	smlabb	r0, r4, r0, r3
 80097ba:	88fb      	ldrh	r3, [r7, #6]
 80097bc:	1b89      	subs	r1, r1, r6
 80097be:	9f03      	ldr	r7, [sp, #12]
 80097c0:	fb11 0003 	smlabb	r0, r1, r3, r0
 80097c4:	9b08      	ldr	r3, [sp, #32]
 80097c6:	eb05 0443 	add.w	r4, r5, r3, lsl #1
 80097ca:	56e9      	ldrsb	r1, [r5, r3]
 80097cc:	f915 3013 	ldrsb.w	r3, [r5, r3, lsl #1]
 80097d0:	9d05      	ldr	r5, [sp, #20]
 80097d2:	1b89      	subs	r1, r1, r6
 80097d4:	1b9b      	subs	r3, r3, r6
 80097d6:	892d      	ldrh	r5, [r5, #8]
 80097d8:	fb11 0105 	smlabb	r1, r1, r5, r0
 80097dc:	19e5      	adds	r5, r4, r7
 80097de:	57e0      	ldrsb	r0, [r4, r7]
 80097e0:	9f05      	ldr	r7, [sp, #20]
 80097e2:	1b80      	subs	r0, r0, r6
 80097e4:	897c      	ldrh	r4, [r7, #10]
 80097e6:	fb13 1304 	smlabb	r3, r3, r4, r1
 80097ea:	89b9      	ldrh	r1, [r7, #12]
 80097ec:	f9bc 4000 	ldrsh.w	r4, [ip]
 80097f0:	fb10 3001 	smlabb	r0, r0, r1, r3
 80097f4:	9908      	ldr	r1, [sp, #32]
 80097f6:	3407      	adds	r4, #7
 80097f8:	566b      	ldrsb	r3, [r5, r1]
 80097fa:	f915 5011 	ldrsb.w	r5, [r5, r1, lsl #1]
 80097fe:	1b9b      	subs	r3, r3, r6
 8009800:	89f9      	ldrh	r1, [r7, #14]
 8009802:	1bad      	subs	r5, r5, r6
 8009804:	fb13 0001 	smlabb	r0, r3, r1, r0
 8009808:	8a3b      	ldrh	r3, [r7, #16]
 800980a:	fb15 0503 	smlabb	r5, r5, r3, r0
 800980e:	f8da 3000 	ldr.w	r3, [sl]
 8009812:	980a      	ldr	r0, [sp, #40]	; 0x28
 8009814:	026d      	lsls	r5, r5, #9
 8009816:	fb55 e503 	smmla	r5, r5, r3, lr
 800981a:	fa45 f104 	asr.w	r1, r5, r4
 800981e:	1c53      	adds	r3, r2, #1
 8009820:	4401      	add	r1, r0
 8009822:	b29b      	uxth	r3, r3
 8009824:	1049      	asrs	r1, r1, #1
 8009826:	f301 0107 	ssat	r1, #8, r1
 800982a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800982c:	f888 1000 	strb.w	r1, [r8]
 8009830:	2d00      	cmp	r5, #0
 8009832:	f000 80b4 	beq.w	800999e <forward_lite_dw_3x3_sssa8_ch+0x55a>
 8009836:	3202      	adds	r2, #2
 8009838:	8a79      	ldrh	r1, [r7, #18]
 800983a:	463c      	mov	r4, r7
 800983c:	9f08      	ldr	r7, [sp, #32]
 800983e:	b295      	uxth	r5, r2
 8009840:	9a06      	ldr	r2, [sp, #24]
 8009842:	18d0      	adds	r0, r2, r3
 8009844:	56d3      	ldrsb	r3, [r2, r3]
 8009846:	1b9a      	subs	r2, r3, r6
 8009848:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800984a:	685b      	ldr	r3, [r3, #4]
 800984c:	fb12 3301 	smlabb	r3, r2, r1, r3
 8009850:	57c1      	ldrsb	r1, [r0, r7]
 8009852:	eb00 0247 	add.w	r2, r0, r7, lsl #1
 8009856:	f910 0017 	ldrsb.w	r0, [r0, r7, lsl #1]
 800985a:	1b89      	subs	r1, r1, r6
 800985c:	4627      	mov	r7, r4
 800985e:	8aa4      	ldrh	r4, [r4, #20]
 8009860:	1b80      	subs	r0, r0, r6
 8009862:	fb11 3304 	smlabb	r3, r1, r4, r3
 8009866:	9903      	ldr	r1, [sp, #12]
 8009868:	1854      	adds	r4, r2, r1
 800986a:	5652      	ldrsb	r2, [r2, r1]
 800986c:	8af9      	ldrh	r1, [r7, #22]
 800986e:	1b92      	subs	r2, r2, r6
 8009870:	fb10 3101 	smlabb	r1, r0, r1, r3
 8009874:	8b3b      	ldrh	r3, [r7, #24]
 8009876:	9f05      	ldr	r7, [sp, #20]
 8009878:	fb12 1103 	smlabb	r1, r2, r3, r1
 800987c:	9b08      	ldr	r3, [sp, #32]
 800987e:	56e2      	ldrsb	r2, [r4, r3]
 8009880:	eb04 0043 	add.w	r0, r4, r3, lsl #1
 8009884:	f914 3013 	ldrsb.w	r3, [r4, r3, lsl #1]
 8009888:	1b92      	subs	r2, r2, r6
 800988a:	8b7c      	ldrh	r4, [r7, #26]
 800988c:	1b9b      	subs	r3, r3, r6
 800988e:	fb12 1204 	smlabb	r2, r2, r4, r1
 8009892:	9903      	ldr	r1, [sp, #12]
 8009894:	1844      	adds	r4, r0, r1
 8009896:	5641      	ldrsb	r1, [r0, r1]
 8009898:	8bb8      	ldrh	r0, [r7, #28]
 800989a:	1b89      	subs	r1, r1, r6
 800989c:	fb13 2300 	smlabb	r3, r3, r0, r2
 80098a0:	8bfa      	ldrh	r2, [r7, #30]
 80098a2:	8c38      	ldrh	r0, [r7, #32]
 80098a4:	fb11 3102 	smlabb	r1, r1, r2, r3
 80098a8:	9b08      	ldr	r3, [sp, #32]
 80098aa:	56e2      	ldrsb	r2, [r4, r3]
 80098ac:	f914 3013 	ldrsb.w	r3, [r4, r3, lsl #1]
 80098b0:	4634      	mov	r4, r6
 80098b2:	1b92      	subs	r2, r2, r6
 80098b4:	1b9b      	subs	r3, r3, r6
 80098b6:	fb12 1100 	smlabb	r1, r2, r0, r1
 80098ba:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 80098bc:	4638      	mov	r0, r7
 80098be:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80098c0:	fb13 1202 	smlabb	r2, r3, r2, r1
 80098c4:	f9bc 1002 	ldrsh.w	r1, [ip, #2]
 80098c8:	f8da 3004 	ldr.w	r3, [sl, #4]
 80098cc:	3107      	adds	r1, #7
 80098ce:	0252      	lsls	r2, r2, #9
 80098d0:	fb52 e303 	smmla	r3, r2, r3, lr
 80098d4:	410b      	asrs	r3, r1
 80098d6:	443b      	add	r3, r7
 80098d8:	105b      	asrs	r3, r3, #1
 80098da:	f303 0307 	ssat	r3, #8, r3
 80098de:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80098e0:	f888 3001 	strb.w	r3, [r8, #1]
 80098e4:	2e02      	cmp	r6, #2
 80098e6:	d05a      	beq.n	800999e <forward_lite_dw_3x3_sssa8_ch+0x55a>
 80098e8:	9a06      	ldr	r2, [sp, #24]
 80098ea:	f9bc 3004 	ldrsh.w	r3, [ip, #4]
 80098ee:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80098f0:	f103 0c07 	add.w	ip, r3, #7
 80098f4:	1953      	adds	r3, r2, r5
 80098f6:	5752      	ldrsb	r2, [r2, r5]
 80098f8:	4625      	mov	r5, r4
 80098fa:	68b1      	ldr	r1, [r6, #8]
 80098fc:	1b12      	subs	r2, r2, r4
 80098fe:	8c84      	ldrh	r4, [r0, #36]	; 0x24
 8009900:	9f03      	ldr	r7, [sp, #12]
 8009902:	fb14 1202 	smlabb	r2, r4, r2, r1
 8009906:	9908      	ldr	r1, [sp, #32]
 8009908:	f8da 6008 	ldr.w	r6, [sl, #8]
 800990c:	565c      	ldrsb	r4, [r3, r1]
 800990e:	1b60      	subs	r0, r4, r5
 8009910:	460c      	mov	r4, r1
 8009912:	eb03 0141 	add.w	r1, r3, r1, lsl #1
 8009916:	f913 5014 	ldrsb.w	r5, [r3, r4, lsl #1]
 800991a:	9c07      	ldr	r4, [sp, #28]
 800991c:	9b05      	ldr	r3, [sp, #20]
 800991e:	1b2d      	subs	r5, r5, r4
 8009920:	8cdc      	ldrh	r4, [r3, #38]	; 0x26
 8009922:	57cb      	ldrsb	r3, [r1, r7]
 8009924:	fb14 2400 	smlabb	r4, r4, r0, r2
 8009928:	19c8      	adds	r0, r1, r7
 800992a:	9f07      	ldr	r7, [sp, #28]
 800992c:	9905      	ldr	r1, [sp, #20]
 800992e:	1bda      	subs	r2, r3, r7
 8009930:	8d0b      	ldrh	r3, [r1, #40]	; 0x28
 8009932:	fb13 4305 	smlabb	r3, r3, r5, r4
 8009936:	460c      	mov	r4, r1
 8009938:	8d49      	ldrh	r1, [r1, #42]	; 0x2a
 800993a:	463d      	mov	r5, r7
 800993c:	8da4      	ldrh	r4, [r4, #44]	; 0x2c
 800993e:	fb11 3302 	smlabb	r3, r1, r2, r3
 8009942:	9a08      	ldr	r2, [sp, #32]
 8009944:	5681      	ldrsb	r1, [r0, r2]
 8009946:	1bc9      	subs	r1, r1, r7
 8009948:	4617      	mov	r7, r2
 800994a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800994e:	f910 0017 	ldrsb.w	r0, [r0, r7, lsl #1]
 8009952:	fb14 3101 	smlabb	r1, r4, r1, r3
 8009956:	9f03      	ldr	r7, [sp, #12]
 8009958:	1b40      	subs	r0, r0, r5
 800995a:	19d4      	adds	r4, r2, r7
 800995c:	57d2      	ldrsb	r2, [r2, r7]
 800995e:	9f05      	ldr	r7, [sp, #20]
 8009960:	1b52      	subs	r2, r2, r5
 8009962:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 8009964:	fb13 1300 	smlabb	r3, r3, r0, r1
 8009968:	8e39      	ldrh	r1, [r7, #48]	; 0x30
 800996a:	fb11 3202 	smlabb	r2, r1, r2, r3
 800996e:	9b08      	ldr	r3, [sp, #32]
 8009970:	56e0      	ldrsb	r0, [r4, r3]
 8009972:	f914 1013 	ldrsb.w	r1, [r4, r3, lsl #1]
 8009976:	1b40      	subs	r0, r0, r5
 8009978:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800997a:	1b49      	subs	r1, r1, r5
 800997c:	fb13 2200 	smlabb	r2, r3, r0, r2
 8009980:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 8009982:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8009984:	fb13 2301 	smlabb	r3, r3, r1, r2
 8009988:	025b      	lsls	r3, r3, #9
 800998a:	fb53 e306 	smmla	r3, r3, r6, lr
 800998e:	fa43 f30c 	asr.w	r3, r3, ip
 8009992:	443b      	add	r3, r7
 8009994:	105b      	asrs	r3, r3, #1
 8009996:	f303 0307 	ssat	r3, #8, r3
 800999a:	f888 3002 	strb.w	r3, [r8, #2]
 800999e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80099a0:	4498      	add	r8, r3
 80099a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80099a4:	9a06      	ldr	r2, [sp, #24]
 80099a6:	9910      	ldr	r1, [sp, #64]	; 0x40
 80099a8:	3301      	adds	r3, #1
 80099aa:	440a      	add	r2, r1
 80099ac:	b21b      	sxth	r3, r3
 80099ae:	9206      	str	r2, [sp, #24]
 80099b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80099b2:	930e      	str	r3, [sp, #56]	; 0x38
 80099b4:	4293      	cmp	r3, r2
 80099b6:	f6ff adae 	blt.w	8009516 <forward_lite_dw_3x3_sssa8_ch+0xd2>
 80099ba:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80099bc:	465d      	mov	r5, fp
 80099be:	9915      	ldr	r1, [sp, #84]	; 0x54
 80099c0:	46c3      	mov	fp, r8
 80099c2:	3301      	adds	r3, #1
 80099c4:	b21b      	sxth	r3, r3
 80099c6:	428b      	cmp	r3, r1
 80099c8:	9314      	str	r3, [sp, #80]	; 0x50
 80099ca:	f6ff ad9b 	blt.w	8009504 <forward_lite_dw_3x3_sssa8_ch+0xc0>
 80099ce:	b01b      	add	sp, #108	; 0x6c
 80099d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80099d4:	461a      	mov	r2, r3
 80099d6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80099d8:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 80099dc:	9309      	str	r3, [sp, #36]	; 0x24
 80099de:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80099e0:	f8dd a0b8 	ldr.w	sl, [sp, #184]	; 0xb8
 80099e4:	9305      	str	r3, [sp, #20]
 80099e6:	e6c3      	b.n	8009770 <forward_lite_dw_3x3_sssa8_ch+0x32c>
 80099e8:	00fb      	lsls	r3, r7, #3
 80099ea:	ea5f 0c97 	movs.w	ip, r7, lsr #2
 80099ee:	9305      	str	r3, [sp, #20]
 80099f0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80099f2:	eb03 02c7 	add.w	r2, r3, r7, lsl #3
 80099f6:	f000 8136 	beq.w	8009c66 <forward_lite_dw_3x3_sssa8_ch+0x822>
 80099fa:	eb07 0447 	add.w	r4, r7, r7, lsl #1
 80099fe:	f10c 39ff 	add.w	r9, ip, #4294967295
 8009a02:	f10e 0304 	add.w	r3, lr, #4
 8009a06:	4670      	mov	r0, lr
 8009a08:	9402      	str	r4, [sp, #8]
 8009a0a:	eb07 0487 	add.w	r4, r7, r7, lsl #2
 8009a0e:	fa1f f989 	uxth.w	r9, r9
 8009a12:	9401      	str	r4, [sp, #4]
 8009a14:	00fc      	lsls	r4, r7, #3
 8009a16:	eb03 0989 	add.w	r9, r3, r9, lsl #2
 8009a1a:	eb0e 0307 	add.w	r3, lr, r7
 8009a1e:	eba4 0a07 	sub.w	sl, r4, r7
 8009a22:	0079      	lsls	r1, r7, #1
 8009a24:	ea4f 0b87 	mov.w	fp, r7, lsl #2
 8009a28:	4614      	mov	r4, r2
 8009a2a:	9419      	str	r4, [sp, #100]	; 0x64
 8009a2c:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8009a2e:	6806      	ldr	r6, [r0, #0]
 8009a30:	681a      	ldr	r2, [r3, #0]
 8009a32:	eac6 4402 	pkhbt	r4, r6, r2, lsl #16
 8009a36:	eac2 4226 	pkhtb	r2, r2, r6, asr #16
 8009a3a:	1d2e      	adds	r6, r5, #4
 8009a3c:	9619      	str	r6, [sp, #100]	; 0x64
 8009a3e:	fa2f f684 	sxtb16	r6, r4
 8009a42:	602e      	str	r6, [r5, #0]
 8009a44:	fa2f f494 	sxtb16	r4, r4, ror #8
 8009a48:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8009a4a:	602c      	str	r4, [r5, #0]
 8009a4c:	3504      	adds	r5, #4
 8009a4e:	9519      	str	r5, [sp, #100]	; 0x64
 8009a50:	9c19      	ldr	r4, [sp, #100]	; 0x64
 8009a52:	fa2f f582 	sxtb16	r5, r2
 8009a56:	3404      	adds	r4, #4
 8009a58:	f844 5c04 	str.w	r5, [r4, #-4]
 8009a5c:	9419      	str	r4, [sp, #100]	; 0x64
 8009a5e:	fa2f f292 	sxtb16	r2, r2, ror #8
 8009a62:	9c19      	ldr	r4, [sp, #100]	; 0x64
 8009a64:	6022      	str	r2, [r4, #0]
 8009a66:	3404      	adds	r4, #4
 8009a68:	580e      	ldr	r6, [r1, r0]
 8009a6a:	9419      	str	r4, [sp, #100]	; 0x64
 8009a6c:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8009a6e:	58ca      	ldr	r2, [r1, r3]
 8009a70:	eac6 4402 	pkhbt	r4, r6, r2, lsl #16
 8009a74:	eac2 4226 	pkhtb	r2, r2, r6, asr #16
 8009a78:	1d2e      	adds	r6, r5, #4
 8009a7a:	9619      	str	r6, [sp, #100]	; 0x64
 8009a7c:	fa2f f684 	sxtb16	r6, r4
 8009a80:	602e      	str	r6, [r5, #0]
 8009a82:	fa2f f494 	sxtb16	r4, r4, ror #8
 8009a86:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8009a88:	602c      	str	r4, [r5, #0]
 8009a8a:	3504      	adds	r5, #4
 8009a8c:	9519      	str	r5, [sp, #100]	; 0x64
 8009a8e:	9c19      	ldr	r4, [sp, #100]	; 0x64
 8009a90:	fa2f f582 	sxtb16	r5, r2
 8009a94:	3404      	adds	r4, #4
 8009a96:	f844 5c04 	str.w	r5, [r4, #-4]
 8009a9a:	9419      	str	r4, [sp, #100]	; 0x64
 8009a9c:	fa2f f292 	sxtb16	r2, r2, ror #8
 8009aa0:	9c19      	ldr	r4, [sp, #100]	; 0x64
 8009aa2:	6022      	str	r2, [r4, #0]
 8009aa4:	3404      	adds	r4, #4
 8009aa6:	9a02      	ldr	r2, [sp, #8]
 8009aa8:	9419      	str	r4, [sp, #100]	; 0x64
 8009aaa:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8009aac:	58d6      	ldr	r6, [r2, r3]
 8009aae:	f85b 2003 	ldr.w	r2, [fp, r3]
 8009ab2:	eac6 4402 	pkhbt	r4, r6, r2, lsl #16
 8009ab6:	eac2 4226 	pkhtb	r2, r2, r6, asr #16
 8009aba:	1d2e      	adds	r6, r5, #4
 8009abc:	9619      	str	r6, [sp, #100]	; 0x64
 8009abe:	fa2f f684 	sxtb16	r6, r4
 8009ac2:	602e      	str	r6, [r5, #0]
 8009ac4:	fa2f f494 	sxtb16	r4, r4, ror #8
 8009ac8:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8009aca:	602c      	str	r4, [r5, #0]
 8009acc:	3504      	adds	r5, #4
 8009ace:	9519      	str	r5, [sp, #100]	; 0x64
 8009ad0:	9c19      	ldr	r4, [sp, #100]	; 0x64
 8009ad2:	fa2f f582 	sxtb16	r5, r2
 8009ad6:	3404      	adds	r4, #4
 8009ad8:	f844 5c04 	str.w	r5, [r4, #-4]
 8009adc:	9419      	str	r4, [sp, #100]	; 0x64
 8009ade:	fa2f f292 	sxtb16	r2, r2, ror #8
 8009ae2:	9c19      	ldr	r4, [sp, #100]	; 0x64
 8009ae4:	6022      	str	r2, [r4, #0]
 8009ae6:	3404      	adds	r4, #4
 8009ae8:	9a01      	ldr	r2, [sp, #4]
 8009aea:	9419      	str	r4, [sp, #100]	; 0x64
 8009aec:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8009aee:	58d6      	ldr	r6, [r2, r3]
 8009af0:	f85a 2000 	ldr.w	r2, [sl, r0]
 8009af4:	eac6 4402 	pkhbt	r4, r6, r2, lsl #16
 8009af8:	eac2 4226 	pkhtb	r2, r2, r6, asr #16
 8009afc:	1d2e      	adds	r6, r5, #4
 8009afe:	9619      	str	r6, [sp, #100]	; 0x64
 8009b00:	fa2f f684 	sxtb16	r6, r4
 8009b04:	602e      	str	r6, [r5, #0]
 8009b06:	fa2f f494 	sxtb16	r4, r4, ror #8
 8009b0a:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8009b0c:	602c      	str	r4, [r5, #0]
 8009b0e:	3504      	adds	r5, #4
 8009b10:	9519      	str	r5, [sp, #100]	; 0x64
 8009b12:	9c19      	ldr	r4, [sp, #100]	; 0x64
 8009b14:	fa2f f582 	sxtb16	r5, r2
 8009b18:	3404      	adds	r4, #4
 8009b1a:	f844 5c04 	str.w	r5, [r4, #-4]
 8009b1e:	9419      	str	r4, [sp, #100]	; 0x64
 8009b20:	fa2f f292 	sxtb16	r2, r2, ror #8
 8009b24:	9c19      	ldr	r4, [sp, #100]	; 0x64
 8009b26:	6022      	str	r2, [r4, #0]
 8009b28:	3404      	adds	r4, #4
 8009b2a:	f85a 2003 	ldr.w	r2, [sl, r3]
 8009b2e:	9419      	str	r4, [sp, #100]	; 0x64
 8009b30:	9c19      	ldr	r4, [sp, #100]	; 0x64
 8009b32:	eac2 2502 	pkhbt	r5, r2, r2, lsl #8
 8009b36:	fa2f f585 	sxtb16	r5, r5
 8009b3a:	8025      	strh	r5, [r4, #0]
 8009b3c:	0c2d      	lsrs	r5, r5, #16
 8009b3e:	eac2 6222 	pkhtb	r2, r2, r2, asr #24
 8009b42:	8065      	strh	r5, [r4, #2]
 8009b44:	fa2f f2a2 	sxtb16	r2, r2, ror #16
 8009b48:	3004      	adds	r0, #4
 8009b4a:	80a2      	strh	r2, [r4, #4]
 8009b4c:	0c12      	lsrs	r2, r2, #16
 8009b4e:	3408      	adds	r4, #8
 8009b50:	4581      	cmp	r9, r0
 8009b52:	f103 0304 	add.w	r3, r3, #4
 8009b56:	f824 2c02 	strh.w	r2, [r4, #-2]
 8009b5a:	f47f af66 	bne.w	8009a2a <forward_lite_dw_3x3_sssa8_ch+0x5e6>
 8009b5e:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8009b62:	4622      	mov	r2, r4
 8009b64:	fa1f fc8c 	uxth.w	ip, ip
 8009b68:	f017 0603 	ands.w	r6, r7, #3
 8009b6c:	f43f ac8d 	beq.w	800948a <forward_lite_dw_3x3_sssa8_ch+0x46>
 8009b70:	f91e 300c 	ldrsb.w	r3, [lr, ip]
 8009b74:	3e01      	subs	r6, #1
 8009b76:	f10c 0501 	add.w	r5, ip, #1
 8009b7a:	8013      	strh	r3, [r2, #0]
 8009b7c:	eb0e 030c 	add.w	r3, lr, ip
 8009b80:	b2b6      	uxth	r6, r6
 8009b82:	57d8      	ldrsb	r0, [r3, r7]
 8009b84:	b2ad      	uxth	r5, r5
 8009b86:	8050      	strh	r0, [r2, #2]
 8009b88:	19d8      	adds	r0, r3, r7
 8009b8a:	f913 4017 	ldrsb.w	r4, [r3, r7, lsl #1]
 8009b8e:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8009b92:	8094      	strh	r4, [r2, #4]
 8009b94:	f910 0017 	ldrsb.w	r0, [r0, r7, lsl #1]
 8009b98:	80d0      	strh	r0, [r2, #6]
 8009b9a:	19d8      	adds	r0, r3, r7
 8009b9c:	f913 4017 	ldrsb.w	r4, [r3, r7, lsl #1]
 8009ba0:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8009ba4:	8114      	strh	r4, [r2, #8]
 8009ba6:	f910 0017 	ldrsb.w	r0, [r0, r7, lsl #1]
 8009baa:	8150      	strh	r0, [r2, #10]
 8009bac:	19d8      	adds	r0, r3, r7
 8009bae:	f913 4017 	ldrsb.w	r4, [r3, r7, lsl #1]
 8009bb2:	8194      	strh	r4, [r2, #12]
 8009bb4:	f910 0017 	ldrsb.w	r0, [r0, r7, lsl #1]
 8009bb8:	81d0      	strh	r0, [r2, #14]
 8009bba:	f913 3027 	ldrsb.w	r3, [r3, r7, lsl #2]
 8009bbe:	8213      	strh	r3, [r2, #16]
 8009bc0:	2e00      	cmp	r6, #0
 8009bc2:	f43f ac62 	beq.w	800948a <forward_lite_dw_3x3_sssa8_ch+0x46>
 8009bc6:	f10c 0302 	add.w	r3, ip, #2
 8009bca:	2e01      	cmp	r6, #1
 8009bcc:	fa1f fc83 	uxth.w	ip, r3
 8009bd0:	f91e 3005 	ldrsb.w	r3, [lr, r5]
 8009bd4:	4475      	add	r5, lr
 8009bd6:	8253      	strh	r3, [r2, #18]
 8009bd8:	57eb      	ldrsb	r3, [r5, r7]
 8009bda:	8293      	strh	r3, [r2, #20]
 8009bdc:	eb05 0307 	add.w	r3, r5, r7
 8009be0:	f915 0017 	ldrsb.w	r0, [r5, r7, lsl #1]
 8009be4:	eb05 0547 	add.w	r5, r5, r7, lsl #1
 8009be8:	82d0      	strh	r0, [r2, #22]
 8009bea:	eb05 0007 	add.w	r0, r5, r7
 8009bee:	f913 3017 	ldrsb.w	r3, [r3, r7, lsl #1]
 8009bf2:	8313      	strh	r3, [r2, #24]
 8009bf4:	f915 3017 	ldrsb.w	r3, [r5, r7, lsl #1]
 8009bf8:	8353      	strh	r3, [r2, #26]
 8009bfa:	eb05 0347 	add.w	r3, r5, r7, lsl #1
 8009bfe:	f910 0017 	ldrsb.w	r0, [r0, r7, lsl #1]
 8009c02:	8390      	strh	r0, [r2, #28]
 8009c04:	eb03 0007 	add.w	r0, r3, r7
 8009c08:	f913 4017 	ldrsb.w	r4, [r3, r7, lsl #1]
 8009c0c:	83d4      	strh	r4, [r2, #30]
 8009c0e:	f910 0017 	ldrsb.w	r0, [r0, r7, lsl #1]
 8009c12:	8410      	strh	r0, [r2, #32]
 8009c14:	f913 3027 	ldrsb.w	r3, [r3, r7, lsl #2]
 8009c18:	8453      	strh	r3, [r2, #34]	; 0x22
 8009c1a:	f43f ac36 	beq.w	800948a <forward_lite_dw_3x3_sssa8_ch+0x46>
 8009c1e:	f91e 300c 	ldrsb.w	r3, [lr, ip]
 8009c22:	eb0e 040c 	add.w	r4, lr, ip
 8009c26:	8493      	strh	r3, [r2, #36]	; 0x24
 8009c28:	57e3      	ldrsb	r3, [r4, r7]
 8009c2a:	84d3      	strh	r3, [r2, #38]	; 0x26
 8009c2c:	19e3      	adds	r3, r4, r7
 8009c2e:	f914 0017 	ldrsb.w	r0, [r4, r7, lsl #1]
 8009c32:	eb04 0447 	add.w	r4, r4, r7, lsl #1
 8009c36:	8510      	strh	r0, [r2, #40]	; 0x28
 8009c38:	19e0      	adds	r0, r4, r7
 8009c3a:	f913 3017 	ldrsb.w	r3, [r3, r7, lsl #1]
 8009c3e:	8553      	strh	r3, [r2, #42]	; 0x2a
 8009c40:	f914 3017 	ldrsb.w	r3, [r4, r7, lsl #1]
 8009c44:	8593      	strh	r3, [r2, #44]	; 0x2c
 8009c46:	eb04 0347 	add.w	r3, r4, r7, lsl #1
 8009c4a:	f910 0017 	ldrsb.w	r0, [r0, r7, lsl #1]
 8009c4e:	85d0      	strh	r0, [r2, #46]	; 0x2e
 8009c50:	19d8      	adds	r0, r3, r7
 8009c52:	f913 4017 	ldrsb.w	r4, [r3, r7, lsl #1]
 8009c56:	8614      	strh	r4, [r2, #48]	; 0x30
 8009c58:	f910 0017 	ldrsb.w	r0, [r0, r7, lsl #1]
 8009c5c:	8650      	strh	r0, [r2, #50]	; 0x32
 8009c5e:	f913 3027 	ldrsb.w	r3, [r3, r7, lsl #2]
 8009c62:	8693      	strh	r3, [r2, #52]	; 0x34
 8009c64:	e411      	b.n	800948a <forward_lite_dw_3x3_sssa8_ch+0x46>
 8009c66:	0079      	lsls	r1, r7, #1
 8009c68:	e77e      	b.n	8009b68 <forward_lite_dw_3x3_sssa8_ch+0x724>
 8009c6a:	bf00      	nop

08009c6c <forward_lite_pw_sssa8_ch>:
 8009c6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009c70:	b097      	sub	sp, #92	; 0x5c
 8009c72:	4604      	mov	r4, r0
 8009c74:	930d      	str	r3, [sp, #52]	; 0x34
 8009c76:	f99d 308c 	ldrsb.w	r3, [sp, #140]	; 0x8c
 8009c7a:	f8bd b084 	ldrh.w	fp, [sp, #132]	; 0x84
 8009c7e:	9313      	str	r3, [sp, #76]	; 0x4c
 8009c80:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8009c82:	ea4f 0a4b 	mov.w	sl, fp, lsl #1
 8009c86:	910c      	str	r1, [sp, #48]	; 0x30
 8009c88:	eba3 014b 	sub.w	r1, r3, fp, lsl #1
 8009c8c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8009c8e:	9215      	str	r2, [sp, #84]	; 0x54
 8009c90:	4419      	add	r1, r3
 8009c92:	f89d 3094 	ldrb.w	r3, [sp, #148]	; 0x94
 8009c96:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8009c98:	930f      	str	r3, [sp, #60]	; 0x3c
 8009c9a:	f8bd 30a0 	ldrh.w	r3, [sp, #160]	; 0xa0
 8009c9e:	eb02 02cb 	add.w	r2, r2, fp, lsl #3
 8009ca2:	f8dd 9080 	ldr.w	r9, [sp, #128]	; 0x80
 8009ca6:	9314      	str	r3, [sp, #80]	; 0x50
 8009ca8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8009caa:	f8dd 8088 	ldr.w	r8, [sp, #136]	; 0x88
 8009cae:	eb03 038b 	add.w	r3, r3, fp, lsl #2
 8009cb2:	f99d 7090 	ldrsb.w	r7, [sp, #144]	; 0x90
 8009cb6:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8009cb8:	9310      	str	r3, [sp, #64]	; 0x40
 8009cba:	9211      	str	r2, [sp, #68]	; 0x44
 8009cbc:	f1bb 0f00 	cmp.w	fp, #0
 8009cc0:	f000 8088 	beq.w	8009dd4 <forward_lite_pw_sssa8_ch+0x168>
 8009cc4:	1d18      	adds	r0, r3, #4
 8009cc6:	f04f 0e01 	mov.w	lr, #1
 8009cca:	eb01 0c0a 	add.w	ip, r1, sl
 8009cce:	f931 3b02 	ldrsh.w	r3, [r1], #2
 8009cd2:	1e5a      	subs	r2, r3, #1
 8009cd4:	fa0e f603 	lsl.w	r6, lr, r3
 8009cd8:	fa07 f303 	lsl.w	r3, r7, r3
 8009cdc:	b292      	uxth	r2, r2
 8009cde:	eb03 0356 	add.w	r3, r3, r6, lsr #1
 8009ce2:	2a14      	cmp	r2, #20
 8009ce4:	d857      	bhi.n	8009d96 <forward_lite_pw_sssa8_ch+0x12a>
 8009ce6:	458c      	cmp	ip, r1
 8009ce8:	f840 3c04 	str.w	r3, [r0, #-4]
 8009cec:	f100 0004 	add.w	r0, r0, #4
 8009cf0:	d1ed      	bne.n	8009cce <forward_lite_pw_sssa8_ch+0x62>
 8009cf2:	e9dd 2329 	ldrd	r2, r3, [sp, #164]	; 0xa4
 8009cf6:	1899      	adds	r1, r3, r2
 8009cf8:	eba1 030a 	sub.w	r3, r1, sl
 8009cfc:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8009cfe:	9312      	str	r3, [sp, #72]	; 0x48
 8009d00:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009d02:	fb02 f303 	mul.w	r3, r2, r3
 8009d06:	930e      	str	r3, [sp, #56]	; 0x38
 8009d08:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8009d0a:	2b01      	cmp	r3, #1
 8009d0c:	d04c      	beq.n	8009da8 <forward_lite_pw_sssa8_ch+0x13c>
 8009d0e:	2300      	movs	r3, #0
 8009d10:	9314      	str	r3, [sp, #80]	; 0x50
 8009d12:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8009d14:	07db      	lsls	r3, r3, #31
 8009d16:	d545      	bpl.n	8009da4 <forward_lite_pw_sssa8_ch+0x138>
 8009d18:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009d1a:	9f15      	ldr	r7, [sp, #84]	; 0x54
 8009d1c:	441f      	add	r7, r3
 8009d1e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8009d20:	3702      	adds	r7, #2
 8009d22:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8009d26:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8009d28:	2b00      	cmp	r3, #0
 8009d2a:	d031      	beq.n	8009d90 <forward_lite_pw_sssa8_ch+0x124>
 8009d2c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009d2e:	4649      	mov	r1, r9
 8009d30:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8009d32:	2600      	movs	r6, #0
 8009d34:	fb0b f003 	mul.w	r0, fp, r3
 8009d38:	f8dd 909c 	ldr.w	r9, [sp, #156]	; 0x9c
 8009d3c:	fb02 fa03 	mul.w	sl, r2, r3
 8009d40:	4642      	mov	r2, r8
 8009d42:	46d8      	mov	r8, fp
 8009d44:	46bb      	mov	fp, r7
 8009d46:	4607      	mov	r7, r0
 8009d48:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8009d4a:	3601      	adds	r6, #1
 8009d4c:	4620      	mov	r0, r4
 8009d4e:	f8cd b00c 	str.w	fp, [sp, #12]
 8009d52:	930b      	str	r3, [sp, #44]	; 0x2c
 8009d54:	4454      	add	r4, sl
 8009d56:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8009d58:	9222      	str	r2, [sp, #136]	; 0x88
 8009d5a:	930a      	str	r3, [sp, #40]	; 0x28
 8009d5c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8009d5e:	9120      	str	r1, [sp, #128]	; 0x80
 8009d60:	9309      	str	r3, [sp, #36]	; 0x24
 8009d62:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009d64:	9308      	str	r3, [sp, #32]
 8009d66:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8009d68:	9307      	str	r3, [sp, #28]
 8009d6a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8009d6c:	9306      	str	r3, [sp, #24]
 8009d6e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009d70:	e9cd 8304 	strd	r8, r3, [sp, #16]
 8009d74:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8009d76:	9302      	str	r3, [sp, #8]
 8009d78:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8009d7a:	9301      	str	r3, [sp, #4]
 8009d7c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8009d7e:	9300      	str	r3, [sp, #0]
 8009d80:	462b      	mov	r3, r5
 8009d82:	f003 fa2f 	bl	800d1e4 <st_sssa8_ch_nn_mat_mult_nt_t>
 8009d86:	45b1      	cmp	r9, r6
 8009d88:	443d      	add	r5, r7
 8009d8a:	9920      	ldr	r1, [sp, #128]	; 0x80
 8009d8c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8009d8e:	d1db      	bne.n	8009d48 <forward_lite_pw_sssa8_ch+0xdc>
 8009d90:	b017      	add	sp, #92	; 0x5c
 8009d92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009d96:	458c      	cmp	ip, r1
 8009d98:	f840 7c04 	str.w	r7, [r0, #-4]
 8009d9c:	f100 0004 	add.w	r0, r0, #4
 8009da0:	d195      	bne.n	8009cce <forward_lite_pw_sssa8_ch+0x62>
 8009da2:	e7a6      	b.n	8009cf2 <forward_lite_pw_sssa8_ch+0x86>
 8009da4:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8009da6:	e7be      	b.n	8009d26 <forward_lite_pw_sssa8_ch+0xba>
 8009da8:	f06f 0309 	mvn.w	r3, #9
 8009dac:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8009dae:	fb03 220b 	mla	r2, r3, fp, r2
 8009db2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009db4:	fb0b f303 	mul.w	r3, fp, r3
 8009db8:	ebb2 0f43 	cmp.w	r2, r3, lsl #1
 8009dbc:	dba7      	blt.n	8009d0e <forward_lite_pw_sssa8_ch+0xa2>
 8009dbe:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8009dc0:	4659      	mov	r1, fp
 8009dc2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009dc4:	4648      	mov	r0, r9
 8009dc6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8009dc8:	9601      	str	r6, [sp, #4]
 8009dca:	9300      	str	r3, [sp, #0]
 8009dcc:	f003 f9ca 	bl	800d164 <st_sssa8_ch_fullW_prefetch>
 8009dd0:	9614      	str	r6, [sp, #80]	; 0x50
 8009dd2:	e79e      	b.n	8009d12 <forward_lite_pw_sssa8_ch+0xa6>
 8009dd4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8009dd6:	9310      	str	r3, [sp, #64]	; 0x40
 8009dd8:	e78e      	b.n	8009cf8 <forward_lite_pw_sssa8_ch+0x8c>
 8009dda:	bf00      	nop

08009ddc <forward_lite_nl_softmax_is8os8>:
 8009ddc:	188a      	adds	r2, r1, r2
 8009dde:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009de2:	4291      	cmp	r1, r2
 8009de4:	b09b      	sub	sp, #108	; 0x6c
 8009de6:	9015      	str	r0, [sp, #84]	; 0x54
 8009de8:	9303      	str	r3, [sp, #12]
 8009dea:	9218      	str	r2, [sp, #96]	; 0x60
 8009dec:	f080 82f4 	bcs.w	800a3d8 <forward_lite_nl_softmax_is8os8+0x5fc>
 8009df0:	461a      	mov	r2, r3
 8009df2:	3b01      	subs	r3, #1
 8009df4:	9102      	str	r1, [sp, #8]
 8009df6:	18cb      	adds	r3, r1, r3
 8009df8:	9316      	str	r3, [sp, #88]	; 0x58
 8009dfa:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8009dfc:	3b04      	subs	r3, #4
 8009dfe:	9317      	str	r3, [sp, #92]	; 0x5c
 8009e00:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8009e04:	9319      	str	r3, [sp, #100]	; 0x64
 8009e06:	9a03      	ldr	r2, [sp, #12]
 8009e08:	9b02      	ldr	r3, [sp, #8]
 8009e0a:	2a01      	cmp	r2, #1
 8009e0c:	f993 b000 	ldrsb.w	fp, [r3]
 8009e10:	f240 82f8 	bls.w	800a404 <forward_lite_nl_softmax_is8os8+0x628>
 8009e14:	9916      	ldr	r1, [sp, #88]	; 0x58
 8009e16:	f913 2f01 	ldrsb.w	r2, [r3, #1]!
 8009e1a:	4593      	cmp	fp, r2
 8009e1c:	bfb8      	it	lt
 8009e1e:	4693      	movlt	fp, r2
 8009e20:	428b      	cmp	r3, r1
 8009e22:	d1f8      	bne.n	8009e16 <forward_lite_nl_softmax_is8os8+0x3a>
 8009e24:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8009e26:	445b      	add	r3, fp
 8009e28:	9305      	str	r3, [sp, #20]
 8009e2a:	9b02      	ldr	r3, [sp, #8]
 8009e2c:	1e5f      	subs	r7, r3, #1
 8009e2e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8009e30:	9300      	str	r3, [sp, #0]
 8009e32:	2300      	movs	r3, #0
 8009e34:	9304      	str	r3, [sp, #16]
 8009e36:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8009e38:	0fdb      	lsrs	r3, r3, #31
 8009e3a:	e9cd 3b13 	strd	r3, fp, [sp, #76]	; 0x4c
 8009e3e:	e106      	b.n	800a04e <forward_lite_nl_softmax_is8os8+0x272>
 8009e40:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8009e42:	1a9b      	subs	r3, r3, r2
 8009e44:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8009e46:	fa03 f202 	lsl.w	r2, r3, r2
 8009e4a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8009e4c:	ebb3 7fd2 	cmp.w	r3, r2, lsr #31
 8009e50:	4bc8      	ldr	r3, [pc, #800]	; (800a174 <forward_lite_nl_softmax_is8os8+0x398>)
 8009e52:	bf06      	itte	eq
 8009e54:	2100      	moveq	r1, #0
 8009e56:	f04f 4380 	moveq.w	r3, #1073741824	; 0x40000000
 8009e5a:	f04f 31ff 	movne.w	r1, #4294967295
 8009e5e:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8009e62:	f040 80fd 	bne.w	800a060 <forward_lite_nl_softmax_is8os8+0x284>
 8009e66:	9826      	ldr	r0, [sp, #152]	; 0x98
 8009e68:	4290      	cmp	r0, r2
 8009e6a:	f040 80f9 	bne.w	800a060 <forward_lite_nl_softmax_is8os8+0x284>
 8009e6e:	4bc2      	ldr	r3, [pc, #776]	; (800a178 <forward_lite_nl_softmax_is8os8+0x39c>)
 8009e70:	2100      	movs	r1, #0
 8009e72:	f04f 3eff 	mov.w	lr, #4294967295
 8009e76:	48c1      	ldr	r0, [pc, #772]	; (800a17c <forward_lite_nl_softmax_is8os8+0x3a0>)
 8009e78:	9310      	str	r3, [sp, #64]	; 0x40
 8009e7a:	f44f 3c00 	mov.w	ip, #131072	; 0x20000
 8009e7e:	4bc0      	ldr	r3, [pc, #768]	; (800a180 <forward_lite_nl_softmax_is8os8+0x3a4>)
 8009e80:	460d      	mov	r5, r1
 8009e82:	4ac0      	ldr	r2, [pc, #768]	; (800a184 <forward_lite_nl_softmax_is8os8+0x3a8>)
 8009e84:	468b      	mov	fp, r1
 8009e86:	9312      	str	r3, [sp, #72]	; 0x48
 8009e88:	460c      	mov	r4, r1
 8009e8a:	4673      	mov	r3, lr
 8009e8c:	4689      	mov	r9, r1
 8009e8e:	468a      	mov	sl, r1
 8009e90:	f04f 0801 	mov.w	r8, #1
 8009e94:	910f      	str	r1, [sp, #60]	; 0x3c
 8009e96:	f8cd e030 	str.w	lr, [sp, #48]	; 0x30
 8009e9a:	9109      	str	r1, [sp, #36]	; 0x24
 8009e9c:	9106      	str	r1, [sp, #24]
 8009e9e:	9111      	str	r1, [sp, #68]	; 0x44
 8009ea0:	e9cd e10d 	strd	lr, r1, [sp, #52]	; 0x34
 8009ea4:	e9cd ee0a 	strd	lr, lr, [sp, #40]	; 0x28
 8009ea8:	e9cd ee07 	strd	lr, lr, [sp, #28]
 8009eac:	4541      	cmp	r1, r8
 8009eae:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8009eb0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8009eb2:	bfc8      	it	gt
 8009eb4:	f10c 0c01 	addgt.w	ip, ip, #1
 8009eb8:	428d      	cmp	r5, r1
 8009eba:	49ae      	ldr	r1, [pc, #696]	; (800a174 <forward_lite_nl_softmax_is8os8+0x398>)
 8009ebc:	bf06      	itte	eq
 8009ebe:	f04f 4180 	moveq.w	r1, #1073741824	; 0x40000000
 8009ec2:	2500      	moveq	r5, #0
 8009ec4:	f04f 35ff 	movne.w	r5, #4294967295
 8009ec8:	1871      	adds	r1, r6, r1
 8009eca:	eb42 0205 	adc.w	r2, r2, r5
 8009ece:	2a00      	cmp	r2, #0
 8009ed0:	da04      	bge.n	8009edc <forward_lite_nl_softmax_is8os8+0x100>
 8009ed2:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
 8009ed6:	1949      	adds	r1, r1, r5
 8009ed8:	f142 0200 	adc.w	r2, r2, #0
 8009edc:	0fc9      	lsrs	r1, r1, #31
 8009ede:	4daa      	ldr	r5, [pc, #680]	; (800a188 <forward_lite_nl_softmax_is8os8+0x3ac>)
 8009ee0:	ea41 0142 	orr.w	r1, r1, r2, lsl #1
 8009ee4:	4aa3      	ldr	r2, [pc, #652]	; (800a174 <forward_lite_nl_softmax_is8os8+0x398>)
 8009ee6:	448c      	add	ip, r1
 8009ee8:	f1bc 0f00 	cmp.w	ip, #0
 8009eec:	bfa6      	itte	ge
 8009eee:	f04f 4280 	movge.w	r2, #1073741824	; 0x40000000
 8009ef2:	2100      	movge	r1, #0
 8009ef4:	f04f 31ff 	movlt.w	r1, #4294967295
 8009ef8:	fbcc 2105 	smlal	r2, r1, ip, r5
 8009efc:	2900      	cmp	r1, #0
 8009efe:	da04      	bge.n	8009f0a <forward_lite_nl_softmax_is8os8+0x12e>
 8009f00:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
 8009f04:	1952      	adds	r2, r2, r5
 8009f06:	f141 0100 	adc.w	r1, r1, #0
 8009f0a:	0fd2      	lsrs	r2, r2, #31
 8009f0c:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 8009f10:	9910      	ldr	r1, [sp, #64]	; 0x40
 8009f12:	4411      	add	r1, r2
 8009f14:	460a      	mov	r2, r1
 8009f16:	1049      	asrs	r1, r1, #1
 8009f18:	07d5      	lsls	r5, r2, #31
 8009f1a:	d502      	bpl.n	8009f22 <forward_lite_nl_softmax_is8os8+0x146>
 8009f1c:	2900      	cmp	r1, #0
 8009f1e:	bfa8      	it	ge
 8009f20:	3101      	addge	r1, #1
 8009f22:	4408      	add	r0, r1
 8009f24:	4a93      	ldr	r2, [pc, #588]	; (800a174 <forward_lite_nl_softmax_is8os8+0x398>)
 8009f26:	4d99      	ldr	r5, [pc, #612]	; (800a18c <forward_lite_nl_softmax_is8os8+0x3b0>)
 8009f28:	2800      	cmp	r0, #0
 8009f2a:	bfa6      	itte	ge
 8009f2c:	f04f 4280 	movge.w	r2, #1073741824	; 0x40000000
 8009f30:	2100      	movge	r1, #0
 8009f32:	f04f 31ff 	movlt.w	r1, #4294967295
 8009f36:	fbc0 2105 	smlal	r2, r1, r0, r5
 8009f3a:	2900      	cmp	r1, #0
 8009f3c:	da04      	bge.n	8009f48 <forward_lite_nl_softmax_is8os8+0x16c>
 8009f3e:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8009f42:	1812      	adds	r2, r2, r0
 8009f44:	f141 0100 	adc.w	r1, r1, #0
 8009f48:	0fd2      	lsrs	r2, r2, #31
 8009f4a:	f04f 4880 	mov.w	r8, #1073741824	; 0x40000000
 8009f4e:	4890      	ldr	r0, [pc, #576]	; (800a190 <forward_lite_nl_softmax_is8os8+0x3b4>)
 8009f50:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 8009f54:	2100      	movs	r1, #0
 8009f56:	4646      	mov	r6, r8
 8009f58:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8009f5a:	f102 42e2 	add.w	r2, r2, #1895825408	; 0x71000000
 8009f5e:	468c      	mov	ip, r1
 8009f60:	f5a2 2225 	sub.w	r2, r2, #675840	; 0xa5000
 8009f64:	f2a2 726c 	subw	r2, r2, #1900	; 0x76c
 8009f68:	fbc2 6c00 	smlal	r6, ip, r2, r0
 8009f6c:	0ff0      	lsrs	r0, r6, #31
 8009f6e:	4015      	ands	r5, r2
 8009f70:	4646      	mov	r6, r8
 8009f72:	ea40 004c 	orr.w	r0, r0, ip, lsl #1
 8009f76:	4a87      	ldr	r2, [pc, #540]	; (800a194 <forward_lite_nl_softmax_is8os8+0x3b8>)
 8009f78:	ea0b 0000 	and.w	r0, fp, r0
 8009f7c:	46c3      	mov	fp, r8
 8009f7e:	4045      	eors	r5, r0
 8009f80:	4608      	mov	r0, r1
 8009f82:	fbc5 6002 	smlal	r6, r0, r5, r2
 8009f86:	0ff2      	lsrs	r2, r6, #31
 8009f88:	402b      	ands	r3, r5
 8009f8a:	4d83      	ldr	r5, [pc, #524]	; (800a198 <forward_lite_nl_softmax_is8os8+0x3bc>)
 8009f8c:	ea42 0240 	orr.w	r2, r2, r0, lsl #1
 8009f90:	9807      	ldr	r0, [sp, #28]
 8009f92:	4014      	ands	r4, r2
 8009f94:	4642      	mov	r2, r8
 8009f96:	4063      	eors	r3, r4
 8009f98:	460c      	mov	r4, r1
 8009f9a:	fbc3 2405 	smlal	r2, r4, r3, r5
 8009f9e:	0fd2      	lsrs	r2, r2, #31
 8009fa0:	4018      	ands	r0, r3
 8009fa2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009fa4:	ea42 0244 	orr.w	r2, r2, r4, lsl #1
 8009fa8:	4c7c      	ldr	r4, [pc, #496]	; (800a19c <forward_lite_nl_softmax_is8os8+0x3c0>)
 8009faa:	4d7d      	ldr	r5, [pc, #500]	; (800a1a0 <forward_lite_nl_softmax_is8os8+0x3c4>)
 8009fac:	4013      	ands	r3, r2
 8009fae:	460a      	mov	r2, r1
 8009fb0:	4058      	eors	r0, r3
 8009fb2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009fb4:	fbc0 b204 	smlal	fp, r2, r0, r4
 8009fb8:	ea4f 7bdb 	mov.w	fp, fp, lsr #31
 8009fbc:	4003      	ands	r3, r0
 8009fbe:	460c      	mov	r4, r1
 8009fc0:	ea4b 0b42 	orr.w	fp, fp, r2, lsl #1
 8009fc4:	9a06      	ldr	r2, [sp, #24]
 8009fc6:	980c      	ldr	r0, [sp, #48]	; 0x30
 8009fc8:	ea02 0b0b 	and.w	fp, r2, fp
 8009fcc:	4642      	mov	r2, r8
 8009fce:	ea83 030b 	eor.w	r3, r3, fp
 8009fd2:	fbc3 2405 	smlal	r2, r4, r3, r5
 8009fd6:	0fd2      	lsrs	r2, r2, #31
 8009fd8:	4018      	ands	r0, r3
 8009fda:	4d72      	ldr	r5, [pc, #456]	; (800a1a4 <forward_lite_nl_softmax_is8os8+0x3c8>)
 8009fdc:	ea42 0244 	orr.w	r2, r2, r4, lsl #1
 8009fe0:	4643      	mov	r3, r8
 8009fe2:	460c      	mov	r4, r1
 8009fe4:	ea0a 0a02 	and.w	sl, sl, r2
 8009fe8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8009fea:	ea80 000a 	eor.w	r0, r0, sl
 8009fee:	fbc0 3405 	smlal	r3, r4, r0, r5
 8009ff2:	0fdb      	lsrs	r3, r3, #31
 8009ff4:	4002      	ands	r2, r0
 8009ff6:	ea43 0344 	orr.w	r3, r3, r4, lsl #1
 8009ffa:	ea09 0903 	and.w	r9, r9, r3
 8009ffe:	23f2      	movs	r3, #242	; 0xf2
 800a000:	ea82 0909 	eor.w	r9, r2, r9
 800a004:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800a006:	fbc9 8103 	smlal	r8, r1, r9, r3
 800a00a:	9b08      	ldr	r3, [sp, #32]
 800a00c:	ea4f 78d8 	mov.w	r8, r8, lsr #31
 800a010:	ea03 0909 	and.w	r9, r3, r9
 800a014:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800a016:	ea48 0841 	orr.w	r8, r8, r1, lsl #1
 800a01a:	ea03 0808 	and.w	r8, r3, r8
 800a01e:	ea89 0808 	eor.w	r8, r9, r8
 800a022:	ea08 030e 	and.w	r3, r8, lr
 800a026:	4053      	eors	r3, r2
 800a028:	131a      	asrs	r2, r3, #12
 800a02a:	0519      	lsls	r1, r3, #20
 800a02c:	9904      	ldr	r1, [sp, #16]
 800a02e:	bf48      	it	mi
 800a030:	3201      	addmi	r2, #1
 800a032:	4411      	add	r1, r2
 800a034:	9104      	str	r1, [sp, #16]
 800a036:	9a00      	ldr	r2, [sp, #0]
 800a038:	f842 3f04 	str.w	r3, [r2, #4]!
 800a03c:	9b01      	ldr	r3, [sp, #4]
 800a03e:	9200      	str	r2, [sp, #0]
 800a040:	3302      	adds	r3, #2
 800a042:	9a02      	ldr	r2, [sp, #8]
 800a044:	1a9b      	subs	r3, r3, r2
 800a046:	9a03      	ldr	r2, [sp, #12]
 800a048:	429a      	cmp	r2, r3
 800a04a:	f240 80ad 	bls.w	800a1a8 <forward_lite_nl_softmax_is8os8+0x3cc>
 800a04e:	9a05      	ldr	r2, [sp, #20]
 800a050:	9701      	str	r7, [sp, #4]
 800a052:	f917 3f01 	ldrsb.w	r3, [r7, #1]!
 800a056:	429a      	cmp	r2, r3
 800a058:	f77f aef2 	ble.w	8009e40 <forward_lite_nl_softmax_is8os8+0x64>
 800a05c:	2300      	movs	r3, #0
 800a05e:	e7ea      	b.n	800a036 <forward_lite_nl_softmax_is8os8+0x25a>
 800a060:	9826      	ldr	r0, [sp, #152]	; 0x98
 800a062:	fbc2 3100 	smlal	r3, r1, r2, r0
 800a066:	2900      	cmp	r1, #0
 800a068:	da04      	bge.n	800a074 <forward_lite_nl_softmax_is8os8+0x298>
 800a06a:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 800a06e:	189b      	adds	r3, r3, r2
 800a070:	f141 0100 	adc.w	r1, r1, #0
 800a074:	0fdb      	lsrs	r3, r3, #31
 800a076:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800a07a:	2500      	movs	r5, #0
 800a07c:	ea53 0341 	orrs.w	r3, r3, r1, lsl #1
 800a080:	f043 407f 	orr.w	r0, r3, #4278190080	; 0xff000000
 800a084:	bf0c      	ite	eq
 800a086:	f04f 0c01 	moveq.w	ip, #1
 800a08a:	f04f 0c00 	movne.w	ip, #0
 800a08e:	1ac3      	subs	r3, r0, r3
 800a090:	0140      	lsls	r0, r0, #5
 800a092:	f10c 3eff 	add.w	lr, ip, #4294967295
 800a096:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 800a09a:	fbc0 2500 	smlal	r2, r5, r0, r0
 800a09e:	2d00      	cmp	r5, #0
 800a0a0:	da04      	bge.n	800a0ac <forward_lite_nl_softmax_is8os8+0x2d0>
 800a0a2:	f06f 4600 	mvn.w	r6, #2147483648	; 0x80000000
 800a0a6:	1992      	adds	r2, r2, r6
 800a0a8:	f145 0500 	adc.w	r5, r5, #0
 800a0ac:	0fd2      	lsrs	r2, r2, #31
 800a0ae:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 800a0b2:	17ed      	asrs	r5, r5, #31
 800a0b4:	fba2 1402 	umull	r1, r4, r2, r2
 800a0b8:	fb02 f605 	mul.w	r6, r2, r5
 800a0bc:	f111 4180 	adds.w	r1, r1, #1073741824	; 0x40000000
 800a0c0:	9210      	str	r2, [sp, #64]	; 0x40
 800a0c2:	eb44 0446 	adc.w	r4, r4, r6, lsl #1
 800a0c6:	2c00      	cmp	r4, #0
 800a0c8:	da04      	bge.n	800a0d4 <forward_lite_nl_softmax_is8os8+0x2f8>
 800a0ca:	f06f 4600 	mvn.w	r6, #2147483648	; 0x80000000
 800a0ce:	1989      	adds	r1, r1, r6
 800a0d0:	f144 0400 	adc.w	r4, r4, #0
 800a0d4:	f3c3 6680 	ubfx	r6, r3, #26, #1
 800a0d8:	f1cc 0c00 	rsb	ip, ip, #0
 800a0dc:	0fc9      	lsrs	r1, r1, #31
 800a0de:	fb00 f505 	mul.w	r5, r0, r5
 800a0e2:	3e01      	subs	r6, #1
 800a0e4:	f3c3 6bc0 	ubfx	fp, r3, #27, #1
 800a0e8:	ea41 0144 	orr.w	r1, r1, r4, lsl #1
 800a0ec:	f02c 4400 	bic.w	r4, ip, #2147483648	; 0x80000000
 800a0f0:	9607      	str	r6, [sp, #28]
 800a0f2:	f3c3 6600 	ubfx	r6, r3, #24, #1
 800a0f6:	940e      	str	r4, [sp, #56]	; 0x38
 800a0f8:	17c4      	asrs	r4, r0, #31
 800a0fa:	3e01      	subs	r6, #1
 800a0fc:	f3c3 7940 	ubfx	r9, r3, #29, #1
 800a100:	fb02 5504 	mla	r5, r2, r4, r5
 800a104:	f3c3 7880 	ubfx	r8, r3, #30, #1
 800a108:	960b      	str	r6, [sp, #44]	; 0x2c
 800a10a:	0fd6      	lsrs	r6, r2, #31
 800a10c:	f3c3 7a00 	ubfx	sl, r3, #28, #1
 800a110:	f3c3 6440 	ubfx	r4, r3, #25, #1
 800a114:	960f      	str	r6, [sp, #60]	; 0x3c
 800a116:	ea5f 0ca1 	movs.w	ip, r1, asr #2
 800a11a:	fba0 6202 	umull	r6, r2, r0, r2
 800a11e:	f001 0103 	and.w	r1, r1, #3
 800a122:	9612      	str	r6, [sp, #72]	; 0x48
 800a124:	f10b 36ff 	add.w	r6, fp, #4294967295
 800a128:	442a      	add	r2, r5
 800a12a:	ea4f 75d0 	mov.w	r5, r0, lsr #31
 800a12e:	960d      	str	r6, [sp, #52]	; 0x34
 800a130:	f1cb 0600 	rsb	r6, fp, #0
 800a134:	f343 6b00 	sbfx	fp, r3, #24, #1
 800a138:	f343 6380 	sbfx	r3, r3, #26, #1
 800a13c:	9606      	str	r6, [sp, #24]
 800a13e:	f109 36ff 	add.w	r6, r9, #4294967295
 800a142:	9309      	str	r3, [sp, #36]	; 0x24
 800a144:	f10a 33ff 	add.w	r3, sl, #4294967295
 800a148:	960a      	str	r6, [sp, #40]	; 0x28
 800a14a:	f108 36ff 	add.w	r6, r8, #4294967295
 800a14e:	930c      	str	r3, [sp, #48]	; 0x30
 800a150:	f1ca 0a00 	rsb	sl, sl, #0
 800a154:	9608      	str	r6, [sp, #32]
 800a156:	f1c8 0600 	rsb	r6, r8, #0
 800a15a:	f104 33ff 	add.w	r3, r4, #4294967295
 800a15e:	f1c9 0900 	rsb	r9, r9, #0
 800a162:	f1c4 0400 	rsb	r4, r4, #0
 800a166:	bf54      	ite	pl
 800a168:	f04f 0801 	movpl.w	r8, #1
 800a16c:	f04f 0802 	movmi.w	r8, #2
 800a170:	9611      	str	r6, [sp, #68]	; 0x44
 800a172:	e69b      	b.n	8009eac <forward_lite_nl_softmax_is8os8+0xd0>
 800a174:	c0000001 	.word	0xc0000001
 800a178:	01fffff8 	.word	0x01fffff8
 800a17c:	0fffffe0 	.word	0x0fffffe0
 800a180:	40000100 	.word	0x40000100
 800a184:	001fffff 	.word	0x001fffff
 800a188:	2aaaaaab 	.word	0x2aaaaaab
 800a18c:	70f5a894 	.word	0x70f5a894
 800a190:	63afbe7b 	.word	0x63afbe7b
 800a194:	4da2cbf2 	.word	0x4da2cbf2
 800a198:	2f16ac6c 	.word	0x2f16ac6c
 800a19c:	1152aaa4 	.word	0x1152aaa4
 800a1a0:	02582ab7 	.word	0x02582ab7
 800a1a4:	000afe11 	.word	0x000afe11
 800a1a8:	9b04      	ldr	r3, [sp, #16]
 800a1aa:	2b00      	cmp	r3, #0
 800a1ac:	f000 812d 	beq.w	800a40a <forward_lite_nl_softmax_is8os8+0x62e>
 800a1b0:	fab3 f483 	clz	r4, r3
 800a1b4:	fa03 f104 	lsl.w	r1, r3, r4
 800a1b8:	f1c4 0423 	rsb	r4, r4, #35	; 0x23
 800a1bc:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800a1c0:	17da      	asrs	r2, r3, #31
 800a1c2:	f1b2 3fff 	cmp.w	r2, #4294967295
 800a1c6:	bf08      	it	eq
 800a1c8:	2900      	cmpeq	r1, #0
 800a1ca:	f000 811f 	beq.w	800a40c <forward_lite_nl_softmax_is8os8+0x630>
 800a1ce:	f113 4300 	adds.w	r3, r3, #2147483648	; 0x80000000
 800a1d2:	49d0      	ldr	r1, [pc, #832]	; (800a514 <forward_lite_nl_softmax_is8os8+0x738>)
 800a1d4:	4ed0      	ldr	r6, [pc, #832]	; (800a518 <forward_lite_nl_softmax_is8os8+0x73c>)
 800a1d6:	f142 0200 	adc.w	r2, r2, #0
 800a1da:	085b      	lsrs	r3, r3, #1
 800a1dc:	ea43 73c2 	orr.w	r3, r3, r2, lsl #31
 800a1e0:	1052      	asrs	r2, r2, #1
 800a1e2:	4258      	negs	r0, r3
 800a1e4:	fb01 0002 	mla	r0, r1, r2, r0
 800a1e8:	fba3 1501 	umull	r1, r5, r3, r1
 800a1ec:	1989      	adds	r1, r1, r6
 800a1ee:	4428      	add	r0, r5
 800a1f0:	f160 0000 	sbc.w	r0, r0, #0
 800a1f4:	2800      	cmp	r0, #0
 800a1f6:	da04      	bge.n	800a202 <forward_lite_nl_softmax_is8os8+0x426>
 800a1f8:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
 800a1fc:	1949      	adds	r1, r1, r5
 800a1fe:	f140 0000 	adc.w	r0, r0, #0
 800a202:	0fc9      	lsrs	r1, r1, #31
 800a204:	ea41 0740 	orr.w	r7, r1, r0, lsl #1
 800a208:	f107 305a 	add.w	r0, r7, #1515870810	; 0x5a5a5a5a
 800a20c:	17c5      	asrs	r5, r0, #31
 800a20e:	fb00 f102 	mul.w	r1, r0, r2
 800a212:	fba0 e803 	umull	lr, r8, r0, r3
 800a216:	fb03 1105 	mla	r1, r3, r5, r1
 800a21a:	f11e 4680 	adds.w	r6, lr, #1073741824	; 0x40000000
 800a21e:	4488      	add	r8, r1
 800a220:	ea4f 76d6 	mov.w	r6, r6, lsr #31
 800a224:	f148 0100 	adc.w	r1, r8, #0
 800a228:	ea46 0641 	orr.w	r6, r6, r1, lsl #1
 800a22c:	f1d6 5600 	rsbs	r6, r6, #536870912	; 0x20000000
 800a230:	f140 81cd 	bpl.w	800a5ce <forward_lite_nl_softmax_is8os8+0x7f2>
 800a234:	49b8      	ldr	r1, [pc, #736]	; (800a518 <forward_lite_nl_softmax_is8os8+0x73c>)
 800a236:	f04f 3cff 	mov.w	ip, #4294967295
 800a23a:	fbc0 1c06 	smlal	r1, ip, r0, r6
 800a23e:	f1bc 0f00 	cmp.w	ip, #0
 800a242:	da04      	bge.n	800a24e <forward_lite_nl_softmax_is8os8+0x472>
 800a244:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
 800a248:	1949      	adds	r1, r1, r5
 800a24a:	f14c 0c00 	adc.w	ip, ip, #0
 800a24e:	0fc9      	lsrs	r1, r1, #31
 800a250:	ea41 014c 	orr.w	r1, r1, ip, lsl #1
 800a254:	f1b1 4f60 	cmp.w	r1, #3758096384	; 0xe0000000
 800a258:	f300 819a 	bgt.w	800a590 <forward_lite_nl_softmax_is8os8+0x7b4>
 800a25c:	07d1      	lsls	r1, r2, #31
 800a25e:	4dae      	ldr	r5, [pc, #696]	; (800a518 <forward_lite_nl_softmax_is8os8+0x73c>)
 800a260:	07d8      	lsls	r0, r3, #31
 800a262:	ea41 0153 	orr.w	r1, r1, r3, lsr #1
 800a266:	ebbe 0000 	subs.w	r0, lr, r0
 800a26a:	eb68 0101 	sbc.w	r1, r8, r1
 800a26e:	eb10 0e05 	adds.w	lr, r0, r5
 800a272:	4daa      	ldr	r5, [pc, #680]	; (800a51c <forward_lite_nl_softmax_is8os8+0x740>)
 800a274:	f161 0100 	sbc.w	r1, r1, #0
 800a278:	443d      	add	r5, r7
 800a27a:	2900      	cmp	r1, #0
 800a27c:	da05      	bge.n	800a28a <forward_lite_nl_softmax_is8os8+0x4ae>
 800a27e:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800a282:	eb1e 0e00 	adds.w	lr, lr, r0
 800a286:	f141 0100 	adc.w	r1, r1, #0
 800a28a:	ea4f 7ede 	mov.w	lr, lr, lsr #31
 800a28e:	48a2      	ldr	r0, [pc, #648]	; (800a518 <forward_lite_nl_softmax_is8os8+0x73c>)
 800a290:	ea4e 0e41 	orr.w	lr, lr, r1, lsl #1
 800a294:	f04f 31ff 	mov.w	r1, #4294967295
 800a298:	f1ce 5e00 	rsb	lr, lr, #536870912	; 0x20000000
 800a29c:	fbc5 010e 	smlal	r0, r1, r5, lr
 800a2a0:	2900      	cmp	r1, #0
 800a2a2:	460e      	mov	r6, r1
 800a2a4:	da04      	bge.n	800a2b0 <forward_lite_nl_softmax_is8os8+0x4d4>
 800a2a6:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800a2aa:	1840      	adds	r0, r0, r1
 800a2ac:	f146 0600 	adc.w	r6, r6, #0
 800a2b0:	0fc1      	lsrs	r1, r0, #31
 800a2b2:	ea41 0146 	orr.w	r1, r1, r6, lsl #1
 800a2b6:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
 800a2ba:	f2c0 8150 	blt.w	800a55e <forward_lite_nl_softmax_is8os8+0x782>
 800a2be:	4d98      	ldr	r5, [pc, #608]	; (800a520 <forward_lite_nl_softmax_is8os8+0x744>)
 800a2c0:	2600      	movs	r6, #0
 800a2c2:	443d      	add	r5, r7
 800a2c4:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a2c8:	2700      	movs	r7, #0
 800a2ca:	fb05 f202 	mul.w	r2, r5, r2
 800a2ce:	17e9      	asrs	r1, r5, #31
 800a2d0:	fb03 2201 	mla	r2, r3, r1, r2
 800a2d4:	fba5 3c03 	umull	r3, ip, r5, r3
 800a2d8:	181b      	adds	r3, r3, r0
 800a2da:	4462      	add	r2, ip
 800a2dc:	eb42 0707 	adc.w	r7, r2, r7
 800a2e0:	2f00      	cmp	r7, #0
 800a2e2:	da04      	bge.n	800a2ee <forward_lite_nl_softmax_is8os8+0x512>
 800a2e4:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 800a2e8:	189b      	adds	r3, r3, r2
 800a2ea:	f147 0700 	adc.w	r7, r7, #0
 800a2ee:	0fdb      	lsrs	r3, r3, #31
 800a2f0:	4a89      	ldr	r2, [pc, #548]	; (800a518 <forward_lite_nl_softmax_is8os8+0x73c>)
 800a2f2:	ea43 0347 	orr.w	r3, r3, r7, lsl #1
 800a2f6:	f1c3 5300 	rsb	r3, r3, #536870912	; 0x20000000
 800a2fa:	0fd8      	lsrs	r0, r3, #31
 800a2fc:	42b0      	cmp	r0, r6
 800a2fe:	bf06      	itte	eq
 800a300:	f04f 4280 	moveq.w	r2, #1073741824	; 0x40000000
 800a304:	2000      	moveq	r0, #0
 800a306:	f04f 30ff 	movne.w	r0, #4294967295
 800a30a:	42ab      	cmp	r3, r5
 800a30c:	f040 80e2 	bne.w	800a4d4 <forward_lite_nl_softmax_is8os8+0x6f8>
 800a310:	f1b5 4f00 	cmp.w	r5, #2147483648	; 0x80000000
 800a314:	f040 80de 	bne.w	800a4d4 <forward_lite_nl_softmax_is8os8+0x6f8>
 800a318:	f04f 35ff 	mov.w	r5, #4294967295
 800a31c:	0068      	lsls	r0, r5, #1
 800a31e:	9b03      	ldr	r3, [sp, #12]
 800a320:	2b00      	cmp	r3, #0
 800a322:	d049      	beq.n	800a3b8 <forward_lite_nl_softmax_is8os8+0x5dc>
 800a324:	2601      	movs	r6, #1
 800a326:	f1a0 4800 	sub.w	r8, r0, #2147483648	; 0x80000000
 800a32a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800a32c:	ea4f 7cd0 	mov.w	ip, r0, lsr #31
 800a330:	40a6      	lsls	r6, r4
 800a332:	fab8 f888 	clz	r8, r8
 800a336:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800a338:	1e5d      	subs	r5, r3, #1
 800a33a:	3e01      	subs	r6, #1
 800a33c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 800a340:	4f75      	ldr	r7, [pc, #468]	; (800a518 <forward_lite_nl_softmax_is8os8+0x73c>)
 800a342:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 800a346:	ea4f 0e66 	mov.w	lr, r6, asr #1
 800a34a:	f10e 0a01 	add.w	sl, lr, #1
 800a34e:	f8cd a000 	str.w	sl, [sp]
 800a352:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800a356:	e00e      	b.n	800a376 <forward_lite_nl_softmax_is8os8+0x59a>
 800a358:	4596      	cmp	lr, r2
 800a35a:	da01      	bge.n	800a360 <forward_lite_nl_softmax_is8os8+0x584>
 800a35c:	f10b 0b01 	add.w	fp, fp, #1
 800a360:	f1ab 0b80 	sub.w	fp, fp, #128	; 0x80
 800a364:	f1bb 0f7e 	cmp.w	fp, #126	; 0x7e
 800a368:	dd46      	ble.n	800a3f8 <forward_lite_nl_softmax_is8os8+0x61c>
 800a36a:	f04f 0b7f 	mov.w	fp, #127	; 0x7f
 800a36e:	458a      	cmp	sl, r1
 800a370:	f805 bf01 	strb.w	fp, [r5, #1]!
 800a374:	d020      	beq.n	800a3b8 <forward_lite_nl_softmax_is8os8+0x5dc>
 800a376:	f851 2f04 	ldr.w	r2, [r1, #4]!
 800a37a:	0fd3      	lsrs	r3, r2, #31
 800a37c:	4563      	cmp	r3, ip
 800a37e:	bf0b      	itete	eq
 800a380:	f04f 4380 	moveq.w	r3, #1073741824	; 0x40000000
 800a384:	463b      	movne	r3, r7
 800a386:	f04f 0b00 	moveq.w	fp, #0
 800a38a:	f04f 3bff 	movne.w	fp, #4294967295
 800a38e:	4282      	cmp	r2, r0
 800a390:	d125      	bne.n	800a3de <forward_lite_nl_softmax_is8os8+0x602>
 800a392:	f1b8 0f00 	cmp.w	r8, #0
 800a396:	d022      	beq.n	800a3de <forward_lite_nl_softmax_is8os8+0x602>
 800a398:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 800a39c:	ea06 020b 	and.w	r2, r6, fp
 800a3a0:	fa5b fb04 	asrs.w	fp, fp, r4
 800a3a4:	d5d8      	bpl.n	800a358 <forward_lite_nl_softmax_is8os8+0x57c>
 800a3a6:	9b00      	ldr	r3, [sp, #0]
 800a3a8:	4293      	cmp	r3, r2
 800a3aa:	dbd7      	blt.n	800a35c <forward_lite_nl_softmax_is8os8+0x580>
 800a3ac:	f06f 0b7f 	mvn.w	fp, #127	; 0x7f
 800a3b0:	458a      	cmp	sl, r1
 800a3b2:	f805 bf01 	strb.w	fp, [r5, #1]!
 800a3b6:	d1de      	bne.n	800a376 <forward_lite_nl_softmax_is8os8+0x59a>
 800a3b8:	9b02      	ldr	r3, [sp, #8]
 800a3ba:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800a3bc:	9925      	ldr	r1, [sp, #148]	; 0x94
 800a3be:	4413      	add	r3, r2
 800a3c0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800a3c2:	440a      	add	r2, r1
 800a3c4:	9924      	ldr	r1, [sp, #144]	; 0x90
 800a3c6:	9302      	str	r3, [sp, #8]
 800a3c8:	9215      	str	r2, [sp, #84]	; 0x54
 800a3ca:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800a3cc:	440a      	add	r2, r1
 800a3ce:	9216      	str	r2, [sp, #88]	; 0x58
 800a3d0:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800a3d2:	429a      	cmp	r2, r3
 800a3d4:	f63f ad17 	bhi.w	8009e06 <forward_lite_nl_softmax_is8os8+0x2a>
 800a3d8:	b01b      	add	sp, #108	; 0x6c
 800a3da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a3de:	fbc2 3b00 	smlal	r3, fp, r2, r0
 800a3e2:	f1bb 0f00 	cmp.w	fp, #0
 800a3e6:	da03      	bge.n	800a3f0 <forward_lite_nl_softmax_is8os8+0x614>
 800a3e8:	eb13 0309 	adds.w	r3, r3, r9
 800a3ec:	f14b 0b00 	adc.w	fp, fp, #0
 800a3f0:	0fdb      	lsrs	r3, r3, #31
 800a3f2:	ea43 0b4b 	orr.w	fp, r3, fp, lsl #1
 800a3f6:	e7d1      	b.n	800a39c <forward_lite_nl_softmax_is8os8+0x5c0>
 800a3f8:	f11b 0f7f 	cmn.w	fp, #127	; 0x7f
 800a3fc:	dbd6      	blt.n	800a3ac <forward_lite_nl_softmax_is8os8+0x5d0>
 800a3fe:	fa4f fb8b 	sxtb.w	fp, fp
 800a402:	e7b4      	b.n	800a36e <forward_lite_nl_softmax_is8os8+0x592>
 800a404:	2a00      	cmp	r2, #0
 800a406:	f47f ad0d 	bne.w	8009e24 <forward_lite_nl_softmax_is8os8+0x48>
 800a40a:	2403      	movs	r4, #3
 800a40c:	f04f 37ff 	mov.w	r7, #4294967295
 800a410:	4844      	ldr	r0, [pc, #272]	; (800a524 <forward_lite_nl_softmax_is8os8+0x748>)
 800a412:	f8df e114 	ldr.w	lr, [pc, #276]	; 800a528 <forward_lite_nl_softmax_is8os8+0x74c>
 800a416:	f04f 0c00 	mov.w	ip, #0
 800a41a:	f04f 0801 	mov.w	r8, #1
 800a41e:	4605      	mov	r5, r0
 800a420:	463b      	mov	r3, r7
 800a422:	463a      	mov	r2, r7
 800a424:	46c1      	mov	r9, r8
 800a426:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 800a42a:	2600      	movs	r6, #0
 800a42c:	eb11 010e 	adds.w	r1, r1, lr
 800a430:	eb4c 0606 	adc.w	r6, ip, r6
 800a434:	2e00      	cmp	r6, #0
 800a436:	da05      	bge.n	800a444 <forward_lite_nl_softmax_is8os8+0x668>
 800a438:	f06f 4c00 	mvn.w	ip, #2147483648	; 0x80000000
 800a43c:	eb11 010c 	adds.w	r1, r1, ip
 800a440:	f146 0600 	adc.w	r6, r6, #0
 800a444:	0fc9      	lsrs	r1, r1, #31
 800a446:	ea41 0146 	orr.w	r1, r1, r6, lsl #1
 800a44a:	f1c1 5100 	rsb	r1, r1, #536870912	; 0x20000000
 800a44e:	0fce      	lsrs	r6, r1, #31
 800a450:	fb01 f707 	mul.w	r7, r1, r7
 800a454:	ea4f 7ce1 	mov.w	ip, r1, asr #31
 800a458:	454e      	cmp	r6, r9
 800a45a:	4e2f      	ldr	r6, [pc, #188]	; (800a518 <forward_lite_nl_softmax_is8os8+0x73c>)
 800a45c:	fb00 770c 	mla	r7, r0, ip, r7
 800a460:	bf08      	it	eq
 800a462:	f04f 4680 	moveq.w	r6, #1073741824	; 0x40000000
 800a466:	fba1 0100 	umull	r0, r1, r1, r0
 800a46a:	bf0c      	ite	eq
 800a46c:	f04f 0c00 	moveq.w	ip, #0
 800a470:	f04f 3cff 	movne.w	ip, #4294967295
 800a474:	440f      	add	r7, r1
 800a476:	1986      	adds	r6, r0, r6
 800a478:	eb47 070c 	adc.w	r7, r7, ip
 800a47c:	2f00      	cmp	r7, #0
 800a47e:	da04      	bge.n	800a48a <forward_lite_nl_softmax_is8os8+0x6ae>
 800a480:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800a484:	1876      	adds	r6, r6, r1
 800a486:	f147 0700 	adc.w	r7, r7, #0
 800a48a:	0ff6      	lsrs	r6, r6, #31
 800a48c:	ea46 0647 	orr.w	r6, r6, r7, lsl #1
 800a490:	f1b6 5f00 	cmp.w	r6, #536870912	; 0x20000000
 800a494:	4631      	mov	r1, r6
 800a496:	da55      	bge.n	800a544 <forward_lite_nl_softmax_is8os8+0x768>
 800a498:	f1b6 4f60 	cmp.w	r6, #3758096384	; 0xe0000000
 800a49c:	f300 80b0 	bgt.w	800a600 <forward_lite_nl_softmax_is8os8+0x824>
 800a4a0:	f105 4500 	add.w	r5, r5, #2147483648	; 0x80000000
 800a4a4:	f1b8 0f00 	cmp.w	r8, #0
 800a4a8:	d05e      	beq.n	800a568 <forward_lite_nl_softmax_is8os8+0x78c>
 800a4aa:	17e9      	asrs	r1, r5, #31
 800a4ac:	fb03 f001 	mul.w	r0, r3, r1
 800a4b0:	fb05 0202 	mla	r2, r5, r2, r0
 800a4b4:	fba3 3005 	umull	r3, r0, r3, r5
 800a4b8:	f113 4380 	adds.w	r3, r3, #1073741824	; 0x40000000
 800a4bc:	eb42 0200 	adc.w	r2, r2, r0
 800a4c0:	2a00      	cmp	r2, #0
 800a4c2:	db5f      	blt.n	800a584 <forward_lite_nl_softmax_is8os8+0x7a8>
 800a4c4:	0fdb      	lsrs	r3, r3, #31
 800a4c6:	f04f 30ff 	mov.w	r0, #4294967295
 800a4ca:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 800a4ce:	4a12      	ldr	r2, [pc, #72]	; (800a518 <forward_lite_nl_softmax_is8os8+0x73c>)
 800a4d0:	f1c3 5300 	rsb	r3, r3, #536870912	; 0x20000000
 800a4d4:	fb03 f101 	mul.w	r1, r3, r1
 800a4d8:	17de      	asrs	r6, r3, #31
 800a4da:	fb05 1106 	mla	r1, r5, r6, r1
 800a4de:	fba3 3605 	umull	r3, r6, r3, r5
 800a4e2:	189b      	adds	r3, r3, r2
 800a4e4:	4431      	add	r1, r6
 800a4e6:	eb41 0000 	adc.w	r0, r1, r0
 800a4ea:	2800      	cmp	r0, #0
 800a4ec:	da04      	bge.n	800a4f8 <forward_lite_nl_softmax_is8os8+0x71c>
 800a4ee:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 800a4f2:	189b      	adds	r3, r3, r2
 800a4f4:	f140 0000 	adc.w	r0, r0, #0
 800a4f8:	0fdb      	lsrs	r3, r3, #31
 800a4fa:	ea43 0340 	orr.w	r3, r3, r0, lsl #1
 800a4fe:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800a502:	db13      	blt.n	800a52c <forward_lite_nl_softmax_is8os8+0x750>
 800a504:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800a508:	4405      	add	r5, r0
 800a50a:	f1b5 4f80 	cmp.w	r5, #1073741824	; 0x40000000
 800a50e:	f6bf af06 	bge.w	800a31e <forward_lite_nl_softmax_is8os8+0x542>
 800a512:	e703      	b.n	800a31c <forward_lite_nl_softmax_is8os8+0x540>
 800a514:	c3c3c3c4 	.word	0xc3c3c3c4
 800a518:	c0000001 	.word	0xc0000001
 800a51c:	da5a5a5a 	.word	0xda5a5a5a
 800a520:	5a5a5a59 	.word	0x5a5a5a59
 800a524:	b4b4b4b6 	.word	0xb4b4b4b6
 800a528:	4b4b4b4a 	.word	0x4b4b4b4a
 800a52c:	f1b3 4f60 	cmp.w	r3, #3758096384	; 0xe0000000
 800a530:	dc43      	bgt.n	800a5ba <forward_lite_nl_softmax_is8os8+0x7de>
 800a532:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 800a536:	0068      	lsls	r0, r5, #1
 800a538:	f1b3 4f40 	cmp.w	r3, #3221225472	; 0xc0000000
 800a53c:	bfd8      	it	le
 800a53e:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 800a542:	e6ec      	b.n	800a31e <forward_lite_nl_softmax_is8os8+0x542>
 800a544:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800a548:	4405      	add	r5, r0
 800a54a:	ebb8 7fd5 	cmp.w	r8, r5, lsr #31
 800a54e:	ea4f 76d5 	mov.w	r6, r5, lsr #31
 800a552:	f43f aeb7 	beq.w	800a2c4 <forward_lite_nl_softmax_is8os8+0x4e8>
 800a556:	482d      	ldr	r0, [pc, #180]	; (800a60c <forward_lite_nl_softmax_is8os8+0x830>)
 800a558:	f04f 37ff 	mov.w	r7, #4294967295
 800a55c:	e6b5      	b.n	800a2ca <forward_lite_nl_softmax_is8os8+0x4ee>
 800a55e:	f1b1 4f60 	cmp.w	r1, #3758096384	; 0xe0000000
 800a562:	dc4b      	bgt.n	800a5fc <forward_lite_nl_softmax_is8os8+0x820>
 800a564:	f04f 4500 	mov.w	r5, #2147483648	; 0x80000000
 800a568:	fb05 f202 	mul.w	r2, r5, r2
 800a56c:	17e9      	asrs	r1, r5, #31
 800a56e:	fb03 2201 	mla	r2, r3, r1, r2
 800a572:	fba5 0303 	umull	r0, r3, r5, r3
 800a576:	441a      	add	r2, r3
 800a578:	4b24      	ldr	r3, [pc, #144]	; (800a60c <forward_lite_nl_softmax_is8os8+0x830>)
 800a57a:	18c3      	adds	r3, r0, r3
 800a57c:	f162 0200 	sbc.w	r2, r2, #0
 800a580:	2a00      	cmp	r2, #0
 800a582:	da9f      	bge.n	800a4c4 <forward_lite_nl_softmax_is8os8+0x6e8>
 800a584:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800a588:	181b      	adds	r3, r3, r0
 800a58a:	f142 0200 	adc.w	r2, r2, #0
 800a58e:	e799      	b.n	800a4c4 <forward_lite_nl_softmax_is8os8+0x6e8>
 800a590:	eb00 0581 	add.w	r5, r0, r1, lsl #2
 800a594:	17ef      	asrs	r7, r5, #31
 800a596:	fba3 ec05 	umull	lr, ip, r3, r5
 800a59a:	2d00      	cmp	r5, #0
 800a59c:	4628      	mov	r0, r5
 800a59e:	fb03 f107 	mul.w	r1, r3, r7
 800a5a2:	fb05 1102 	mla	r1, r5, r2, r1
 800a5a6:	448c      	add	ip, r1
 800a5a8:	da2c      	bge.n	800a604 <forward_lite_nl_softmax_is8os8+0x828>
 800a5aa:	f04f 0901 	mov.w	r9, #1
 800a5ae:	f04f 0800 	mov.w	r8, #0
 800a5b2:	4916      	ldr	r1, [pc, #88]	; (800a60c <forward_lite_nl_softmax_is8os8+0x830>)
 800a5b4:	f04f 36ff 	mov.w	r6, #4294967295
 800a5b8:	e738      	b.n	800a42c <forward_lite_nl_softmax_is8os8+0x650>
 800a5ba:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 800a5be:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a5c2:	db02      	blt.n	800a5ca <forward_lite_nl_softmax_is8os8+0x7ee>
 800a5c4:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800a5c8:	e6a9      	b.n	800a31e <forward_lite_nl_softmax_is8os8+0x542>
 800a5ca:	0058      	lsls	r0, r3, #1
 800a5cc:	e7b4      	b.n	800a538 <forward_lite_nl_softmax_is8os8+0x75c>
 800a5ce:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 800a5d2:	f04f 0800 	mov.w	r8, #0
 800a5d6:	460d      	mov	r5, r1
 800a5d8:	4641      	mov	r1, r8
 800a5da:	fbc0 5106 	smlal	r5, r1, r0, r6
 800a5de:	0fed      	lsrs	r5, r5, #31
 800a5e0:	ea45 0541 	orr.w	r5, r5, r1, lsl #1
 800a5e4:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 800a5e8:	17ef      	asrs	r7, r5, #31
 800a5ea:	fba3 ec05 	umull	lr, ip, r3, r5
 800a5ee:	4628      	mov	r0, r5
 800a5f0:	fb03 f107 	mul.w	r1, r3, r7
 800a5f4:	fb05 1102 	mla	r1, r5, r2, r1
 800a5f8:	448c      	add	ip, r1
 800a5fa:	e713      	b.n	800a424 <forward_lite_nl_softmax_is8os8+0x648>
 800a5fc:	f04f 0800 	mov.w	r8, #0
 800a600:	0088      	lsls	r0, r1, #2
 800a602:	e7a1      	b.n	800a548 <forward_lite_nl_softmax_is8os8+0x76c>
 800a604:	f04f 0800 	mov.w	r8, #0
 800a608:	e70c      	b.n	800a424 <forward_lite_nl_softmax_is8os8+0x648>
 800a60a:	bf00      	nop
 800a60c:	c0000001 	.word	0xc0000001

0800a610 <forward_lite_nl_softmax_iu8ou8>:
 800a610:	188a      	adds	r2, r1, r2
 800a612:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a616:	4291      	cmp	r1, r2
 800a618:	b09b      	sub	sp, #108	; 0x6c
 800a61a:	9015      	str	r0, [sp, #84]	; 0x54
 800a61c:	9303      	str	r3, [sp, #12]
 800a61e:	9218      	str	r2, [sp, #96]	; 0x60
 800a620:	f080 82fc 	bcs.w	800ac1c <forward_lite_nl_softmax_iu8ou8+0x60c>
 800a624:	461a      	mov	r2, r3
 800a626:	3b01      	subs	r3, #1
 800a628:	9102      	str	r1, [sp, #8]
 800a62a:	18cb      	adds	r3, r1, r3
 800a62c:	9316      	str	r3, [sp, #88]	; 0x58
 800a62e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800a630:	3b04      	subs	r3, #4
 800a632:	9317      	str	r3, [sp, #92]	; 0x5c
 800a634:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800a638:	9319      	str	r3, [sp, #100]	; 0x64
 800a63a:	9a03      	ldr	r2, [sp, #12]
 800a63c:	9b02      	ldr	r3, [sp, #8]
 800a63e:	2a01      	cmp	r2, #1
 800a640:	f893 b000 	ldrb.w	fp, [r3]
 800a644:	f240 8300 	bls.w	800ac48 <forward_lite_nl_softmax_iu8ou8+0x638>
 800a648:	9916      	ldr	r1, [sp, #88]	; 0x58
 800a64a:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800a64e:	4593      	cmp	fp, r2
 800a650:	bfb8      	it	lt
 800a652:	4693      	movlt	fp, r2
 800a654:	428b      	cmp	r3, r1
 800a656:	d1f8      	bne.n	800a64a <forward_lite_nl_softmax_iu8ou8+0x3a>
 800a658:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800a65a:	445b      	add	r3, fp
 800a65c:	9305      	str	r3, [sp, #20]
 800a65e:	9b02      	ldr	r3, [sp, #8]
 800a660:	1e5f      	subs	r7, r3, #1
 800a662:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800a664:	9300      	str	r3, [sp, #0]
 800a666:	2300      	movs	r3, #0
 800a668:	9304      	str	r3, [sp, #16]
 800a66a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800a66c:	0fdb      	lsrs	r3, r3, #31
 800a66e:	e9cd 3b13 	strd	r3, fp, [sp, #76]	; 0x4c
 800a672:	e10b      	b.n	800a88c <forward_lite_nl_softmax_iu8ou8+0x27c>
 800a674:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800a676:	1a9b      	subs	r3, r3, r2
 800a678:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 800a67a:	fa03 f202 	lsl.w	r2, r3, r2
 800a67e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800a680:	ebb3 7fd2 	cmp.w	r3, r2, lsr #31
 800a684:	4bcd      	ldr	r3, [pc, #820]	; (800a9bc <forward_lite_nl_softmax_iu8ou8+0x3ac>)
 800a686:	bf06      	itte	eq
 800a688:	2100      	moveq	r1, #0
 800a68a:	f04f 4380 	moveq.w	r3, #1073741824	; 0x40000000
 800a68e:	f04f 31ff 	movne.w	r1, #4294967295
 800a692:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 800a696:	f040 8102 	bne.w	800a89e <forward_lite_nl_softmax_iu8ou8+0x28e>
 800a69a:	9826      	ldr	r0, [sp, #152]	; 0x98
 800a69c:	4290      	cmp	r0, r2
 800a69e:	f040 80fe 	bne.w	800a89e <forward_lite_nl_softmax_iu8ou8+0x28e>
 800a6a2:	f04f 35ff 	mov.w	r5, #4294967295
 800a6a6:	4bc6      	ldr	r3, [pc, #792]	; (800a9c0 <forward_lite_nl_softmax_iu8ou8+0x3b0>)
 800a6a8:	2100      	movs	r1, #0
 800a6aa:	48c6      	ldr	r0, [pc, #792]	; (800a9c4 <forward_lite_nl_softmax_iu8ou8+0x3b4>)
 800a6ac:	f44f 3c00 	mov.w	ip, #131072	; 0x20000
 800a6b0:	4ac5      	ldr	r2, [pc, #788]	; (800a9c8 <forward_lite_nl_softmax_iu8ou8+0x3b8>)
 800a6b2:	468e      	mov	lr, r1
 800a6b4:	460c      	mov	r4, r1
 800a6b6:	468b      	mov	fp, r1
 800a6b8:	468a      	mov	sl, r1
 800a6ba:	4689      	mov	r9, r1
 800a6bc:	f04f 0801 	mov.w	r8, #1
 800a6c0:	910a      	str	r1, [sp, #40]	; 0x28
 800a6c2:	9111      	str	r1, [sp, #68]	; 0x44
 800a6c4:	e9cd 350f 	strd	r3, r5, [sp, #60]	; 0x3c
 800a6c8:	4bc0      	ldr	r3, [pc, #768]	; (800a9cc <forward_lite_nl_softmax_iu8ou8+0x3bc>)
 800a6ca:	9312      	str	r3, [sp, #72]	; 0x48
 800a6cc:	462b      	mov	r3, r5
 800a6ce:	e9cd 510d 	strd	r5, r1, [sp, #52]	; 0x34
 800a6d2:	e9cd 550b 	strd	r5, r5, [sp, #44]	; 0x2c
 800a6d6:	e9cd 5508 	strd	r5, r5, [sp, #32]
 800a6da:	e9cd 1106 	strd	r1, r1, [sp, #24]
 800a6de:	4541      	cmp	r1, r8
 800a6e0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 800a6e2:	49b6      	ldr	r1, [pc, #728]	; (800a9bc <forward_lite_nl_softmax_iu8ou8+0x3ac>)
 800a6e4:	bfc8      	it	gt
 800a6e6:	f10c 0c01 	addgt.w	ip, ip, #1
 800a6ea:	4574      	cmp	r4, lr
 800a6ec:	bf06      	itte	eq
 800a6ee:	f04f 4180 	moveq.w	r1, #1073741824	; 0x40000000
 800a6f2:	2400      	moveq	r4, #0
 800a6f4:	f04f 34ff 	movne.w	r4, #4294967295
 800a6f8:	1871      	adds	r1, r6, r1
 800a6fa:	eb42 0204 	adc.w	r2, r2, r4
 800a6fe:	2a00      	cmp	r2, #0
 800a700:	da04      	bge.n	800a70c <forward_lite_nl_softmax_iu8ou8+0xfc>
 800a702:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
 800a706:	1909      	adds	r1, r1, r4
 800a708:	f142 0200 	adc.w	r2, r2, #0
 800a70c:	0fc9      	lsrs	r1, r1, #31
 800a70e:	4cb0      	ldr	r4, [pc, #704]	; (800a9d0 <forward_lite_nl_softmax_iu8ou8+0x3c0>)
 800a710:	ea41 0142 	orr.w	r1, r1, r2, lsl #1
 800a714:	4aa9      	ldr	r2, [pc, #676]	; (800a9bc <forward_lite_nl_softmax_iu8ou8+0x3ac>)
 800a716:	448c      	add	ip, r1
 800a718:	f1bc 0f00 	cmp.w	ip, #0
 800a71c:	bfa6      	itte	ge
 800a71e:	f04f 4280 	movge.w	r2, #1073741824	; 0x40000000
 800a722:	2100      	movge	r1, #0
 800a724:	f04f 31ff 	movlt.w	r1, #4294967295
 800a728:	fbcc 2104 	smlal	r2, r1, ip, r4
 800a72c:	2900      	cmp	r1, #0
 800a72e:	da04      	bge.n	800a73a <forward_lite_nl_softmax_iu8ou8+0x12a>
 800a730:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
 800a734:	1912      	adds	r2, r2, r4
 800a736:	f141 0100 	adc.w	r1, r1, #0
 800a73a:	0fd2      	lsrs	r2, r2, #31
 800a73c:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 800a740:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800a742:	4411      	add	r1, r2
 800a744:	460a      	mov	r2, r1
 800a746:	1049      	asrs	r1, r1, #1
 800a748:	07d4      	lsls	r4, r2, #31
 800a74a:	d502      	bpl.n	800a752 <forward_lite_nl_softmax_iu8ou8+0x142>
 800a74c:	2900      	cmp	r1, #0
 800a74e:	bfa8      	it	ge
 800a750:	3101      	addge	r1, #1
 800a752:	4408      	add	r0, r1
 800a754:	4c9f      	ldr	r4, [pc, #636]	; (800a9d4 <forward_lite_nl_softmax_iu8ou8+0x3c4>)
 800a756:	4999      	ldr	r1, [pc, #612]	; (800a9bc <forward_lite_nl_softmax_iu8ou8+0x3ac>)
 800a758:	2800      	cmp	r0, #0
 800a75a:	bfa6      	itte	ge
 800a75c:	f04f 4180 	movge.w	r1, #1073741824	; 0x40000000
 800a760:	2200      	movge	r2, #0
 800a762:	f04f 32ff 	movlt.w	r2, #4294967295
 800a766:	fbc0 1204 	smlal	r1, r2, r0, r4
 800a76a:	2a00      	cmp	r2, #0
 800a76c:	da04      	bge.n	800a778 <forward_lite_nl_softmax_iu8ou8+0x168>
 800a76e:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800a772:	1809      	adds	r1, r1, r0
 800a774:	f142 0200 	adc.w	r2, r2, #0
 800a778:	0fc9      	lsrs	r1, r1, #31
 800a77a:	2000      	movs	r0, #0
 800a77c:	4c96      	ldr	r4, [pc, #600]	; (800a9d8 <forward_lite_nl_softmax_iu8ou8+0x3c8>)
 800a77e:	ea41 0142 	orr.w	r1, r1, r2, lsl #1
 800a782:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800a786:	4680      	mov	r8, r0
 800a788:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800a78a:	f101 41e2 	add.w	r1, r1, #1895825408	; 0x71000000
 800a78e:	4694      	mov	ip, r2
 800a790:	f8df e258 	ldr.w	lr, [pc, #600]	; 800a9ec <forward_lite_nl_softmax_iu8ou8+0x3dc>
 800a794:	f5a1 2125 	sub.w	r1, r1, #675840	; 0xa5000
 800a798:	f2a1 716c 	subw	r1, r1, #1900	; 0x76c
 800a79c:	fbc1 c804 	smlal	ip, r8, r1, r4
 800a7a0:	4664      	mov	r4, ip
 800a7a2:	400e      	ands	r6, r1
 800a7a4:	4694      	mov	ip, r2
 800a7a6:	0fe4      	lsrs	r4, r4, #31
 800a7a8:	498c      	ldr	r1, [pc, #560]	; (800a9dc <forward_lite_nl_softmax_iu8ou8+0x3cc>)
 800a7aa:	ea44 0448 	orr.w	r4, r4, r8, lsl #1
 800a7ae:	4690      	mov	r8, r2
 800a7b0:	ea0b 0404 	and.w	r4, fp, r4
 800a7b4:	4693      	mov	fp, r2
 800a7b6:	4066      	eors	r6, r4
 800a7b8:	4604      	mov	r4, r0
 800a7ba:	fbc6 c401 	smlal	ip, r4, r6, r1
 800a7be:	4661      	mov	r1, ip
 800a7c0:	4033      	ands	r3, r6
 800a7c2:	4694      	mov	ip, r2
 800a7c4:	0fc9      	lsrs	r1, r1, #31
 800a7c6:	4606      	mov	r6, r0
 800a7c8:	ea41 0144 	orr.w	r1, r1, r4, lsl #1
 800a7cc:	9c08      	ldr	r4, [sp, #32]
 800a7ce:	ea0a 0a01 	and.w	sl, sl, r1
 800a7d2:	4983      	ldr	r1, [pc, #524]	; (800a9e0 <forward_lite_nl_softmax_iu8ou8+0x3d0>)
 800a7d4:	ea83 030a 	eor.w	r3, r3, sl
 800a7d8:	fbc3 c601 	smlal	ip, r6, r3, r1
 800a7dc:	4661      	mov	r1, ip
 800a7de:	401c      	ands	r4, r3
 800a7e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a7e2:	0fc9      	lsrs	r1, r1, #31
 800a7e4:	4694      	mov	ip, r2
 800a7e6:	ea41 0146 	orr.w	r1, r1, r6, lsl #1
 800a7ea:	4e7e      	ldr	r6, [pc, #504]	; (800a9e4 <forward_lite_nl_softmax_iu8ou8+0x3d4>)
 800a7ec:	400b      	ands	r3, r1
 800a7ee:	4601      	mov	r1, r0
 800a7f0:	405c      	eors	r4, r3
 800a7f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a7f4:	fbc4 b106 	smlal	fp, r1, r4, r6
 800a7f8:	ea4f 7bdb 	mov.w	fp, fp, lsr #31
 800a7fc:	4023      	ands	r3, r4
 800a7fe:	4606      	mov	r6, r0
 800a800:	ea4b 0b41 	orr.w	fp, fp, r1, lsl #1
 800a804:	9907      	ldr	r1, [sp, #28]
 800a806:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800a808:	ea01 0b0b 	and.w	fp, r1, fp
 800a80c:	4976      	ldr	r1, [pc, #472]	; (800a9e8 <forward_lite_nl_softmax_iu8ou8+0x3d8>)
 800a80e:	ea83 030b 	eor.w	r3, r3, fp
 800a812:	fbc3 c601 	smlal	ip, r6, r3, r1
 800a816:	4661      	mov	r1, ip
 800a818:	401c      	ands	r4, r3
 800a81a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a81c:	0fc9      	lsrs	r1, r1, #31
 800a81e:	ea41 0146 	orr.w	r1, r1, r6, lsl #1
 800a822:	ea09 0901 	and.w	r9, r9, r1
 800a826:	4601      	mov	r1, r0
 800a828:	ea84 0409 	eor.w	r4, r4, r9
 800a82c:	fbc4 810e 	smlal	r8, r1, r4, lr
 800a830:	ea4f 78d8 	mov.w	r8, r8, lsr #31
 800a834:	4023      	ands	r3, r4
 800a836:	ea48 0841 	orr.w	r8, r8, r1, lsl #1
 800a83a:	9906      	ldr	r1, [sp, #24]
 800a83c:	ea01 0808 	and.w	r8, r1, r8
 800a840:	ea83 0808 	eor.w	r8, r3, r8
 800a844:	23f2      	movs	r3, #242	; 0xf2
 800a846:	fbc8 2003 	smlal	r2, r0, r8, r3
 800a84a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800a84c:	0fd2      	lsrs	r2, r2, #31
 800a84e:	ea03 0808 	and.w	r8, r3, r8
 800a852:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800a854:	ea42 0240 	orr.w	r2, r2, r0, lsl #1
 800a858:	4013      	ands	r3, r2
 800a85a:	ea88 0803 	eor.w	r8, r8, r3
 800a85e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800a860:	ea08 0505 	and.w	r5, r8, r5
 800a864:	405d      	eors	r5, r3
 800a866:	132b      	asrs	r3, r5, #12
 800a868:	052a      	lsls	r2, r5, #20
 800a86a:	9a04      	ldr	r2, [sp, #16]
 800a86c:	bf48      	it	mi
 800a86e:	3301      	addmi	r3, #1
 800a870:	441a      	add	r2, r3
 800a872:	9204      	str	r2, [sp, #16]
 800a874:	9b00      	ldr	r3, [sp, #0]
 800a876:	9a02      	ldr	r2, [sp, #8]
 800a878:	f843 5f04 	str.w	r5, [r3, #4]!
 800a87c:	9300      	str	r3, [sp, #0]
 800a87e:	9b01      	ldr	r3, [sp, #4]
 800a880:	3302      	adds	r3, #2
 800a882:	1a9b      	subs	r3, r3, r2
 800a884:	9a03      	ldr	r2, [sp, #12]
 800a886:	429a      	cmp	r2, r3
 800a888:	f240 80b2 	bls.w	800a9f0 <forward_lite_nl_softmax_iu8ou8+0x3e0>
 800a88c:	9a05      	ldr	r2, [sp, #20]
 800a88e:	9701      	str	r7, [sp, #4]
 800a890:	f817 3f01 	ldrb.w	r3, [r7, #1]!
 800a894:	429a      	cmp	r2, r3
 800a896:	f77f aeed 	ble.w	800a674 <forward_lite_nl_softmax_iu8ou8+0x64>
 800a89a:	2500      	movs	r5, #0
 800a89c:	e7ea      	b.n	800a874 <forward_lite_nl_softmax_iu8ou8+0x264>
 800a89e:	9826      	ldr	r0, [sp, #152]	; 0x98
 800a8a0:	fbc2 3100 	smlal	r3, r1, r2, r0
 800a8a4:	2900      	cmp	r1, #0
 800a8a6:	da04      	bge.n	800a8b2 <forward_lite_nl_softmax_iu8ou8+0x2a2>
 800a8a8:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 800a8ac:	189b      	adds	r3, r3, r2
 800a8ae:	f141 0100 	adc.w	r1, r1, #0
 800a8b2:	0fdb      	lsrs	r3, r3, #31
 800a8b4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800a8b8:	2400      	movs	r4, #0
 800a8ba:	ea53 0341 	orrs.w	r3, r3, r1, lsl #1
 800a8be:	f043 407f 	orr.w	r0, r3, #4278190080	; 0xff000000
 800a8c2:	bf0c      	ite	eq
 800a8c4:	f04f 0c01 	moveq.w	ip, #1
 800a8c8:	f04f 0c00 	movne.w	ip, #0
 800a8cc:	1ac3      	subs	r3, r0, r3
 800a8ce:	0140      	lsls	r0, r0, #5
 800a8d0:	f10c 35ff 	add.w	r5, ip, #4294967295
 800a8d4:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 800a8d8:	f3c3 7e80 	ubfx	lr, r3, #30, #1
 800a8dc:	fbc0 2400 	smlal	r2, r4, r0, r0
 800a8e0:	f10e 31ff 	add.w	r1, lr, #4294967295
 800a8e4:	2c00      	cmp	r4, #0
 800a8e6:	9110      	str	r1, [sp, #64]	; 0x40
 800a8e8:	da04      	bge.n	800a8f4 <forward_lite_nl_softmax_iu8ou8+0x2e4>
 800a8ea:	f06f 4600 	mvn.w	r6, #2147483648	; 0x80000000
 800a8ee:	1992      	adds	r2, r2, r6
 800a8f0:	f144 0400 	adc.w	r4, r4, #0
 800a8f4:	0fd2      	lsrs	r2, r2, #31
 800a8f6:	ea42 0244 	orr.w	r2, r2, r4, lsl #1
 800a8fa:	17e4      	asrs	r4, r4, #31
 800a8fc:	fba2 1602 	umull	r1, r6, r2, r2
 800a900:	fb02 f804 	mul.w	r8, r2, r4
 800a904:	f111 4180 	adds.w	r1, r1, #1073741824	; 0x40000000
 800a908:	920f      	str	r2, [sp, #60]	; 0x3c
 800a90a:	eb46 0648 	adc.w	r6, r6, r8, lsl #1
 800a90e:	2e00      	cmp	r6, #0
 800a910:	da05      	bge.n	800a91e <forward_lite_nl_softmax_iu8ou8+0x30e>
 800a912:	f06f 4800 	mvn.w	r8, #2147483648	; 0x80000000
 800a916:	eb11 0108 	adds.w	r1, r1, r8
 800a91a:	f146 0600 	adc.w	r6, r6, #0
 800a91e:	0fc9      	lsrs	r1, r1, #31
 800a920:	f1cc 0c00 	rsb	ip, ip, #0
 800a924:	fb00 f404 	mul.w	r4, r0, r4
 800a928:	f3c3 6bc0 	ubfx	fp, r3, #27, #1
 800a92c:	ea41 0146 	orr.w	r1, r1, r6, lsl #1
 800a930:	f1ce 0600 	rsb	r6, lr, #0
 800a934:	ea4f 7ed2 	mov.w	lr, r2, lsr #31
 800a938:	f3c3 7900 	ubfx	r9, r3, #28, #1
 800a93c:	9611      	str	r6, [sp, #68]	; 0x44
 800a93e:	f02c 4600 	bic.w	r6, ip, #2147483648	; 0x80000000
 800a942:	f3c3 7840 	ubfx	r8, r3, #29, #1
 800a946:	f3c3 6a40 	ubfx	sl, r3, #25, #1
 800a94a:	960e      	str	r6, [sp, #56]	; 0x38
 800a94c:	17c6      	asrs	r6, r0, #31
 800a94e:	ea5f 0ca1 	movs.w	ip, r1, asr #2
 800a952:	f001 0103 	and.w	r1, r1, #3
 800a956:	fb02 4406 	mla	r4, r2, r6, r4
 800a95a:	f3c3 6680 	ubfx	r6, r3, #26, #1
 800a95e:	f106 36ff 	add.w	r6, r6, #4294967295
 800a962:	9608      	str	r6, [sp, #32]
 800a964:	f3c3 6600 	ubfx	r6, r3, #24, #1
 800a968:	f106 36ff 	add.w	r6, r6, #4294967295
 800a96c:	960c      	str	r6, [sp, #48]	; 0x30
 800a96e:	fba0 6202 	umull	r6, r2, r0, r2
 800a972:	9612      	str	r6, [sp, #72]	; 0x48
 800a974:	f10b 36ff 	add.w	r6, fp, #4294967295
 800a978:	4422      	add	r2, r4
 800a97a:	ea4f 74d0 	mov.w	r4, r0, lsr #31
 800a97e:	960d      	str	r6, [sp, #52]	; 0x34
 800a980:	f1cb 0600 	rsb	r6, fp, #0
 800a984:	f343 6b00 	sbfx	fp, r3, #24, #1
 800a988:	f343 6380 	sbfx	r3, r3, #26, #1
 800a98c:	9607      	str	r6, [sp, #28]
 800a98e:	f109 36ff 	add.w	r6, r9, #4294967295
 800a992:	930a      	str	r3, [sp, #40]	; 0x28
 800a994:	f1c9 0900 	rsb	r9, r9, #0
 800a998:	960b      	str	r6, [sp, #44]	; 0x2c
 800a99a:	f108 36ff 	add.w	r6, r8, #4294967295
 800a99e:	f10a 33ff 	add.w	r3, sl, #4294967295
 800a9a2:	f1ca 0a00 	rsb	sl, sl, #0
 800a9a6:	9609      	str	r6, [sp, #36]	; 0x24
 800a9a8:	f1c8 0600 	rsb	r6, r8, #0
 800a9ac:	bf54      	ite	pl
 800a9ae:	f04f 0801 	movpl.w	r8, #1
 800a9b2:	f04f 0802 	movmi.w	r8, #2
 800a9b6:	9606      	str	r6, [sp, #24]
 800a9b8:	e691      	b.n	800a6de <forward_lite_nl_softmax_iu8ou8+0xce>
 800a9ba:	bf00      	nop
 800a9bc:	c0000001 	.word	0xc0000001
 800a9c0:	01fffff8 	.word	0x01fffff8
 800a9c4:	0fffffe0 	.word	0x0fffffe0
 800a9c8:	001fffff 	.word	0x001fffff
 800a9cc:	40000100 	.word	0x40000100
 800a9d0:	2aaaaaab 	.word	0x2aaaaaab
 800a9d4:	70f5a894 	.word	0x70f5a894
 800a9d8:	63afbe7b 	.word	0x63afbe7b
 800a9dc:	4da2cbf2 	.word	0x4da2cbf2
 800a9e0:	2f16ac6c 	.word	0x2f16ac6c
 800a9e4:	1152aaa4 	.word	0x1152aaa4
 800a9e8:	02582ab7 	.word	0x02582ab7
 800a9ec:	000afe11 	.word	0x000afe11
 800a9f0:	9b04      	ldr	r3, [sp, #16]
 800a9f2:	2b00      	cmp	r3, #0
 800a9f4:	f000 812b 	beq.w	800ac4e <forward_lite_nl_softmax_iu8ou8+0x63e>
 800a9f8:	fab3 f483 	clz	r4, r3
 800a9fc:	fa03 f104 	lsl.w	r1, r3, r4
 800aa00:	f1c4 0423 	rsb	r4, r4, #35	; 0x23
 800aa04:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800aa08:	17da      	asrs	r2, r3, #31
 800aa0a:	f1b2 3fff 	cmp.w	r2, #4294967295
 800aa0e:	bf08      	it	eq
 800aa10:	2900      	cmpeq	r1, #0
 800aa12:	f000 811d 	beq.w	800ac50 <forward_lite_nl_softmax_iu8ou8+0x640>
 800aa16:	f113 4300 	adds.w	r3, r3, #2147483648	; 0x80000000
 800aa1a:	49cf      	ldr	r1, [pc, #828]	; (800ad58 <forward_lite_nl_softmax_iu8ou8+0x748>)
 800aa1c:	4ecf      	ldr	r6, [pc, #828]	; (800ad5c <forward_lite_nl_softmax_iu8ou8+0x74c>)
 800aa1e:	f142 0200 	adc.w	r2, r2, #0
 800aa22:	085b      	lsrs	r3, r3, #1
 800aa24:	ea43 73c2 	orr.w	r3, r3, r2, lsl #31
 800aa28:	1052      	asrs	r2, r2, #1
 800aa2a:	4258      	negs	r0, r3
 800aa2c:	fb01 0002 	mla	r0, r1, r2, r0
 800aa30:	fba3 1501 	umull	r1, r5, r3, r1
 800aa34:	1989      	adds	r1, r1, r6
 800aa36:	4428      	add	r0, r5
 800aa38:	f160 0000 	sbc.w	r0, r0, #0
 800aa3c:	2800      	cmp	r0, #0
 800aa3e:	da04      	bge.n	800aa4a <forward_lite_nl_softmax_iu8ou8+0x43a>
 800aa40:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
 800aa44:	1949      	adds	r1, r1, r5
 800aa46:	f140 0000 	adc.w	r0, r0, #0
 800aa4a:	0fc9      	lsrs	r1, r1, #31
 800aa4c:	ea41 0740 	orr.w	r7, r1, r0, lsl #1
 800aa50:	f107 305a 	add.w	r0, r7, #1515870810	; 0x5a5a5a5a
 800aa54:	17c5      	asrs	r5, r0, #31
 800aa56:	fb00 f102 	mul.w	r1, r0, r2
 800aa5a:	fba0 e803 	umull	lr, r8, r0, r3
 800aa5e:	fb03 1105 	mla	r1, r3, r5, r1
 800aa62:	f11e 4680 	adds.w	r6, lr, #1073741824	; 0x40000000
 800aa66:	4488      	add	r8, r1
 800aa68:	ea4f 76d6 	mov.w	r6, r6, lsr #31
 800aa6c:	f148 0100 	adc.w	r1, r8, #0
 800aa70:	ea46 0641 	orr.w	r6, r6, r1, lsl #1
 800aa74:	f1d6 5600 	rsbs	r6, r6, #536870912	; 0x20000000
 800aa78:	f140 81cb 	bpl.w	800ae12 <forward_lite_nl_softmax_iu8ou8+0x802>
 800aa7c:	49b7      	ldr	r1, [pc, #732]	; (800ad5c <forward_lite_nl_softmax_iu8ou8+0x74c>)
 800aa7e:	f04f 3cff 	mov.w	ip, #4294967295
 800aa82:	fbc0 1c06 	smlal	r1, ip, r0, r6
 800aa86:	f1bc 0f00 	cmp.w	ip, #0
 800aa8a:	da04      	bge.n	800aa96 <forward_lite_nl_softmax_iu8ou8+0x486>
 800aa8c:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
 800aa90:	1949      	adds	r1, r1, r5
 800aa92:	f14c 0c00 	adc.w	ip, ip, #0
 800aa96:	0fc9      	lsrs	r1, r1, #31
 800aa98:	ea41 014c 	orr.w	r1, r1, ip, lsl #1
 800aa9c:	f1b1 4f60 	cmp.w	r1, #3758096384	; 0xe0000000
 800aaa0:	f300 8198 	bgt.w	800add4 <forward_lite_nl_softmax_iu8ou8+0x7c4>
 800aaa4:	07d1      	lsls	r1, r2, #31
 800aaa6:	4dad      	ldr	r5, [pc, #692]	; (800ad5c <forward_lite_nl_softmax_iu8ou8+0x74c>)
 800aaa8:	07d8      	lsls	r0, r3, #31
 800aaaa:	ea41 0153 	orr.w	r1, r1, r3, lsr #1
 800aaae:	ebbe 0000 	subs.w	r0, lr, r0
 800aab2:	eb68 0101 	sbc.w	r1, r8, r1
 800aab6:	eb10 0e05 	adds.w	lr, r0, r5
 800aaba:	4da9      	ldr	r5, [pc, #676]	; (800ad60 <forward_lite_nl_softmax_iu8ou8+0x750>)
 800aabc:	f161 0100 	sbc.w	r1, r1, #0
 800aac0:	443d      	add	r5, r7
 800aac2:	2900      	cmp	r1, #0
 800aac4:	da05      	bge.n	800aad2 <forward_lite_nl_softmax_iu8ou8+0x4c2>
 800aac6:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800aaca:	eb1e 0e00 	adds.w	lr, lr, r0
 800aace:	f141 0100 	adc.w	r1, r1, #0
 800aad2:	ea4f 7ede 	mov.w	lr, lr, lsr #31
 800aad6:	48a1      	ldr	r0, [pc, #644]	; (800ad5c <forward_lite_nl_softmax_iu8ou8+0x74c>)
 800aad8:	ea4e 0e41 	orr.w	lr, lr, r1, lsl #1
 800aadc:	f04f 31ff 	mov.w	r1, #4294967295
 800aae0:	f1ce 5e00 	rsb	lr, lr, #536870912	; 0x20000000
 800aae4:	fbce 0105 	smlal	r0, r1, lr, r5
 800aae8:	2900      	cmp	r1, #0
 800aaea:	460e      	mov	r6, r1
 800aaec:	da04      	bge.n	800aaf8 <forward_lite_nl_softmax_iu8ou8+0x4e8>
 800aaee:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800aaf2:	1840      	adds	r0, r0, r1
 800aaf4:	f146 0600 	adc.w	r6, r6, #0
 800aaf8:	0fc1      	lsrs	r1, r0, #31
 800aafa:	ea41 0146 	orr.w	r1, r1, r6, lsl #1
 800aafe:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
 800ab02:	f2c0 814e 	blt.w	800ada2 <forward_lite_nl_softmax_iu8ou8+0x792>
 800ab06:	4d97      	ldr	r5, [pc, #604]	; (800ad64 <forward_lite_nl_softmax_iu8ou8+0x754>)
 800ab08:	2600      	movs	r6, #0
 800ab0a:	443d      	add	r5, r7
 800ab0c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ab10:	2700      	movs	r7, #0
 800ab12:	fb05 f202 	mul.w	r2, r5, r2
 800ab16:	17e9      	asrs	r1, r5, #31
 800ab18:	fb03 2201 	mla	r2, r3, r1, r2
 800ab1c:	fba5 3c03 	umull	r3, ip, r5, r3
 800ab20:	181b      	adds	r3, r3, r0
 800ab22:	4462      	add	r2, ip
 800ab24:	eb42 0707 	adc.w	r7, r2, r7
 800ab28:	2f00      	cmp	r7, #0
 800ab2a:	da04      	bge.n	800ab36 <forward_lite_nl_softmax_iu8ou8+0x526>
 800ab2c:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 800ab30:	189b      	adds	r3, r3, r2
 800ab32:	f147 0700 	adc.w	r7, r7, #0
 800ab36:	0fdb      	lsrs	r3, r3, #31
 800ab38:	4a88      	ldr	r2, [pc, #544]	; (800ad5c <forward_lite_nl_softmax_iu8ou8+0x74c>)
 800ab3a:	ea43 0347 	orr.w	r3, r3, r7, lsl #1
 800ab3e:	f1c3 5300 	rsb	r3, r3, #536870912	; 0x20000000
 800ab42:	0fd8      	lsrs	r0, r3, #31
 800ab44:	42b0      	cmp	r0, r6
 800ab46:	bf06      	itte	eq
 800ab48:	f04f 4280 	moveq.w	r2, #1073741824	; 0x40000000
 800ab4c:	2000      	moveq	r0, #0
 800ab4e:	f04f 30ff 	movne.w	r0, #4294967295
 800ab52:	42ab      	cmp	r3, r5
 800ab54:	f040 80e0 	bne.w	800ad18 <forward_lite_nl_softmax_iu8ou8+0x708>
 800ab58:	f1b5 4f00 	cmp.w	r5, #2147483648	; 0x80000000
 800ab5c:	f040 80dc 	bne.w	800ad18 <forward_lite_nl_softmax_iu8ou8+0x708>
 800ab60:	f04f 35ff 	mov.w	r5, #4294967295
 800ab64:	0068      	lsls	r0, r5, #1
 800ab66:	9b03      	ldr	r3, [sp, #12]
 800ab68:	2b00      	cmp	r3, #0
 800ab6a:	d047      	beq.n	800abfc <forward_lite_nl_softmax_iu8ou8+0x5ec>
 800ab6c:	2601      	movs	r6, #1
 800ab6e:	f1a0 4800 	sub.w	r8, r0, #2147483648	; 0x80000000
 800ab72:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800ab74:	ea4f 7cd0 	mov.w	ip, r0, lsr #31
 800ab78:	40a6      	lsls	r6, r4
 800ab7a:	fab8 f888 	clz	r8, r8
 800ab7e:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800ab80:	1e5d      	subs	r5, r3, #1
 800ab82:	3e01      	subs	r6, #1
 800ab84:	ea4f 1858 	mov.w	r8, r8, lsr #5
 800ab88:	4f74      	ldr	r7, [pc, #464]	; (800ad5c <forward_lite_nl_softmax_iu8ou8+0x74c>)
 800ab8a:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 800ab8e:	ea4f 0e66 	mov.w	lr, r6, asr #1
 800ab92:	f10e 0a01 	add.w	sl, lr, #1
 800ab96:	f8cd a000 	str.w	sl, [sp]
 800ab9a:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800ab9e:	e00c      	b.n	800abba <forward_lite_nl_softmax_iu8ou8+0x5aa>
 800aba0:	4596      	cmp	lr, r2
 800aba2:	da01      	bge.n	800aba8 <forward_lite_nl_softmax_iu8ou8+0x598>
 800aba4:	f10b 0b01 	add.w	fp, fp, #1
 800aba8:	f1bb 0ffe 	cmp.w	fp, #254	; 0xfe
 800abac:	dd46      	ble.n	800ac3c <forward_lite_nl_softmax_iu8ou8+0x62c>
 800abae:	f04f 0bff 	mov.w	fp, #255	; 0xff
 800abb2:	458a      	cmp	sl, r1
 800abb4:	f805 bf01 	strb.w	fp, [r5, #1]!
 800abb8:	d020      	beq.n	800abfc <forward_lite_nl_softmax_iu8ou8+0x5ec>
 800abba:	f851 2f04 	ldr.w	r2, [r1, #4]!
 800abbe:	0fd3      	lsrs	r3, r2, #31
 800abc0:	4563      	cmp	r3, ip
 800abc2:	bf0b      	itete	eq
 800abc4:	f04f 4380 	moveq.w	r3, #1073741824	; 0x40000000
 800abc8:	463b      	movne	r3, r7
 800abca:	f04f 0b00 	moveq.w	fp, #0
 800abce:	f04f 3bff 	movne.w	fp, #4294967295
 800abd2:	4282      	cmp	r2, r0
 800abd4:	d125      	bne.n	800ac22 <forward_lite_nl_softmax_iu8ou8+0x612>
 800abd6:	f1b8 0f00 	cmp.w	r8, #0
 800abda:	d022      	beq.n	800ac22 <forward_lite_nl_softmax_iu8ou8+0x612>
 800abdc:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 800abe0:	ea06 020b 	and.w	r2, r6, fp
 800abe4:	fa5b fb04 	asrs.w	fp, fp, r4
 800abe8:	d5da      	bpl.n	800aba0 <forward_lite_nl_softmax_iu8ou8+0x590>
 800abea:	9b00      	ldr	r3, [sp, #0]
 800abec:	4293      	cmp	r3, r2
 800abee:	dbd9      	blt.n	800aba4 <forward_lite_nl_softmax_iu8ou8+0x594>
 800abf0:	f04f 0b00 	mov.w	fp, #0
 800abf4:	458a      	cmp	sl, r1
 800abf6:	f805 bf01 	strb.w	fp, [r5, #1]!
 800abfa:	d1de      	bne.n	800abba <forward_lite_nl_softmax_iu8ou8+0x5aa>
 800abfc:	9b02      	ldr	r3, [sp, #8]
 800abfe:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800ac00:	9925      	ldr	r1, [sp, #148]	; 0x94
 800ac02:	4413      	add	r3, r2
 800ac04:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800ac06:	440a      	add	r2, r1
 800ac08:	9924      	ldr	r1, [sp, #144]	; 0x90
 800ac0a:	9302      	str	r3, [sp, #8]
 800ac0c:	9215      	str	r2, [sp, #84]	; 0x54
 800ac0e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800ac10:	440a      	add	r2, r1
 800ac12:	9216      	str	r2, [sp, #88]	; 0x58
 800ac14:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800ac16:	429a      	cmp	r2, r3
 800ac18:	f63f ad0f 	bhi.w	800a63a <forward_lite_nl_softmax_iu8ou8+0x2a>
 800ac1c:	b01b      	add	sp, #108	; 0x6c
 800ac1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac22:	fbc2 3b00 	smlal	r3, fp, r2, r0
 800ac26:	f1bb 0f00 	cmp.w	fp, #0
 800ac2a:	da03      	bge.n	800ac34 <forward_lite_nl_softmax_iu8ou8+0x624>
 800ac2c:	eb13 0309 	adds.w	r3, r3, r9
 800ac30:	f14b 0b00 	adc.w	fp, fp, #0
 800ac34:	0fdb      	lsrs	r3, r3, #31
 800ac36:	ea43 0b4b 	orr.w	fp, r3, fp, lsl #1
 800ac3a:	e7d1      	b.n	800abe0 <forward_lite_nl_softmax_iu8ou8+0x5d0>
 800ac3c:	f1bb 0f00 	cmp.w	fp, #0
 800ac40:	ddd6      	ble.n	800abf0 <forward_lite_nl_softmax_iu8ou8+0x5e0>
 800ac42:	fa5f fb8b 	uxtb.w	fp, fp
 800ac46:	e7b4      	b.n	800abb2 <forward_lite_nl_softmax_iu8ou8+0x5a2>
 800ac48:	2a00      	cmp	r2, #0
 800ac4a:	f47f ad05 	bne.w	800a658 <forward_lite_nl_softmax_iu8ou8+0x48>
 800ac4e:	2403      	movs	r4, #3
 800ac50:	f04f 37ff 	mov.w	r7, #4294967295
 800ac54:	4844      	ldr	r0, [pc, #272]	; (800ad68 <forward_lite_nl_softmax_iu8ou8+0x758>)
 800ac56:	f8df e114 	ldr.w	lr, [pc, #276]	; 800ad6c <forward_lite_nl_softmax_iu8ou8+0x75c>
 800ac5a:	f04f 0c00 	mov.w	ip, #0
 800ac5e:	f04f 0801 	mov.w	r8, #1
 800ac62:	4605      	mov	r5, r0
 800ac64:	463b      	mov	r3, r7
 800ac66:	463a      	mov	r2, r7
 800ac68:	46c1      	mov	r9, r8
 800ac6a:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 800ac6e:	2600      	movs	r6, #0
 800ac70:	eb11 010e 	adds.w	r1, r1, lr
 800ac74:	eb46 060c 	adc.w	r6, r6, ip
 800ac78:	2e00      	cmp	r6, #0
 800ac7a:	da05      	bge.n	800ac88 <forward_lite_nl_softmax_iu8ou8+0x678>
 800ac7c:	f06f 4c00 	mvn.w	ip, #2147483648	; 0x80000000
 800ac80:	eb11 010c 	adds.w	r1, r1, ip
 800ac84:	f146 0600 	adc.w	r6, r6, #0
 800ac88:	0fc9      	lsrs	r1, r1, #31
 800ac8a:	ea41 0146 	orr.w	r1, r1, r6, lsl #1
 800ac8e:	f1c1 5100 	rsb	r1, r1, #536870912	; 0x20000000
 800ac92:	0fce      	lsrs	r6, r1, #31
 800ac94:	fb01 f707 	mul.w	r7, r1, r7
 800ac98:	ea4f 7ce1 	mov.w	ip, r1, asr #31
 800ac9c:	454e      	cmp	r6, r9
 800ac9e:	4e2f      	ldr	r6, [pc, #188]	; (800ad5c <forward_lite_nl_softmax_iu8ou8+0x74c>)
 800aca0:	fb00 770c 	mla	r7, r0, ip, r7
 800aca4:	bf08      	it	eq
 800aca6:	f04f 4680 	moveq.w	r6, #1073741824	; 0x40000000
 800acaa:	fba1 0100 	umull	r0, r1, r1, r0
 800acae:	bf0c      	ite	eq
 800acb0:	f04f 0c00 	moveq.w	ip, #0
 800acb4:	f04f 3cff 	movne.w	ip, #4294967295
 800acb8:	440f      	add	r7, r1
 800acba:	1986      	adds	r6, r0, r6
 800acbc:	eb47 070c 	adc.w	r7, r7, ip
 800acc0:	2f00      	cmp	r7, #0
 800acc2:	da04      	bge.n	800acce <forward_lite_nl_softmax_iu8ou8+0x6be>
 800acc4:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800acc8:	1876      	adds	r6, r6, r1
 800acca:	f147 0700 	adc.w	r7, r7, #0
 800acce:	0ff6      	lsrs	r6, r6, #31
 800acd0:	ea46 0647 	orr.w	r6, r6, r7, lsl #1
 800acd4:	f1b6 5f00 	cmp.w	r6, #536870912	; 0x20000000
 800acd8:	4631      	mov	r1, r6
 800acda:	da55      	bge.n	800ad88 <forward_lite_nl_softmax_iu8ou8+0x778>
 800acdc:	f1b6 4f60 	cmp.w	r6, #3758096384	; 0xe0000000
 800ace0:	f300 80b0 	bgt.w	800ae44 <forward_lite_nl_softmax_iu8ou8+0x834>
 800ace4:	f105 4500 	add.w	r5, r5, #2147483648	; 0x80000000
 800ace8:	f1b8 0f00 	cmp.w	r8, #0
 800acec:	d05e      	beq.n	800adac <forward_lite_nl_softmax_iu8ou8+0x79c>
 800acee:	fb05 f202 	mul.w	r2, r5, r2
 800acf2:	17e9      	asrs	r1, r5, #31
 800acf4:	fb03 2201 	mla	r2, r3, r1, r2
 800acf8:	fba5 3003 	umull	r3, r0, r5, r3
 800acfc:	f113 4380 	adds.w	r3, r3, #1073741824	; 0x40000000
 800ad00:	eb42 0200 	adc.w	r2, r2, r0
 800ad04:	2a00      	cmp	r2, #0
 800ad06:	db5f      	blt.n	800adc8 <forward_lite_nl_softmax_iu8ou8+0x7b8>
 800ad08:	0fdb      	lsrs	r3, r3, #31
 800ad0a:	f04f 30ff 	mov.w	r0, #4294967295
 800ad0e:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 800ad12:	4a12      	ldr	r2, [pc, #72]	; (800ad5c <forward_lite_nl_softmax_iu8ou8+0x74c>)
 800ad14:	f1c3 5300 	rsb	r3, r3, #536870912	; 0x20000000
 800ad18:	fb03 f101 	mul.w	r1, r3, r1
 800ad1c:	17de      	asrs	r6, r3, #31
 800ad1e:	fb05 1106 	mla	r1, r5, r6, r1
 800ad22:	fba3 3605 	umull	r3, r6, r3, r5
 800ad26:	189b      	adds	r3, r3, r2
 800ad28:	4431      	add	r1, r6
 800ad2a:	eb41 0000 	adc.w	r0, r1, r0
 800ad2e:	2800      	cmp	r0, #0
 800ad30:	da04      	bge.n	800ad3c <forward_lite_nl_softmax_iu8ou8+0x72c>
 800ad32:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 800ad36:	189b      	adds	r3, r3, r2
 800ad38:	f140 0000 	adc.w	r0, r0, #0
 800ad3c:	0fdb      	lsrs	r3, r3, #31
 800ad3e:	ea43 0340 	orr.w	r3, r3, r0, lsl #1
 800ad42:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800ad46:	db13      	blt.n	800ad70 <forward_lite_nl_softmax_iu8ou8+0x760>
 800ad48:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800ad4c:	4405      	add	r5, r0
 800ad4e:	f1b5 4f80 	cmp.w	r5, #1073741824	; 0x40000000
 800ad52:	f6bf af08 	bge.w	800ab66 <forward_lite_nl_softmax_iu8ou8+0x556>
 800ad56:	e705      	b.n	800ab64 <forward_lite_nl_softmax_iu8ou8+0x554>
 800ad58:	c3c3c3c4 	.word	0xc3c3c3c4
 800ad5c:	c0000001 	.word	0xc0000001
 800ad60:	da5a5a5a 	.word	0xda5a5a5a
 800ad64:	5a5a5a59 	.word	0x5a5a5a59
 800ad68:	b4b4b4b6 	.word	0xb4b4b4b6
 800ad6c:	4b4b4b4a 	.word	0x4b4b4b4a
 800ad70:	f1b3 4f60 	cmp.w	r3, #3758096384	; 0xe0000000
 800ad74:	dc43      	bgt.n	800adfe <forward_lite_nl_softmax_iu8ou8+0x7ee>
 800ad76:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 800ad7a:	0068      	lsls	r0, r5, #1
 800ad7c:	f1b3 4f40 	cmp.w	r3, #3221225472	; 0xc0000000
 800ad80:	bfd8      	it	le
 800ad82:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 800ad86:	e6ee      	b.n	800ab66 <forward_lite_nl_softmax_iu8ou8+0x556>
 800ad88:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800ad8c:	4405      	add	r5, r0
 800ad8e:	ebb8 7fd5 	cmp.w	r8, r5, lsr #31
 800ad92:	ea4f 76d5 	mov.w	r6, r5, lsr #31
 800ad96:	f43f aeb9 	beq.w	800ab0c <forward_lite_nl_softmax_iu8ou8+0x4fc>
 800ad9a:	482d      	ldr	r0, [pc, #180]	; (800ae50 <forward_lite_nl_softmax_iu8ou8+0x840>)
 800ad9c:	f04f 37ff 	mov.w	r7, #4294967295
 800ada0:	e6b7      	b.n	800ab12 <forward_lite_nl_softmax_iu8ou8+0x502>
 800ada2:	f1b1 4f60 	cmp.w	r1, #3758096384	; 0xe0000000
 800ada6:	dc4b      	bgt.n	800ae40 <forward_lite_nl_softmax_iu8ou8+0x830>
 800ada8:	f04f 4500 	mov.w	r5, #2147483648	; 0x80000000
 800adac:	fb05 f202 	mul.w	r2, r5, r2
 800adb0:	17e9      	asrs	r1, r5, #31
 800adb2:	fb03 2201 	mla	r2, r3, r1, r2
 800adb6:	fba5 0303 	umull	r0, r3, r5, r3
 800adba:	441a      	add	r2, r3
 800adbc:	4b24      	ldr	r3, [pc, #144]	; (800ae50 <forward_lite_nl_softmax_iu8ou8+0x840>)
 800adbe:	18c3      	adds	r3, r0, r3
 800adc0:	f162 0200 	sbc.w	r2, r2, #0
 800adc4:	2a00      	cmp	r2, #0
 800adc6:	da9f      	bge.n	800ad08 <forward_lite_nl_softmax_iu8ou8+0x6f8>
 800adc8:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800adcc:	181b      	adds	r3, r3, r0
 800adce:	f142 0200 	adc.w	r2, r2, #0
 800add2:	e799      	b.n	800ad08 <forward_lite_nl_softmax_iu8ou8+0x6f8>
 800add4:	eb00 0581 	add.w	r5, r0, r1, lsl #2
 800add8:	17ef      	asrs	r7, r5, #31
 800adda:	fba3 ec05 	umull	lr, ip, r3, r5
 800adde:	2d00      	cmp	r5, #0
 800ade0:	4628      	mov	r0, r5
 800ade2:	fb03 f107 	mul.w	r1, r3, r7
 800ade6:	fb05 1102 	mla	r1, r5, r2, r1
 800adea:	448c      	add	ip, r1
 800adec:	da2c      	bge.n	800ae48 <forward_lite_nl_softmax_iu8ou8+0x838>
 800adee:	f04f 0901 	mov.w	r9, #1
 800adf2:	f04f 0800 	mov.w	r8, #0
 800adf6:	4916      	ldr	r1, [pc, #88]	; (800ae50 <forward_lite_nl_softmax_iu8ou8+0x840>)
 800adf8:	f04f 36ff 	mov.w	r6, #4294967295
 800adfc:	e738      	b.n	800ac70 <forward_lite_nl_softmax_iu8ou8+0x660>
 800adfe:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 800ae02:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ae06:	db02      	blt.n	800ae0e <forward_lite_nl_softmax_iu8ou8+0x7fe>
 800ae08:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800ae0c:	e6ab      	b.n	800ab66 <forward_lite_nl_softmax_iu8ou8+0x556>
 800ae0e:	0058      	lsls	r0, r3, #1
 800ae10:	e7b4      	b.n	800ad7c <forward_lite_nl_softmax_iu8ou8+0x76c>
 800ae12:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 800ae16:	f04f 0800 	mov.w	r8, #0
 800ae1a:	460d      	mov	r5, r1
 800ae1c:	4641      	mov	r1, r8
 800ae1e:	fbc0 5106 	smlal	r5, r1, r0, r6
 800ae22:	0fed      	lsrs	r5, r5, #31
 800ae24:	ea45 0541 	orr.w	r5, r5, r1, lsl #1
 800ae28:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 800ae2c:	17ef      	asrs	r7, r5, #31
 800ae2e:	fba3 ec05 	umull	lr, ip, r3, r5
 800ae32:	4628      	mov	r0, r5
 800ae34:	fb03 f107 	mul.w	r1, r3, r7
 800ae38:	fb05 1102 	mla	r1, r5, r2, r1
 800ae3c:	448c      	add	ip, r1
 800ae3e:	e713      	b.n	800ac68 <forward_lite_nl_softmax_iu8ou8+0x658>
 800ae40:	f04f 0800 	mov.w	r8, #0
 800ae44:	0088      	lsls	r0, r1, #2
 800ae46:	e7a1      	b.n	800ad8c <forward_lite_nl_softmax_iu8ou8+0x77c>
 800ae48:	f04f 0800 	mov.w	r8, #0
 800ae4c:	e70c      	b.n	800ac68 <forward_lite_nl_softmax_iu8ou8+0x658>
 800ae4e:	bf00      	nop
 800ae50:	c0000001 	.word	0xc0000001

0800ae54 <forward_lite_pad_8bit_ch1st_3x3_constant>:
 800ae54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ae58:	461e      	mov	r6, r3
 800ae5a:	b083      	sub	sp, #12
 800ae5c:	460d      	mov	r5, r1
 800ae5e:	f992 4000 	ldrsb.w	r4, [r2]
 800ae62:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ae64:	2e06      	cmp	r6, #6
 800ae66:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 800ae68:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
 800ae6c:	9301      	str	r3, [sp, #4]
 800ae6e:	f000 8087 	beq.w	800af80 <forward_lite_pad_8bit_ch1st_3x3_constant+0x12c>
 800ae72:	2e03      	cmp	r6, #3
 800ae74:	d055      	beq.n	800af22 <forward_lite_pad_8bit_ch1st_3x3_constant+0xce>
 800ae76:	2b00      	cmp	r3, #0
 800ae78:	db05      	blt.n	800ae86 <forward_lite_pad_8bit_ch1st_3x3_constant+0x32>
 800ae7a:	1c5a      	adds	r2, r3, #1
 800ae7c:	4608      	mov	r0, r1
 800ae7e:	4621      	mov	r1, r4
 800ae80:	4415      	add	r5, r2
 800ae82:	f004 fcb4 	bl	800f7ee <memset>
 800ae86:	f107 38ff 	add.w	r8, r7, #4294967295
 800ae8a:	3e01      	subs	r6, #1
 800ae8c:	f1b8 0f00 	cmp.w	r8, #0
 800ae90:	dd27      	ble.n	800aee2 <forward_lite_pad_8bit_ch1st_3x3_constant+0x8e>
 800ae92:	9b01      	ldr	r3, [sp, #4]
 800ae94:	f109 0702 	add.w	r7, r9, #2
 800ae98:	f04f 0b00 	mov.w	fp, #0
 800ae9c:	1c5a      	adds	r2, r3, #1
 800ae9e:	fb07 f306 	mul.w	r3, r7, r6
 800aea2:	ea4f 0a42 	mov.w	sl, r2, lsl #1
 800aea6:	9300      	str	r3, [sp, #0]
 800aea8:	2e00      	cmp	r6, #0
 800aeaa:	eb05 0109 	add.w	r1, r5, r9
 800aeae:	dd0e      	ble.n	800aece <forward_lite_pad_8bit_ch1st_3x3_constant+0x7a>
 800aeb0:	4608      	mov	r0, r1
 800aeb2:	2500      	movs	r5, #0
 800aeb4:	f04f 0300 	mov.w	r3, #0
 800aeb8:	3501      	adds	r5, #1
 800aeba:	f364 0307 	bfi	r3, r4, #0, #8
 800aebe:	42b5      	cmp	r5, r6
 800aec0:	f364 230f 	bfi	r3, r4, #8, #8
 800aec4:	8003      	strh	r3, [r0, #0]
 800aec6:	4438      	add	r0, r7
 800aec8:	d1f4      	bne.n	800aeb4 <forward_lite_pad_8bit_ch1st_3x3_constant+0x60>
 800aeca:	9b00      	ldr	r3, [sp, #0]
 800aecc:	4419      	add	r1, r3
 800aece:	f10b 0b01 	add.w	fp, fp, #1
 800aed2:	4652      	mov	r2, sl
 800aed4:	4620      	mov	r0, r4
 800aed6:	eb01 050a 	add.w	r5, r1, sl
 800aeda:	f000 fe47 	bl	800bb6c <st_int8_fill>
 800aede:	45c3      	cmp	fp, r8
 800aee0:	d1e2      	bne.n	800aea8 <forward_lite_pad_8bit_ch1st_3x3_constant+0x54>
 800aee2:	2e00      	cmp	r6, #0
 800aee4:	eb05 0009 	add.w	r0, r5, r9
 800aee8:	dd10      	ble.n	800af0c <forward_lite_pad_8bit_ch1st_3x3_constant+0xb8>
 800aeea:	f109 0702 	add.w	r7, r9, #2
 800aeee:	4601      	mov	r1, r0
 800aef0:	2200      	movs	r2, #0
 800aef2:	f04f 0300 	mov.w	r3, #0
 800aef6:	3201      	adds	r2, #1
 800aef8:	f364 0307 	bfi	r3, r4, #0, #8
 800aefc:	42b2      	cmp	r2, r6
 800aefe:	f364 230f 	bfi	r3, r4, #8, #8
 800af02:	800b      	strh	r3, [r1, #0]
 800af04:	4439      	add	r1, r7
 800af06:	d1f4      	bne.n	800aef2 <forward_lite_pad_8bit_ch1st_3x3_constant+0x9e>
 800af08:	fb07 0002 	mla	r0, r7, r2, r0
 800af0c:	9b01      	ldr	r3, [sp, #4]
 800af0e:	2b00      	cmp	r3, #0
 800af10:	db33      	blt.n	800af7a <forward_lite_pad_8bit_ch1st_3x3_constant+0x126>
 800af12:	461a      	mov	r2, r3
 800af14:	4621      	mov	r1, r4
 800af16:	3201      	adds	r2, #1
 800af18:	b003      	add	sp, #12
 800af1a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800af1e:	f004 bc66 	b.w	800f7ee <memset>
 800af22:	b2e2      	uxtb	r2, r4
 800af24:	2f00      	cmp	r7, #0
 800af26:	ea4f 2304 	mov.w	r3, r4, lsl #8
 800af2a:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
 800af2e:	b29b      	uxth	r3, r3
 800af30:	ea4f 4104 	mov.w	r1, r4, lsl #16
 800af34:	ea42 0203 	orr.w	r2, r2, r3
 800af38:	f401 017f 	and.w	r1, r1, #16711680	; 0xff0000
 800af3c:	ea41 0102 	orr.w	r1, r1, r2
 800af40:	b292      	uxth	r2, r2
 800af42:	dd1a      	ble.n	800af7a <forward_lite_pad_8bit_ch1st_3x3_constant+0x126>
 800af44:	eb07 0887 	add.w	r8, r7, r7, lsl #2
 800af48:	eb08 0888 	add.w	r8, r8, r8, lsl #2
 800af4c:	eb05 0008 	add.w	r0, r5, r8
 800af50:	f04f 0300 	mov.w	r3, #0
 800af54:	6029      	str	r1, [r5, #0]
 800af56:	80aa      	strh	r2, [r5, #4]
 800af58:	3519      	adds	r5, #25
 800af5a:	f364 0307 	bfi	r3, r4, #0, #8
 800af5e:	f825 2c0b 	strh.w	r2, [r5, #-11]
 800af62:	f805 4c06 	strb.w	r4, [r5, #-6]
 800af66:	f845 1c05 	str.w	r1, [r5, #-5]
 800af6a:	f364 230f 	bfi	r3, r4, #8, #8
 800af6e:	f805 4c01 	strb.w	r4, [r5, #-1]
 800af72:	4285      	cmp	r5, r0
 800af74:	f825 3c10 	strh.w	r3, [r5, #-16]
 800af78:	d1ea      	bne.n	800af50 <forward_lite_pad_8bit_ch1st_3x3_constant+0xfc>
 800af7a:	b003      	add	sp, #12
 800af7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800af80:	b2e2      	uxtb	r2, r4
 800af82:	2f00      	cmp	r7, #0
 800af84:	ea4f 2304 	mov.w	r3, r4, lsl #8
 800af88:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
 800af8c:	b29b      	uxth	r3, r3
 800af8e:	ea42 0203 	orr.w	r2, r2, r3
 800af92:	ea4f 4304 	mov.w	r3, r4, lsl #16
 800af96:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 800af9a:	ea42 0203 	orr.w	r2, r2, r3
 800af9e:	ddec      	ble.n	800af7a <forward_lite_pad_8bit_ch1st_3x3_constant+0x126>
 800afa0:	350f      	adds	r5, #15
 800afa2:	2100      	movs	r1, #0
 800afa4:	f04f 0300 	mov.w	r3, #0
 800afa8:	3101      	adds	r1, #1
 800afaa:	f845 2c0f 	str.w	r2, [r5, #-15]
 800afae:	3540      	adds	r5, #64	; 0x40
 800afb0:	f364 0307 	bfi	r3, r4, #0, #8
 800afb4:	428f      	cmp	r7, r1
 800afb6:	f845 2c4b 	str.w	r2, [r5, #-75]
 800afba:	f364 230f 	bfi	r3, r4, #8, #8
 800afbe:	f805 4c47 	strb.w	r4, [r5, #-71]
 800afc2:	f805 4c18 	strb.w	r4, [r5, #-24]
 800afc6:	f845 2c17 	str.w	r2, [r5, #-23]
 800afca:	f845 2c13 	str.w	r2, [r5, #-19]
 800afce:	f825 3c40 	strh.w	r3, [r5, #-64]
 800afd2:	f825 3c38 	strh.w	r3, [r5, #-56]
 800afd6:	f825 3c30 	strh.w	r3, [r5, #-48]
 800afda:	f825 3c28 	strh.w	r3, [r5, #-40]
 800afde:	f825 3c20 	strh.w	r3, [r5, #-32]
 800afe2:	d1df      	bne.n	800afa4 <forward_lite_pad_8bit_ch1st_3x3_constant+0x150>
 800afe4:	b003      	add	sp, #12
 800afe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800afea:	bf00      	nop

0800afec <forward_lite_pad_constant>:
 800afec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aff0:	b085      	sub	sp, #20
 800aff2:	4616      	mov	r6, r2
 800aff4:	4681      	mov	r9, r0
 800aff6:	2b08      	cmp	r3, #8
 800aff8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800affa:	460c      	mov	r4, r1
 800affc:	9201      	str	r2, [sp, #4]
 800affe:	e9dd 2011 	ldrd	r2, r0, [sp, #68]	; 0x44
 800b002:	e9dd 5a0f 	ldrd	r5, sl, [sp, #60]	; 0x3c
 800b006:	e9dd 7813 	ldrd	r7, r8, [sp, #76]	; 0x4c
 800b00a:	9002      	str	r0, [sp, #8]
 800b00c:	d051      	beq.n	800b0b2 <forward_lite_pad_constant+0xc6>
 800b00e:	2a00      	cmp	r2, #0
 800b010:	dd11      	ble.n	800b036 <forward_lite_pad_constant+0x4a>
 800b012:	f8cd 8000 	str.w	r8, [sp]
 800b016:	f04f 0b00 	mov.w	fp, #0
 800b01a:	46b8      	mov	r8, r7
 800b01c:	4617      	mov	r7, r2
 800b01e:	44ab      	add	fp, r5
 800b020:	4621      	mov	r1, r4
 800b022:	462a      	mov	r2, r5
 800b024:	4630      	mov	r0, r6
 800b026:	f000 fdff 	bl	800bc28 <st_int8_copy>
 800b02a:	455f      	cmp	r7, fp
 800b02c:	442c      	add	r4, r5
 800b02e:	dcf6      	bgt.n	800b01e <forward_lite_pad_constant+0x32>
 800b030:	4647      	mov	r7, r8
 800b032:	f8dd 8000 	ldr.w	r8, [sp]
 800b036:	9b01      	ldr	r3, [sp, #4]
 800b038:	2b00      	cmp	r3, #0
 800b03a:	dd29      	ble.n	800b090 <forward_lite_pad_constant+0xa4>
 800b03c:	2300      	movs	r3, #0
 800b03e:	9300      	str	r3, [sp, #0]
 800b040:	2f00      	cmp	r7, #0
 800b042:	dd0a      	ble.n	800b05a <forward_lite_pad_constant+0x6e>
 800b044:	f04f 0b00 	mov.w	fp, #0
 800b048:	44ab      	add	fp, r5
 800b04a:	4621      	mov	r1, r4
 800b04c:	462a      	mov	r2, r5
 800b04e:	4630      	mov	r0, r6
 800b050:	f000 fdea 	bl	800bc28 <st_int8_copy>
 800b054:	455f      	cmp	r7, fp
 800b056:	442c      	add	r4, r5
 800b058:	dcf6      	bgt.n	800b048 <forward_lite_pad_constant+0x5c>
 800b05a:	4621      	mov	r1, r4
 800b05c:	4648      	mov	r0, r9
 800b05e:	4652      	mov	r2, sl
 800b060:	4454      	add	r4, sl
 800b062:	f000 fde1 	bl	800bc28 <st_int8_copy>
 800b066:	f1b8 0f00 	cmp.w	r8, #0
 800b06a:	44d1      	add	r9, sl
 800b06c:	dd0a      	ble.n	800b084 <forward_lite_pad_constant+0x98>
 800b06e:	f04f 0b00 	mov.w	fp, #0
 800b072:	44ab      	add	fp, r5
 800b074:	4621      	mov	r1, r4
 800b076:	462a      	mov	r2, r5
 800b078:	4630      	mov	r0, r6
 800b07a:	f000 fdd5 	bl	800bc28 <st_int8_copy>
 800b07e:	45d8      	cmp	r8, fp
 800b080:	442c      	add	r4, r5
 800b082:	dcf6      	bgt.n	800b072 <forward_lite_pad_constant+0x86>
 800b084:	9b00      	ldr	r3, [sp, #0]
 800b086:	9a01      	ldr	r2, [sp, #4]
 800b088:	3301      	adds	r3, #1
 800b08a:	429a      	cmp	r2, r3
 800b08c:	9300      	str	r3, [sp, #0]
 800b08e:	d1d7      	bne.n	800b040 <forward_lite_pad_constant+0x54>
 800b090:	9b02      	ldr	r3, [sp, #8]
 800b092:	2b00      	cmp	r3, #0
 800b094:	dd0a      	ble.n	800b0ac <forward_lite_pad_constant+0xc0>
 800b096:	2700      	movs	r7, #0
 800b098:	4698      	mov	r8, r3
 800b09a:	442f      	add	r7, r5
 800b09c:	4621      	mov	r1, r4
 800b09e:	462a      	mov	r2, r5
 800b0a0:	4630      	mov	r0, r6
 800b0a2:	f000 fdc1 	bl	800bc28 <st_int8_copy>
 800b0a6:	45b8      	cmp	r8, r7
 800b0a8:	442c      	add	r4, r5
 800b0aa:	dcf6      	bgt.n	800b09a <forward_lite_pad_constant+0xae>
 800b0ac:	b005      	add	sp, #20
 800b0ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b0b2:	f996 5000 	ldrsb.w	r5, [r6]
 800b0b6:	4414      	add	r4, r2
 800b0b8:	4628      	mov	r0, r5
 800b0ba:	9403      	str	r4, [sp, #12]
 800b0bc:	f000 fd56 	bl	800bb6c <st_int8_fill>
 800b0c0:	9b01      	ldr	r3, [sp, #4]
 800b0c2:	4626      	mov	r6, r4
 800b0c4:	2b00      	cmp	r3, #0
 800b0c6:	dd29      	ble.n	800b11c <forward_lite_pad_constant+0x130>
 800b0c8:	eb0a 0308 	add.w	r3, sl, r8
 800b0cc:	f04f 0b00 	mov.w	fp, #0
 800b0d0:	443c      	add	r4, r7
 800b0d2:	443b      	add	r3, r7
 800b0d4:	9300      	str	r3, [sp, #0]
 800b0d6:	4643      	mov	r3, r8
 800b0d8:	46d8      	mov	r8, fp
 800b0da:	469b      	mov	fp, r3
 800b0dc:	9b00      	ldr	r3, [sp, #0]
 800b0de:	4631      	mov	r1, r6
 800b0e0:	463a      	mov	r2, r7
 800b0e2:	4628      	mov	r0, r5
 800b0e4:	441e      	add	r6, r3
 800b0e6:	f000 fd41 	bl	800bb6c <st_int8_fill>
 800b0ea:	4621      	mov	r1, r4
 800b0ec:	4648      	mov	r0, r9
 800b0ee:	4652      	mov	r2, sl
 800b0f0:	f108 0801 	add.w	r8, r8, #1
 800b0f4:	f000 fd98 	bl	800bc28 <st_int8_copy>
 800b0f8:	9b00      	ldr	r3, [sp, #0]
 800b0fa:	eb04 010a 	add.w	r1, r4, sl
 800b0fe:	465a      	mov	r2, fp
 800b100:	4628      	mov	r0, r5
 800b102:	441c      	add	r4, r3
 800b104:	f000 fd32 	bl	800bb6c <st_int8_fill>
 800b108:	9b01      	ldr	r3, [sp, #4]
 800b10a:	44d1      	add	r9, sl
 800b10c:	4543      	cmp	r3, r8
 800b10e:	d1e5      	bne.n	800b0dc <forward_lite_pad_constant+0xf0>
 800b110:	461a      	mov	r2, r3
 800b112:	9900      	ldr	r1, [sp, #0]
 800b114:	9b03      	ldr	r3, [sp, #12]
 800b116:	fb01 3302 	mla	r3, r1, r2, r3
 800b11a:	9303      	str	r3, [sp, #12]
 800b11c:	4628      	mov	r0, r5
 800b11e:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 800b122:	b005      	add	sp, #20
 800b124:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b128:	f000 bd20 	b.w	800bb6c <st_int8_fill>

0800b12c <forward_lite_pad_edge>:
 800b12c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b130:	ed2d 8b02 	vpush	{d8}
 800b134:	b087      	sub	sp, #28
 800b136:	9305      	str	r3, [sp, #20]
 800b138:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800b13a:	f9bd 8048 	ldrsh.w	r8, [sp, #72]	; 0x48
 800b13e:	18cd      	adds	r5, r1, r3
 800b140:	1e13      	subs	r3, r2, #0
 800b142:	f8dd 905c 	ldr.w	r9, [sp, #92]	; 0x5c
 800b146:	9103      	str	r1, [sp, #12]
 800b148:	9504      	str	r5, [sp, #16]
 800b14a:	9301      	str	r3, [sp, #4]
 800b14c:	e9dd 4a14 	ldrd	r4, sl, [sp, #80]	; 0x50
 800b150:	dd36      	ble.n	800b1c0 <forward_lite_pad_edge+0x94>
 800b152:	fb04 f308 	mul.w	r3, r4, r8
 800b156:	4607      	mov	r7, r0
 800b158:	ee08 aa10 	vmov	s16, sl
 800b15c:	9302      	str	r3, [sp, #8]
 800b15e:	2300      	movs	r3, #0
 800b160:	9300      	str	r3, [sp, #0]
 800b162:	f1b9 0f00 	cmp.w	r9, #0
 800b166:	dd09      	ble.n	800b17c <forward_lite_pad_edge+0x50>
 800b168:	2600      	movs	r6, #0
 800b16a:	4426      	add	r6, r4
 800b16c:	4629      	mov	r1, r5
 800b16e:	4622      	mov	r2, r4
 800b170:	4638      	mov	r0, r7
 800b172:	f000 fd59 	bl	800bc28 <st_int8_copy>
 800b176:	45b1      	cmp	r9, r6
 800b178:	4425      	add	r5, r4
 800b17a:	dcf6      	bgt.n	800b16a <forward_lite_pad_edge+0x3e>
 800b17c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800b17e:	4638      	mov	r0, r7
 800b180:	4629      	mov	r1, r5
 800b182:	461a      	mov	r2, r3
 800b184:	441f      	add	r7, r3
 800b186:	441d      	add	r5, r3
 800b188:	f000 fd4e 	bl	800bc28 <st_int8_copy>
 800b18c:	f1b8 0f00 	cmp.w	r8, #0
 800b190:	eba7 0a04 	sub.w	sl, r7, r4
 800b194:	dd0c      	ble.n	800b1b0 <forward_lite_pad_edge+0x84>
 800b196:	46ab      	mov	fp, r5
 800b198:	2600      	movs	r6, #0
 800b19a:	3601      	adds	r6, #1
 800b19c:	4659      	mov	r1, fp
 800b19e:	4622      	mov	r2, r4
 800b1a0:	4650      	mov	r0, sl
 800b1a2:	f000 fd41 	bl	800bc28 <st_int8_copy>
 800b1a6:	4546      	cmp	r6, r8
 800b1a8:	44a3      	add	fp, r4
 800b1aa:	d1f6      	bne.n	800b19a <forward_lite_pad_edge+0x6e>
 800b1ac:	9b02      	ldr	r3, [sp, #8]
 800b1ae:	441d      	add	r5, r3
 800b1b0:	9b00      	ldr	r3, [sp, #0]
 800b1b2:	9a01      	ldr	r2, [sp, #4]
 800b1b4:	3301      	adds	r3, #1
 800b1b6:	429a      	cmp	r2, r3
 800b1b8:	9300      	str	r3, [sp, #0]
 800b1ba:	d1d2      	bne.n	800b162 <forward_lite_pad_edge+0x36>
 800b1bc:	ee18 aa10 	vmov	sl, s16
 800b1c0:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
 800b1c4:	4293      	cmp	r3, r2
 800b1c6:	d009      	beq.n	800b1dc <forward_lite_pad_edge+0xb0>
 800b1c8:	461c      	mov	r4, r3
 800b1ca:	4615      	mov	r5, r2
 800b1cc:	4621      	mov	r1, r4
 800b1ce:	4454      	add	r4, sl
 800b1d0:	4652      	mov	r2, sl
 800b1d2:	4628      	mov	r0, r5
 800b1d4:	f000 fd28 	bl	800bc28 <st_int8_copy>
 800b1d8:	42a5      	cmp	r5, r4
 800b1da:	d1f7      	bne.n	800b1cc <forward_lite_pad_edge+0xa0>
 800b1dc:	9b01      	ldr	r3, [sp, #4]
 800b1de:	9d05      	ldr	r5, [sp, #20]
 800b1e0:	441d      	add	r5, r3
 800b1e2:	9b03      	ldr	r3, [sp, #12]
 800b1e4:	3d01      	subs	r5, #1
 800b1e6:	fb0a 3505 	mla	r5, sl, r5, r3
 800b1ea:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800b1ec:	18ec      	adds	r4, r5, r3
 800b1ee:	42a5      	cmp	r5, r4
 800b1f0:	d009      	beq.n	800b206 <forward_lite_pad_edge+0xda>
 800b1f2:	f1ca 0600 	rsb	r6, sl, #0
 800b1f6:	4621      	mov	r1, r4
 800b1f8:	4434      	add	r4, r6
 800b1fa:	4652      	mov	r2, sl
 800b1fc:	4628      	mov	r0, r5
 800b1fe:	f000 fd13 	bl	800bc28 <st_int8_copy>
 800b202:	42a5      	cmp	r5, r4
 800b204:	d1f7      	bne.n	800b1f6 <forward_lite_pad_edge+0xca>
 800b206:	b007      	add	sp, #28
 800b208:	ecbd 8b02 	vpop	{d8}
 800b20c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b210 <forward_lite_pad_reflect>:
 800b210:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b214:	b08f      	sub	sp, #60	; 0x3c
 800b216:	460e      	mov	r6, r1
 800b218:	2b00      	cmp	r3, #0
 800b21a:	4684      	mov	ip, r0
 800b21c:	f9bd 5080 	ldrsh.w	r5, [sp, #128]	; 0x80
 800b220:	9f22      	ldr	r7, [sp, #136]	; 0x88
 800b222:	f9bd e084 	ldrsh.w	lr, [sp, #132]	; 0x84
 800b226:	910b      	str	r1, [sp, #44]	; 0x2c
 800b228:	4437      	add	r7, r6
 800b22a:	9002      	str	r0, [sp, #8]
 800b22c:	950c      	str	r5, [sp, #48]	; 0x30
 800b22e:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b230:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800b234:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800b236:	f8dd 9078 	ldr.w	r9, [sp, #120]	; 0x78
 800b23a:	f9bd 007c 	ldrsh.w	r0, [sp, #124]	; 0x7c
 800b23e:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 800b240:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 800b244:	9307      	str	r3, [sp, #28]
 800b246:	dd58      	ble.n	800b2fa <forward_lite_pad_reflect+0xea>
 800b248:	4408      	add	r0, r1
 800b24a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800b24c:	f1c9 0a00 	rsb	sl, r9, #0
 800b250:	fb02 f200 	mul.w	r2, r2, r0
 800b254:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800b256:	4403      	add	r3, r0
 800b258:	9206      	str	r2, [sp, #24]
 800b25a:	442b      	add	r3, r5
 800b25c:	930a      	str	r3, [sp, #40]	; 0x28
 800b25e:	197b      	adds	r3, r7, r5
 800b260:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800b262:	9301      	str	r3, [sp, #4]
 800b264:	1e8b      	subs	r3, r1, #2
 800b266:	fb04 f101 	mul.w	r1, r4, r1
 800b26a:	fb04 c303 	mla	r3, r4, r3, ip
 800b26e:	9109      	str	r1, [sp, #36]	; 0x24
 800b270:	9304      	str	r3, [sp, #16]
 800b272:	fb08 2305 	mla	r3, r8, r5, r2
 800b276:	fb09 6303 	mla	r3, r9, r3, r6
 800b27a:	9303      	str	r3, [sp, #12]
 800b27c:	fb09 f308 	mul.w	r3, r9, r8
 800b280:	9308      	str	r3, [sp, #32]
 800b282:	2300      	movs	r3, #0
 800b284:	9305      	str	r3, [sp, #20]
 800b286:	9b01      	ldr	r3, [sp, #4]
 800b288:	42bb      	cmp	r3, r7
 800b28a:	d00a      	beq.n	800b2a2 <forward_lite_pad_reflect+0x92>
 800b28c:	461d      	mov	r5, r3
 800b28e:	9e02      	ldr	r6, [sp, #8]
 800b290:	4455      	add	r5, sl
 800b292:	4426      	add	r6, r4
 800b294:	4622      	mov	r2, r4
 800b296:	4629      	mov	r1, r5
 800b298:	4630      	mov	r0, r6
 800b29a:	f000 fcc5 	bl	800bc28 <st_int8_copy>
 800b29e:	42bd      	cmp	r5, r7
 800b2a0:	d1f6      	bne.n	800b290 <forward_lite_pad_reflect+0x80>
 800b2a2:	9b02      	ldr	r3, [sp, #8]
 800b2a4:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800b2a6:	4618      	mov	r0, r3
 800b2a8:	9901      	ldr	r1, [sp, #4]
 800b2aa:	4413      	add	r3, r2
 800b2ac:	9302      	str	r3, [sp, #8]
 800b2ae:	f000 fcbb 	bl	800bc28 <st_int8_copy>
 800b2b2:	9b06      	ldr	r3, [sp, #24]
 800b2b4:	4543      	cmp	r3, r8
 800b2b6:	da0d      	bge.n	800b2d4 <forward_lite_pad_reflect+0xc4>
 800b2b8:	461d      	mov	r5, r3
 800b2ba:	e9dd b603 	ldrd	fp, r6, [sp, #12]
 800b2be:	3501      	adds	r5, #1
 800b2c0:	4659      	mov	r1, fp
 800b2c2:	4630      	mov	r0, r6
 800b2c4:	4622      	mov	r2, r4
 800b2c6:	f000 fcaf 	bl	800bc28 <st_int8_copy>
 800b2ca:	45a8      	cmp	r8, r5
 800b2cc:	44cb      	add	fp, r9
 800b2ce:	eba6 0604 	sub.w	r6, r6, r4
 800b2d2:	d1f4      	bne.n	800b2be <forward_lite_pad_reflect+0xae>
 800b2d4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b2d6:	9901      	ldr	r1, [sp, #4]
 800b2d8:	4417      	add	r7, r2
 800b2da:	9b05      	ldr	r3, [sp, #20]
 800b2dc:	4411      	add	r1, r2
 800b2de:	9a04      	ldr	r2, [sp, #16]
 800b2e0:	3301      	adds	r3, #1
 800b2e2:	9101      	str	r1, [sp, #4]
 800b2e4:	9909      	ldr	r1, [sp, #36]	; 0x24
 800b2e6:	9305      	str	r3, [sp, #20]
 800b2e8:	440a      	add	r2, r1
 800b2ea:	9908      	ldr	r1, [sp, #32]
 800b2ec:	9204      	str	r2, [sp, #16]
 800b2ee:	9a03      	ldr	r2, [sp, #12]
 800b2f0:	440a      	add	r2, r1
 800b2f2:	9203      	str	r2, [sp, #12]
 800b2f4:	9a07      	ldr	r2, [sp, #28]
 800b2f6:	429a      	cmp	r2, r3
 800b2f8:	d1c5      	bne.n	800b286 <forward_lite_pad_reflect+0x76>
 800b2fa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800b2fc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800b2fe:	fb03 f404 	mul.w	r4, r3, r4
 800b302:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b304:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 800b308:	42a3      	cmp	r3, r4
 800b30a:	d00c      	beq.n	800b326 <forward_lite_pad_reflect+0x116>
 800b30c:	461d      	mov	r5, r3
 800b30e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800b310:	425e      	negs	r6, r3
 800b312:	461f      	mov	r7, r3
 800b314:	4629      	mov	r1, r5
 800b316:	4620      	mov	r0, r4
 800b318:	443d      	add	r5, r7
 800b31a:	4434      	add	r4, r6
 800b31c:	463a      	mov	r2, r7
 800b31e:	f000 fc83 	bl	800bc28 <st_int8_copy>
 800b322:	42a5      	cmp	r5, r4
 800b324:	d1f6      	bne.n	800b314 <forward_lite_pad_reflect+0x104>
 800b326:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b328:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800b32a:	1e5c      	subs	r4, r3, #1
 800b32c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800b32e:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800b330:	fb03 f505 	mul.w	r5, r3, r5
 800b334:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b336:	fb02 3404 	mla	r4, r2, r4, r3
 800b33a:	eba4 0545 	sub.w	r5, r4, r5, lsl #1
 800b33e:	42ac      	cmp	r4, r5
 800b340:	d00a      	beq.n	800b358 <forward_lite_pad_reflect+0x148>
 800b342:	4256      	negs	r6, r2
 800b344:	4617      	mov	r7, r2
 800b346:	4621      	mov	r1, r4
 800b348:	4628      	mov	r0, r5
 800b34a:	4434      	add	r4, r6
 800b34c:	443d      	add	r5, r7
 800b34e:	463a      	mov	r2, r7
 800b350:	f000 fc6a 	bl	800bc28 <st_int8_copy>
 800b354:	42ac      	cmp	r4, r5
 800b356:	d1f6      	bne.n	800b346 <forward_lite_pad_reflect+0x136>
 800b358:	b00f      	add	sp, #60	; 0x3c
 800b35a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b35e:	bf00      	nop

0800b360 <align_factor>:
 800b360:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800b364:	4602      	mov	r2, r0
 800b366:	b508      	push	{r3, lr}
 800b368:	eeb4 0a67 	vcmp.f32	s0, s15
 800b36c:	2300      	movs	r3, #0
 800b36e:	8003      	strh	r3, [r0, #0]
 800b370:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b374:	d524      	bpl.n	800b3c0 <align_factor+0x60>
 800b376:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800b37a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b37e:	dd1f      	ble.n	800b3c0 <align_factor+0x60>
 800b380:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800b384:	2301      	movs	r3, #1
 800b386:	e005      	b.n	800b394 <align_factor+0x34>
 800b388:	8013      	strh	r3, [r2, #0]
 800b38a:	b28b      	uxth	r3, r1
 800b38c:	ee30 0a00 	vadd.f32	s0, s0, s0
 800b390:	2b21      	cmp	r3, #33	; 0x21
 800b392:	d02b      	beq.n	800b3ec <align_factor+0x8c>
 800b394:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800b398:	1c59      	adds	r1, r3, #1
 800b39a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b39e:	d4f3      	bmi.n	800b388 <align_factor+0x28>
 800b3a0:	eddf 7a17 	vldr	s15, [pc, #92]	; 800b400 <align_factor+0xa0>
 800b3a4:	ee60 7a27 	vmul.f32	s15, s0, s15
 800b3a8:	ee17 0a90 	vmov	r0, s15
 800b3ac:	f7f5 f974 	bl	8000698 <__aeabi_f2lz>
 800b3b0:	ebb1 7fe0 	cmp.w	r1, r0, asr #31
 800b3b4:	d003      	beq.n	800b3be <align_factor+0x5e>
 800b3b6:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800b3ba:	ea80 70e1 	eor.w	r0, r0, r1, asr #31
 800b3be:	bd08      	pop	{r3, pc}
 800b3c0:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800b3c4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b3c8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b3cc:	f64f 70e0 	movw	r0, #65504	; 0xffe0
 800b3d0:	e005      	b.n	800b3de <align_factor+0x7e>
 800b3d2:	8013      	strh	r3, [r2, #0]
 800b3d4:	b28b      	uxth	r3, r1
 800b3d6:	ee20 0a07 	vmul.f32	s0, s0, s14
 800b3da:	4283      	cmp	r3, r0
 800b3dc:	d00a      	beq.n	800b3f4 <align_factor+0x94>
 800b3de:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800b3e2:	1e59      	subs	r1, r3, #1
 800b3e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b3e8:	dcf3      	bgt.n	800b3d2 <align_factor+0x72>
 800b3ea:	e7d9      	b.n	800b3a0 <align_factor+0x40>
 800b3ec:	2300      	movs	r3, #0
 800b3ee:	4618      	mov	r0, r3
 800b3f0:	8013      	strh	r3, [r2, #0]
 800b3f2:	bd08      	pop	{r3, pc}
 800b3f4:	f64f 73e2 	movw	r3, #65506	; 0xffe2
 800b3f8:	ee30 0a00 	vadd.f32	s0, s0, s0
 800b3fc:	8013      	strh	r3, [r2, #0]
 800b3fe:	e7cf      	b.n	800b3a0 <align_factor+0x40>
 800b400:	4f000000 	.word	0x4f000000

0800b404 <align_factor_ch>:
 800b404:	b361      	cbz	r1, 800b460 <align_factor_ch+0x5c>
 800b406:	ee80 7a20 	vdiv.f32	s14, s0, s1
 800b40a:	f1a2 0c04 	sub.w	ip, r2, #4
 800b40e:	b530      	push	{r4, r5, lr}
 800b410:	f1a3 0e02 	sub.w	lr, r3, #2
 800b414:	eb00 0481 	add.w	r4, r0, r1, lsl #2
 800b418:	2500      	movs	r5, #0
 800b41a:	ecf0 7a01 	vldmia	r0!, {s15}
 800b41e:	ee67 7a27 	vmul.f32	s15, s14, s15
 800b422:	ee17 2a90 	vmov	r2, s15
 800b426:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 800b42a:	f3c2 0316 	ubfx	r3, r2, #0, #23
 800b42e:	2a00      	cmp	r2, #0
 800b430:	f503 0300 	add.w	r3, r3, #8388608	; 0x800000
 800b434:	f1c1 017e 	rsb	r1, r1, #126	; 0x7e
 800b438:	bfb8      	it	lt
 800b43a:	425b      	neglt	r3, r3
 800b43c:	291f      	cmp	r1, #31
 800b43e:	ea4f 13c3 	mov.w	r3, r3, lsl #7
 800b442:	dc06      	bgt.n	800b452 <align_factor_ch+0x4e>
 800b444:	4284      	cmp	r4, r0
 800b446:	f82e 1f02 	strh.w	r1, [lr, #2]!
 800b44a:	f84c 3f04 	str.w	r3, [ip, #4]!
 800b44e:	d1e4      	bne.n	800b41a <align_factor_ch+0x16>
 800b450:	bd30      	pop	{r4, r5, pc}
 800b452:	4284      	cmp	r4, r0
 800b454:	f82e 5f02 	strh.w	r5, [lr, #2]!
 800b458:	f84c 5f04 	str.w	r5, [ip, #4]!
 800b45c:	d1dd      	bne.n	800b41a <align_factor_ch+0x16>
 800b45e:	bd30      	pop	{r4, r5, pc}
 800b460:	4770      	bx	lr
 800b462:	bf00      	nop

0800b464 <st_sssa8_ch_convolve_rank1upd>:
 800b464:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b468:	b085      	sub	sp, #20
 800b46a:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 800b46e:	f99d b040 	ldrsb.w	fp, [sp, #64]	; 0x40
 800b472:	fb13 f304 	smulbb	r3, r3, r4
 800b476:	460c      	mov	r4, r1
 800b478:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800b47a:	fb13 f500 	smulbb	r5, r3, r0
 800b47e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b480:	2a00      	cmp	r2, #0
 800b482:	d070      	beq.n	800b566 <st_sssa8_ch_convolve_rank1upd+0x102>
 800b484:	b2ad      	uxth	r5, r5
 800b486:	f1a1 0904 	sub.w	r9, r1, #4
 800b48a:	eb03 0a82 	add.w	sl, r3, r2, lsl #2
 800b48e:	08af      	lsrs	r7, r5, #2
 800b490:	f005 0503 	and.w	r5, r5, #3
 800b494:	eb03 08c2 	add.w	r8, r3, r2, lsl #3
 800b498:	1e69      	subs	r1, r5, #1
 800b49a:	f1a7 0381 	sub.w	r3, r7, #129	; 0x81
 800b49e:	f1a7 0280 	sub.w	r2, r7, #128	; 0x80
 800b4a2:	f3c3 13c8 	ubfx	r3, r3, #7, #9
 800b4a6:	b289      	uxth	r1, r1
 800b4a8:	9100      	str	r1, [sp, #0]
 800b4aa:	ebc3 2143 	rsb	r1, r3, r3, lsl #9
 800b4ae:	eb02 12c1 	add.w	r2, r2, r1, lsl #7
 800b4b2:	b292      	uxth	r2, r2
 800b4b4:	9202      	str	r2, [sp, #8]
 800b4b6:	025a      	lsls	r2, r3, #9
 800b4b8:	3301      	adds	r3, #1
 800b4ba:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800b4be:	025b      	lsls	r3, r3, #9
 800b4c0:	9203      	str	r2, [sp, #12]
 800b4c2:	9301      	str	r3, [sp, #4]
 800b4c4:	2f80      	cmp	r7, #128	; 0x80
 800b4c6:	d953      	bls.n	800b570 <st_sssa8_ch_convolve_rank1upd+0x10c>
 800b4c8:	9b03      	ldr	r3, [sp, #12]
 800b4ca:	f504 7000 	add.w	r0, r4, #512	; 0x200
 800b4ce:	2600      	movs	r6, #0
 800b4d0:	eb04 0c03 	add.w	ip, r4, r3
 800b4d4:	f5a0 7100 	sub.w	r1, r0, #512	; 0x200
 800b4d8:	2200      	movs	r2, #0
 800b4da:	f851 3b04 	ldr.w	r3, [r1], #4
 800b4de:	fa2f fe83 	sxtb16	lr, r3
 800b4e2:	4281      	cmp	r1, r0
 800b4e4:	ea4f 2333 	mov.w	r3, r3, ror #8
 800b4e8:	fa92 f21e 	qadd16	r2, r2, lr
 800b4ec:	fa2f f383 	sxtb16	r3, r3
 800b4f0:	fa92 f213 	qadd16	r2, r2, r3
 800b4f4:	d1f1      	bne.n	800b4da <st_sssa8_ch_convolve_rank1upd+0x76>
 800b4f6:	f501 7000 	add.w	r0, r1, #512	; 0x200
 800b4fa:	b213      	sxth	r3, r2
 800b4fc:	4560      	cmp	r0, ip
 800b4fe:	eb03 4222 	add.w	r2, r3, r2, asr #16
 800b502:	4416      	add	r6, r2
 800b504:	d1e6      	bne.n	800b4d4 <st_sssa8_ch_convolve_rank1upd+0x70>
 800b506:	9b01      	ldr	r3, [sp, #4]
 800b508:	18e1      	adds	r1, r4, r3
 800b50a:	9c02      	ldr	r4, [sp, #8]
 800b50c:	b374      	cbz	r4, 800b56c <st_sssa8_ch_convolve_rank1upd+0x108>
 800b50e:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 800b512:	2200      	movs	r2, #0
 800b514:	f851 3b04 	ldr.w	r3, [r1], #4
 800b518:	fa2f f083 	sxtb16	r0, r3
 800b51c:	428c      	cmp	r4, r1
 800b51e:	ea4f 2333 	mov.w	r3, r3, ror #8
 800b522:	fa92 f210 	qadd16	r2, r2, r0
 800b526:	fa2f f383 	sxtb16	r3, r3
 800b52a:	fa92 f213 	qadd16	r2, r2, r3
 800b52e:	d1f1      	bne.n	800b514 <st_sssa8_ch_convolve_rank1upd+0xb0>
 800b530:	b213      	sxth	r3, r2
 800b532:	eb03 4322 	add.w	r3, r3, r2, asr #16
 800b536:	441e      	add	r6, r3
 800b538:	b16d      	cbz	r5, 800b556 <st_sssa8_ch_convolve_rank1upd+0xf2>
 800b53a:	f994 3000 	ldrsb.w	r3, [r4]
 800b53e:	441e      	add	r6, r3
 800b540:	9b00      	ldr	r3, [sp, #0]
 800b542:	b13b      	cbz	r3, 800b554 <st_sssa8_ch_convolve_rank1upd+0xf0>
 800b544:	f994 3001 	ldrsb.w	r3, [r4, #1]
 800b548:	2d02      	cmp	r5, #2
 800b54a:	441e      	add	r6, r3
 800b54c:	d002      	beq.n	800b554 <st_sssa8_ch_convolve_rank1upd+0xf0>
 800b54e:	f994 3002 	ldrsb.w	r3, [r4, #2]
 800b552:	441e      	add	r6, r3
 800b554:	442c      	add	r4, r5
 800b556:	f859 3f04 	ldr.w	r3, [r9, #4]!
 800b55a:	fb0b 3616 	mls	r6, fp, r6, r3
 800b55e:	f84a 6b04 	str.w	r6, [sl], #4
 800b562:	45c2      	cmp	sl, r8
 800b564:	d1ae      	bne.n	800b4c4 <st_sssa8_ch_convolve_rank1upd+0x60>
 800b566:	b005      	add	sp, #20
 800b568:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b56c:	460c      	mov	r4, r1
 800b56e:	e7e3      	b.n	800b538 <st_sssa8_ch_convolve_rank1upd+0xd4>
 800b570:	4621      	mov	r1, r4
 800b572:	2600      	movs	r6, #0
 800b574:	463c      	mov	r4, r7
 800b576:	e7c9      	b.n	800b50c <st_sssa8_ch_convolve_rank1upd+0xa8>

0800b578 <st_sssa8_fully_connected>:
 800b578:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b57c:	b097      	sub	sp, #92	; 0x5c
 800b57e:	460d      	mov	r5, r1
 800b580:	4683      	mov	fp, r0
 800b582:	9c20      	ldr	r4, [sp, #128]	; 0x80
 800b584:	9313      	str	r3, [sp, #76]	; 0x4c
 800b586:	6823      	ldr	r3, [r4, #0]
 800b588:	9203      	str	r2, [sp, #12]
 800b58a:	9307      	str	r3, [sp, #28]
 800b58c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800b58e:	f99d 6088 	ldrsb.w	r6, [sp, #136]	; 0x88
 800b592:	f9b3 1000 	ldrsh.w	r1, [r3]
 800b596:	f99d 308c 	ldrsb.w	r3, [sp, #140]	; 0x8c
 800b59a:	1e4a      	subs	r2, r1, #1
 800b59c:	9104      	str	r1, [sp, #16]
 800b59e:	920d      	str	r2, [sp, #52]	; 0x34
 800b5a0:	b292      	uxth	r2, r2
 800b5a2:	2a14      	cmp	r2, #20
 800b5a4:	f200 81b3 	bhi.w	800b90e <st_sssa8_fully_connected+0x396>
 800b5a8:	2201      	movs	r2, #1
 800b5aa:	408b      	lsls	r3, r1
 800b5ac:	408a      	lsls	r2, r1
 800b5ae:	eb03 0352 	add.w	r3, r3, r2, lsr #1
 800b5b2:	9308      	str	r3, [sp, #32]
 800b5b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800b5b6:	2b00      	cmp	r3, #0
 800b5b8:	f000 81ae 	beq.w	800b918 <st_sssa8_fully_connected+0x3a0>
 800b5bc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800b5be:	b2b3      	uxth	r3, r6
 800b5c0:	9600      	str	r6, [sp, #0]
 800b5c2:	4658      	mov	r0, fp
 800b5c4:	0851      	lsrs	r1, r2, #1
 800b5c6:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 800b5ca:	9e03      	ldr	r6, [sp, #12]
 800b5cc:	460c      	mov	r4, r1
 800b5ce:	9115      	str	r1, [sp, #84]	; 0x54
 800b5d0:	4632      	mov	r2, r6
 800b5d2:	9926      	ldr	r1, [sp, #152]	; 0x98
 800b5d4:	f000 fbb0 	bl	800bd38 <st_int8_reordered_no_shift_zero>
 800b5d8:	4621      	mov	r1, r4
 800b5da:	2c00      	cmp	r4, #0
 800b5dc:	f000 8145 	beq.w	800b86a <st_sssa8_fully_connected+0x2f2>
 800b5e0:	4634      	mov	r4, r6
 800b5e2:	f1a6 0310 	sub.w	r3, r6, #16
 800b5e6:	9e04      	ldr	r6, [sp, #16]
 800b5e8:	1e4a      	subs	r2, r1, #1
 800b5ea:	2001      	movs	r0, #1
 800b5ec:	091b      	lsrs	r3, r3, #4
 800b5ee:	1eb1      	subs	r1, r6, #2
 800b5f0:	b292      	uxth	r2, r2
 800b5f2:	3301      	adds	r3, #1
 800b5f4:	fa00 f101 	lsl.w	r1, r0, r1
 800b5f8:	9112      	str	r1, [sp, #72]	; 0x48
 800b5fa:	9924      	ldr	r1, [sp, #144]	; 0x90
 800b5fc:	3110      	adds	r1, #16
 800b5fe:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 800b602:	920e      	str	r2, [sp, #56]	; 0x38
 800b604:	1ee2      	subs	r2, r4, #3
 800b606:	920f      	str	r2, [sp, #60]	; 0x3c
 800b608:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800b60a:	3208      	adds	r2, #8
 800b60c:	9205      	str	r2, [sp, #20]
 800b60e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 800b610:	3202      	adds	r2, #2
 800b612:	9206      	str	r2, [sp, #24]
 800b614:	011a      	lsls	r2, r3, #4
 800b616:	9209      	str	r2, [sp, #36]	; 0x24
 800b618:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800b61a:	eb02 1343 	add.w	r3, r2, r3, lsl #5
 800b61e:	9310      	str	r3, [sp, #64]	; 0x40
 800b620:	1f23      	subs	r3, r4, #4
 800b622:	9311      	str	r3, [sp, #68]	; 0x44
 800b624:	1b83      	subs	r3, r0, r6
 800b626:	9314      	str	r3, [sp, #80]	; 0x50
 800b628:	9a03      	ldr	r2, [sp, #12]
 800b62a:	9b05      	ldr	r3, [sp, #20]
 800b62c:	2a0f      	cmp	r2, #15
 800b62e:	eb05 0b02 	add.w	fp, r5, r2
 800b632:	e953 1302 	ldrd	r1, r3, [r3, #-8]
 800b636:	f340 8260 	ble.w	800bafa <st_sssa8_fully_connected+0x582>
 800b63a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800b63c:	465c      	mov	r4, fp
 800b63e:	18ae      	adds	r6, r5, r2
 800b640:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800b642:	682f      	ldr	r7, [r5, #0]
 800b644:	f8d4 a000 	ldr.w	sl, [r4]
 800b648:	ea4f 2037 	mov.w	r0, r7, ror #8
 800b64c:	f8d2 9000 	ldr.w	r9, [r2]
 800b650:	ea4f 2e3a 	mov.w	lr, sl, ror #8
 800b654:	fa2f f080 	sxtb16	r0, r0
 800b658:	fa2f fc8e 	sxtb16	ip, lr
 800b65c:	fa2f f787 	sxtb16	r7, r7
 800b660:	fa2f fe8a 	sxtb16	lr, sl
 800b664:	fb29 1107 	smlad	r1, r9, r7, r1
 800b668:	fb29 390e 	smlad	r9, r9, lr, r3
 800b66c:	f8d2 8004 	ldr.w	r8, [r2, #4]
 800b670:	fb28 1100 	smlad	r1, r8, r0, r1
 800b674:	fb28 9e0c 	smlad	lr, r8, ip, r9
 800b678:	6868      	ldr	r0, [r5, #4]
 800b67a:	f8d4 9004 	ldr.w	r9, [r4, #4]
 800b67e:	ea4f 2330 	mov.w	r3, r0, ror #8
 800b682:	f8d2 8008 	ldr.w	r8, [r2, #8]
 800b686:	ea4f 2a39 	mov.w	sl, r9, ror #8
 800b68a:	fa2f f383 	sxtb16	r3, r3
 800b68e:	fa2f f78a 	sxtb16	r7, sl
 800b692:	fa2f f080 	sxtb16	r0, r0
 800b696:	fa2f fa89 	sxtb16	sl, r9
 800b69a:	fb28 1000 	smlad	r0, r8, r0, r1
 800b69e:	fb28 e80a 	smlad	r8, r8, sl, lr
 800b6a2:	f8d2 c00c 	ldr.w	ip, [r2, #12]
 800b6a6:	fb2c 0003 	smlad	r0, ip, r3, r0
 800b6aa:	fb2c 8a07 	smlad	sl, ip, r7, r8
 800b6ae:	68ab      	ldr	r3, [r5, #8]
 800b6b0:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800b6b4:	ea4f 2133 	mov.w	r1, r3, ror #8
 800b6b8:	f8d2 c010 	ldr.w	ip, [r2, #16]
 800b6bc:	ea4f 2e38 	mov.w	lr, r8, ror #8
 800b6c0:	fa2f f181 	sxtb16	r1, r1
 800b6c4:	fa2f f98e 	sxtb16	r9, lr
 800b6c8:	fa2f f383 	sxtb16	r3, r3
 800b6cc:	fa2f fe88 	sxtb16	lr, r8
 800b6d0:	fb2c 0303 	smlad	r3, ip, r3, r0
 800b6d4:	fb2c ac0e 	smlad	ip, ip, lr, sl
 800b6d8:	6957      	ldr	r7, [r2, #20]
 800b6da:	fb27 3301 	smlad	r3, r7, r1, r3
 800b6de:	fb27 ce09 	smlad	lr, r7, r9, ip
 800b6e2:	68e8      	ldr	r0, [r5, #12]
 800b6e4:	3410      	adds	r4, #16
 800b6e6:	f854 cc04 	ldr.w	ip, [r4, #-4]
 800b6ea:	3510      	adds	r5, #16
 800b6ec:	ea4f 2130 	mov.w	r1, r0, ror #8
 800b6f0:	6997      	ldr	r7, [r2, #24]
 800b6f2:	fa2f f881 	sxtb16	r8, r1
 800b6f6:	fa2f f180 	sxtb16	r1, r0
 800b6fa:	ea4f 203c 	mov.w	r0, ip, ror #8
 800b6fe:	fa2f fc8c 	sxtb16	ip, ip
 800b702:	fa2f f080 	sxtb16	r0, r0
 800b706:	fb27 3101 	smlad	r1, r7, r1, r3
 800b70a:	fb27 e70c 	smlad	r7, r7, ip, lr
 800b70e:	69d3      	ldr	r3, [r2, #28]
 800b710:	3220      	adds	r2, #32
 800b712:	fb23 1108 	smlad	r1, r3, r8, r1
 800b716:	fb23 7300 	smlad	r3, r3, r0, r7
 800b71a:	42b5      	cmp	r5, r6
 800b71c:	d191      	bne.n	800b642 <st_sssa8_fully_connected+0xca>
 800b71e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800b720:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 800b724:	4493      	add	fp, r2
 800b726:	4691      	mov	r9, r2
 800b728:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800b72a:	4591      	cmp	r9, r2
 800b72c:	f280 81e3 	bge.w	800baf6 <st_sssa8_fully_connected+0x57e>
 800b730:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800b732:	4657      	mov	r7, sl
 800b734:	46d8      	mov	r8, fp
 800b736:	eba2 0209 	sub.w	r2, r2, r9
 800b73a:	0892      	lsrs	r2, r2, #2
 800b73c:	920c      	str	r2, [sp, #48]	; 0x30
 800b73e:	3201      	adds	r2, #1
 800b740:	0090      	lsls	r0, r2, #2
 800b742:	920b      	str	r2, [sp, #44]	; 0x2c
 800b744:	eb06 0482 	add.w	r4, r6, r2, lsl #2
 800b748:	900a      	str	r0, [sp, #40]	; 0x28
 800b74a:	f856 eb04 	ldr.w	lr, [r6], #4
 800b74e:	f858 0b04 	ldr.w	r0, [r8], #4
 800b752:	ea4f 2c3e 	mov.w	ip, lr, ror #8
 800b756:	683a      	ldr	r2, [r7, #0]
 800b758:	ea4f 2530 	mov.w	r5, r0, ror #8
 800b75c:	fa2f fc8c 	sxtb16	ip, ip
 800b760:	fa2f fe8e 	sxtb16	lr, lr
 800b764:	fa2f f585 	sxtb16	r5, r5
 800b768:	fa2f f080 	sxtb16	r0, r0
 800b76c:	fb22 110e 	smlad	r1, r2, lr, r1
 800b770:	fb22 3300 	smlad	r3, r2, r0, r3
 800b774:	687a      	ldr	r2, [r7, #4]
 800b776:	3708      	adds	r7, #8
 800b778:	fb22 110c 	smlad	r1, r2, ip, r1
 800b77c:	fb22 3305 	smlad	r3, r2, r5, r3
 800b780:	42a6      	cmp	r6, r4
 800b782:	d1e2      	bne.n	800b74a <st_sssa8_fully_connected+0x1d2>
 800b784:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b786:	f109 0904 	add.w	r9, r9, #4
 800b78a:	eb0a 0ac2 	add.w	sl, sl, r2, lsl #3
 800b78e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b790:	4493      	add	fp, r2
 800b792:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800b794:	eb09 0982 	add.w	r9, r9, r2, lsl #2
 800b798:	9d03      	ldr	r5, [sp, #12]
 800b79a:	454d      	cmp	r5, r9
 800b79c:	dd37      	ble.n	800b80e <st_sssa8_fully_connected+0x296>
 800b79e:	f9ba 2000 	ldrsh.w	r2, [sl]
 800b7a2:	f994 0000 	ldrsb.w	r0, [r4]
 800b7a6:	fb12 1100 	smlabb	r1, r2, r0, r1
 800b7aa:	f99b 0000 	ldrsb.w	r0, [fp]
 800b7ae:	fb12 3300 	smlabb	r3, r2, r0, r3
 800b7b2:	f109 0201 	add.w	r2, r9, #1
 800b7b6:	42aa      	cmp	r2, r5
 800b7b8:	da25      	bge.n	800b806 <st_sssa8_fully_connected+0x28e>
 800b7ba:	f9ba 2002 	ldrsh.w	r2, [sl, #2]
 800b7be:	f994 0001 	ldrsb.w	r0, [r4, #1]
 800b7c2:	fb12 1100 	smlabb	r1, r2, r0, r1
 800b7c6:	f99b 0001 	ldrsb.w	r0, [fp, #1]
 800b7ca:	fb12 3300 	smlabb	r3, r2, r0, r3
 800b7ce:	f109 0202 	add.w	r2, r9, #2
 800b7d2:	42aa      	cmp	r2, r5
 800b7d4:	da17      	bge.n	800b806 <st_sssa8_fully_connected+0x28e>
 800b7d6:	f9ba 2004 	ldrsh.w	r2, [sl, #4]
 800b7da:	f994 0002 	ldrsb.w	r0, [r4, #2]
 800b7de:	fb12 1100 	smlabb	r1, r2, r0, r1
 800b7e2:	f99b 0002 	ldrsb.w	r0, [fp, #2]
 800b7e6:	fb12 3300 	smlabb	r3, r2, r0, r3
 800b7ea:	f109 0203 	add.w	r2, r9, #3
 800b7ee:	4295      	cmp	r5, r2
 800b7f0:	dd09      	ble.n	800b806 <st_sssa8_fully_connected+0x28e>
 800b7f2:	f9ba 2006 	ldrsh.w	r2, [sl, #6]
 800b7f6:	f99b 0003 	ldrsb.w	r0, [fp, #3]
 800b7fa:	fb12 3300 	smlabb	r3, r2, r0, r3
 800b7fe:	f994 0003 	ldrsb.w	r0, [r4, #3]
 800b802:	fb12 1100 	smlabb	r1, r2, r0, r1
 800b806:	9a03      	ldr	r2, [sp, #12]
 800b808:	eba2 0909 	sub.w	r9, r2, r9
 800b80c:	444c      	add	r4, r9
 800b80e:	9a04      	ldr	r2, [sp, #16]
 800b810:	2a15      	cmp	r2, #21
 800b812:	f340 8140 	ble.w	800ba96 <st_sssa8_fully_connected+0x51e>
 800b816:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800b818:	9a07      	ldr	r2, [sp, #28]
 800b81a:	9812      	ldr	r0, [sp, #72]	; 0x48
 800b81c:	fb51 0102 	smmla	r1, r1, r2, r0
 800b820:	fb53 0302 	smmla	r3, r3, r2, r0
 800b824:	4129      	asrs	r1, r5
 800b826:	9a08      	ldr	r2, [sp, #32]
 800b828:	4411      	add	r1, r2
 800b82a:	f301 0107 	ssat	r1, #8, r1
 800b82e:	9806      	ldr	r0, [sp, #24]
 800b830:	412b      	asrs	r3, r5
 800b832:	f800 1c02 	strb.w	r1, [r0, #-2]
 800b836:	4413      	add	r3, r2
 800b838:	f303 0307 	ssat	r3, #8, r3
 800b83c:	f800 3c01 	strb.w	r3, [r0, #-1]
 800b840:	9a03      	ldr	r2, [sp, #12]
 800b842:	9b05      	ldr	r3, [sp, #20]
 800b844:	18a5      	adds	r5, r4, r2
 800b846:	9a06      	ldr	r2, [sp, #24]
 800b848:	3308      	adds	r3, #8
 800b84a:	3202      	adds	r2, #2
 800b84c:	9305      	str	r3, [sp, #20]
 800b84e:	9206      	str	r2, [sp, #24]
 800b850:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800b852:	4293      	cmp	r3, r2
 800b854:	f47f aee8 	bne.w	800b628 <st_sssa8_fully_connected+0xb0>
 800b858:	9a25      	ldr	r2, [sp, #148]	; 0x94
 800b85a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800b85c:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 800b860:	9225      	str	r2, [sp, #148]	; 0x94
 800b862:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800b864:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800b868:	9324      	str	r3, [sp, #144]	; 0x90
 800b86a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800b86c:	07db      	lsls	r3, r3, #31
 800b86e:	d54a      	bpl.n	800b906 <st_sssa8_fully_connected+0x38e>
 800b870:	9a03      	ldr	r2, [sp, #12]
 800b872:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800b874:	0897      	lsrs	r7, r2, #2
 800b876:	681b      	ldr	r3, [r3, #0]
 800b878:	f000 8175 	beq.w	800bb66 <st_sssa8_fully_connected+0x5ee>
 800b87c:	eb05 0687 	add.w	r6, r5, r7, lsl #2
 800b880:	9826      	ldr	r0, [sp, #152]	; 0x98
 800b882:	f855 2b04 	ldr.w	r2, [r5], #4
 800b886:	6801      	ldr	r1, [r0, #0]
 800b888:	fa2f f482 	sxtb16	r4, r2
 800b88c:	ea4f 2232 	mov.w	r2, r2, ror #8
 800b890:	fa2f f282 	sxtb16	r2, r2
 800b894:	fb21 3304 	smlad	r3, r1, r4, r3
 800b898:	6841      	ldr	r1, [r0, #4]
 800b89a:	3008      	adds	r0, #8
 800b89c:	fb21 3302 	smlad	r3, r1, r2, r3
 800b8a0:	42b5      	cmp	r5, r6
 800b8a2:	d1ee      	bne.n	800b882 <st_sssa8_fully_connected+0x30a>
 800b8a4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800b8a6:	eb02 02c7 	add.w	r2, r2, r7, lsl #3
 800b8aa:	9226      	str	r2, [sp, #152]	; 0x98
 800b8ac:	9a03      	ldr	r2, [sp, #12]
 800b8ae:	f012 0203 	ands.w	r2, r2, #3
 800b8b2:	d016      	beq.n	800b8e2 <st_sssa8_fully_connected+0x36a>
 800b8b4:	3a01      	subs	r2, #1
 800b8b6:	9826      	ldr	r0, [sp, #152]	; 0x98
 800b8b8:	f996 1000 	ldrsb.w	r1, [r6]
 800b8bc:	8800      	ldrh	r0, [r0, #0]
 800b8be:	b292      	uxth	r2, r2
 800b8c0:	fb10 3301 	smlabb	r3, r0, r1, r3
 800b8c4:	b16a      	cbz	r2, 800b8e2 <st_sssa8_fully_connected+0x36a>
 800b8c6:	9826      	ldr	r0, [sp, #152]	; 0x98
 800b8c8:	2a01      	cmp	r2, #1
 800b8ca:	f996 1001 	ldrsb.w	r1, [r6, #1]
 800b8ce:	8840      	ldrh	r0, [r0, #2]
 800b8d0:	fb10 3301 	smlabb	r3, r0, r1, r3
 800b8d4:	d005      	beq.n	800b8e2 <st_sssa8_fully_connected+0x36a>
 800b8d6:	9926      	ldr	r1, [sp, #152]	; 0x98
 800b8d8:	f996 2002 	ldrsb.w	r2, [r6, #2]
 800b8dc:	8889      	ldrh	r1, [r1, #4]
 800b8de:	fb11 3302 	smlabb	r3, r1, r2, r3
 800b8e2:	9a04      	ldr	r2, [sp, #16]
 800b8e4:	2a15      	cmp	r2, #21
 800b8e6:	f340 811c 	ble.w	800bb22 <st_sssa8_fully_connected+0x5aa>
 800b8ea:	1e91      	subs	r1, r2, #2
 800b8ec:	2201      	movs	r2, #1
 800b8ee:	408a      	lsls	r2, r1
 800b8f0:	9907      	ldr	r1, [sp, #28]
 800b8f2:	fb53 2301 	smmla	r3, r3, r1, r2
 800b8f6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800b8f8:	4113      	asrs	r3, r2
 800b8fa:	9a08      	ldr	r2, [sp, #32]
 800b8fc:	4413      	add	r3, r2
 800b8fe:	f303 0307 	ssat	r3, #8, r3
 800b902:	9a25      	ldr	r2, [sp, #148]	; 0x94
 800b904:	7013      	strb	r3, [r2, #0]
 800b906:	2000      	movs	r0, #0
 800b908:	b017      	add	sp, #92	; 0x5c
 800b90a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b90e:	9308      	str	r3, [sp, #32]
 800b910:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800b912:	2b00      	cmp	r3, #0
 800b914:	f47f ae52 	bne.w	800b5bc <st_sssa8_fully_connected+0x44>
 800b918:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800b91a:	4270      	negs	r0, r6
 800b91c:	eac0 4000 	pkhbt	r0, r0, r0, lsl #16
 800b920:	2b00      	cmp	r3, #0
 800b922:	d0f0      	beq.n	800b906 <st_sssa8_fully_connected+0x38e>
 800b924:	9a25      	ldr	r2, [sp, #148]	; 0x94
 800b926:	3301      	adds	r3, #1
 800b928:	9903      	ldr	r1, [sp, #12]
 800b92a:	b236      	sxth	r6, r6
 800b92c:	18d3      	adds	r3, r2, r3
 800b92e:	9c04      	ldr	r4, [sp, #16]
 800b930:	f1a1 0810 	sub.w	r8, r1, #16
 800b934:	f102 0e01 	add.w	lr, r2, #1
 800b938:	9305      	str	r3, [sp, #20]
 800b93a:	2201      	movs	r2, #1
 800b93c:	f028 080f 	bic.w	r8, r8, #15
 800b940:	1ea3      	subs	r3, r4, #2
 800b942:	468c      	mov	ip, r1
 800b944:	f8dd 9090 	ldr.w	r9, [sp, #144]	; 0x90
 800b948:	fa02 f303 	lsl.w	r3, r2, r3
 800b94c:	f108 0810 	add.w	r8, r8, #16
 800b950:	f1bc 0f0f 	cmp.w	ip, #15
 800b954:	f8cd b00c 	str.w	fp, [sp, #12]
 800b958:	9309      	str	r3, [sp, #36]	; 0x24
 800b95a:	eb0b 0308 	add.w	r3, fp, r8
 800b95e:	9306      	str	r3, [sp, #24]
 800b960:	eba2 0304 	sub.w	r3, r2, r4
 800b964:	930a      	str	r3, [sp, #40]	; 0x28
 800b966:	f859 3b04 	ldr.w	r3, [r9], #4
 800b96a:	dd7e      	ble.n	800ba6a <st_sssa8_fully_connected+0x4f2>
 800b96c:	eb05 0708 	add.w	r7, r5, r8
 800b970:	462a      	mov	r2, r5
 800b972:	9d03      	ldr	r5, [sp, #12]
 800b974:	6811      	ldr	r1, [r2, #0]
 800b976:	682c      	ldr	r4, [r5, #0]
 800b978:	fa2f fb81 	sxtb16	fp, r1
 800b97c:	ea4f 2a34 	mov.w	sl, r4, ror #8
 800b980:	ea4f 2131 	mov.w	r1, r1, ror #8
 800b984:	fa20 fa8a 	sxtab16	sl, r0, sl
 800b988:	fa2f f181 	sxtb16	r1, r1
 800b98c:	fa20 f484 	sxtab16	r4, r0, r4
 800b990:	fb24 340b 	smlad	r4, r4, fp, r3
 800b994:	fb2a 4b01 	smlad	fp, sl, r1, r4
 800b998:	6851      	ldr	r1, [r2, #4]
 800b99a:	f8d5 a004 	ldr.w	sl, [r5, #4]
 800b99e:	fa2f f481 	sxtb16	r4, r1
 800b9a2:	ea4f 233a 	mov.w	r3, sl, ror #8
 800b9a6:	ea4f 2131 	mov.w	r1, r1, ror #8
 800b9aa:	fa20 f383 	sxtab16	r3, r0, r3
 800b9ae:	fa2f f181 	sxtb16	r1, r1
 800b9b2:	fa20 fa8a 	sxtab16	sl, r0, sl
 800b9b6:	fb2a ba04 	smlad	sl, sl, r4, fp
 800b9ba:	fb23 a401 	smlad	r4, r3, r1, sl
 800b9be:	6891      	ldr	r1, [r2, #8]
 800b9c0:	68ab      	ldr	r3, [r5, #8]
 800b9c2:	fa2f fb81 	sxtb16	fp, r1
 800b9c6:	ea4f 2a33 	mov.w	sl, r3, ror #8
 800b9ca:	ea4f 2131 	mov.w	r1, r1, ror #8
 800b9ce:	fa20 fa8a 	sxtab16	sl, r0, sl
 800b9d2:	fa2f f181 	sxtb16	r1, r1
 800b9d6:	fa20 f383 	sxtab16	r3, r0, r3
 800b9da:	fb23 430b 	smlad	r3, r3, fp, r4
 800b9de:	fb2a 3301 	smlad	r3, sl, r1, r3
 800b9e2:	f8d2 a00c 	ldr.w	sl, [r2, #12]
 800b9e6:	3510      	adds	r5, #16
 800b9e8:	f855 1c04 	ldr.w	r1, [r5, #-4]
 800b9ec:	3210      	adds	r2, #16
 800b9ee:	ea4f 2b3a 	mov.w	fp, sl, ror #8
 800b9f2:	ea4f 2431 	mov.w	r4, r1, ror #8
 800b9f6:	fa2f fa8a 	sxtb16	sl, sl
 800b9fa:	fa2f fb8b 	sxtb16	fp, fp
 800b9fe:	fa20 f181 	sxtab16	r1, r0, r1
 800ba02:	fa20 f484 	sxtab16	r4, r0, r4
 800ba06:	fb21 330a 	smlad	r3, r1, sl, r3
 800ba0a:	fb24 330b 	smlad	r3, r4, fp, r3
 800ba0e:	4297      	cmp	r7, r2
 800ba10:	d1b0      	bne.n	800b974 <st_sssa8_fully_connected+0x3fc>
 800ba12:	4645      	mov	r5, r8
 800ba14:	9f06      	ldr	r7, [sp, #24]
 800ba16:	45ac      	cmp	ip, r5
 800ba18:	dd2c      	ble.n	800ba74 <st_sssa8_fully_connected+0x4fc>
 800ba1a:	ebac 0505 	sub.w	r5, ip, r5
 800ba1e:	4415      	add	r5, r2
 800ba20:	4611      	mov	r1, r2
 800ba22:	f917 4b01 	ldrsb.w	r4, [r7], #1
 800ba26:	3201      	adds	r2, #1
 800ba28:	7809      	ldrb	r1, [r1, #0]
 800ba2a:	1ba4      	subs	r4, r4, r6
 800ba2c:	42aa      	cmp	r2, r5
 800ba2e:	b249      	sxtb	r1, r1
 800ba30:	fb14 3301 	smlabb	r3, r4, r1, r3
 800ba34:	d1f4      	bne.n	800ba20 <st_sssa8_fully_connected+0x4a8>
 800ba36:	9a04      	ldr	r2, [sp, #16]
 800ba38:	2a15      	cmp	r2, #21
 800ba3a:	dd1f      	ble.n	800ba7c <st_sssa8_fully_connected+0x504>
 800ba3c:	9a07      	ldr	r2, [sp, #28]
 800ba3e:	9909      	ldr	r1, [sp, #36]	; 0x24
 800ba40:	fb53 1302 	smmla	r3, r3, r2, r1
 800ba44:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800ba46:	4113      	asrs	r3, r2
 800ba48:	9a08      	ldr	r2, [sp, #32]
 800ba4a:	4413      	add	r3, r2
 800ba4c:	f303 0307 	ssat	r3, #8, r3
 800ba50:	f80e 3c01 	strb.w	r3, [lr, #-1]
 800ba54:	f10e 0e01 	add.w	lr, lr, #1
 800ba58:	9b05      	ldr	r3, [sp, #20]
 800ba5a:	459e      	cmp	lr, r3
 800ba5c:	f43f af53 	beq.w	800b906 <st_sssa8_fully_connected+0x38e>
 800ba60:	f1bc 0f0f 	cmp.w	ip, #15
 800ba64:	f859 3b04 	ldr.w	r3, [r9], #4
 800ba68:	dc80      	bgt.n	800b96c <st_sssa8_fully_connected+0x3f4>
 800ba6a:	462a      	mov	r2, r5
 800ba6c:	2500      	movs	r5, #0
 800ba6e:	9f03      	ldr	r7, [sp, #12]
 800ba70:	45ac      	cmp	ip, r5
 800ba72:	dcd2      	bgt.n	800ba1a <st_sssa8_fully_connected+0x4a2>
 800ba74:	4615      	mov	r5, r2
 800ba76:	9a04      	ldr	r2, [sp, #16]
 800ba78:	2a15      	cmp	r2, #21
 800ba7a:	dcdf      	bgt.n	800ba3c <st_sssa8_fully_connected+0x4c4>
 800ba7c:	2a00      	cmp	r2, #0
 800ba7e:	dd42      	ble.n	800bb06 <st_sssa8_fully_connected+0x58e>
 800ba80:	005b      	lsls	r3, r3, #1
 800ba82:	e9dd 1407 	ldrd	r1, r4, [sp, #28]
 800ba86:	fb53 4301 	smmla	r3, r3, r1, r4
 800ba8a:	4113      	asrs	r3, r2
 800ba8c:	f303 0307 	ssat	r3, #8, r3
 800ba90:	f80e 3c01 	strb.w	r3, [lr, #-1]
 800ba94:	e7de      	b.n	800ba54 <st_sssa8_fully_connected+0x4dc>
 800ba96:	2a00      	cmp	r2, #0
 800ba98:	dd13      	ble.n	800bac2 <st_sssa8_fully_connected+0x54a>
 800ba9a:	0049      	lsls	r1, r1, #1
 800ba9c:	005b      	lsls	r3, r3, #1
 800ba9e:	e9dd 0507 	ldrd	r0, r5, [sp, #28]
 800baa2:	fb51 5100 	smmla	r1, r1, r0, r5
 800baa6:	fb53 5300 	smmla	r3, r3, r0, r5
 800baaa:	4111      	asrs	r1, r2
 800baac:	f301 0107 	ssat	r1, #8, r1
 800bab0:	9806      	ldr	r0, [sp, #24]
 800bab2:	4113      	asrs	r3, r2
 800bab4:	f800 1c02 	strb.w	r1, [r0, #-2]
 800bab8:	f303 0307 	ssat	r3, #8, r3
 800babc:	f800 3c01 	strb.w	r3, [r0, #-1]
 800bac0:	e6be      	b.n	800b840 <st_sssa8_fully_connected+0x2c8>
 800bac2:	9814      	ldr	r0, [sp, #80]	; 0x50
 800bac4:	fa01 f200 	lsl.w	r2, r1, r0
 800bac8:	f302 021f 	ssat	r2, #32, r2
 800bacc:	9907      	ldr	r1, [sp, #28]
 800bace:	fb52 f211 	smmulr	r2, r2, r1
 800bad2:	4083      	lsls	r3, r0
 800bad4:	f303 031f 	ssat	r3, #32, r3
 800bad8:	fb53 f311 	smmulr	r3, r3, r1
 800badc:	9908      	ldr	r1, [sp, #32]
 800bade:	440a      	add	r2, r1
 800bae0:	f302 0207 	ssat	r2, #8, r2
 800bae4:	9806      	ldr	r0, [sp, #24]
 800bae6:	440b      	add	r3, r1
 800bae8:	f800 2c02 	strb.w	r2, [r0, #-2]
 800baec:	f303 0307 	ssat	r3, #8, r3
 800baf0:	f800 3c01 	strb.w	r3, [r0, #-1]
 800baf4:	e6a4      	b.n	800b840 <st_sssa8_fully_connected+0x2c8>
 800baf6:	4634      	mov	r4, r6
 800baf8:	e64e      	b.n	800b798 <st_sssa8_fully_connected+0x220>
 800bafa:	462e      	mov	r6, r5
 800bafc:	f8dd a098 	ldr.w	sl, [sp, #152]	; 0x98
 800bb00:	f04f 0900 	mov.w	r9, #0
 800bb04:	e610      	b.n	800b728 <st_sssa8_fully_connected+0x1b0>
 800bb06:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800bb08:	4093      	lsls	r3, r2
 800bb0a:	f303 031f 	ssat	r3, #32, r3
 800bb0e:	9a07      	ldr	r2, [sp, #28]
 800bb10:	fb53 f312 	smmulr	r3, r3, r2
 800bb14:	9a08      	ldr	r2, [sp, #32]
 800bb16:	4413      	add	r3, r2
 800bb18:	f303 0307 	ssat	r3, #8, r3
 800bb1c:	f80e 3c01 	strb.w	r3, [lr, #-1]
 800bb20:	e798      	b.n	800ba54 <st_sssa8_fully_connected+0x4dc>
 800bb22:	2a00      	cmp	r2, #0
 800bb24:	dd0d      	ble.n	800bb42 <st_sssa8_fully_connected+0x5ca>
 800bb26:	005b      	lsls	r3, r3, #1
 800bb28:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
 800bb2c:	fb53 0301 	smmla	r3, r3, r1, r0
 800bb30:	4113      	asrs	r3, r2
 800bb32:	f303 0307 	ssat	r3, #8, r3
 800bb36:	2000      	movs	r0, #0
 800bb38:	9a25      	ldr	r2, [sp, #148]	; 0x94
 800bb3a:	7013      	strb	r3, [r2, #0]
 800bb3c:	b017      	add	sp, #92	; 0x5c
 800bb3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bb42:	f1c2 0201 	rsb	r2, r2, #1
 800bb46:	4093      	lsls	r3, r2
 800bb48:	f303 031f 	ssat	r3, #32, r3
 800bb4c:	9a07      	ldr	r2, [sp, #28]
 800bb4e:	fb53 f312 	smmulr	r3, r3, r2
 800bb52:	9a08      	ldr	r2, [sp, #32]
 800bb54:	441a      	add	r2, r3
 800bb56:	f302 0307 	ssat	r3, #8, r2
 800bb5a:	2000      	movs	r0, #0
 800bb5c:	9a25      	ldr	r2, [sp, #148]	; 0x94
 800bb5e:	7013      	strb	r3, [r2, #0]
 800bb60:	b017      	add	sp, #92	; 0x5c
 800bb62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bb66:	462e      	mov	r6, r5
 800bb68:	e6a0      	b.n	800b8ac <st_sssa8_fully_connected+0x334>
 800bb6a:	bf00      	nop

0800bb6c <st_int8_fill>:
 800bb6c:	0203      	lsls	r3, r0, #8
 800bb6e:	468c      	mov	ip, r1
 800bb70:	b510      	push	{r4, lr}
 800bb72:	b2c4      	uxtb	r4, r0
 800bb74:	b29b      	uxth	r3, r3
 800bb76:	ea44 6400 	orr.w	r4, r4, r0, lsl #24
 800bb7a:	431c      	orrs	r4, r3
 800bb7c:	0403      	lsls	r3, r0, #16
 800bb7e:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 800bb82:	431c      	orrs	r4, r3
 800bb84:	078b      	lsls	r3, r1, #30
 800bb86:	d007      	beq.n	800bb98 <st_int8_fill+0x2c>
 800bb88:	b3a2      	cbz	r2, 800bbf4 <st_int8_fill+0x88>
 800bb8a:	f80c 0b01 	strb.w	r0, [ip], #1
 800bb8e:	f01c 0f03 	tst.w	ip, #3
 800bb92:	f102 32ff 	add.w	r2, r2, #4294967295
 800bb96:	d1f7      	bne.n	800bb88 <st_int8_fill+0x1c>
 800bb98:	0911      	lsrs	r1, r2, #4
 800bb9a:	d041      	beq.n	800bc20 <st_int8_fill+0xb4>
 800bb9c:	1e4b      	subs	r3, r1, #1
 800bb9e:	2b04      	cmp	r3, #4
 800bba0:	d929      	bls.n	800bbf6 <st_int8_fill+0x8a>
 800bba2:	f01c 0f07 	tst.w	ip, #7
 800bba6:	d126      	bne.n	800bbf6 <st_int8_fill+0x8a>
 800bba8:	f10c 0310 	add.w	r3, ip, #16
 800bbac:	ea4f 1e01 	mov.w	lr, r1, lsl #4
 800bbb0:	eb03 1101 	add.w	r1, r3, r1, lsl #4
 800bbb4:	e943 4404 	strd	r4, r4, [r3, #-16]
 800bbb8:	e943 4402 	strd	r4, r4, [r3, #-8]
 800bbbc:	3310      	adds	r3, #16
 800bbbe:	428b      	cmp	r3, r1
 800bbc0:	d1f8      	bne.n	800bbb4 <st_int8_fill+0x48>
 800bbc2:	f3c2 0381 	ubfx	r3, r2, #2, #2
 800bbc6:	44f4      	add	ip, lr
 800bbc8:	f002 0203 	and.w	r2, r2, #3
 800bbcc:	b15b      	cbz	r3, 800bbe6 <st_int8_fill+0x7a>
 800bbce:	1e59      	subs	r1, r3, #1
 800bbd0:	f8cc 4000 	str.w	r4, [ip]
 800bbd4:	d005      	beq.n	800bbe2 <st_int8_fill+0x76>
 800bbd6:	2901      	cmp	r1, #1
 800bbd8:	f8cc 4004 	str.w	r4, [ip, #4]
 800bbdc:	bf18      	it	ne
 800bbde:	f8cc 4008 	strne.w	r4, [ip, #8]
 800bbe2:	eb0c 0c83 	add.w	ip, ip, r3, lsl #2
 800bbe6:	b12a      	cbz	r2, 800bbf4 <st_int8_fill+0x88>
 800bbe8:	4601      	mov	r1, r0
 800bbea:	4660      	mov	r0, ip
 800bbec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bbf0:	f003 bdfd 	b.w	800f7ee <memset>
 800bbf4:	bd10      	pop	{r4, pc}
 800bbf6:	ea4f 1e01 	mov.w	lr, r1, lsl #4
 800bbfa:	4663      	mov	r3, ip
 800bbfc:	eb0c 1101 	add.w	r1, ip, r1, lsl #4
 800bc00:	601c      	str	r4, [r3, #0]
 800bc02:	3310      	adds	r3, #16
 800bc04:	f843 4c0c 	str.w	r4, [r3, #-12]
 800bc08:	f843 4c08 	str.w	r4, [r3, #-8]
 800bc0c:	f843 4c04 	str.w	r4, [r3, #-4]
 800bc10:	4299      	cmp	r1, r3
 800bc12:	d1f5      	bne.n	800bc00 <st_int8_fill+0x94>
 800bc14:	f3c2 0381 	ubfx	r3, r2, #2, #2
 800bc18:	44f4      	add	ip, lr
 800bc1a:	f002 0203 	and.w	r2, r2, #3
 800bc1e:	e7d5      	b.n	800bbcc <st_int8_fill+0x60>
 800bc20:	0893      	lsrs	r3, r2, #2
 800bc22:	f002 0203 	and.w	r2, r2, #3
 800bc26:	e7d1      	b.n	800bbcc <st_int8_fill+0x60>

0800bc28 <st_int8_copy>:
 800bc28:	4288      	cmp	r0, r1
 800bc2a:	d010      	beq.n	800bc4e <st_int8_copy+0x26>
 800bc2c:	b17a      	cbz	r2, 800bc4e <st_int8_copy+0x26>
 800bc2e:	4288      	cmp	r0, r1
 800bc30:	eb00 0302 	add.w	r3, r0, r2
 800bc34:	d20c      	bcs.n	800bc50 <st_int8_copy+0x28>
 800bc36:	428b      	cmp	r3, r1
 800bc38:	d90a      	bls.n	800bc50 <st_int8_copy+0x28>
 800bc3a:	4283      	cmp	r3, r0
 800bc3c:	440a      	add	r2, r1
 800bc3e:	d906      	bls.n	800bc4e <st_int8_copy+0x26>
 800bc40:	f913 1d01 	ldrsb.w	r1, [r3, #-1]!
 800bc44:	4283      	cmp	r3, r0
 800bc46:	f802 1d01 	strb.w	r1, [r2, #-1]!
 800bc4a:	d1f9      	bne.n	800bc40 <st_int8_copy+0x18>
 800bc4c:	4770      	bx	lr
 800bc4e:	4770      	bx	lr
 800bc50:	078b      	lsls	r3, r1, #30
 800bc52:	d102      	bne.n	800bc5a <st_int8_copy+0x32>
 800bc54:	e008      	b.n	800bc68 <st_int8_copy+0x40>
 800bc56:	2a00      	cmp	r2, #0
 800bc58:	d04d      	beq.n	800bcf6 <st_int8_copy+0xce>
 800bc5a:	f910 3b01 	ldrsb.w	r3, [r0], #1
 800bc5e:	3a01      	subs	r2, #1
 800bc60:	f801 3b01 	strb.w	r3, [r1], #1
 800bc64:	078b      	lsls	r3, r1, #30
 800bc66:	d1f6      	bne.n	800bc56 <st_int8_copy+0x2e>
 800bc68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bc6c:	ea5f 1e12 	movs.w	lr, r2, lsr #4
 800bc70:	d05e      	beq.n	800bd30 <st_int8_copy+0x108>
 800bc72:	ea40 0301 	orr.w	r3, r0, r1
 800bc76:	075b      	lsls	r3, r3, #29
 800bc78:	d13e      	bne.n	800bcf8 <st_int8_copy+0xd0>
 800bc7a:	f10e 33ff 	add.w	r3, lr, #4294967295
 800bc7e:	2b01      	cmp	r3, #1
 800bc80:	d93a      	bls.n	800bcf8 <st_int8_copy+0xd0>
 800bc82:	f100 0310 	add.w	r3, r0, #16
 800bc86:	ea4f 140e 	mov.w	r4, lr, lsl #4
 800bc8a:	f101 0c10 	add.w	ip, r1, #16
 800bc8e:	eb03 1e0e 	add.w	lr, r3, lr, lsl #4
 800bc92:	3310      	adds	r3, #16
 800bc94:	f10c 0c10 	add.w	ip, ip, #16
 800bc98:	ed13 6b08 	vldr	d6, [r3, #-32]	; 0xffffffe0
 800bc9c:	ed13 7b06 	vldr	d7, [r3, #-24]	; 0xffffffe8
 800bca0:	4573      	cmp	r3, lr
 800bca2:	ed0c 6b08 	vstr	d6, [ip, #-32]	; 0xffffffe0
 800bca6:	ed0c 7b06 	vstr	d7, [ip, #-24]	; 0xffffffe8
 800bcaa:	d1f2      	bne.n	800bc92 <st_int8_copy+0x6a>
 800bcac:	f3c2 0381 	ubfx	r3, r2, #2, #2
 800bcb0:	4421      	add	r1, r4
 800bcb2:	4420      	add	r0, r4
 800bcb4:	f002 0203 	and.w	r2, r2, #3
 800bcb8:	b16b      	cbz	r3, 800bcd6 <st_int8_copy+0xae>
 800bcba:	6804      	ldr	r4, [r0, #0]
 800bcbc:	600c      	str	r4, [r1, #0]
 800bcbe:	1e5c      	subs	r4, r3, #1
 800bcc0:	d005      	beq.n	800bcce <st_int8_copy+0xa6>
 800bcc2:	6845      	ldr	r5, [r0, #4]
 800bcc4:	2c01      	cmp	r4, #1
 800bcc6:	604d      	str	r5, [r1, #4]
 800bcc8:	d001      	beq.n	800bcce <st_int8_copy+0xa6>
 800bcca:	6884      	ldr	r4, [r0, #8]
 800bccc:	608c      	str	r4, [r1, #8]
 800bcce:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800bcd2:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 800bcd6:	b162      	cbz	r2, 800bcf2 <st_int8_copy+0xca>
 800bcd8:	f990 3000 	ldrsb.w	r3, [r0]
 800bcdc:	3a01      	subs	r2, #1
 800bcde:	700b      	strb	r3, [r1, #0]
 800bce0:	d007      	beq.n	800bcf2 <st_int8_copy+0xca>
 800bce2:	f990 3001 	ldrsb.w	r3, [r0, #1]
 800bce6:	2a01      	cmp	r2, #1
 800bce8:	704b      	strb	r3, [r1, #1]
 800bcea:	d002      	beq.n	800bcf2 <st_int8_copy+0xca>
 800bcec:	f990 3002 	ldrsb.w	r3, [r0, #2]
 800bcf0:	708b      	strb	r3, [r1, #2]
 800bcf2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bcf6:	4770      	bx	lr
 800bcf8:	ea4f 140e 	mov.w	r4, lr, lsl #4
 800bcfc:	460b      	mov	r3, r1
 800bcfe:	eb01 1e0e 	add.w	lr, r1, lr, lsl #4
 800bd02:	4684      	mov	ip, r0
 800bd04:	f8dc 8000 	ldr.w	r8, [ip]
 800bd08:	3310      	adds	r3, #16
 800bd0a:	f8dc 7004 	ldr.w	r7, [ip, #4]
 800bd0e:	f10c 0c10 	add.w	ip, ip, #16
 800bd12:	f85c 6c08 	ldr.w	r6, [ip, #-8]
 800bd16:	f85c 5c04 	ldr.w	r5, [ip, #-4]
 800bd1a:	f843 8c10 	str.w	r8, [r3, #-16]
 800bd1e:	f843 7c0c 	str.w	r7, [r3, #-12]
 800bd22:	f843 6c08 	str.w	r6, [r3, #-8]
 800bd26:	f843 5c04 	str.w	r5, [r3, #-4]
 800bd2a:	459e      	cmp	lr, r3
 800bd2c:	d1ea      	bne.n	800bd04 <st_int8_copy+0xdc>
 800bd2e:	e7bd      	b.n	800bcac <st_int8_copy+0x84>
 800bd30:	0893      	lsrs	r3, r2, #2
 800bd32:	f002 0203 	and.w	r2, r2, #3
 800bd36:	e7bf      	b.n	800bcb8 <st_int8_copy+0x90>

0800bd38 <st_int8_reordered_no_shift_zero>:
 800bd38:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bd3a:	0897      	lsrs	r7, r2, #2
 800bd3c:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 800bd40:	d02f      	beq.n	800bda2 <st_int8_reordered_no_shift_zero+0x6a>
 800bd42:	eb00 0587 	add.w	r5, r0, r7, lsl #2
 800bd46:	460c      	mov	r4, r1
 800bd48:	f850 cb04 	ldr.w	ip, [r0], #4
 800bd4c:	ea4f 2e3c 	mov.w	lr, ip, ror #8
 800bd50:	fa2f fe8e 	sxtb16	lr, lr
 800bd54:	fade fe03 	ssub16	lr, lr, r3
 800bd58:	fa2f fc8c 	sxtb16	ip, ip
 800bd5c:	fadc fc03 	ssub16	ip, ip, r3
 800bd60:	42a8      	cmp	r0, r5
 800bd62:	f8c4 c000 	str.w	ip, [r4]
 800bd66:	f8c4 e004 	str.w	lr, [r4, #4]
 800bd6a:	f104 0408 	add.w	r4, r4, #8
 800bd6e:	d1eb      	bne.n	800bd48 <st_int8_reordered_no_shift_zero+0x10>
 800bd70:	eb01 01c7 	add.w	r1, r1, r7, lsl #3
 800bd74:	f012 0203 	ands.w	r2, r2, #3
 800bd78:	d012      	beq.n	800bda0 <st_int8_reordered_no_shift_zero+0x68>
 800bd7a:	f995 0000 	ldrsb.w	r0, [r5]
 800bd7e:	b273      	sxtb	r3, r6
 800bd80:	3a01      	subs	r2, #1
 800bd82:	eba0 0003 	sub.w	r0, r0, r3
 800bd86:	8008      	strh	r0, [r1, #0]
 800bd88:	d00a      	beq.n	800bda0 <st_int8_reordered_no_shift_zero+0x68>
 800bd8a:	f995 0001 	ldrsb.w	r0, [r5, #1]
 800bd8e:	2a01      	cmp	r2, #1
 800bd90:	eba0 0003 	sub.w	r0, r0, r3
 800bd94:	8048      	strh	r0, [r1, #2]
 800bd96:	d003      	beq.n	800bda0 <st_int8_reordered_no_shift_zero+0x68>
 800bd98:	f995 2002 	ldrsb.w	r2, [r5, #2]
 800bd9c:	1ad3      	subs	r3, r2, r3
 800bd9e:	808b      	strh	r3, [r1, #4]
 800bda0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bda2:	4605      	mov	r5, r0
 800bda4:	e7e6      	b.n	800bd74 <st_int8_reordered_no_shift_zero+0x3c>
 800bda6:	bf00      	nop

0800bda8 <st_int8_to16_no_shift>:
 800bda8:	b570      	push	{r4, r5, r6, lr}
 800bdaa:	f1b2 0410 	subs.w	r4, r2, #16
 800bdae:	f04f 0e00 	mov.w	lr, #0
 800bdb2:	d438      	bmi.n	800be26 <st_int8_to16_no_shift+0x7e>
 800bdb4:	f8d0 c000 	ldr.w	ip, [r0]
 800bdb8:	6843      	ldr	r3, [r0, #4]
 800bdba:	fa2f f59c 	sxtb16	r5, ip, ror #8
 800bdbe:	fa2f fc8c 	sxtb16	ip, ip
 800bdc2:	eac5 462c 	pkhtb	r6, r5, ip, asr #16
 800bdc6:	eacc 4c05 	pkhbt	ip, ip, r5, lsl #16
 800bdca:	fa2f f593 	sxtb16	r5, r3, ror #8
 800bdce:	3010      	adds	r0, #16
 800bdd0:	604e      	str	r6, [r1, #4]
 800bdd2:	f8c1 c000 	str.w	ip, [r1]
 800bdd6:	fa2f f383 	sxtb16	r3, r3
 800bdda:	eac5 4623 	pkhtb	r6, r5, r3, asr #16
 800bdde:	eac3 4305 	pkhbt	r3, r3, r5, lsl #16
 800bde2:	60ce      	str	r6, [r1, #12]
 800bde4:	608b      	str	r3, [r1, #8]
 800bde6:	f850 cc08 	ldr.w	ip, [r0, #-8]
 800bdea:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800bdee:	fa2f f59c 	sxtb16	r5, ip, ror #8
 800bdf2:	fa2f fc8c 	sxtb16	ip, ip
 800bdf6:	eac5 462c 	pkhtb	r6, r5, ip, asr #16
 800bdfa:	eacc 4c05 	pkhbt	ip, ip, r5, lsl #16
 800bdfe:	fa2f f593 	sxtb16	r5, r3, ror #8
 800be02:	f10e 0e10 	add.w	lr, lr, #16
 800be06:	f8c1 c010 	str.w	ip, [r1, #16]
 800be0a:	614e      	str	r6, [r1, #20]
 800be0c:	3120      	adds	r1, #32
 800be0e:	45a6      	cmp	lr, r4
 800be10:	fa2f f383 	sxtb16	r3, r3
 800be14:	eac5 4c23 	pkhtb	ip, r5, r3, asr #16
 800be18:	eac3 4305 	pkhbt	r3, r3, r5, lsl #16
 800be1c:	f841 cc04 	str.w	ip, [r1, #-4]
 800be20:	f841 3c08 	str.w	r3, [r1, #-8]
 800be24:	ddc6      	ble.n	800bdb4 <st_int8_to16_no_shift+0xc>
 800be26:	1f16      	subs	r6, r2, #4
 800be28:	4576      	cmp	r6, lr
 800be2a:	db12      	blt.n	800be52 <st_int8_to16_no_shift+0xaa>
 800be2c:	f850 3b04 	ldr.w	r3, [r0], #4
 800be30:	fa2f f493 	sxtb16	r4, r3, ror #8
 800be34:	f10e 0e04 	add.w	lr, lr, #4
 800be38:	3108      	adds	r1, #8
 800be3a:	fa2f f383 	sxtb16	r3, r3
 800be3e:	45b6      	cmp	lr, r6
 800be40:	eac4 4523 	pkhtb	r5, r4, r3, asr #16
 800be44:	eac3 4304 	pkhbt	r3, r3, r4, lsl #16
 800be48:	f841 5c04 	str.w	r5, [r1, #-4]
 800be4c:	f841 3c08 	str.w	r3, [r1, #-8]
 800be50:	ddec      	ble.n	800be2c <st_int8_to16_no_shift+0x84>
 800be52:	4572      	cmp	r2, lr
 800be54:	dd08      	ble.n	800be68 <st_int8_to16_no_shift+0xc0>
 800be56:	eba2 020e 	sub.w	r2, r2, lr
 800be5a:	4402      	add	r2, r0
 800be5c:	f910 3b01 	ldrsb.w	r3, [r0], #1
 800be60:	4290      	cmp	r0, r2
 800be62:	f821 3b02 	strh.w	r3, [r1], #2
 800be66:	d1f9      	bne.n	800be5c <st_int8_to16_no_shift+0xb4>
 800be68:	bd70      	pop	{r4, r5, r6, pc}
 800be6a:	bf00      	nop

0800be6c <st_int8_to16_no_shift_interleaved>:
 800be6c:	b570      	push	{r4, r5, r6, lr}
 800be6e:	f1b2 0510 	subs.w	r5, r2, #16
 800be72:	f04f 0e00 	mov.w	lr, #0
 800be76:	d428      	bmi.n	800beca <st_int8_to16_no_shift_interleaved+0x5e>
 800be78:	f8d0 c000 	ldr.w	ip, [r0]
 800be7c:	6843      	ldr	r3, [r0, #4]
 800be7e:	fa2f f69c 	sxtb16	r6, ip, ror #8
 800be82:	fa2f fc8c 	sxtb16	ip, ip
 800be86:	fa2f f493 	sxtb16	r4, r3, ror #8
 800be8a:	3010      	adds	r0, #16
 800be8c:	600e      	str	r6, [r1, #0]
 800be8e:	f8c1 c004 	str.w	ip, [r1, #4]
 800be92:	608c      	str	r4, [r1, #8]
 800be94:	fa2f f383 	sxtb16	r3, r3
 800be98:	60cb      	str	r3, [r1, #12]
 800be9a:	f850 cc08 	ldr.w	ip, [r0, #-8]
 800be9e:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800bea2:	fa2f f69c 	sxtb16	r6, ip, ror #8
 800bea6:	fa2f fc8c 	sxtb16	ip, ip
 800beaa:	fa2f f493 	sxtb16	r4, r3, ror #8
 800beae:	f10e 0e10 	add.w	lr, lr, #16
 800beb2:	610e      	str	r6, [r1, #16]
 800beb4:	f8c1 c014 	str.w	ip, [r1, #20]
 800beb8:	3120      	adds	r1, #32
 800beba:	45ae      	cmp	lr, r5
 800bebc:	f841 4c08 	str.w	r4, [r1, #-8]
 800bec0:	fa2f f383 	sxtb16	r3, r3
 800bec4:	f841 3c04 	str.w	r3, [r1, #-4]
 800bec8:	ddd6      	ble.n	800be78 <st_int8_to16_no_shift_interleaved+0xc>
 800beca:	1f14      	subs	r4, r2, #4
 800becc:	4574      	cmp	r4, lr
 800bece:	db10      	blt.n	800bef2 <st_int8_to16_no_shift_interleaved+0x86>
 800bed0:	ebae 0e00 	sub.w	lr, lr, r0
 800bed4:	f850 3b04 	ldr.w	r3, [r0], #4
 800bed8:	fa2f fc93 	sxtb16	ip, r3, ror #8
 800bedc:	eb00 020e 	add.w	r2, r0, lr
 800bee0:	f8c1 c000 	str.w	ip, [r1]
 800bee4:	3108      	adds	r1, #8
 800bee6:	4294      	cmp	r4, r2
 800bee8:	fa2f f383 	sxtb16	r3, r3
 800beec:	f841 3c04 	str.w	r3, [r1, #-4]
 800bef0:	daf0      	bge.n	800bed4 <st_int8_to16_no_shift_interleaved+0x68>
 800bef2:	bd70      	pop	{r4, r5, r6, pc}

0800bef4 <st_int8_to16_dual>:
 800bef4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bef8:	4698      	mov	r8, r3
 800befa:	085b      	lsrs	r3, r3, #1
 800befc:	eb00 0c02 	add.w	ip, r0, r2
 800bf00:	f000 80b9 	beq.w	800c076 <st_int8_to16_dual+0x182>
 800bf04:	f1a2 0710 	sub.w	r7, r2, #16
 800bf08:	1f16      	subs	r6, r2, #4
 800bf0a:	2f00      	cmp	r7, #0
 800bf0c:	f04f 0500 	mov.w	r5, #0
 800bf10:	db73      	blt.n	800bffa <st_int8_to16_dual+0x106>
 800bf12:	f8d0 e000 	ldr.w	lr, [r0]
 800bf16:	f8dc 4000 	ldr.w	r4, [ip]
 800bf1a:	fa2f f99e 	sxtb16	r9, lr, ror #8
 800bf1e:	fa2f fe8e 	sxtb16	lr, lr
 800bf22:	eac9 4a2e 	pkhtb	sl, r9, lr, asr #16
 800bf26:	eace 4e09 	pkhbt	lr, lr, r9, lsl #16
 800bf2a:	fa2f f994 	sxtb16	r9, r4, ror #8
 800bf2e:	f8c1 e000 	str.w	lr, [r1]
 800bf32:	f8c1 a008 	str.w	sl, [r1, #8]
 800bf36:	fa2f f484 	sxtb16	r4, r4
 800bf3a:	eac9 4e24 	pkhtb	lr, r9, r4, asr #16
 800bf3e:	eac4 4409 	pkhbt	r4, r4, r9, lsl #16
 800bf42:	f8c1 e00c 	str.w	lr, [r1, #12]
 800bf46:	604c      	str	r4, [r1, #4]
 800bf48:	f8d0 e004 	ldr.w	lr, [r0, #4]
 800bf4c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 800bf50:	fa2f f99e 	sxtb16	r9, lr, ror #8
 800bf54:	fa2f fe8e 	sxtb16	lr, lr
 800bf58:	eac9 4a2e 	pkhtb	sl, r9, lr, asr #16
 800bf5c:	eace 4e09 	pkhbt	lr, lr, r9, lsl #16
 800bf60:	fa2f f994 	sxtb16	r9, r4, ror #8
 800bf64:	f8c1 e010 	str.w	lr, [r1, #16]
 800bf68:	f8c1 a018 	str.w	sl, [r1, #24]
 800bf6c:	fa2f f484 	sxtb16	r4, r4
 800bf70:	eac9 4e24 	pkhtb	lr, r9, r4, asr #16
 800bf74:	eac4 4409 	pkhbt	r4, r4, r9, lsl #16
 800bf78:	f8c1 e01c 	str.w	lr, [r1, #28]
 800bf7c:	614c      	str	r4, [r1, #20]
 800bf7e:	f8d0 e008 	ldr.w	lr, [r0, #8]
 800bf82:	f8dc 4008 	ldr.w	r4, [ip, #8]
 800bf86:	fa2f f99e 	sxtb16	r9, lr, ror #8
 800bf8a:	fa2f fe8e 	sxtb16	lr, lr
 800bf8e:	eac9 4a2e 	pkhtb	sl, r9, lr, asr #16
 800bf92:	eace 4e09 	pkhbt	lr, lr, r9, lsl #16
 800bf96:	fa2f f994 	sxtb16	r9, r4, ror #8
 800bf9a:	3010      	adds	r0, #16
 800bf9c:	f10c 0c10 	add.w	ip, ip, #16
 800bfa0:	f8c1 e020 	str.w	lr, [r1, #32]
 800bfa4:	f8c1 a028 	str.w	sl, [r1, #40]	; 0x28
 800bfa8:	fa2f f484 	sxtb16	r4, r4
 800bfac:	eac9 4e24 	pkhtb	lr, r9, r4, asr #16
 800bfb0:	eac4 4409 	pkhbt	r4, r4, r9, lsl #16
 800bfb4:	f8c1 e02c 	str.w	lr, [r1, #44]	; 0x2c
 800bfb8:	624c      	str	r4, [r1, #36]	; 0x24
 800bfba:	f850 ec04 	ldr.w	lr, [r0, #-4]
 800bfbe:	f85c 4c04 	ldr.w	r4, [ip, #-4]
 800bfc2:	fa2f fa9e 	sxtb16	sl, lr, ror #8
 800bfc6:	fa2f fe8e 	sxtb16	lr, lr
 800bfca:	eaca 492e 	pkhtb	r9, sl, lr, asr #16
 800bfce:	eace 4e0a 	pkhbt	lr, lr, sl, lsl #16
 800bfd2:	fa2f fa94 	sxtb16	sl, r4, ror #8
 800bfd6:	3510      	adds	r5, #16
 800bfd8:	f8c1 e030 	str.w	lr, [r1, #48]	; 0x30
 800bfdc:	f8c1 9038 	str.w	r9, [r1, #56]	; 0x38
 800bfe0:	3140      	adds	r1, #64	; 0x40
 800bfe2:	42bd      	cmp	r5, r7
 800bfe4:	fa2f f484 	sxtb16	r4, r4
 800bfe8:	eaca 4e24 	pkhtb	lr, sl, r4, asr #16
 800bfec:	eac4 440a 	pkhbt	r4, r4, sl, lsl #16
 800bff0:	f841 ec04 	str.w	lr, [r1, #-4]
 800bff4:	f841 4c0c 	str.w	r4, [r1, #-12]
 800bff8:	dd8b      	ble.n	800bf12 <st_int8_to16_dual+0x1e>
 800bffa:	42ae      	cmp	r6, r5
 800bffc:	db1e      	blt.n	800c03c <st_int8_to16_dual+0x148>
 800bffe:	f850 4b04 	ldr.w	r4, [r0], #4
 800c002:	f85c eb04 	ldr.w	lr, [ip], #4
 800c006:	fa2f fa94 	sxtb16	sl, r4, ror #8
 800c00a:	fa2f f484 	sxtb16	r4, r4
 800c00e:	eaca 4924 	pkhtb	r9, sl, r4, asr #16
 800c012:	eac4 440a 	pkhbt	r4, r4, sl, lsl #16
 800c016:	fa2f fa9e 	sxtb16	sl, lr, ror #8
 800c01a:	3504      	adds	r5, #4
 800c01c:	600c      	str	r4, [r1, #0]
 800c01e:	f8c1 9008 	str.w	r9, [r1, #8]
 800c022:	3110      	adds	r1, #16
 800c024:	42b5      	cmp	r5, r6
 800c026:	fa2f fe8e 	sxtb16	lr, lr
 800c02a:	eaca 442e 	pkhtb	r4, sl, lr, asr #16
 800c02e:	eace 4e0a 	pkhbt	lr, lr, sl, lsl #16
 800c032:	f841 4c04 	str.w	r4, [r1, #-4]
 800c036:	f841 ec0c 	str.w	lr, [r1, #-12]
 800c03a:	dde0      	ble.n	800bffe <st_int8_to16_dual+0x10a>
 800c03c:	42aa      	cmp	r2, r5
 800c03e:	dd40      	ble.n	800c0c2 <st_int8_to16_dual+0x1ce>
 800c040:	1b55      	subs	r5, r2, r5
 800c042:	1d0c      	adds	r4, r1, #4
 800c044:	46e6      	mov	lr, ip
 800c046:	eb00 0a05 	add.w	sl, r0, r5
 800c04a:	f910 9b01 	ldrsb.w	r9, [r0], #1
 800c04e:	3404      	adds	r4, #4
 800c050:	f824 9c08 	strh.w	r9, [r4, #-8]
 800c054:	4550      	cmp	r0, sl
 800c056:	f91e 9b01 	ldrsb.w	r9, [lr], #1
 800c05a:	f824 9c06 	strh.w	r9, [r4, #-6]
 800c05e:	d1f4      	bne.n	800c04a <st_int8_to16_dual+0x156>
 800c060:	44ac      	add	ip, r5
 800c062:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 800c066:	3b01      	subs	r3, #1
 800c068:	eb0a 0002 	add.w	r0, sl, r2
 800c06c:	4494      	add	ip, r2
 800c06e:	b29b      	uxth	r3, r3
 800c070:	2b00      	cmp	r3, #0
 800c072:	f47f af4a 	bne.w	800bf0a <st_int8_to16_dual+0x16>
 800c076:	f018 0f01 	tst.w	r8, #1
 800c07a:	d020      	beq.n	800c0be <st_int8_to16_dual+0x1ca>
 800c07c:	1f17      	subs	r7, r2, #4
 800c07e:	f04f 0400 	mov.w	r4, #0
 800c082:	d411      	bmi.n	800c0a8 <st_int8_to16_dual+0x1b4>
 800c084:	f850 3b04 	ldr.w	r3, [r0], #4
 800c088:	fa2f f593 	sxtb16	r5, r3, ror #8
 800c08c:	3404      	adds	r4, #4
 800c08e:	3108      	adds	r1, #8
 800c090:	fa2f f383 	sxtb16	r3, r3
 800c094:	42a7      	cmp	r7, r4
 800c096:	eac5 4623 	pkhtb	r6, r5, r3, asr #16
 800c09a:	eac3 4305 	pkhbt	r3, r3, r5, lsl #16
 800c09e:	f841 6c04 	str.w	r6, [r1, #-4]
 800c0a2:	f841 3c08 	str.w	r3, [r1, #-8]
 800c0a6:	daed      	bge.n	800c084 <st_int8_to16_dual+0x190>
 800c0a8:	42a2      	cmp	r2, r4
 800c0aa:	dd08      	ble.n	800c0be <st_int8_to16_dual+0x1ca>
 800c0ac:	1b13      	subs	r3, r2, r4
 800c0ae:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 800c0b2:	f910 2b01 	ldrsb.w	r2, [r0], #1
 800c0b6:	f821 2b02 	strh.w	r2, [r1], #2
 800c0ba:	428b      	cmp	r3, r1
 800c0bc:	d1f9      	bne.n	800c0b2 <st_int8_to16_dual+0x1be>
 800c0be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c0c2:	4682      	mov	sl, r0
 800c0c4:	e7cf      	b.n	800c066 <st_int8_to16_dual+0x172>
 800c0c6:	bf00      	nop

0800c0c8 <st_int8_to16_dual_interleaved>:
 800c0c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c0cc:	4698      	mov	r8, r3
 800c0ce:	085b      	lsrs	r3, r3, #1
 800c0d0:	eb00 0c02 	add.w	ip, r0, r2
 800c0d4:	f000 808f 	beq.w	800c1f6 <st_int8_to16_dual_interleaved+0x12e>
 800c0d8:	f1a2 0710 	sub.w	r7, r2, #16
 800c0dc:	1f16      	subs	r6, r2, #4
 800c0de:	2f00      	cmp	r7, #0
 800c0e0:	f04f 0e00 	mov.w	lr, #0
 800c0e4:	db4e      	blt.n	800c184 <st_int8_to16_dual_interleaved+0xbc>
 800c0e6:	6805      	ldr	r5, [r0, #0]
 800c0e8:	f8dc 4000 	ldr.w	r4, [ip]
 800c0ec:	fa2f fa95 	sxtb16	sl, r5, ror #8
 800c0f0:	fa2f f585 	sxtb16	r5, r5
 800c0f4:	fa2f f994 	sxtb16	r9, r4, ror #8
 800c0f8:	f8c1 a000 	str.w	sl, [r1]
 800c0fc:	f8c1 9004 	str.w	r9, [r1, #4]
 800c100:	608d      	str	r5, [r1, #8]
 800c102:	fa2f f484 	sxtb16	r4, r4
 800c106:	60cc      	str	r4, [r1, #12]
 800c108:	6845      	ldr	r5, [r0, #4]
 800c10a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 800c10e:	fa2f fa95 	sxtb16	sl, r5, ror #8
 800c112:	fa2f f585 	sxtb16	r5, r5
 800c116:	fa2f f994 	sxtb16	r9, r4, ror #8
 800c11a:	f8c1 a010 	str.w	sl, [r1, #16]
 800c11e:	f8c1 9014 	str.w	r9, [r1, #20]
 800c122:	618d      	str	r5, [r1, #24]
 800c124:	fa2f f484 	sxtb16	r4, r4
 800c128:	61cc      	str	r4, [r1, #28]
 800c12a:	6885      	ldr	r5, [r0, #8]
 800c12c:	f8dc 4008 	ldr.w	r4, [ip, #8]
 800c130:	fa2f fa95 	sxtb16	sl, r5, ror #8
 800c134:	fa2f f585 	sxtb16	r5, r5
 800c138:	fa2f f994 	sxtb16	r9, r4, ror #8
 800c13c:	3010      	adds	r0, #16
 800c13e:	f10c 0c10 	add.w	ip, ip, #16
 800c142:	f8c1 a020 	str.w	sl, [r1, #32]
 800c146:	f8c1 9024 	str.w	r9, [r1, #36]	; 0x24
 800c14a:	628d      	str	r5, [r1, #40]	; 0x28
 800c14c:	fa2f f484 	sxtb16	r4, r4
 800c150:	62cc      	str	r4, [r1, #44]	; 0x2c
 800c152:	f850 5c04 	ldr.w	r5, [r0, #-4]
 800c156:	f85c 4c04 	ldr.w	r4, [ip, #-4]
 800c15a:	fa2f fa95 	sxtb16	sl, r5, ror #8
 800c15e:	fa2f f585 	sxtb16	r5, r5
 800c162:	fa2f f994 	sxtb16	r9, r4, ror #8
 800c166:	f10e 0e10 	add.w	lr, lr, #16
 800c16a:	f8c1 a030 	str.w	sl, [r1, #48]	; 0x30
 800c16e:	f8c1 9034 	str.w	r9, [r1, #52]	; 0x34
 800c172:	3140      	adds	r1, #64	; 0x40
 800c174:	45be      	cmp	lr, r7
 800c176:	f841 5c08 	str.w	r5, [r1, #-8]
 800c17a:	fa2f f484 	sxtb16	r4, r4
 800c17e:	f841 4c04 	str.w	r4, [r1, #-4]
 800c182:	ddb0      	ble.n	800c0e6 <st_int8_to16_dual_interleaved+0x1e>
 800c184:	4576      	cmp	r6, lr
 800c186:	db18      	blt.n	800c1ba <st_int8_to16_dual_interleaved+0xf2>
 800c188:	f850 5b04 	ldr.w	r5, [r0], #4
 800c18c:	f85c 4b04 	ldr.w	r4, [ip], #4
 800c190:	fa2f fa95 	sxtb16	sl, r5, ror #8
 800c194:	fa2f f585 	sxtb16	r5, r5
 800c198:	fa2f f994 	sxtb16	r9, r4, ror #8
 800c19c:	f10e 0e04 	add.w	lr, lr, #4
 800c1a0:	f8c1 a000 	str.w	sl, [r1]
 800c1a4:	f8c1 9004 	str.w	r9, [r1, #4]
 800c1a8:	3110      	adds	r1, #16
 800c1aa:	45b6      	cmp	lr, r6
 800c1ac:	f841 5c08 	str.w	r5, [r1, #-8]
 800c1b0:	fa2f f484 	sxtb16	r4, r4
 800c1b4:	f841 4c04 	str.w	r4, [r1, #-4]
 800c1b8:	dde6      	ble.n	800c188 <st_int8_to16_dual_interleaved+0xc0>
 800c1ba:	4572      	cmp	r2, lr
 800c1bc:	dd3c      	ble.n	800c238 <st_int8_to16_dual_interleaved+0x170>
 800c1be:	eba2 0e0e 	sub.w	lr, r2, lr
 800c1c2:	1d0c      	adds	r4, r1, #4
 800c1c4:	4665      	mov	r5, ip
 800c1c6:	eb00 0a0e 	add.w	sl, r0, lr
 800c1ca:	f910 9b01 	ldrsb.w	r9, [r0], #1
 800c1ce:	3404      	adds	r4, #4
 800c1d0:	f824 9c08 	strh.w	r9, [r4, #-8]
 800c1d4:	4550      	cmp	r0, sl
 800c1d6:	f915 9b01 	ldrsb.w	r9, [r5], #1
 800c1da:	f824 9c06 	strh.w	r9, [r4, #-6]
 800c1de:	d1f4      	bne.n	800c1ca <st_int8_to16_dual_interleaved+0x102>
 800c1e0:	44f4      	add	ip, lr
 800c1e2:	eb01 018e 	add.w	r1, r1, lr, lsl #2
 800c1e6:	3b01      	subs	r3, #1
 800c1e8:	eb0a 0002 	add.w	r0, sl, r2
 800c1ec:	4494      	add	ip, r2
 800c1ee:	b29b      	uxth	r3, r3
 800c1f0:	2b00      	cmp	r3, #0
 800c1f2:	f47f af74 	bne.w	800c0de <st_int8_to16_dual_interleaved+0x16>
 800c1f6:	f018 0f01 	tst.w	r8, #1
 800c1fa:	d01b      	beq.n	800c234 <st_int8_to16_dual_interleaved+0x16c>
 800c1fc:	1f16      	subs	r6, r2, #4
 800c1fe:	f04f 0400 	mov.w	r4, #0
 800c202:	d40c      	bmi.n	800c21e <st_int8_to16_dual_interleaved+0x156>
 800c204:	f850 3b04 	ldr.w	r3, [r0], #4
 800c208:	fa2f f593 	sxtb16	r5, r3, ror #8
 800c20c:	3404      	adds	r4, #4
 800c20e:	600d      	str	r5, [r1, #0]
 800c210:	3108      	adds	r1, #8
 800c212:	42a6      	cmp	r6, r4
 800c214:	fa2f f383 	sxtb16	r3, r3
 800c218:	f841 3c04 	str.w	r3, [r1, #-4]
 800c21c:	daf2      	bge.n	800c204 <st_int8_to16_dual_interleaved+0x13c>
 800c21e:	42a2      	cmp	r2, r4
 800c220:	dd08      	ble.n	800c234 <st_int8_to16_dual_interleaved+0x16c>
 800c222:	1b13      	subs	r3, r2, r4
 800c224:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 800c228:	f910 2b01 	ldrsb.w	r2, [r0], #1
 800c22c:	f821 2b02 	strh.w	r2, [r1], #2
 800c230:	428b      	cmp	r3, r1
 800c232:	d1f9      	bne.n	800c228 <st_int8_to16_dual_interleaved+0x160>
 800c234:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c238:	4682      	mov	sl, r0
 800c23a:	e7d4      	b.n	800c1e6 <st_int8_to16_dual_interleaved+0x11e>

0800c23c <ai_padding_opt_init>:
 800c23c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c240:	2700      	movs	r7, #0
 800c242:	9c07      	ldr	r4, [sp, #28]
 800c244:	e9c0 7700 	strd	r7, r7, [r0]
 800c248:	6087      	str	r7, [r0, #8]
 800c24a:	46b9      	mov	r9, r7
 800c24c:	690d      	ldr	r5, [r1, #16]
 800c24e:	f1c5 0c00 	rsb	ip, r5, #0
 800c252:	689d      	ldr	r5, [r3, #8]
 800c254:	42bd      	cmp	r5, r7
 800c256:	dd1c      	ble.n	800c292 <ai_padding_opt_init+0x56>
 800c258:	463e      	mov	r6, r7
 800c25a:	46be      	mov	lr, r7
 800c25c:	e010      	b.n	800c280 <ai_padding_opt_init+0x44>
 800c25e:	6895      	ldr	r5, [r2, #8]
 800c260:	eba5 080c 	sub.w	r8, r5, ip
 800c264:	68a5      	ldr	r5, [r4, #8]
 800c266:	45a8      	cmp	r8, r5
 800c268:	da10      	bge.n	800c28c <ai_padding_opt_init+0x50>
 800c26a:	f109 0901 	add.w	r9, r9, #1
 800c26e:	f8c0 9008 	str.w	r9, [r0, #8]
 800c272:	688d      	ldr	r5, [r1, #8]
 800c274:	f10e 0e01 	add.w	lr, lr, #1
 800c278:	44ac      	add	ip, r5
 800c27a:	689d      	ldr	r5, [r3, #8]
 800c27c:	4575      	cmp	r5, lr
 800c27e:	dd09      	ble.n	800c294 <ai_padding_opt_init+0x58>
 800c280:	f1bc 0f00 	cmp.w	ip, #0
 800c284:	daeb      	bge.n	800c25e <ai_padding_opt_init+0x22>
 800c286:	3601      	adds	r6, #1
 800c288:	6006      	str	r6, [r0, #0]
 800c28a:	e7f2      	b.n	800c272 <ai_padding_opt_init+0x36>
 800c28c:	3701      	adds	r7, #1
 800c28e:	6047      	str	r7, [r0, #4]
 800c290:	e7ef      	b.n	800c272 <ai_padding_opt_init+0x36>
 800c292:	463e      	mov	r6, r7
 800c294:	2500      	movs	r5, #0
 800c296:	f8c0 9014 	str.w	r9, [r0, #20]
 800c29a:	e9c0 6703 	strd	r6, r7, [r0, #12]
 800c29e:	e9c0 5506 	strd	r5, r5, [r0, #24]
 800c2a2:	6205      	str	r5, [r0, #32]
 800c2a4:	694e      	ldr	r6, [r1, #20]
 800c2a6:	f1c6 0c00 	rsb	ip, r6, #0
 800c2aa:	685e      	ldr	r6, [r3, #4]
 800c2ac:	42ae      	cmp	r6, r5
 800c2ae:	dd1c      	ble.n	800c2ea <ai_padding_opt_init+0xae>
 800c2b0:	46ae      	mov	lr, r5
 800c2b2:	e00f      	b.n	800c2d4 <ai_padding_opt_init+0x98>
 800c2b4:	6855      	ldr	r5, [r2, #4]
 800c2b6:	6866      	ldr	r6, [r4, #4]
 800c2b8:	eba5 050c 	sub.w	r5, r5, ip
 800c2bc:	42b5      	cmp	r5, r6
 800c2be:	da10      	bge.n	800c2e2 <ai_padding_opt_init+0xa6>
 800c2c0:	6a05      	ldr	r5, [r0, #32]
 800c2c2:	3501      	adds	r5, #1
 800c2c4:	6205      	str	r5, [r0, #32]
 800c2c6:	68cd      	ldr	r5, [r1, #12]
 800c2c8:	f10e 0e01 	add.w	lr, lr, #1
 800c2cc:	44ac      	add	ip, r5
 800c2ce:	685d      	ldr	r5, [r3, #4]
 800c2d0:	4575      	cmp	r5, lr
 800c2d2:	dd0a      	ble.n	800c2ea <ai_padding_opt_init+0xae>
 800c2d4:	f1bc 0f00 	cmp.w	ip, #0
 800c2d8:	daec      	bge.n	800c2b4 <ai_padding_opt_init+0x78>
 800c2da:	6985      	ldr	r5, [r0, #24]
 800c2dc:	3501      	adds	r5, #1
 800c2de:	6185      	str	r5, [r0, #24]
 800c2e0:	e7f1      	b.n	800c2c6 <ai_padding_opt_init+0x8a>
 800c2e2:	69c5      	ldr	r5, [r0, #28]
 800c2e4:	3501      	adds	r5, #1
 800c2e6:	61c5      	str	r5, [r0, #28]
 800c2e8:	e7ed      	b.n	800c2c6 <ai_padding_opt_init+0x8a>
 800c2ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c2ee:	bf00      	nop

0800c2f0 <ai_padding_opt_phase1>:
 800c2f0:	e9d0 3206 	ldrd	r3, r2, [r0, #24]
 800c2f4:	b923      	cbnz	r3, 800c300 <ai_padding_opt_phase1+0x10>
 800c2f6:	b17a      	cbz	r2, 800c318 <ai_padding_opt_phase1+0x28>
 800c2f8:	3a01      	subs	r2, #1
 800c2fa:	8483      	strh	r3, [r0, #36]	; 0x24
 800c2fc:	61c2      	str	r2, [r0, #28]
 800c2fe:	e004      	b.n	800c30a <ai_padding_opt_phase1+0x1a>
 800c300:	b152      	cbz	r2, 800c318 <ai_padding_opt_phase1+0x28>
 800c302:	2201      	movs	r2, #1
 800c304:	3b01      	subs	r3, #1
 800c306:	8482      	strh	r2, [r0, #36]	; 0x24
 800c308:	6183      	str	r3, [r0, #24]
 800c30a:	68c3      	ldr	r3, [r0, #12]
 800c30c:	e9d0 1204 	ldrd	r1, r2, [r0, #16]
 800c310:	6003      	str	r3, [r0, #0]
 800c312:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800c316:	4770      	bx	lr
 800c318:	6a03      	ldr	r3, [r0, #32]
 800c31a:	2201      	movs	r2, #1
 800c31c:	3b01      	subs	r3, #1
 800c31e:	8482      	strh	r2, [r0, #36]	; 0x24
 800c320:	6203      	str	r3, [r0, #32]
 800c322:	e7f2      	b.n	800c30a <ai_padding_opt_phase1+0x1a>

0800c324 <st_sssa8_ch_nn_mat_mult_kernel_opt>:
 800c324:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c328:	b09b      	sub	sp, #108	; 0x6c
 800c32a:	4683      	mov	fp, r0
 800c32c:	f89d 00ac 	ldrb.w	r0, [sp, #172]	; 0xac
 800c330:	9317      	str	r3, [sp, #92]	; 0x5c
 800c332:	2800      	cmp	r0, #0
 800c334:	900b      	str	r0, [sp, #44]	; 0x2c
 800c336:	9825      	ldr	r0, [sp, #148]	; 0x94
 800c338:	bf18      	it	ne
 800c33a:	2301      	movne	r3, #1
 800c33c:	f8bd 4098 	ldrh.w	r4, [sp, #152]	; 0x98
 800c340:	910c      	str	r1, [sp, #48]	; 0x30
 800c342:	fb00 3303 	mla	r3, r0, r3, r3
 800c346:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800c348:	9414      	str	r4, [sp, #80]	; 0x50
 800c34a:	0864      	lsrs	r4, r4, #1
 800c34c:	4403      	add	r3, r0
 800c34e:	f8bd 009c 	ldrh.w	r0, [sp, #156]	; 0x9c
 800c352:	9205      	str	r2, [sp, #20]
 800c354:	9302      	str	r3, [sp, #8]
 800c356:	9006      	str	r0, [sp, #24]
 800c358:	9415      	str	r4, [sp, #84]	; 0x54
 800c35a:	f000 81c6 	beq.w	800c6ea <st_sssa8_ch_nn_mat_mult_kernel_opt+0x3c6>
 800c35e:	460d      	mov	r5, r1
 800c360:	4601      	mov	r1, r0
 800c362:	f1a0 0310 	sub.w	r3, r0, #16
 800c366:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 800c36a:	1ece      	subs	r6, r1, #3
 800c36c:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800c370:	091b      	lsrs	r3, r3, #4
 800c372:	920e      	str	r2, [sp, #56]	; 0x38
 800c374:	960d      	str	r6, [sp, #52]	; 0x34
 800c376:	46d9      	mov	r9, fp
 800c378:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 800c37a:	3301      	adds	r3, #1
 800c37c:	900f      	str	r0, [sp, #60]	; 0x3c
 800c37e:	3604      	adds	r6, #4
 800c380:	eb00 1243 	add.w	r2, r0, r3, lsl #5
 800c384:	9601      	str	r6, [sp, #4]
 800c386:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 800c388:	9207      	str	r2, [sp, #28]
 800c38a:	011a      	lsls	r2, r3, #4
 800c38c:	3608      	adds	r6, #8
 800c38e:	9212      	str	r2, [sp, #72]	; 0x48
 800c390:	019a      	lsls	r2, r3, #6
 800c392:	9604      	str	r6, [sp, #16]
 800c394:	eb05 1343 	add.w	r3, r5, r3, lsl #5
 800c398:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 800c39a:	9311      	str	r3, [sp, #68]	; 0x44
 800c39c:	1f0b      	subs	r3, r1, #4
 800c39e:	3608      	adds	r6, #8
 800c3a0:	9210      	str	r2, [sp, #64]	; 0x40
 800c3a2:	9313      	str	r3, [sp, #76]	; 0x4c
 800c3a4:	9603      	str	r6, [sp, #12]
 800c3a6:	00e6      	lsls	r6, r4, #3
 800c3a8:	9616      	str	r6, [sp, #88]	; 0x58
 800c3aa:	9905      	ldr	r1, [sp, #20]
 800c3ac:	9c06      	ldr	r4, [sp, #24]
 800c3ae:	680b      	ldr	r3, [r1, #0]
 800c3b0:	3108      	adds	r1, #8
 800c3b2:	2c0f      	cmp	r4, #15
 800c3b4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800c3b6:	9319      	str	r3, [sp, #100]	; 0x64
 800c3b8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c3ba:	9819      	ldr	r0, [sp, #100]	; 0x64
 800c3bc:	f851 2c04 	ldr.w	r2, [r1, #-4]
 800c3c0:	9105      	str	r1, [sp, #20]
 800c3c2:	9219      	str	r2, [sp, #100]	; 0x64
 800c3c4:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800c3c6:	9919      	ldr	r1, [sp, #100]	; 0x64
 800c3c8:	f340 82c1 	ble.w	800c94e <st_sssa8_ch_nn_mat_mult_kernel_opt+0x62a>
 800c3cc:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 800c3ce:	464c      	mov	r4, r9
 800c3d0:	9e07      	ldr	r6, [sp, #28]
 800c3d2:	f8d7 e000 	ldr.w	lr, [r7]
 800c3d6:	f8d5 a000 	ldr.w	sl, [r5]
 800c3da:	f8d4 c000 	ldr.w	ip, [r4]
 800c3de:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800c3e2:	fb2c 330e 	smlad	r3, ip, lr, r3
 800c3e6:	fb2c 000a 	smlad	r0, ip, sl, r0
 800c3ea:	fb28 2e0e 	smlad	lr, r8, lr, r2
 800c3ee:	fb28 110a 	smlad	r1, r8, sl, r1
 800c3f2:	f8d7 c004 	ldr.w	ip, [r7, #4]
 800c3f6:	f8d5 8004 	ldr.w	r8, [r5, #4]
 800c3fa:	68a2      	ldr	r2, [r4, #8]
 800c3fc:	f8d4 b00c 	ldr.w	fp, [r4, #12]
 800c400:	fb22 330c 	smlad	r3, r2, ip, r3
 800c404:	fb22 0008 	smlad	r0, r2, r8, r0
 800c408:	fb2b ee0c 	smlad	lr, fp, ip, lr
 800c40c:	fb2b 1808 	smlad	r8, fp, r8, r1
 800c410:	f8d7 c008 	ldr.w	ip, [r7, #8]
 800c414:	f8d5 b008 	ldr.w	fp, [r5, #8]
 800c418:	6922      	ldr	r2, [r4, #16]
 800c41a:	f8d4 a014 	ldr.w	sl, [r4, #20]
 800c41e:	fb22 330c 	smlad	r3, r2, ip, r3
 800c422:	fb22 000b 	smlad	r0, r2, fp, r0
 800c426:	fb2a ee0c 	smlad	lr, sl, ip, lr
 800c42a:	fb2a 8b0b 	smlad	fp, sl, fp, r8
 800c42e:	f8d7 c00c 	ldr.w	ip, [r7, #12]
 800c432:	f8d5 a00c 	ldr.w	sl, [r5, #12]
 800c436:	f8d4 8018 	ldr.w	r8, [r4, #24]
 800c43a:	69e1      	ldr	r1, [r4, #28]
 800c43c:	fb28 330c 	smlad	r3, r8, ip, r3
 800c440:	fb28 000a 	smlad	r0, r8, sl, r0
 800c444:	fb21 ec0c 	smlad	ip, r1, ip, lr
 800c448:	fb21 ba0a 	smlad	sl, r1, sl, fp
 800c44c:	f8d7 e010 	ldr.w	lr, [r7, #16]
 800c450:	6929      	ldr	r1, [r5, #16]
 800c452:	f8d4 8020 	ldr.w	r8, [r4, #32]
 800c456:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c458:	fb28 330e 	smlad	r3, r8, lr, r3
 800c45c:	fb28 0001 	smlad	r0, r8, r1, r0
 800c460:	fb22 cc0e 	smlad	ip, r2, lr, ip
 800c464:	fb22 a101 	smlad	r1, r2, r1, sl
 800c468:	f8d7 e014 	ldr.w	lr, [r7, #20]
 800c46c:	f8d5 a014 	ldr.w	sl, [r5, #20]
 800c470:	f8d4 8028 	ldr.w	r8, [r4, #40]	; 0x28
 800c474:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c476:	fb28 330e 	smlad	r3, r8, lr, r3
 800c47a:	fb28 000a 	smlad	r0, r8, sl, r0
 800c47e:	fb22 cc0e 	smlad	ip, r2, lr, ip
 800c482:	fb22 120a 	smlad	r2, r2, sl, r1
 800c486:	f8d7 e018 	ldr.w	lr, [r7, #24]
 800c48a:	f8d5 b018 	ldr.w	fp, [r5, #24]
 800c48e:	f8d4 8030 	ldr.w	r8, [r4, #48]	; 0x30
 800c492:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800c494:	fb28 330e 	smlad	r3, r8, lr, r3
 800c498:	fb28 080b 	smlad	r8, r8, fp, r0
 800c49c:	fb21 ce0e 	smlad	lr, r1, lr, ip
 800c4a0:	fb21 210b 	smlad	r1, r1, fp, r2
 800c4a4:	69fa      	ldr	r2, [r7, #28]
 800c4a6:	3520      	adds	r5, #32
 800c4a8:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800c4aa:	3720      	adds	r7, #32
 800c4ac:	f8d4 c03c 	ldr.w	ip, [r4, #60]	; 0x3c
 800c4b0:	3440      	adds	r4, #64	; 0x40
 800c4b2:	f855 bc04 	ldr.w	fp, [r5, #-4]
 800c4b6:	fb20 3302 	smlad	r3, r0, r2, r3
 800c4ba:	fb20 800b 	smlad	r0, r0, fp, r8
 800c4be:	fb2c e202 	smlad	r2, ip, r2, lr
 800c4c2:	fb2c 110b 	smlad	r1, ip, fp, r1
 800c4c6:	42b5      	cmp	r5, r6
 800c4c8:	d183      	bne.n	800c3d2 <st_sssa8_ch_nn_mat_mult_kernel_opt+0xae>
 800c4ca:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800c4cc:	f8dd b048 	ldr.w	fp, [sp, #72]	; 0x48
 800c4d0:	44a1      	add	r9, r4
 800c4d2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800c4d4:	9d07      	ldr	r5, [sp, #28]
 800c4d6:	9400      	str	r4, [sp, #0]
 800c4d8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800c4da:	45a3      	cmp	fp, r4
 800c4dc:	f280 823f 	bge.w	800c95e <st_sssa8_ch_nn_mat_mult_kernel_opt+0x63a>
 800c4e0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800c4e2:	f8dd c000 	ldr.w	ip, [sp]
 800c4e6:	eba4 040b 	sub.w	r4, r4, fp
 800c4ea:	08a4      	lsrs	r4, r4, #2
 800c4ec:	4626      	mov	r6, r4
 800c4ee:	940a      	str	r4, [sp, #40]	; 0x28
 800c4f0:	464c      	mov	r4, r9
 800c4f2:	3601      	adds	r6, #1
 800c4f4:	00f7      	lsls	r7, r6, #3
 800c4f6:	9609      	str	r6, [sp, #36]	; 0x24
 800c4f8:	eb05 08c6 	add.w	r8, r5, r6, lsl #3
 800c4fc:	9708      	str	r7, [sp, #32]
 800c4fe:	f8dc e000 	ldr.w	lr, [ip]
 800c502:	682f      	ldr	r7, [r5, #0]
 800c504:	f8d4 a000 	ldr.w	sl, [r4]
 800c508:	6866      	ldr	r6, [r4, #4]
 800c50a:	fb2a 330e 	smlad	r3, sl, lr, r3
 800c50e:	fb2a 0007 	smlad	r0, sl, r7, r0
 800c512:	fb26 220e 	smlad	r2, r6, lr, r2
 800c516:	fb26 1107 	smlad	r1, r6, r7, r1
 800c51a:	f8dc 7004 	ldr.w	r7, [ip, #4]
 800c51e:	3508      	adds	r5, #8
 800c520:	68a6      	ldr	r6, [r4, #8]
 800c522:	f10c 0c08 	add.w	ip, ip, #8
 800c526:	f8d4 e00c 	ldr.w	lr, [r4, #12]
 800c52a:	3410      	adds	r4, #16
 800c52c:	f855 ac04 	ldr.w	sl, [r5, #-4]
 800c530:	fb26 3307 	smlad	r3, r6, r7, r3
 800c534:	fb26 000a 	smlad	r0, r6, sl, r0
 800c538:	fb2e 2207 	smlad	r2, lr, r7, r2
 800c53c:	fb2e 110a 	smlad	r1, lr, sl, r1
 800c540:	4545      	cmp	r5, r8
 800c542:	d1dc      	bne.n	800c4fe <st_sssa8_ch_nn_mat_mult_kernel_opt+0x1da>
 800c544:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800c546:	f10b 0b04 	add.w	fp, fp, #4
 800c54a:	9d08      	ldr	r5, [sp, #32]
 800c54c:	eb09 1904 	add.w	r9, r9, r4, lsl #4
 800c550:	9c00      	ldr	r4, [sp, #0]
 800c552:	442c      	add	r4, r5
 800c554:	9400      	str	r4, [sp, #0]
 800c556:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800c558:	eb0b 0b84 	add.w	fp, fp, r4, lsl #2
 800c55c:	9f06      	ldr	r7, [sp, #24]
 800c55e:	455f      	cmp	r7, fp
 800c560:	dd54      	ble.n	800c60c <st_sssa8_ch_nn_mat_mult_kernel_opt+0x2e8>
 800c562:	9c00      	ldr	r4, [sp, #0]
 800c564:	f9b9 6000 	ldrsh.w	r6, [r9]
 800c568:	f9b4 4000 	ldrsh.w	r4, [r4]
 800c56c:	f9b9 5002 	ldrsh.w	r5, [r9, #2]
 800c570:	fb04 3306 	mla	r3, r4, r6, r3
 800c574:	fb05 2204 	mla	r2, r5, r4, r2
 800c578:	f9b8 4000 	ldrsh.w	r4, [r8]
 800c57c:	fb04 0006 	mla	r0, r4, r6, r0
 800c580:	fb05 1104 	mla	r1, r5, r4, r1
 800c584:	f10b 0401 	add.w	r4, fp, #1
 800c588:	42bc      	cmp	r4, r7
 800c58a:	da3a      	bge.n	800c602 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x2de>
 800c58c:	9c00      	ldr	r4, [sp, #0]
 800c58e:	f9b9 6004 	ldrsh.w	r6, [r9, #4]
 800c592:	f9b4 5002 	ldrsh.w	r5, [r4, #2]
 800c596:	f9b9 4006 	ldrsh.w	r4, [r9, #6]
 800c59a:	fb05 3306 	mla	r3, r5, r6, r3
 800c59e:	fb05 2204 	mla	r2, r5, r4, r2
 800c5a2:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800c5a6:	fb05 1104 	mla	r1, r5, r4, r1
 800c5aa:	f10b 0402 	add.w	r4, fp, #2
 800c5ae:	fb06 0005 	mla	r0, r6, r5, r0
 800c5b2:	42a7      	cmp	r7, r4
 800c5b4:	dd25      	ble.n	800c602 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x2de>
 800c5b6:	9c00      	ldr	r4, [sp, #0]
 800c5b8:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 800c5bc:	f9b4 5004 	ldrsh.w	r5, [r4, #4]
 800c5c0:	f9b9 400a 	ldrsh.w	r4, [r9, #10]
 800c5c4:	fb06 3305 	mla	r3, r6, r5, r3
 800c5c8:	fb05 2204 	mla	r2, r5, r4, r2
 800c5cc:	f9b8 5004 	ldrsh.w	r5, [r8, #4]
 800c5d0:	fb05 1104 	mla	r1, r5, r4, r1
 800c5d4:	f10b 0403 	add.w	r4, fp, #3
 800c5d8:	fb06 0005 	mla	r0, r6, r5, r0
 800c5dc:	42a7      	cmp	r7, r4
 800c5de:	dd10      	ble.n	800c602 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x2de>
 800c5e0:	9c00      	ldr	r4, [sp, #0]
 800c5e2:	f9b8 6006 	ldrsh.w	r6, [r8, #6]
 800c5e6:	f9b4 5006 	ldrsh.w	r5, [r4, #6]
 800c5ea:	f9b9 400c 	ldrsh.w	r4, [r9, #12]
 800c5ee:	fb04 3305 	mla	r3, r4, r5, r3
 800c5f2:	fb04 0006 	mla	r0, r4, r6, r0
 800c5f6:	f9b9 400e 	ldrsh.w	r4, [r9, #14]
 800c5fa:	fb05 2204 	mla	r2, r5, r4, r2
 800c5fe:	fb06 1104 	mla	r1, r6, r4, r1
 800c602:	9c06      	ldr	r4, [sp, #24]
 800c604:	eba4 0b0b 	sub.w	fp, r4, fp
 800c608:	eb09 098b 	add.w	r9, r9, fp, lsl #2
 800c60c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800c60e:	2c00      	cmp	r4, #0
 800c610:	f000 80f2 	beq.w	800c7f8 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x4d4>
 800c614:	9c01      	ldr	r4, [sp, #4]
 800c616:	f934 4c04 	ldrsh.w	r4, [r4, #-4]
 800c61a:	2c15      	cmp	r4, #21
 800c61c:	f340 8147 	ble.w	800c8ae <st_sssa8_ch_nn_mat_mult_kernel_opt+0x58a>
 800c620:	1ea5      	subs	r5, r4, #2
 800c622:	2601      	movs	r6, #1
 800c624:	3c01      	subs	r4, #1
 800c626:	fa06 f505 	lsl.w	r5, r6, r5
 800c62a:	9e04      	ldr	r6, [sp, #16]
 800c62c:	f856 6c08 	ldr.w	r6, [r6, #-8]
 800c630:	fb53 5306 	smmla	r3, r3, r6, r5
 800c634:	fb50 5006 	smmla	r0, r0, r6, r5
 800c638:	9d03      	ldr	r5, [sp, #12]
 800c63a:	4123      	asrs	r3, r4
 800c63c:	9e04      	ldr	r6, [sp, #16]
 800c63e:	f855 7c08 	ldr.w	r7, [r5, #-8]
 800c642:	1f35      	subs	r5, r6, #4
 800c644:	9e03      	ldr	r6, [sp, #12]
 800c646:	443b      	add	r3, r7
 800c648:	3e04      	subs	r6, #4
 800c64a:	f303 0307 	ssat	r3, #8, r3
 800c64e:	4120      	asrs	r0, r4
 800c650:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 800c652:	4438      	add	r0, r7
 800c654:	7023      	strb	r3, [r4, #0]
 800c656:	f300 0007 	ssat	r0, #8, r0
 800c65a:	9b02      	ldr	r3, [sp, #8]
 800c65c:	7018      	strb	r0, [r3, #0]
 800c65e:	4620      	mov	r0, r4
 800c660:	9b01      	ldr	r3, [sp, #4]
 800c662:	9c24      	ldr	r4, [sp, #144]	; 0x90
 800c664:	f933 3c02 	ldrsh.w	r3, [r3, #-2]
 800c668:	1904      	adds	r4, r0, r4
 800c66a:	9f24      	ldr	r7, [sp, #144]	; 0x90
 800c66c:	9802      	ldr	r0, [sp, #8]
 800c66e:	2b15      	cmp	r3, #21
 800c670:	4438      	add	r0, r7
 800c672:	f340 8109 	ble.w	800c888 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x564>
 800c676:	682f      	ldr	r7, [r5, #0]
 800c678:	f04f 0c01 	mov.w	ip, #1
 800c67c:	1e9d      	subs	r5, r3, #2
 800c67e:	3b01      	subs	r3, #1
 800c680:	6836      	ldr	r6, [r6, #0]
 800c682:	fa0c f505 	lsl.w	r5, ip, r5
 800c686:	fb52 5207 	smmla	r2, r2, r7, r5
 800c68a:	411a      	asrs	r2, r3
 800c68c:	fb51 5107 	smmla	r1, r1, r7, r5
 800c690:	4432      	add	r2, r6
 800c692:	f302 0207 	ssat	r2, #8, r2
 800c696:	9d2c      	ldr	r5, [sp, #176]	; 0xb0
 800c698:	4119      	asrs	r1, r3
 800c69a:	9f24      	ldr	r7, [sp, #144]	; 0x90
 800c69c:	4431      	add	r1, r6
 800c69e:	55ea      	strb	r2, [r5, r7]
 800c6a0:	f301 0107 	ssat	r1, #8, r1
 800c6a4:	9b02      	ldr	r3, [sp, #8]
 800c6a6:	55d9      	strb	r1, [r3, r7]
 800c6a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800c6aa:	18e3      	adds	r3, r4, r3
 800c6ac:	932c      	str	r3, [sp, #176]	; 0xb0
 800c6ae:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800c6b0:	18c3      	adds	r3, r0, r3
 800c6b2:	9302      	str	r3, [sp, #8]
 800c6b4:	9b01      	ldr	r3, [sp, #4]
 800c6b6:	9a05      	ldr	r2, [sp, #20]
 800c6b8:	3304      	adds	r3, #4
 800c6ba:	9301      	str	r3, [sp, #4]
 800c6bc:	9b04      	ldr	r3, [sp, #16]
 800c6be:	3308      	adds	r3, #8
 800c6c0:	9304      	str	r3, [sp, #16]
 800c6c2:	9b03      	ldr	r3, [sp, #12]
 800c6c4:	3308      	adds	r3, #8
 800c6c6:	9303      	str	r3, [sp, #12]
 800c6c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800c6ca:	4293      	cmp	r3, r2
 800c6cc:	f47f ae6d 	bne.w	800c3aa <st_sssa8_ch_nn_mat_mult_kernel_opt+0x86>
 800c6d0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800c6d2:	46cb      	mov	fp, r9
 800c6d4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800c6d6:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800c6da:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800c6dc:	9328      	str	r3, [sp, #160]	; 0xa0
 800c6de:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800c6e0:	4413      	add	r3, r2
 800c6e2:	9329      	str	r3, [sp, #164]	; 0xa4
 800c6e4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 800c6e6:	4413      	add	r3, r2
 800c6e8:	932a      	str	r3, [sp, #168]	; 0xa8
 800c6ea:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800c6ec:	07db      	lsls	r3, r3, #31
 800c6ee:	f140 81b1 	bpl.w	800ca54 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x730>
 800c6f2:	9a06      	ldr	r2, [sp, #24]
 800c6f4:	9b05      	ldr	r3, [sp, #20]
 800c6f6:	990c      	ldr	r1, [sp, #48]	; 0x30
 800c6f8:	0896      	lsrs	r6, r2, #2
 800c6fa:	681b      	ldr	r3, [r3, #0]
 800c6fc:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 800c700:	f000 81f6 	beq.w	800caf0 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x7cc>
 800c704:	00f7      	lsls	r7, r6, #3
 800c706:	4674      	mov	r4, lr
 800c708:	eb01 06c6 	add.w	r6, r1, r6, lsl #3
 800c70c:	4658      	mov	r0, fp
 800c70e:	461a      	mov	r2, r3
 800c710:	f8d0 c000 	ldr.w	ip, [r0]
 800c714:	3008      	adds	r0, #8
 800c716:	f850 5c04 	ldr.w	r5, [r0, #-4]
 800c71a:	f8d1 8000 	ldr.w	r8, [r1]
 800c71e:	fb2c 3308 	smlad	r3, ip, r8, r3
 800c722:	f8d4 8000 	ldr.w	r8, [r4]
 800c726:	fb2c 2208 	smlad	r2, ip, r8, r2
 800c72a:	f8d1 8004 	ldr.w	r8, [r1, #4]
 800c72e:	3408      	adds	r4, #8
 800c730:	f854 cc04 	ldr.w	ip, [r4, #-4]
 800c734:	3108      	adds	r1, #8
 800c736:	fb25 3308 	smlad	r3, r5, r8, r3
 800c73a:	fb25 220c 	smlad	r2, r5, ip, r2
 800c73e:	42b1      	cmp	r1, r6
 800c740:	d1e6      	bne.n	800c710 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x3ec>
 800c742:	44bb      	add	fp, r7
 800c744:	44be      	add	lr, r7
 800c746:	9906      	ldr	r1, [sp, #24]
 800c748:	f011 0103 	ands.w	r1, r1, #3
 800c74c:	d01f      	beq.n	800c78e <st_sssa8_ch_nn_mat_mult_kernel_opt+0x46a>
 800c74e:	f9bb 0000 	ldrsh.w	r0, [fp]
 800c752:	3901      	subs	r1, #1
 800c754:	8834      	ldrh	r4, [r6, #0]
 800c756:	b289      	uxth	r1, r1
 800c758:	fb14 3300 	smlabb	r3, r4, r0, r3
 800c75c:	f8be 4000 	ldrh.w	r4, [lr]
 800c760:	fb14 2200 	smlabb	r2, r4, r0, r2
 800c764:	b199      	cbz	r1, 800c78e <st_sssa8_ch_nn_mat_mult_kernel_opt+0x46a>
 800c766:	f9bb 0002 	ldrsh.w	r0, [fp, #2]
 800c76a:	2901      	cmp	r1, #1
 800c76c:	8874      	ldrh	r4, [r6, #2]
 800c76e:	fb14 3300 	smlabb	r3, r4, r0, r3
 800c772:	f8be 4002 	ldrh.w	r4, [lr, #2]
 800c776:	fb14 2200 	smlabb	r2, r4, r0, r2
 800c77a:	d008      	beq.n	800c78e <st_sssa8_ch_nn_mat_mult_kernel_opt+0x46a>
 800c77c:	f9bb 1004 	ldrsh.w	r1, [fp, #4]
 800c780:	88b0      	ldrh	r0, [r6, #4]
 800c782:	fb11 3300 	smlabb	r3, r1, r0, r3
 800c786:	f8be 0004 	ldrh.w	r0, [lr, #4]
 800c78a:	fb11 2200 	smlabb	r2, r1, r0, r2
 800c78e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 800c790:	f9b1 0000 	ldrsh.w	r0, [r1]
 800c794:	2815      	cmp	r0, #21
 800c796:	f340 816c 	ble.w	800ca72 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x74e>
 800c79a:	1e85      	subs	r5, r0, #2
 800c79c:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800c79e:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 800c7a0:	3801      	subs	r0, #1
 800c7a2:	2601      	movs	r6, #1
 800c7a4:	6809      	ldr	r1, [r1, #0]
 800c7a6:	6824      	ldr	r4, [r4, #0]
 800c7a8:	40ae      	lsls	r6, r5
 800c7aa:	fb53 6501 	smmla	r5, r3, r1, r6
 800c7ae:	fb52 6301 	smmla	r3, r2, r1, r6
 800c7b2:	fa45 f200 	asr.w	r2, r5, r0
 800c7b6:	4422      	add	r2, r4
 800c7b8:	f302 0207 	ssat	r2, #8, r2
 800c7bc:	4103      	asrs	r3, r0
 800c7be:	992c      	ldr	r1, [sp, #176]	; 0xb0
 800c7c0:	4423      	add	r3, r4
 800c7c2:	f801 2b01 	strb.w	r2, [r1], #1
 800c7c6:	f303 0307 	ssat	r3, #8, r3
 800c7ca:	9a02      	ldr	r2, [sp, #8]
 800c7cc:	912c      	str	r1, [sp, #176]	; 0xb0
 800c7ce:	7013      	strb	r3, [r2, #0]
 800c7d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c7d2:	2b00      	cmp	r3, #0
 800c7d4:	f000 8142 	beq.w	800ca5c <st_sssa8_ch_nn_mat_mult_kernel_opt+0x738>
 800c7d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800c7da:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 800c7dc:	3b01      	subs	r3, #1
 800c7de:	441a      	add	r2, r3
 800c7e0:	922c      	str	r2, [sp, #176]	; 0xb0
 800c7e2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 800c7e4:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800c7e6:	1c98      	adds	r0, r3, #2
 800c7e8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800c7ea:	fb02 0013 	mls	r0, r2, r3, r0
 800c7ee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 800c7f0:	4418      	add	r0, r3
 800c7f2:	b01b      	add	sp, #108	; 0x6c
 800c7f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c7f8:	9c01      	ldr	r4, [sp, #4]
 800c7fa:	f934 4c04 	ldrsh.w	r4, [r4, #-4]
 800c7fe:	2c15      	cmp	r4, #21
 800c800:	f340 8089 	ble.w	800c916 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x5f2>
 800c804:	9f04      	ldr	r7, [sp, #16]
 800c806:	1ea5      	subs	r5, r4, #2
 800c808:	2601      	movs	r6, #1
 800c80a:	3c01      	subs	r4, #1
 800c80c:	fa06 f505 	lsl.w	r5, r6, r5
 800c810:	f857 6c08 	ldr.w	r6, [r7, #-8]
 800c814:	fb53 5306 	smmla	r3, r3, r6, r5
 800c818:	fb50 5006 	smmla	r0, r0, r6, r5
 800c81c:	9d03      	ldr	r5, [sp, #12]
 800c81e:	4123      	asrs	r3, r4
 800c820:	f855 6c08 	ldr.w	r6, [r5, #-8]
 800c824:	1f3d      	subs	r5, r7, #4
 800c826:	9f03      	ldr	r7, [sp, #12]
 800c828:	4433      	add	r3, r6
 800c82a:	3f04      	subs	r7, #4
 800c82c:	f303 0307 	ssat	r3, #8, r3
 800c830:	4120      	asrs	r0, r4
 800c832:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 800c834:	4430      	add	r0, r6
 800c836:	7023      	strb	r3, [r4, #0]
 800c838:	f300 0007 	ssat	r0, #8, r0
 800c83c:	9b02      	ldr	r3, [sp, #8]
 800c83e:	7018      	strb	r0, [r3, #0]
 800c840:	9b01      	ldr	r3, [sp, #4]
 800c842:	f933 3c02 	ldrsh.w	r3, [r3, #-2]
 800c846:	2b15      	cmp	r3, #21
 800c848:	dd4f      	ble.n	800c8ea <st_sssa8_ch_nn_mat_mult_kernel_opt+0x5c6>
 800c84a:	1e98      	subs	r0, r3, #2
 800c84c:	2601      	movs	r6, #1
 800c84e:	3b01      	subs	r3, #1
 800c850:	682c      	ldr	r4, [r5, #0]
 800c852:	fa06 f000 	lsl.w	r0, r6, r0
 800c856:	683d      	ldr	r5, [r7, #0]
 800c858:	fb52 0204 	smmla	r2, r2, r4, r0
 800c85c:	411a      	asrs	r2, r3
 800c85e:	fb51 0104 	smmla	r1, r1, r4, r0
 800c862:	442a      	add	r2, r5
 800c864:	f302 0207 	ssat	r2, #8, r2
 800c868:	fa41 f303 	asr.w	r3, r1, r3
 800c86c:	992c      	ldr	r1, [sp, #176]	; 0xb0
 800c86e:	442b      	add	r3, r5
 800c870:	704a      	strb	r2, [r1, #1]
 800c872:	f303 0307 	ssat	r3, #8, r3
 800c876:	9a02      	ldr	r2, [sp, #8]
 800c878:	7053      	strb	r3, [r2, #1]
 800c87a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 800c87c:	3302      	adds	r3, #2
 800c87e:	932c      	str	r3, [sp, #176]	; 0xb0
 800c880:	9b02      	ldr	r3, [sp, #8]
 800c882:	3302      	adds	r3, #2
 800c884:	9302      	str	r3, [sp, #8]
 800c886:	e715      	b.n	800c6b4 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x390>
 800c888:	2b00      	cmp	r3, #0
 800c88a:	dd6a      	ble.n	800c962 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x63e>
 800c88c:	682d      	ldr	r5, [r5, #0]
 800c88e:	0052      	lsls	r2, r2, #1
 800c890:	6837      	ldr	r7, [r6, #0]
 800c892:	0049      	lsls	r1, r1, #1
 800c894:	fb52 7205 	smmla	r2, r2, r5, r7
 800c898:	fb51 7105 	smmla	r1, r1, r5, r7
 800c89c:	411a      	asrs	r2, r3
 800c89e:	f302 0207 	ssat	r2, #8, r2
 800c8a2:	4119      	asrs	r1, r3
 800c8a4:	7022      	strb	r2, [r4, #0]
 800c8a6:	f301 0107 	ssat	r1, #8, r1
 800c8aa:	7001      	strb	r1, [r0, #0]
 800c8ac:	e6fc      	b.n	800c6a8 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x384>
 800c8ae:	2c00      	cmp	r4, #0
 800c8b0:	f340 8092 	ble.w	800c9d8 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x6b4>
 800c8b4:	9f04      	ldr	r7, [sp, #16]
 800c8b6:	005b      	lsls	r3, r3, #1
 800c8b8:	9e03      	ldr	r6, [sp, #12]
 800c8ba:	0040      	lsls	r0, r0, #1
 800c8bc:	f857 5c08 	ldr.w	r5, [r7, #-8]
 800c8c0:	f856 6c08 	ldr.w	r6, [r6, #-8]
 800c8c4:	fb53 6305 	smmla	r3, r3, r5, r6
 800c8c8:	fb50 6005 	smmla	r0, r0, r5, r6
 800c8cc:	9e03      	ldr	r6, [sp, #12]
 800c8ce:	4123      	asrs	r3, r4
 800c8d0:	1f3d      	subs	r5, r7, #4
 800c8d2:	3e04      	subs	r6, #4
 800c8d4:	f303 0307 	ssat	r3, #8, r3
 800c8d8:	4120      	asrs	r0, r4
 800c8da:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 800c8dc:	7023      	strb	r3, [r4, #0]
 800c8de:	f300 0007 	ssat	r0, #8, r0
 800c8e2:	9b02      	ldr	r3, [sp, #8]
 800c8e4:	7018      	strb	r0, [r3, #0]
 800c8e6:	4620      	mov	r0, r4
 800c8e8:	e6ba      	b.n	800c660 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x33c>
 800c8ea:	2b00      	cmp	r3, #0
 800c8ec:	f340 8097 	ble.w	800ca1e <st_sssa8_ch_nn_mat_mult_kernel_opt+0x6fa>
 800c8f0:	6828      	ldr	r0, [r5, #0]
 800c8f2:	0052      	lsls	r2, r2, #1
 800c8f4:	683c      	ldr	r4, [r7, #0]
 800c8f6:	0049      	lsls	r1, r1, #1
 800c8f8:	fb52 4200 	smmla	r2, r2, r0, r4
 800c8fc:	fb51 4100 	smmla	r1, r1, r0, r4
 800c900:	411a      	asrs	r2, r3
 800c902:	f302 0207 	ssat	r2, #8, r2
 800c906:	4119      	asrs	r1, r3
 800c908:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 800c90a:	705a      	strb	r2, [r3, #1]
 800c90c:	f301 0107 	ssat	r1, #8, r1
 800c910:	9b02      	ldr	r3, [sp, #8]
 800c912:	7059      	strb	r1, [r3, #1]
 800c914:	e7b1      	b.n	800c87a <st_sssa8_ch_nn_mat_mult_kernel_opt+0x556>
 800c916:	2c00      	cmp	r4, #0
 800c918:	dd3c      	ble.n	800c994 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x670>
 800c91a:	9f04      	ldr	r7, [sp, #16]
 800c91c:	005b      	lsls	r3, r3, #1
 800c91e:	9e03      	ldr	r6, [sp, #12]
 800c920:	0040      	lsls	r0, r0, #1
 800c922:	f857 5c08 	ldr.w	r5, [r7, #-8]
 800c926:	f856 6c08 	ldr.w	r6, [r6, #-8]
 800c92a:	fb53 6305 	smmla	r3, r3, r5, r6
 800c92e:	fb50 6005 	smmla	r0, r0, r5, r6
 800c932:	9e03      	ldr	r6, [sp, #12]
 800c934:	1f3d      	subs	r5, r7, #4
 800c936:	4123      	asrs	r3, r4
 800c938:	1f37      	subs	r7, r6, #4
 800c93a:	f303 0307 	ssat	r3, #8, r3
 800c93e:	4120      	asrs	r0, r4
 800c940:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 800c942:	7023      	strb	r3, [r4, #0]
 800c944:	f300 0007 	ssat	r0, #8, r0
 800c948:	9b02      	ldr	r3, [sp, #8]
 800c94a:	7018      	strb	r0, [r3, #0]
 800c94c:	e778      	b.n	800c840 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x51c>
 800c94e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800c950:	f04f 0b00 	mov.w	fp, #0
 800c954:	9400      	str	r4, [sp, #0]
 800c956:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800c958:	45a3      	cmp	fp, r4
 800c95a:	f6ff adc1 	blt.w	800c4e0 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x1bc>
 800c95e:	46a8      	mov	r8, r5
 800c960:	e5fc      	b.n	800c55c <st_sssa8_ch_nn_mat_mult_kernel_opt+0x238>
 800c962:	f1c3 0301 	rsb	r3, r3, #1
 800c966:	409a      	lsls	r2, r3
 800c968:	f302 021f 	ssat	r2, #32, r2
 800c96c:	682d      	ldr	r5, [r5, #0]
 800c96e:	fb52 f215 	smmulr	r2, r2, r5
 800c972:	fa01 f303 	lsl.w	r3, r1, r3
 800c976:	f303 031f 	ssat	r3, #32, r3
 800c97a:	fb53 f515 	smmulr	r5, r3, r5
 800c97e:	6833      	ldr	r3, [r6, #0]
 800c980:	4413      	add	r3, r2
 800c982:	f303 0307 	ssat	r3, #8, r3
 800c986:	7023      	strb	r3, [r4, #0]
 800c988:	6833      	ldr	r3, [r6, #0]
 800c98a:	442b      	add	r3, r5
 800c98c:	f303 0307 	ssat	r3, #8, r3
 800c990:	7003      	strb	r3, [r0, #0]
 800c992:	e689      	b.n	800c6a8 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x384>
 800c994:	f1c4 0501 	rsb	r5, r4, #1
 800c998:	fa03 f405 	lsl.w	r4, r3, r5
 800c99c:	f304 041f 	ssat	r4, #32, r4
 800c9a0:	9e04      	ldr	r6, [sp, #16]
 800c9a2:	f856 3c08 	ldr.w	r3, [r6, #-8]
 800c9a6:	fb54 f413 	smmulr	r4, r4, r3
 800c9aa:	40a8      	lsls	r0, r5
 800c9ac:	f300 001f 	ssat	r0, #32, r0
 800c9b0:	1f35      	subs	r5, r6, #4
 800c9b2:	fb50 f013 	smmulr	r0, r0, r3
 800c9b6:	9e03      	ldr	r6, [sp, #12]
 800c9b8:	f856 3c08 	ldr.w	r3, [r6, #-8]
 800c9bc:	4423      	add	r3, r4
 800c9be:	f303 0307 	ssat	r3, #8, r3
 800c9c2:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 800c9c4:	1f37      	subs	r7, r6, #4
 800c9c6:	7023      	strb	r3, [r4, #0]
 800c9c8:	f856 3c08 	ldr.w	r3, [r6, #-8]
 800c9cc:	4403      	add	r3, r0
 800c9ce:	f303 0307 	ssat	r3, #8, r3
 800c9d2:	9802      	ldr	r0, [sp, #8]
 800c9d4:	7003      	strb	r3, [r0, #0]
 800c9d6:	e733      	b.n	800c840 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x51c>
 800c9d8:	f1c4 0401 	rsb	r4, r4, #1
 800c9dc:	fa03 f604 	lsl.w	r6, r3, r4
 800c9e0:	f306 061f 	ssat	r6, #32, r6
 800c9e4:	9d04      	ldr	r5, [sp, #16]
 800c9e6:	f855 3c08 	ldr.w	r3, [r5, #-8]
 800c9ea:	fb56 f613 	smmulr	r6, r6, r3
 800c9ee:	40a0      	lsls	r0, r4
 800c9f0:	f300 001f 	ssat	r0, #32, r0
 800c9f4:	3d04      	subs	r5, #4
 800c9f6:	fb50 f013 	smmulr	r0, r0, r3
 800c9fa:	9c03      	ldr	r4, [sp, #12]
 800c9fc:	f854 3c08 	ldr.w	r3, [r4, #-8]
 800ca00:	4433      	add	r3, r6
 800ca02:	f303 0307 	ssat	r3, #8, r3
 800ca06:	9e2c      	ldr	r6, [sp, #176]	; 0xb0
 800ca08:	7033      	strb	r3, [r6, #0]
 800ca0a:	1f26      	subs	r6, r4, #4
 800ca0c:	f854 3c08 	ldr.w	r3, [r4, #-8]
 800ca10:	4403      	add	r3, r0
 800ca12:	f303 0307 	ssat	r3, #8, r3
 800ca16:	9802      	ldr	r0, [sp, #8]
 800ca18:	7003      	strb	r3, [r0, #0]
 800ca1a:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800ca1c:	e620      	b.n	800c660 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x33c>
 800ca1e:	f1c3 0301 	rsb	r3, r3, #1
 800ca22:	409a      	lsls	r2, r3
 800ca24:	f302 021f 	ssat	r2, #32, r2
 800ca28:	6828      	ldr	r0, [r5, #0]
 800ca2a:	fb52 f210 	smmulr	r2, r2, r0
 800ca2e:	fa01 f303 	lsl.w	r3, r1, r3
 800ca32:	f303 031f 	ssat	r3, #32, r3
 800ca36:	fb53 f010 	smmulr	r0, r3, r0
 800ca3a:	683b      	ldr	r3, [r7, #0]
 800ca3c:	4413      	add	r3, r2
 800ca3e:	f303 0307 	ssat	r3, #8, r3
 800ca42:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 800ca44:	7053      	strb	r3, [r2, #1]
 800ca46:	683b      	ldr	r3, [r7, #0]
 800ca48:	4403      	add	r3, r0
 800ca4a:	f303 0307 	ssat	r3, #8, r3
 800ca4e:	9a02      	ldr	r2, [sp, #8]
 800ca50:	7053      	strb	r3, [r2, #1]
 800ca52:	e712      	b.n	800c87a <st_sssa8_ch_nn_mat_mult_kernel_opt+0x556>
 800ca54:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ca56:	2b00      	cmp	r3, #0
 800ca58:	f47f aec3 	bne.w	800c7e2 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x4be>
 800ca5c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 800ca5e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 800ca60:	9914      	ldr	r1, [sp, #80]	; 0x50
 800ca62:	3302      	adds	r3, #2
 800ca64:	1a50      	subs	r0, r2, r1
 800ca66:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800ca68:	fb02 0003 	mla	r0, r2, r3, r0
 800ca6c:	b01b      	add	sp, #108	; 0x6c
 800ca6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ca72:	2800      	cmp	r0, #0
 800ca74:	dd1b      	ble.n	800caae <st_sssa8_ch_nn_mat_mult_kernel_opt+0x78a>
 800ca76:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800ca78:	0052      	lsls	r2, r2, #1
 800ca7a:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 800ca7c:	005b      	lsls	r3, r3, #1
 800ca7e:	6809      	ldr	r1, [r1, #0]
 800ca80:	6824      	ldr	r4, [r4, #0]
 800ca82:	fb53 4301 	smmla	r3, r3, r1, r4
 800ca86:	fb52 4101 	smmla	r1, r2, r1, r4
 800ca8a:	fa43 f000 	asr.w	r0, r3, r0
 800ca8e:	f300 0307 	ssat	r3, #8, r0
 800ca92:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 800ca94:	f802 3b01 	strb.w	r3, [r2], #1
 800ca98:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800ca9a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ca9e:	fa41 f303 	asr.w	r3, r1, r3
 800caa2:	f303 0307 	ssat	r3, #8, r3
 800caa6:	9902      	ldr	r1, [sp, #8]
 800caa8:	922c      	str	r2, [sp, #176]	; 0xb0
 800caaa:	700b      	strb	r3, [r1, #0]
 800caac:	e690      	b.n	800c7d0 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x4ac>
 800caae:	f1c0 0001 	rsb	r0, r0, #1
 800cab2:	fa03 f100 	lsl.w	r1, r3, r0
 800cab6:	f301 011f 	ssat	r1, #32, r1
 800caba:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800cabc:	681c      	ldr	r4, [r3, #0]
 800cabe:	fb51 f114 	smmulr	r1, r1, r4
 800cac2:	fa02 f300 	lsl.w	r3, r2, r0
 800cac6:	f303 031f 	ssat	r3, #32, r3
 800caca:	fb53 f414 	smmulr	r4, r3, r4
 800cace:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 800cad0:	681b      	ldr	r3, [r3, #0]
 800cad2:	440b      	add	r3, r1
 800cad4:	f303 0307 	ssat	r3, #8, r3
 800cad8:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 800cada:	f802 3b01 	strb.w	r3, [r2], #1
 800cade:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 800cae0:	681b      	ldr	r3, [r3, #0]
 800cae2:	4423      	add	r3, r4
 800cae4:	f303 0307 	ssat	r3, #8, r3
 800cae8:	9902      	ldr	r1, [sp, #8]
 800caea:	922c      	str	r2, [sp, #176]	; 0xb0
 800caec:	700b      	strb	r3, [r1, #0]
 800caee:	e66f      	b.n	800c7d0 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x4ac>
 800caf0:	460e      	mov	r6, r1
 800caf2:	461a      	mov	r2, r3
 800caf4:	e627      	b.n	800c746 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x422>
 800caf6:	bf00      	nop

0800caf8 <st_sssa8_ch_nn_mat_mult_kernel_single_opt>:
 800caf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cafc:	b095      	sub	sp, #84	; 0x54
 800cafe:	f8bd 407c 	ldrh.w	r4, [sp, #124]	; 0x7c
 800cb02:	920d      	str	r2, [sp, #52]	; 0x34
 800cb04:	f8bd 2080 	ldrh.w	r2, [sp, #128]	; 0x80
 800cb08:	9311      	str	r3, [sp, #68]	; 0x44
 800cb0a:	9204      	str	r2, [sp, #16]
 800cb0c:	0862      	lsrs	r2, r4, #1
 800cb0e:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800cb12:	940f      	str	r4, [sp, #60]	; 0x3c
 800cb14:	9106      	str	r1, [sp, #24]
 800cb16:	9310      	str	r3, [sp, #64]	; 0x40
 800cb18:	920e      	str	r2, [sp, #56]	; 0x38
 800cb1a:	2b00      	cmp	r3, #0
 800cb1c:	f000 81fb 	beq.w	800cf16 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x41e>
 800cb20:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800cb22:	b29c      	uxth	r4, r3
 800cb24:	2a00      	cmp	r2, #0
 800cb26:	f000 8144 	beq.w	800cdb2 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x2ba>
 800cb2a:	1c61      	adds	r1, r4, #1
 800cb2c:	0064      	lsls	r4, r4, #1
 800cb2e:	3a01      	subs	r2, #1
 800cb30:	9d04      	ldr	r5, [sp, #16]
 800cb32:	9407      	str	r4, [sp, #28]
 800cb34:	9c25      	ldr	r4, [sp, #148]	; 0x94
 800cb36:	b292      	uxth	r2, r2
 800cb38:	f1a5 0310 	sub.w	r3, r5, #16
 800cb3c:	1861      	adds	r1, r4, r1
 800cb3e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800cb40:	091b      	lsrs	r3, r3, #4
 800cb42:	9102      	str	r1, [sp, #8]
 800cb44:	f104 0110 	add.w	r1, r4, #16
 800cb48:	3301      	adds	r3, #1
 800cb4a:	f104 0908 	add.w	r9, r4, #8
 800cb4e:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 800cb52:	1ee9      	subs	r1, r5, #3
 800cb54:	9108      	str	r1, [sp, #32]
 800cb56:	9921      	ldr	r1, [sp, #132]	; 0x84
 800cb58:	9209      	str	r2, [sp, #36]	; 0x24
 800cb5a:	3104      	adds	r1, #4
 800cb5c:	9100      	str	r1, [sp, #0]
 800cb5e:	9922      	ldr	r1, [sp, #136]	; 0x88
 800cb60:	3108      	adds	r1, #8
 800cb62:	9101      	str	r1, [sp, #4]
 800cb64:	9923      	ldr	r1, [sp, #140]	; 0x8c
 800cb66:	f101 0b08 	add.w	fp, r1, #8
 800cb6a:	9925      	ldr	r1, [sp, #148]	; 0x94
 800cb6c:	3101      	adds	r1, #1
 800cb6e:	9103      	str	r1, [sp, #12]
 800cb70:	9906      	ldr	r1, [sp, #24]
 800cb72:	eb01 1743 	add.w	r7, r1, r3, lsl #5
 800cb76:	0119      	lsls	r1, r3, #4
 800cb78:	019b      	lsls	r3, r3, #6
 800cb7a:	910b      	str	r1, [sp, #44]	; 0x2c
 800cb7c:	930a      	str	r3, [sp, #40]	; 0x28
 800cb7e:	1f2b      	subs	r3, r5, #4
 800cb80:	930c      	str	r3, [sp, #48]	; 0x30
 800cb82:	f859 3c08 	ldr.w	r3, [r9, #-8]
 800cb86:	9904      	ldr	r1, [sp, #16]
 800cb88:	9313      	str	r3, [sp, #76]	; 0x4c
 800cb8a:	f859 3c04 	ldr.w	r3, [r9, #-4]
 800cb8e:	290f      	cmp	r1, #15
 800cb90:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800cb92:	9313      	str	r3, [sp, #76]	; 0x4c
 800cb94:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800cb96:	9c06      	ldr	r4, [sp, #24]
 800cb98:	f340 81ba 	ble.w	800cf10 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x418>
 800cb9c:	4601      	mov	r1, r0
 800cb9e:	f8d4 c000 	ldr.w	ip, [r4]
 800cba2:	680e      	ldr	r6, [r1, #0]
 800cba4:	fb26 220c 	smlad	r2, r6, ip, r2
 800cba8:	684d      	ldr	r5, [r1, #4]
 800cbaa:	fb25 330c 	smlad	r3, r5, ip, r3
 800cbae:	f8d4 c004 	ldr.w	ip, [r4, #4]
 800cbb2:	688e      	ldr	r6, [r1, #8]
 800cbb4:	fb26 260c 	smlad	r6, r6, ip, r2
 800cbb8:	68cd      	ldr	r5, [r1, #12]
 800cbba:	fb25 350c 	smlad	r5, r5, ip, r3
 800cbbe:	f8d4 c008 	ldr.w	ip, [r4, #8]
 800cbc2:	690a      	ldr	r2, [r1, #16]
 800cbc4:	fb22 660c 	smlad	r6, r2, ip, r6
 800cbc8:	694b      	ldr	r3, [r1, #20]
 800cbca:	fb23 550c 	smlad	r5, r3, ip, r5
 800cbce:	f8d4 c00c 	ldr.w	ip, [r4, #12]
 800cbd2:	698a      	ldr	r2, [r1, #24]
 800cbd4:	fb22 620c 	smlad	r2, r2, ip, r6
 800cbd8:	69cb      	ldr	r3, [r1, #28]
 800cbda:	fb23 530c 	smlad	r3, r3, ip, r5
 800cbde:	f8d4 c010 	ldr.w	ip, [r4, #16]
 800cbe2:	6a0e      	ldr	r6, [r1, #32]
 800cbe4:	fb26 220c 	smlad	r2, r6, ip, r2
 800cbe8:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800cbea:	fb25 330c 	smlad	r3, r5, ip, r3
 800cbee:	f8d4 c014 	ldr.w	ip, [r4, #20]
 800cbf2:	6a8e      	ldr	r6, [r1, #40]	; 0x28
 800cbf4:	fb26 260c 	smlad	r6, r6, ip, r2
 800cbf8:	6acd      	ldr	r5, [r1, #44]	; 0x2c
 800cbfa:	fb25 350c 	smlad	r5, r5, ip, r3
 800cbfe:	f8d4 c018 	ldr.w	ip, [r4, #24]
 800cc02:	6b0a      	ldr	r2, [r1, #48]	; 0x30
 800cc04:	fb22 660c 	smlad	r6, r2, ip, r6
 800cc08:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 800cc0a:	fb23 550c 	smlad	r5, r3, ip, r5
 800cc0e:	f8d4 c01c 	ldr.w	ip, [r4, #28]
 800cc12:	3140      	adds	r1, #64	; 0x40
 800cc14:	f851 2c08 	ldr.w	r2, [r1, #-8]
 800cc18:	3420      	adds	r4, #32
 800cc1a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800cc1e:	fb22 620c 	smlad	r2, r2, ip, r6
 800cc22:	fb23 530c 	smlad	r3, r3, ip, r5
 800cc26:	42bc      	cmp	r4, r7
 800cc28:	d1b9      	bne.n	800cb9e <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0xa6>
 800cc2a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800cc2c:	463c      	mov	r4, r7
 800cc2e:	f8dd e02c 	ldr.w	lr, [sp, #44]	; 0x2c
 800cc32:	4408      	add	r0, r1
 800cc34:	9908      	ldr	r1, [sp, #32]
 800cc36:	458e      	cmp	lr, r1
 800cc38:	da25      	bge.n	800cc86 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x18e>
 800cc3a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800cc3c:	eba1 0a0e 	sub.w	sl, r1, lr
 800cc40:	4601      	mov	r1, r0
 800cc42:	ea4f 0a9a 	mov.w	sl, sl, lsr #2
 800cc46:	f10a 0501 	add.w	r5, sl, #1
 800cc4a:	eb04 08c5 	add.w	r8, r4, r5, lsl #3
 800cc4e:	9505      	str	r5, [sp, #20]
 800cc50:	6825      	ldr	r5, [r4, #0]
 800cc52:	680e      	ldr	r6, [r1, #0]
 800cc54:	fb26 2205 	smlad	r2, r6, r5, r2
 800cc58:	684e      	ldr	r6, [r1, #4]
 800cc5a:	fb26 3505 	smlad	r5, r6, r5, r3
 800cc5e:	6866      	ldr	r6, [r4, #4]
 800cc60:	3110      	adds	r1, #16
 800cc62:	f851 cc08 	ldr.w	ip, [r1, #-8]
 800cc66:	3408      	adds	r4, #8
 800cc68:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800cc6c:	fb2c 2206 	smlad	r2, ip, r6, r2
 800cc70:	fb23 5306 	smlad	r3, r3, r6, r5
 800cc74:	45a0      	cmp	r8, r4
 800cc76:	d1eb      	bne.n	800cc50 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x158>
 800cc78:	9905      	ldr	r1, [sp, #20]
 800cc7a:	f10e 0e04 	add.w	lr, lr, #4
 800cc7e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
 800cc82:	eb0e 0e8a 	add.w	lr, lr, sl, lsl #2
 800cc86:	9e04      	ldr	r6, [sp, #16]
 800cc88:	4576      	cmp	r6, lr
 800cc8a:	dd30      	ble.n	800ccee <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x1f6>
 800cc8c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800cc90:	8805      	ldrh	r5, [r0, #0]
 800cc92:	fb15 2201 	smlabb	r2, r5, r1, r2
 800cc96:	8845      	ldrh	r5, [r0, #2]
 800cc98:	fb11 3305 	smlabb	r3, r1, r5, r3
 800cc9c:	f10e 0101 	add.w	r1, lr, #1
 800cca0:	428e      	cmp	r6, r1
 800cca2:	dd1f      	ble.n	800cce4 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x1ec>
 800cca4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800cca8:	8885      	ldrh	r5, [r0, #4]
 800ccaa:	fb15 2201 	smlabb	r2, r5, r1, r2
 800ccae:	88c5      	ldrh	r5, [r0, #6]
 800ccb0:	fb11 3305 	smlabb	r3, r1, r5, r3
 800ccb4:	f10e 0102 	add.w	r1, lr, #2
 800ccb8:	428e      	cmp	r6, r1
 800ccba:	dd13      	ble.n	800cce4 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x1ec>
 800ccbc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800ccc0:	8905      	ldrh	r5, [r0, #8]
 800ccc2:	fb15 2201 	smlabb	r2, r5, r1, r2
 800ccc6:	8945      	ldrh	r5, [r0, #10]
 800ccc8:	fb11 3305 	smlabb	r3, r1, r5, r3
 800cccc:	f10e 0103 	add.w	r1, lr, #3
 800ccd0:	428e      	cmp	r6, r1
 800ccd2:	dd07      	ble.n	800cce4 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x1ec>
 800ccd4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800ccd8:	8984      	ldrh	r4, [r0, #12]
 800ccda:	fb14 2201 	smlabb	r2, r4, r1, r2
 800ccde:	89c4      	ldrh	r4, [r0, #14]
 800cce0:	fb11 3304 	smlabb	r3, r1, r4, r3
 800cce4:	9904      	ldr	r1, [sp, #16]
 800cce6:	eba1 0e0e 	sub.w	lr, r1, lr
 800ccea:	eb00 008e 	add.w	r0, r0, lr, lsl #2
 800ccee:	9e00      	ldr	r6, [sp, #0]
 800ccf0:	f936 5c04 	ldrsh.w	r5, [r6, #-4]
 800ccf4:	2d15      	cmp	r5, #21
 800ccf6:	f340 80b4 	ble.w	800ce62 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x36a>
 800ccfa:	1eac      	subs	r4, r5, #2
 800ccfc:	2101      	movs	r1, #1
 800ccfe:	3d01      	subs	r5, #1
 800cd00:	f1a6 0c02 	sub.w	ip, r6, #2
 800cd04:	fa01 f404 	lsl.w	r4, r1, r4
 800cd08:	9901      	ldr	r1, [sp, #4]
 800cd0a:	f1ab 0604 	sub.w	r6, fp, #4
 800cd0e:	f851 1c08 	ldr.w	r1, [r1, #-8]
 800cd12:	fb52 4401 	smmla	r4, r2, r1, r4
 800cd16:	9901      	ldr	r1, [sp, #4]
 800cd18:	fa44 f505 	asr.w	r5, r4, r5
 800cd1c:	f85b 4c08 	ldr.w	r4, [fp, #-8]
 800cd20:	f1a1 0e04 	sub.w	lr, r1, #4
 800cd24:	442c      	add	r4, r5
 800cd26:	f304 0407 	ssat	r4, #8, r4
 800cd2a:	9a03      	ldr	r2, [sp, #12]
 800cd2c:	f802 4c01 	strb.w	r4, [r2, #-1]
 800cd30:	f9bc 2000 	ldrsh.w	r2, [ip]
 800cd34:	2a15      	cmp	r2, #21
 800cd36:	f340 80b1 	ble.w	800ce9c <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x3a4>
 800cd3a:	1e94      	subs	r4, r2, #2
 800cd3c:	2501      	movs	r5, #1
 800cd3e:	3a01      	subs	r2, #1
 800cd40:	6836      	ldr	r6, [r6, #0]
 800cd42:	f8de 1000 	ldr.w	r1, [lr]
 800cd46:	fa05 f404 	lsl.w	r4, r5, r4
 800cd4a:	fb53 4301 	smmla	r3, r3, r1, r4
 800cd4e:	4113      	asrs	r3, r2
 800cd50:	4433      	add	r3, r6
 800cd52:	f303 0307 	ssat	r3, #8, r3
 800cd56:	9a02      	ldr	r2, [sp, #8]
 800cd58:	f802 3c01 	strb.w	r3, [r2, #-1]
 800cd5c:	9b00      	ldr	r3, [sp, #0]
 800cd5e:	f109 0908 	add.w	r9, r9, #8
 800cd62:	9a07      	ldr	r2, [sp, #28]
 800cd64:	f10b 0b08 	add.w	fp, fp, #8
 800cd68:	3304      	adds	r3, #4
 800cd6a:	9300      	str	r3, [sp, #0]
 800cd6c:	9b01      	ldr	r3, [sp, #4]
 800cd6e:	3308      	adds	r3, #8
 800cd70:	9301      	str	r3, [sp, #4]
 800cd72:	9b02      	ldr	r3, [sp, #8]
 800cd74:	4413      	add	r3, r2
 800cd76:	9302      	str	r3, [sp, #8]
 800cd78:	9b03      	ldr	r3, [sp, #12]
 800cd7a:	4413      	add	r3, r2
 800cd7c:	9303      	str	r3, [sp, #12]
 800cd7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cd80:	4599      	cmp	r9, r3
 800cd82:	f47f aefe 	bne.w	800cb82 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x8a>
 800cd86:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800cd88:	4611      	mov	r1, r2
 800cd8a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 800cd8c:	fb03 2201 	mla	r2, r3, r1, r2
 800cd90:	9225      	str	r2, [sp, #148]	; 0x94
 800cd92:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800cd94:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 800cd98:	920d      	str	r2, [sp, #52]	; 0x34
 800cd9a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800cd9c:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 800cda0:	9221      	str	r2, [sp, #132]	; 0x84
 800cda2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800cda4:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 800cda8:	9222      	str	r2, [sp, #136]	; 0x88
 800cdaa:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 800cdac:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800cdb0:	9323      	str	r3, [sp, #140]	; 0x8c
 800cdb2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800cdb4:	07db      	lsls	r3, r3, #31
 800cdb6:	d546      	bpl.n	800ce46 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x34e>
 800cdb8:	9a04      	ldr	r2, [sp, #16]
 800cdba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cdbc:	0896      	lsrs	r6, r2, #2
 800cdbe:	681b      	ldr	r3, [r3, #0]
 800cdc0:	d013      	beq.n	800cdea <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x2f2>
 800cdc2:	00f7      	lsls	r7, r6, #3
 800cdc4:	9906      	ldr	r1, [sp, #24]
 800cdc6:	eb00 06c6 	add.w	r6, r0, r6, lsl #3
 800cdca:	6804      	ldr	r4, [r0, #0]
 800cdcc:	3008      	adds	r0, #8
 800cdce:	f850 2c04 	ldr.w	r2, [r0, #-4]
 800cdd2:	680d      	ldr	r5, [r1, #0]
 800cdd4:	fb24 3305 	smlad	r3, r4, r5, r3
 800cdd8:	684c      	ldr	r4, [r1, #4]
 800cdda:	3108      	adds	r1, #8
 800cddc:	fb22 3304 	smlad	r3, r2, r4, r3
 800cde0:	4286      	cmp	r6, r0
 800cde2:	d1f2      	bne.n	800cdca <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x2d2>
 800cde4:	9a06      	ldr	r2, [sp, #24]
 800cde6:	443a      	add	r2, r7
 800cde8:	9206      	str	r2, [sp, #24]
 800cdea:	9a04      	ldr	r2, [sp, #16]
 800cdec:	f012 0203 	ands.w	r2, r2, #3
 800cdf0:	d011      	beq.n	800ce16 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x31e>
 800cdf2:	3a01      	subs	r2, #1
 800cdf4:	9d06      	ldr	r5, [sp, #24]
 800cdf6:	8801      	ldrh	r1, [r0, #0]
 800cdf8:	882c      	ldrh	r4, [r5, #0]
 800cdfa:	b292      	uxth	r2, r2
 800cdfc:	fb14 3301 	smlabb	r3, r4, r1, r3
 800ce00:	b14a      	cbz	r2, 800ce16 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x31e>
 800ce02:	886c      	ldrh	r4, [r5, #2]
 800ce04:	2a01      	cmp	r2, #1
 800ce06:	8841      	ldrh	r1, [r0, #2]
 800ce08:	fb14 3301 	smlabb	r3, r4, r1, r3
 800ce0c:	d003      	beq.n	800ce16 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x31e>
 800ce0e:	8881      	ldrh	r1, [r0, #4]
 800ce10:	88aa      	ldrh	r2, [r5, #4]
 800ce12:	fb11 3302 	smlabb	r3, r1, r2, r3
 800ce16:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800ce18:	f9b2 2000 	ldrsh.w	r2, [r2]
 800ce1c:	2a15      	cmp	r2, #21
 800ce1e:	f340 8084 	ble.w	800cf2a <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x432>
 800ce22:	9823      	ldr	r0, [sp, #140]	; 0x8c
 800ce24:	1e95      	subs	r5, r2, #2
 800ce26:	9922      	ldr	r1, [sp, #136]	; 0x88
 800ce28:	3a01      	subs	r2, #1
 800ce2a:	6804      	ldr	r4, [r0, #0]
 800ce2c:	2001      	movs	r0, #1
 800ce2e:	6809      	ldr	r1, [r1, #0]
 800ce30:	40a8      	lsls	r0, r5
 800ce32:	fb53 0301 	smmla	r3, r3, r1, r0
 800ce36:	4113      	asrs	r3, r2
 800ce38:	4423      	add	r3, r4
 800ce3a:	f303 0307 	ssat	r3, #8, r3
 800ce3e:	9825      	ldr	r0, [sp, #148]	; 0x94
 800ce40:	f800 3b01 	strb.w	r3, [r0], #1
 800ce44:	9025      	str	r0, [sp, #148]	; 0x94
 800ce46:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ce48:	2b00      	cmp	r3, #0
 800ce4a:	d066      	beq.n	800cf1a <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x422>
 800ce4c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800ce4e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800ce50:	fb03 f000 	mul.w	r0, r3, r0
 800ce54:	9b25      	ldr	r3, [sp, #148]	; 0x94
 800ce56:	f1c0 0001 	rsb	r0, r0, #1
 800ce5a:	4418      	add	r0, r3
 800ce5c:	b015      	add	sp, #84	; 0x54
 800ce5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ce62:	2d00      	cmp	r5, #0
 800ce64:	dd29      	ble.n	800ceba <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x3c2>
 800ce66:	9e01      	ldr	r6, [sp, #4]
 800ce68:	0052      	lsls	r2, r2, #1
 800ce6a:	f85b 4c08 	ldr.w	r4, [fp, #-8]
 800ce6e:	f856 1c08 	ldr.w	r1, [r6, #-8]
 800ce72:	f1a6 0e04 	sub.w	lr, r6, #4
 800ce76:	fb52 4201 	smmla	r2, r2, r1, r4
 800ce7a:	fa42 f505 	asr.w	r5, r2, r5
 800ce7e:	9a00      	ldr	r2, [sp, #0]
 800ce80:	f1ab 0604 	sub.w	r6, fp, #4
 800ce84:	f1a2 0c02 	sub.w	ip, r2, #2
 800ce88:	f305 0507 	ssat	r5, #8, r5
 800ce8c:	9a03      	ldr	r2, [sp, #12]
 800ce8e:	f802 5c01 	strb.w	r5, [r2, #-1]
 800ce92:	f9bc 2000 	ldrsh.w	r2, [ip]
 800ce96:	2a15      	cmp	r2, #21
 800ce98:	f73f af4f 	bgt.w	800cd3a <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x242>
 800ce9c:	2a00      	cmp	r2, #0
 800ce9e:	dd25      	ble.n	800ceec <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x3f4>
 800cea0:	f8de 1000 	ldr.w	r1, [lr]
 800cea4:	005b      	lsls	r3, r3, #1
 800cea6:	6834      	ldr	r4, [r6, #0]
 800cea8:	fb53 4301 	smmla	r3, r3, r1, r4
 800ceac:	4113      	asrs	r3, r2
 800ceae:	f303 0307 	ssat	r3, #8, r3
 800ceb2:	9a02      	ldr	r2, [sp, #8]
 800ceb4:	f802 3c01 	strb.w	r3, [r2, #-1]
 800ceb8:	e750      	b.n	800cd5c <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x264>
 800ceba:	f1c5 0501 	rsb	r5, r5, #1
 800cebe:	f1a6 0c02 	sub.w	ip, r6, #2
 800cec2:	40aa      	lsls	r2, r5
 800cec4:	f302 021f 	ssat	r2, #32, r2
 800cec8:	9901      	ldr	r1, [sp, #4]
 800ceca:	f1a1 0e04 	sub.w	lr, r1, #4
 800cece:	f851 1c08 	ldr.w	r1, [r1, #-8]
 800ced2:	fb52 f111 	smmulr	r1, r2, r1
 800ced6:	f85b 2c08 	ldr.w	r2, [fp, #-8]
 800ceda:	f1ab 0604 	sub.w	r6, fp, #4
 800cede:	440a      	add	r2, r1
 800cee0:	f302 0207 	ssat	r2, #8, r2
 800cee4:	9903      	ldr	r1, [sp, #12]
 800cee6:	f801 2c01 	strb.w	r2, [r1, #-1]
 800ceea:	e721      	b.n	800cd30 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x238>
 800ceec:	f1c2 0201 	rsb	r2, r2, #1
 800cef0:	fa03 f202 	lsl.w	r2, r3, r2
 800cef4:	f302 021f 	ssat	r2, #32, r2
 800cef8:	f8de 3000 	ldr.w	r3, [lr]
 800cefc:	fb52 f313 	smmulr	r3, r2, r3
 800cf00:	6832      	ldr	r2, [r6, #0]
 800cf02:	4413      	add	r3, r2
 800cf04:	f303 0307 	ssat	r3, #8, r3
 800cf08:	9a02      	ldr	r2, [sp, #8]
 800cf0a:	f802 3c01 	strb.w	r3, [r2, #-1]
 800cf0e:	e725      	b.n	800cd5c <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x264>
 800cf10:	f04f 0e00 	mov.w	lr, #0
 800cf14:	e68e      	b.n	800cc34 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x13c>
 800cf16:	2401      	movs	r4, #1
 800cf18:	e604      	b.n	800cb24 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x2c>
 800cf1a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800cf1c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800cf1e:	1a98      	subs	r0, r3, r2
 800cf20:	9b25      	ldr	r3, [sp, #148]	; 0x94
 800cf22:	4418      	add	r0, r3
 800cf24:	b015      	add	sp, #84	; 0x54
 800cf26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf2a:	2a00      	cmp	r2, #0
 800cf2c:	dd0e      	ble.n	800cf4c <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x454>
 800cf2e:	9922      	ldr	r1, [sp, #136]	; 0x88
 800cf30:	005b      	lsls	r3, r3, #1
 800cf32:	9823      	ldr	r0, [sp, #140]	; 0x8c
 800cf34:	6809      	ldr	r1, [r1, #0]
 800cf36:	6800      	ldr	r0, [r0, #0]
 800cf38:	fb53 0301 	smmla	r3, r3, r1, r0
 800cf3c:	4113      	asrs	r3, r2
 800cf3e:	f303 0307 	ssat	r3, #8, r3
 800cf42:	9825      	ldr	r0, [sp, #148]	; 0x94
 800cf44:	f800 3b01 	strb.w	r3, [r0], #1
 800cf48:	9025      	str	r0, [sp, #148]	; 0x94
 800cf4a:	e77c      	b.n	800ce46 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x34e>
 800cf4c:	f1c2 0201 	rsb	r2, r2, #1
 800cf50:	4093      	lsls	r3, r2
 800cf52:	f303 031f 	ssat	r3, #32, r3
 800cf56:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800cf58:	6812      	ldr	r2, [r2, #0]
 800cf5a:	fb53 f312 	smmulr	r3, r3, r2
 800cf5e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 800cf60:	6812      	ldr	r2, [r2, #0]
 800cf62:	4413      	add	r3, r2
 800cf64:	f303 0307 	ssat	r3, #8, r3
 800cf68:	9a25      	ldr	r2, [sp, #148]	; 0x94
 800cf6a:	f802 3b01 	strb.w	r3, [r2], #1
 800cf6e:	9225      	str	r2, [sp, #148]	; 0x94
 800cf70:	e769      	b.n	800ce46 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x34e>
 800cf72:	bf00      	nop

0800cf74 <weights_2channels_prefetch>:
 800cf74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf78:	2b00      	cmp	r3, #0
 800cf7a:	b087      	sub	sp, #28
 800cf7c:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
 800cf80:	9302      	str	r3, [sp, #8]
 800cf82:	f340 80e6 	ble.w	800d152 <weights_2channels_prefetch+0x1de>
 800cf86:	f1a8 0310 	sub.w	r3, r8, #16
 800cf8a:	f1a8 0403 	sub.w	r4, r8, #3
 800cf8e:	f04f 0b00 	mov.w	fp, #0
 800cf92:	091b      	lsrs	r3, r3, #4
 800cf94:	9403      	str	r4, [sp, #12]
 800cf96:	f1a8 0404 	sub.w	r4, r8, #4
 800cf9a:	3301      	adds	r3, #1
 800cf9c:	9405      	str	r4, [sp, #20]
 800cf9e:	011c      	lsls	r4, r3, #4
 800cfa0:	019b      	lsls	r3, r3, #6
 800cfa2:	9400      	str	r4, [sp, #0]
 800cfa4:	9304      	str	r3, [sp, #16]
 800cfa6:	f1b8 0f0f 	cmp.w	r8, #15
 800cfaa:	f340 80d7 	ble.w	800d15c <weights_2channels_prefetch+0x1e8>
 800cfae:	9b00      	ldr	r3, [sp, #0]
 800cfb0:	460d      	mov	r5, r1
 800cfb2:	18c6      	adds	r6, r0, r3
 800cfb4:	4613      	mov	r3, r2
 800cfb6:	6804      	ldr	r4, [r0, #0]
 800cfb8:	3010      	adds	r0, #16
 800cfba:	682f      	ldr	r7, [r5, #0]
 800cfbc:	3340      	adds	r3, #64	; 0x40
 800cfbe:	fa2f fc84 	sxtb16	ip, r4
 800cfc2:	3510      	adds	r5, #16
 800cfc4:	f843 cc40 	str.w	ip, [r3, #-64]
 800cfc8:	ea4f 2434 	mov.w	r4, r4, ror #8
 800cfcc:	42b0      	cmp	r0, r6
 800cfce:	fa2f f484 	sxtb16	r4, r4
 800cfd2:	f843 4c3c 	str.w	r4, [r3, #-60]
 800cfd6:	ea4f 2437 	mov.w	r4, r7, ror #8
 800cfda:	fa2f f787 	sxtb16	r7, r7
 800cfde:	fa2f f484 	sxtb16	r4, r4
 800cfe2:	f843 7c38 	str.w	r7, [r3, #-56]
 800cfe6:	f843 4c34 	str.w	r4, [r3, #-52]
 800cfea:	f855 4c0c 	ldr.w	r4, [r5, #-12]
 800cfee:	f850 7c0c 	ldr.w	r7, [r0, #-12]
 800cff2:	ea4f 2c34 	mov.w	ip, r4, ror #8
 800cff6:	fa2f f484 	sxtb16	r4, r4
 800cffa:	fa2f fc8c 	sxtb16	ip, ip
 800cffe:	f843 4c28 	str.w	r4, [r3, #-40]
 800d002:	f843 cc24 	str.w	ip, [r3, #-36]
 800d006:	ea4f 2c37 	mov.w	ip, r7, ror #8
 800d00a:	fa2f f787 	sxtb16	r7, r7
 800d00e:	f843 7c30 	str.w	r7, [r3, #-48]
 800d012:	fa2f f78c 	sxtb16	r7, ip
 800d016:	f843 7c2c 	str.w	r7, [r3, #-44]
 800d01a:	f850 7c08 	ldr.w	r7, [r0, #-8]
 800d01e:	f855 4c08 	ldr.w	r4, [r5, #-8]
 800d022:	ea4f 2c37 	mov.w	ip, r7, ror #8
 800d026:	fa2f f787 	sxtb16	r7, r7
 800d02a:	fa2f fc8c 	sxtb16	ip, ip
 800d02e:	f843 7c20 	str.w	r7, [r3, #-32]
 800d032:	ea4f 2734 	mov.w	r7, r4, ror #8
 800d036:	f843 cc1c 	str.w	ip, [r3, #-28]
 800d03a:	fa2f f787 	sxtb16	r7, r7
 800d03e:	fa2f f484 	sxtb16	r4, r4
 800d042:	f843 7c14 	str.w	r7, [r3, #-20]
 800d046:	f843 4c18 	str.w	r4, [r3, #-24]
 800d04a:	f850 7c04 	ldr.w	r7, [r0, #-4]
 800d04e:	f855 4c04 	ldr.w	r4, [r5, #-4]
 800d052:	ea4f 2c37 	mov.w	ip, r7, ror #8
 800d056:	fa2f f787 	sxtb16	r7, r7
 800d05a:	fa2f fc8c 	sxtb16	ip, ip
 800d05e:	f843 7c10 	str.w	r7, [r3, #-16]
 800d062:	ea4f 2734 	mov.w	r7, r4, ror #8
 800d066:	f843 cc0c 	str.w	ip, [r3, #-12]
 800d06a:	fa2f f787 	sxtb16	r7, r7
 800d06e:	fa2f f484 	sxtb16	r4, r4
 800d072:	f843 7c04 	str.w	r7, [r3, #-4]
 800d076:	f843 4c08 	str.w	r4, [r3, #-8]
 800d07a:	d19c      	bne.n	800cfb6 <weights_2channels_prefetch+0x42>
 800d07c:	9b04      	ldr	r3, [sp, #16]
 800d07e:	441a      	add	r2, r3
 800d080:	9b00      	ldr	r3, [sp, #0]
 800d082:	4419      	add	r1, r3
 800d084:	469e      	mov	lr, r3
 800d086:	9b03      	ldr	r3, [sp, #12]
 800d088:	4573      	cmp	r3, lr
 800d08a:	dd65      	ble.n	800d158 <weights_2channels_prefetch+0x1e4>
 800d08c:	9b05      	ldr	r3, [sp, #20]
 800d08e:	4614      	mov	r4, r2
 800d090:	460f      	mov	r7, r1
 800d092:	eba3 090e 	sub.w	r9, r3, lr
 800d096:	ea4f 0999 	mov.w	r9, r9, lsr #2
 800d09a:	f109 0a01 	add.w	sl, r9, #1
 800d09e:	ea4f 038a 	mov.w	r3, sl, lsl #2
 800d0a2:	eb06 008a 	add.w	r0, r6, sl, lsl #2
 800d0a6:	9301      	str	r3, [sp, #4]
 800d0a8:	f856 3b04 	ldr.w	r3, [r6], #4
 800d0ac:	3410      	adds	r4, #16
 800d0ae:	f857 5b04 	ldr.w	r5, [r7], #4
 800d0b2:	fa2f fc83 	sxtb16	ip, r3
 800d0b6:	4286      	cmp	r6, r0
 800d0b8:	ea4f 2333 	mov.w	r3, r3, ror #8
 800d0bc:	fa2f f383 	sxtb16	r3, r3
 800d0c0:	f844 3c0c 	str.w	r3, [r4, #-12]
 800d0c4:	ea4f 2335 	mov.w	r3, r5, ror #8
 800d0c8:	fa2f f585 	sxtb16	r5, r5
 800d0cc:	f844 cc10 	str.w	ip, [r4, #-16]
 800d0d0:	f844 5c08 	str.w	r5, [r4, #-8]
 800d0d4:	fa2f f383 	sxtb16	r3, r3
 800d0d8:	f844 3c04 	str.w	r3, [r4, #-4]
 800d0dc:	d1e4      	bne.n	800d0a8 <weights_2channels_prefetch+0x134>
 800d0de:	9b01      	ldr	r3, [sp, #4]
 800d0e0:	f10e 0e04 	add.w	lr, lr, #4
 800d0e4:	eb02 120a 	add.w	r2, r2, sl, lsl #4
 800d0e8:	4419      	add	r1, r3
 800d0ea:	eb0e 0e89 	add.w	lr, lr, r9, lsl #2
 800d0ee:	45f0      	cmp	r8, lr
 800d0f0:	dd29      	ble.n	800d146 <weights_2channels_prefetch+0x1d2>
 800d0f2:	f990 3000 	ldrsb.w	r3, [r0]
 800d0f6:	8013      	strh	r3, [r2, #0]
 800d0f8:	f991 3000 	ldrsb.w	r3, [r1]
 800d0fc:	8053      	strh	r3, [r2, #2]
 800d0fe:	f10e 0301 	add.w	r3, lr, #1
 800d102:	4598      	cmp	r8, r3
 800d104:	dd19      	ble.n	800d13a <weights_2channels_prefetch+0x1c6>
 800d106:	f990 3001 	ldrsb.w	r3, [r0, #1]
 800d10a:	8093      	strh	r3, [r2, #4]
 800d10c:	f991 3001 	ldrsb.w	r3, [r1, #1]
 800d110:	80d3      	strh	r3, [r2, #6]
 800d112:	f10e 0302 	add.w	r3, lr, #2
 800d116:	4598      	cmp	r8, r3
 800d118:	dd0f      	ble.n	800d13a <weights_2channels_prefetch+0x1c6>
 800d11a:	f990 3002 	ldrsb.w	r3, [r0, #2]
 800d11e:	8113      	strh	r3, [r2, #8]
 800d120:	f10e 0303 	add.w	r3, lr, #3
 800d124:	f991 4002 	ldrsb.w	r4, [r1, #2]
 800d128:	4598      	cmp	r8, r3
 800d12a:	8154      	strh	r4, [r2, #10]
 800d12c:	dd05      	ble.n	800d13a <weights_2channels_prefetch+0x1c6>
 800d12e:	f990 3003 	ldrsb.w	r3, [r0, #3]
 800d132:	8193      	strh	r3, [r2, #12]
 800d134:	f991 3003 	ldrsb.w	r3, [r1, #3]
 800d138:	81d3      	strh	r3, [r2, #14]
 800d13a:	eba8 0e0e 	sub.w	lr, r8, lr
 800d13e:	4470      	add	r0, lr
 800d140:	4471      	add	r1, lr
 800d142:	eb02 028e 	add.w	r2, r2, lr, lsl #2
 800d146:	f10b 0b01 	add.w	fp, fp, #1
 800d14a:	9b02      	ldr	r3, [sp, #8]
 800d14c:	455b      	cmp	r3, fp
 800d14e:	f47f af2a 	bne.w	800cfa6 <weights_2channels_prefetch+0x32>
 800d152:	b007      	add	sp, #28
 800d154:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d158:	4630      	mov	r0, r6
 800d15a:	e7c8      	b.n	800d0ee <weights_2channels_prefetch+0x17a>
 800d15c:	4606      	mov	r6, r0
 800d15e:	f04f 0e00 	mov.w	lr, #0
 800d162:	e790      	b.n	800d086 <weights_2channels_prefetch+0x112>

0800d164 <st_sssa8_ch_fullW_prefetch>:
 800d164:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d168:	b087      	sub	sp, #28
 800d16a:	461c      	mov	r4, r3
 800d16c:	4680      	mov	r8, r0
 800d16e:	4613      	mov	r3, r2
 800d170:	104f      	asrs	r7, r1, #1
 800d172:	4620      	mov	r0, r4
 800d174:	9103      	str	r1, [sp, #12]
 800d176:	9704      	str	r7, [sp, #16]
 800d178:	e9dd 2a10 	ldrd	r2, sl, [sp, #64]	; 0x40
 800d17c:	eb08 0402 	add.w	r4, r8, r2
 800d180:	d020      	beq.n	800d1c4 <st_sssa8_ch_fullW_prefetch+0x60>
 800d182:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800d184:	4646      	mov	r6, r8
 800d186:	4655      	mov	r5, sl
 800d188:	f8cd 8014 	str.w	r8, [sp, #20]
 800d18c:	ea4f 0942 	mov.w	r9, r2, lsl #1
 800d190:	4680      	mov	r8, r0
 800d192:	ea4f 0b82 	mov.w	fp, r2, lsl #2
 800d196:	469a      	mov	sl, r3
 800d198:	462a      	mov	r2, r5
 800d19a:	4621      	mov	r1, r4
 800d19c:	4630      	mov	r0, r6
 800d19e:	4653      	mov	r3, sl
 800d1a0:	f8cd 8000 	str.w	r8, [sp]
 800d1a4:	445d      	add	r5, fp
 800d1a6:	f7ff fee5 	bl	800cf74 <weights_2channels_prefetch>
 800d1aa:	3f01      	subs	r7, #1
 800d1ac:	444c      	add	r4, r9
 800d1ae:	444e      	add	r6, r9
 800d1b0:	d1f2      	bne.n	800d198 <st_sssa8_ch_fullW_prefetch+0x34>
 800d1b2:	9b04      	ldr	r3, [sp, #16]
 800d1b4:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800d1b8:	f8dd a044 	ldr.w	sl, [sp, #68]	; 0x44
 800d1bc:	fb03 8809 	mla	r8, r3, r9, r8
 800d1c0:	fb03 aa0b 	mla	sl, r3, fp, sl
 800d1c4:	9b03      	ldr	r3, [sp, #12]
 800d1c6:	07db      	lsls	r3, r3, #31
 800d1c8:	d509      	bpl.n	800d1de <st_sssa8_ch_fullW_prefetch+0x7a>
 800d1ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d1cc:	2b00      	cmp	r3, #0
 800d1ce:	dd06      	ble.n	800d1de <st_sssa8_ch_fullW_prefetch+0x7a>
 800d1d0:	4443      	add	r3, r8
 800d1d2:	f918 2b01 	ldrsb.w	r2, [r8], #1
 800d1d6:	4543      	cmp	r3, r8
 800d1d8:	f82a 2b02 	strh.w	r2, [sl], #2
 800d1dc:	d1f9      	bne.n	800d1d2 <st_sssa8_ch_fullW_prefetch+0x6e>
 800d1de:	b007      	add	sp, #28
 800d1e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d1e4 <st_sssa8_ch_nn_mat_mult_nt_t>:
 800d1e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d1e8:	b0bf      	sub	sp, #252	; 0xfc
 800d1ea:	902d      	str	r0, [sp, #180]	; 0xb4
 800d1ec:	9328      	str	r3, [sp, #160]	; 0xa0
 800d1ee:	9134      	str	r1, [sp, #208]	; 0xd0
 800d1f0:	923d      	str	r2, [sp, #244]	; 0xf4
 800d1f2:	e9dd 3052 	ldrd	r3, r0, [sp, #328]	; 0x148
 800d1f6:	2800      	cmp	r0, #0
 800d1f8:	bf18      	it	ne
 800d1fa:	4603      	movne	r3, r0
 800d1fc:	9352      	str	r3, [sp, #328]	; 0x148
 800d1fe:	9b4c      	ldr	r3, [sp, #304]	; 0x130
 800d200:	2b01      	cmp	r3, #1
 800d202:	f340 827e 	ble.w	800d702 <st_sssa8_ch_nn_mat_mult_nt_t+0x51e>
 800d206:	9b4d      	ldr	r3, [sp, #308]	; 0x134
 800d208:	4694      	mov	ip, r2
 800d20a:	f1a3 0210 	sub.w	r2, r3, #16
 800d20e:	9b4c      	ldr	r3, [sp, #304]	; 0x130
 800d210:	3b02      	subs	r3, #2
 800d212:	0912      	lsrs	r2, r2, #4
 800d214:	085e      	lsrs	r6, r3, #1
 800d216:	9b4d      	ldr	r3, [sp, #308]	; 0x134
 800d218:	3201      	adds	r2, #1
 800d21a:	091b      	lsrs	r3, r3, #4
 800d21c:	963c      	str	r6, [sp, #240]	; 0xf0
 800d21e:	4618      	mov	r0, r3
 800d220:	9310      	str	r3, [sp, #64]	; 0x40
 800d222:	9b4d      	ldr	r3, [sp, #308]	; 0x134
 800d224:	f3c3 0481 	ubfx	r4, r3, #2, #2
 800d228:	f003 0503 	and.w	r5, r3, #3
 800d22c:	109f      	asrs	r7, r3, #2
 800d22e:	9b4f      	ldr	r3, [sp, #316]	; 0x13c
 800d230:	9411      	str	r4, [sp, #68]	; 0x44
 800d232:	f013 0302 	ands.w	r3, r3, #2
 800d236:	9504      	str	r5, [sp, #16]
 800d238:	9736      	str	r7, [sp, #216]	; 0xd8
 800d23a:	930c      	str	r3, [sp, #48]	; 0x30
 800d23c:	9b49      	ldr	r3, [sp, #292]	; 0x124
 800d23e:	f103 0304 	add.w	r3, r3, #4
 800d242:	eb03 0386 	add.w	r3, r3, r6, lsl #2
 800d246:	9e4d      	ldr	r6, [sp, #308]	; 0x134
 800d248:	9330      	str	r3, [sp, #192]	; 0xc0
 800d24a:	f06f 0303 	mvn.w	r3, #3
 800d24e:	eba3 0306 	sub.w	r3, r3, r6
 800d252:	9302      	str	r3, [sp, #8]
 800d254:	f1a6 030f 	sub.w	r3, r6, #15
 800d258:	9337      	str	r3, [sp, #220]	; 0xdc
 800d25a:	9b4f      	ldr	r3, [sp, #316]	; 0x13c
 800d25c:	f003 0301 	and.w	r3, r3, #1
 800d260:	931b      	str	r3, [sp, #108]	; 0x6c
 800d262:	9b4a      	ldr	r3, [sp, #296]	; 0x128
 800d264:	ea4f 0363 	mov.w	r3, r3, asr #1
 800d268:	932f      	str	r3, [sp, #188]	; 0xbc
 800d26a:	4603      	mov	r3, r0
 800d26c:	f100 30ff 	add.w	r0, r0, #4294967295
 800d270:	9015      	str	r0, [sp, #84]	; 0x54
 800d272:	4620      	mov	r0, r4
 800d274:	f104 34ff 	add.w	r4, r4, #4294967295
 800d278:	9414      	str	r4, [sp, #80]	; 0x50
 800d27a:	9c4a      	ldr	r4, [sp, #296]	; 0x128
 800d27c:	f004 0401 	and.w	r4, r4, #1
 800d280:	942e      	str	r4, [sp, #184]	; 0xb8
 800d282:	9c4b      	ldr	r4, [sp, #300]	; 0x12c
 800d284:	bf08      	it	eq
 800d286:	2401      	moveq	r4, #1
 800d288:	943b      	str	r4, [sp, #236]	; 0xec
 800d28a:	0074      	lsls	r4, r6, #1
 800d28c:	942c      	str	r4, [sp, #176]	; 0xb0
 800d28e:	9c4b      	ldr	r4, [sp, #300]	; 0x12c
 800d290:	0064      	lsls	r4, r4, #1
 800d292:	9435      	str	r4, [sp, #212]	; 0xd4
 800d294:	00b4      	lsls	r4, r6, #2
 800d296:	9433      	str	r4, [sp, #204]	; 0xcc
 800d298:	1f34      	subs	r4, r6, #4
 800d29a:	9413      	str	r4, [sp, #76]	; 0x4c
 800d29c:	9c49      	ldr	r4, [sp, #292]	; 0x124
 800d29e:	9427      	str	r4, [sp, #156]	; 0x9c
 800d2a0:	9c48      	ldr	r4, [sp, #288]	; 0x120
 800d2a2:	9129      	str	r1, [sp, #164]	; 0xa4
 800d2a4:	3404      	adds	r4, #4
 800d2a6:	9426      	str	r4, [sp, #152]	; 0x98
 800d2a8:	9c51      	ldr	r4, [sp, #324]	; 0x144
 800d2aa:	3404      	adds	r4, #4
 800d2ac:	9425      	str	r4, [sp, #148]	; 0x94
 800d2ae:	4664      	mov	r4, ip
 800d2b0:	3404      	adds	r4, #4
 800d2b2:	9424      	str	r4, [sp, #144]	; 0x90
 800d2b4:	0114      	lsls	r4, r2, #4
 800d2b6:	0192      	lsls	r2, r2, #6
 800d2b8:	9432      	str	r4, [sp, #200]	; 0xc8
 800d2ba:	9238      	str	r2, [sp, #224]	; 0xe0
 800d2bc:	013a      	lsls	r2, r7, #4
 800d2be:	923a      	str	r2, [sp, #232]	; 0xe8
 800d2c0:	1e6a      	subs	r2, r5, #1
 800d2c2:	921c      	str	r2, [sp, #112]	; 0x70
 800d2c4:	1eaa      	subs	r2, r5, #2
 800d2c6:	9220      	str	r2, [sp, #128]	; 0x80
 800d2c8:	011a      	lsls	r2, r3, #4
 800d2ca:	019b      	lsls	r3, r3, #6
 800d2cc:	9216      	str	r2, [sp, #88]	; 0x58
 800d2ce:	9331      	str	r3, [sp, #196]	; 0xc4
 800d2d0:	0103      	lsls	r3, r0, #4
 800d2d2:	9318      	str	r3, [sp, #96]	; 0x60
 800d2d4:	0083      	lsls	r3, r0, #2
 800d2d6:	9317      	str	r3, [sp, #92]	; 0x5c
 800d2d8:	1ef3      	subs	r3, r6, #3
 800d2da:	9339      	str	r3, [sp, #228]	; 0xe4
 800d2dc:	4633      	mov	r3, r6
 800d2de:	3304      	adds	r3, #4
 800d2e0:	9319      	str	r3, [sp, #100]	; 0x64
 800d2e2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 800d2e4:	f9b2 3000 	ldrsh.w	r3, [r2]
 800d2e8:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 800d2ec:	2b15      	cmp	r3, #21
 800d2ee:	931e      	str	r3, [sp, #120]	; 0x78
 800d2f0:	921a      	str	r2, [sp, #104]	; 0x68
 800d2f2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800d2f4:	f852 1c04 	ldr.w	r1, [r2, #-4]
 800d2f8:	6812      	ldr	r2, [r2, #0]
 800d2fa:	9109      	str	r1, [sp, #36]	; 0x24
 800d2fc:	920d      	str	r2, [sp, #52]	; 0x34
 800d2fe:	9a25      	ldr	r2, [sp, #148]	; 0x94
 800d300:	f852 1c04 	ldr.w	r1, [r2, #-4]
 800d304:	6812      	ldr	r2, [r2, #0]
 800d306:	910e      	str	r1, [sp, #56]	; 0x38
 800d308:	920f      	str	r2, [sp, #60]	; 0x3c
 800d30a:	f300 857e 	bgt.w	800de0a <st_sssa8_ch_nn_mat_mult_nt_t+0xc26>
 800d30e:	2b00      	cmp	r3, #0
 800d310:	bfcc      	ite	gt
 800d312:	2300      	movgt	r3, #0
 800d314:	2301      	movle	r3, #1
 800d316:	425b      	negs	r3, r3
 800d318:	9308      	str	r3, [sp, #32]
 800d31a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800d31c:	2b15      	cmp	r3, #21
 800d31e:	f300 8444 	bgt.w	800dbaa <st_sssa8_ch_nn_mat_mult_nt_t+0x9c6>
 800d322:	2b00      	cmp	r3, #0
 800d324:	bfcc      	ite	gt
 800d326:	2300      	movgt	r3, #0
 800d328:	2301      	movle	r3, #1
 800d32a:	425b      	negs	r3, r3
 800d32c:	9307      	str	r3, [sp, #28]
 800d32e:	9b53      	ldr	r3, [sp, #332]	; 0x14c
 800d330:	2b00      	cmp	r3, #0
 800d332:	f000 8440 	beq.w	800dbb6 <st_sssa8_ch_nn_mat_mult_nt_t+0x9d2>
 800d336:	9b4e      	ldr	r3, [sp, #312]	; 0x138
 800d338:	2b00      	cmp	r3, #0
 800d33a:	f040 8516 	bne.w	800dd6a <st_sssa8_ch_nn_mat_mult_nt_t+0xb86>
 800d33e:	461a      	mov	r2, r3
 800d340:	4619      	mov	r1, r3
 800d342:	9824      	ldr	r0, [sp, #144]	; 0x90
 800d344:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800d348:	18cb      	adds	r3, r1, r3
 800d34a:	930a      	str	r3, [sp, #40]	; 0x28
 800d34c:	6803      	ldr	r3, [r0, #0]
 800d34e:	18d3      	adds	r3, r2, r3
 800d350:	930b      	str	r3, [sp, #44]	; 0x2c
 800d352:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800d354:	2b00      	cmp	r3, #0
 800d356:	f000 831e 	beq.w	800d996 <st_sssa8_ch_nn_mat_mult_nt_t+0x7b2>
 800d35a:	9b50      	ldr	r3, [sp, #320]	; 0x140
 800d35c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 800d35e:	3303      	adds	r3, #3
 800d360:	982f      	ldr	r0, [sp, #188]	; 0xbc
 800d362:	18d3      	adds	r3, r2, r3
 800d364:	9303      	str	r3, [sp, #12]
 800d366:	2800      	cmp	r0, #0
 800d368:	f000 831b 	beq.w	800d9a2 <st_sssa8_ch_nn_mat_mult_nt_t+0x7be>
 800d36c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 800d36e:	2401      	movs	r4, #1
 800d370:	991a      	ldr	r1, [sp, #104]	; 0x68
 800d372:	1e93      	subs	r3, r2, #2
 800d374:	9005      	str	r0, [sp, #20]
 800d376:	fa04 f303 	lsl.w	r3, r4, r3
 800d37a:	9322      	str	r3, [sp, #136]	; 0x88
 800d37c:	1e8b      	subs	r3, r1, #2
 800d37e:	fa04 f303 	lsl.w	r3, r4, r3
 800d382:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 800d384:	9321      	str	r3, [sp, #132]	; 0x84
 800d386:	9b52      	ldr	r3, [sp, #328]	; 0x148
 800d388:	4423      	add	r3, r4
 800d38a:	9312      	str	r3, [sp, #72]	; 0x48
 800d38c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800d38e:	9301      	str	r3, [sp, #4]
 800d390:	9b50      	ldr	r3, [sp, #320]	; 0x140
 800d392:	931d      	str	r3, [sp, #116]	; 0x74
 800d394:	1e4b      	subs	r3, r1, #1
 800d396:	9323      	str	r3, [sp, #140]	; 0x8c
 800d398:	f1c1 0301 	rsb	r3, r1, #1
 800d39c:	932a      	str	r3, [sp, #168]	; 0xa8
 800d39e:	1e53      	subs	r3, r2, #1
 800d3a0:	931f      	str	r3, [sp, #124]	; 0x7c
 800d3a2:	f1c2 0301 	rsb	r3, r2, #1
 800d3a6:	932b      	str	r3, [sp, #172]	; 0xac
 800d3a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d3aa:	2b00      	cmp	r3, #0
 800d3ac:	f000 82ec 	beq.w	800d988 <st_sssa8_ch_nn_mat_mult_nt_t+0x7a4>
 800d3b0:	9b01      	ldr	r3, [sp, #4]
 800d3b2:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800d3b4:	980a      	ldr	r0, [sp, #40]	; 0x28
 800d3b6:	189f      	adds	r7, r3, r2
 800d3b8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d3ba:	9e52      	ldr	r6, [sp, #328]	; 0x148
 800d3bc:	4604      	mov	r4, r0
 800d3be:	f8dd 8054 	ldr.w	r8, [sp, #84]	; 0x54
 800d3c2:	4613      	mov	r3, r2
 800d3c4:	9902      	ldr	r1, [sp, #8]
 800d3c6:	f8d6 a004 	ldr.w	sl, [r6, #4]
 800d3ca:	f851 c007 	ldr.w	ip, [r1, r7]
 800d3ce:	eb01 0e07 	add.w	lr, r1, r7
 800d3d2:	f8d6 b008 	ldr.w	fp, [r6, #8]
 800d3d6:	6831      	ldr	r1, [r6, #0]
 800d3d8:	f8d6 900c 	ldr.w	r9, [r6, #12]
 800d3dc:	fa2f f58c 	sxtb16	r5, ip
 800d3e0:	fa2f fc9c 	sxtb16	ip, ip, ror #8
 800d3e4:	fb25 0001 	smlad	r0, r5, r1, r0
 800d3e8:	fb2c 000a 	smlad	r0, ip, sl, r0
 800d3ec:	fb25 250b 	smlad	r5, r5, fp, r2
 800d3f0:	fb2c 5509 	smlad	r5, ip, r9, r5
 800d3f4:	f857 2c04 	ldr.w	r2, [r7, #-4]
 800d3f8:	fa2f fc82 	sxtb16	ip, r2
 800d3fc:	fa2f f292 	sxtb16	r2, r2, ror #8
 800d400:	fb2c 4101 	smlad	r1, ip, r1, r4
 800d404:	fb2c 330b 	smlad	r3, ip, fp, r3
 800d408:	fb22 110a 	smlad	r1, r2, sl, r1
 800d40c:	f8d6 a010 	ldr.w	sl, [r6, #16]
 800d410:	6974      	ldr	r4, [r6, #20]
 800d412:	fb22 3909 	smlad	r9, r2, r9, r3
 800d416:	f8de 3004 	ldr.w	r3, [lr, #4]
 800d41a:	69b2      	ldr	r2, [r6, #24]
 800d41c:	f8d6 b01c 	ldr.w	fp, [r6, #28]
 800d420:	fa2f fc83 	sxtb16	ip, r3
 800d424:	fa2f f393 	sxtb16	r3, r3, ror #8
 800d428:	fb2c 000a 	smlad	r0, ip, sl, r0
 800d42c:	fb23 0004 	smlad	r0, r3, r4, r0
 800d430:	fb2c 5c02 	smlad	ip, ip, r2, r5
 800d434:	fb23 cc0b 	smlad	ip, r3, fp, ip
 800d438:	683d      	ldr	r5, [r7, #0]
 800d43a:	fa2f f385 	sxtb16	r3, r5
 800d43e:	fa2f f595 	sxtb16	r5, r5, ror #8
 800d442:	fb23 1a0a 	smlad	sl, r3, sl, r1
 800d446:	fb23 9902 	smlad	r9, r3, r2, r9
 800d44a:	fb25 aa04 	smlad	sl, r5, r4, sl
 800d44e:	6a34      	ldr	r4, [r6, #32]
 800d450:	6a72      	ldr	r2, [r6, #36]	; 0x24
 800d452:	fb25 9b0b 	smlad	fp, r5, fp, r9
 800d456:	f8de 1008 	ldr.w	r1, [lr, #8]
 800d45a:	f8d6 9028 	ldr.w	r9, [r6, #40]	; 0x28
 800d45e:	6af5      	ldr	r5, [r6, #44]	; 0x2c
 800d460:	fa2f f381 	sxtb16	r3, r1
 800d464:	fa2f f191 	sxtb16	r1, r1, ror #8
 800d468:	fb23 0004 	smlad	r0, r3, r4, r0
 800d46c:	fb21 0002 	smlad	r0, r1, r2, r0
 800d470:	fb23 c309 	smlad	r3, r3, r9, ip
 800d474:	fb21 3105 	smlad	r1, r1, r5, r3
 800d478:	f8d7 c004 	ldr.w	ip, [r7, #4]
 800d47c:	fa2f f38c 	sxtb16	r3, ip
 800d480:	fa2f fc9c 	sxtb16	ip, ip, ror #8
 800d484:	fb23 a404 	smlad	r4, r3, r4, sl
 800d488:	fb23 bb09 	smlad	fp, r3, r9, fp
 800d48c:	fb2c 4a02 	smlad	sl, ip, r2, r4
 800d490:	f8d6 9030 	ldr.w	r9, [r6, #48]	; 0x30
 800d494:	6b74      	ldr	r4, [r6, #52]	; 0x34
 800d496:	fb2c b505 	smlad	r5, ip, r5, fp
 800d49a:	f8de 200c 	ldr.w	r2, [lr, #12]
 800d49e:	3640      	adds	r6, #64	; 0x40
 800d4a0:	f856 bc08 	ldr.w	fp, [r6, #-8]
 800d4a4:	f856 ec04 	ldr.w	lr, [r6, #-4]
 800d4a8:	fa2f f382 	sxtb16	r3, r2
 800d4ac:	fa2f f292 	sxtb16	r2, r2, ror #8
 800d4b0:	fb23 0009 	smlad	r0, r3, r9, r0
 800d4b4:	fb22 0004 	smlad	r0, r2, r4, r0
 800d4b8:	fb23 110b 	smlad	r1, r3, fp, r1
 800d4bc:	fb22 120e 	smlad	r2, r2, lr, r1
 800d4c0:	68bb      	ldr	r3, [r7, #8]
 800d4c2:	fa2f f183 	sxtb16	r1, r3
 800d4c6:	fa2f f393 	sxtb16	r3, r3, ror #8
 800d4ca:	fb21 aa09 	smlad	sl, r1, r9, sl
 800d4ce:	fb21 550b 	smlad	r5, r1, fp, r5
 800d4d2:	fb23 a404 	smlad	r4, r3, r4, sl
 800d4d6:	fb23 530e 	smlad	r3, r3, lr, r5
 800d4da:	f108 38ff 	add.w	r8, r8, #4294967295
 800d4de:	3710      	adds	r7, #16
 800d4e0:	f1b8 3fff 	cmp.w	r8, #4294967295
 800d4e4:	f47f af6e 	bne.w	800d3c4 <st_sssa8_ch_nn_mat_mult_nt_t+0x1e0>
 800d4e8:	9901      	ldr	r1, [sp, #4]
 800d4ea:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800d4ec:	f8dd b048 	ldr.w	fp, [sp, #72]	; 0x48
 800d4f0:	4429      	add	r1, r5
 800d4f2:	9101      	str	r1, [sp, #4]
 800d4f4:	9911      	ldr	r1, [sp, #68]	; 0x44
 800d4f6:	b3c1      	cbz	r1, 800d56a <st_sssa8_ch_nn_mat_mult_nt_t+0x386>
 800d4f8:	4659      	mov	r1, fp
 800d4fa:	f8cd b018 	str.w	fp, [sp, #24]
 800d4fe:	f8dd e004 	ldr.w	lr, [sp, #4]
 800d502:	f8dd c050 	ldr.w	ip, [sp, #80]	; 0x50
 800d506:	f8dd b04c 	ldr.w	fp, [sp, #76]	; 0x4c
 800d50a:	f8d1 a000 	ldr.w	sl, [r1]
 800d50e:	3110      	adds	r1, #16
 800d510:	f85e 5b04 	ldr.w	r5, [lr], #4
 800d514:	f851 8c0c 	ldr.w	r8, [r1, #-12]
 800d518:	f851 9c08 	ldr.w	r9, [r1, #-8]
 800d51c:	f851 7c04 	ldr.w	r7, [r1, #-4]
 800d520:	fa2f f685 	sxtb16	r6, r5
 800d524:	fa2f f595 	sxtb16	r5, r5, ror #8
 800d528:	fb26 000a 	smlad	r0, r6, sl, r0
 800d52c:	fb25 0008 	smlad	r0, r5, r8, r0
 800d530:	fb26 2209 	smlad	r2, r6, r9, r2
 800d534:	fb25 2207 	smlad	r2, r5, r7, r2
 800d538:	f85e 500b 	ldr.w	r5, [lr, fp]
 800d53c:	fa2f f685 	sxtb16	r6, r5
 800d540:	fa2f f595 	sxtb16	r5, r5, ror #8
 800d544:	fb26 440a 	smlad	r4, r6, sl, r4
 800d548:	fb26 3309 	smlad	r3, r6, r9, r3
 800d54c:	fb25 4408 	smlad	r4, r5, r8, r4
 800d550:	fb25 3307 	smlad	r3, r5, r7, r3
 800d554:	f1bc 0c01 	subs.w	ip, ip, #1
 800d558:	d2d7      	bcs.n	800d50a <st_sssa8_ch_nn_mat_mult_nt_t+0x326>
 800d55a:	9918      	ldr	r1, [sp, #96]	; 0x60
 800d55c:	f8dd b018 	ldr.w	fp, [sp, #24]
 800d560:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 800d562:	448b      	add	fp, r1
 800d564:	9901      	ldr	r1, [sp, #4]
 800d566:	4429      	add	r1, r5
 800d568:	9101      	str	r1, [sp, #4]
 800d56a:	9904      	ldr	r1, [sp, #16]
 800d56c:	2900      	cmp	r1, #0
 800d56e:	d04f      	beq.n	800d610 <st_sssa8_ch_nn_mat_mult_nt_t+0x42c>
 800d570:	9f01      	ldr	r7, [sp, #4]
 800d572:	f9bb 6000 	ldrsh.w	r6, [fp]
 800d576:	f997 1000 	ldrsb.w	r1, [r7]
 800d57a:	f9bb 5002 	ldrsh.w	r5, [fp, #2]
 800d57e:	fb16 0001 	smlabb	r0, r6, r1, r0
 800d582:	fb15 2201 	smlabb	r2, r5, r1, r2
 800d586:	994d      	ldr	r1, [sp, #308]	; 0x134
 800d588:	5679      	ldrsb	r1, [r7, r1]
 800d58a:	fb16 4401 	smlabb	r4, r6, r1, r4
 800d58e:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 800d590:	fb15 3301 	smlabb	r3, r5, r1, r3
 800d594:	b3c6      	cbz	r6, 800d608 <st_sssa8_ch_nn_mat_mult_nt_t+0x424>
 800d596:	9e4d      	ldr	r6, [sp, #308]	; 0x134
 800d598:	f9bb 5006 	ldrsh.w	r5, [fp, #6]
 800d59c:	19b9      	adds	r1, r7, r6
 800d59e:	f9bb 6004 	ldrsh.w	r6, [fp, #4]
 800d5a2:	f991 1001 	ldrsb.w	r1, [r1, #1]
 800d5a6:	fb16 4401 	smlabb	r4, r6, r1, r4
 800d5aa:	fb15 3301 	smlabb	r3, r5, r1, r3
 800d5ae:	f997 1001 	ldrsb.w	r1, [r7, #1]
 800d5b2:	fb16 0001 	smlabb	r0, r6, r1, r0
 800d5b6:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800d5b8:	fb15 2201 	smlabb	r2, r5, r1, r2
 800d5bc:	1cb9      	adds	r1, r7, #2
 800d5be:	b31e      	cbz	r6, 800d608 <st_sssa8_ch_nn_mat_mult_nt_t+0x424>
 800d5c0:	9e4d      	ldr	r6, [sp, #308]	; 0x134
 800d5c2:	f9bb 500a 	ldrsh.w	r5, [fp, #10]
 800d5c6:	5789      	ldrsb	r1, [r1, r6]
 800d5c8:	f9bb 6008 	ldrsh.w	r6, [fp, #8]
 800d5cc:	fb15 3301 	smlabb	r3, r5, r1, r3
 800d5d0:	fb16 4401 	smlabb	r4, r6, r1, r4
 800d5d4:	f997 1002 	ldrsb.w	r1, [r7, #2]
 800d5d8:	fb15 2201 	smlabb	r2, r5, r1, r2
 800d5dc:	9d04      	ldr	r5, [sp, #16]
 800d5de:	fb16 0001 	smlabb	r0, r6, r1, r0
 800d5e2:	1cf9      	adds	r1, r7, #3
 800d5e4:	2d03      	cmp	r5, #3
 800d5e6:	d00f      	beq.n	800d608 <st_sssa8_ch_nn_mat_mult_nt_t+0x424>
 800d5e8:	9d4d      	ldr	r5, [sp, #308]	; 0x134
 800d5ea:	f9bb 600e 	ldrsh.w	r6, [fp, #14]
 800d5ee:	574d      	ldrsb	r5, [r1, r5]
 800d5f0:	f9bb 100c 	ldrsh.w	r1, [fp, #12]
 800d5f4:	fb16 3305 	smlabb	r3, r6, r5, r3
 800d5f8:	fb11 4405 	smlabb	r4, r1, r5, r4
 800d5fc:	f997 5003 	ldrsb.w	r5, [r7, #3]
 800d600:	fb11 0005 	smlabb	r0, r1, r5, r0
 800d604:	fb16 2205 	smlabb	r2, r6, r5, r2
 800d608:	9901      	ldr	r1, [sp, #4]
 800d60a:	9d04      	ldr	r5, [sp, #16]
 800d60c:	4429      	add	r1, r5
 800d60e:	9101      	str	r1, [sp, #4]
 800d610:	990c      	ldr	r1, [sp, #48]	; 0x30
 800d612:	2900      	cmp	r1, #0
 800d614:	f000 811c 	beq.w	800d850 <st_sssa8_ch_nn_mat_mult_nt_t+0x66c>
 800d618:	9f03      	ldr	r7, [sp, #12]
 800d61a:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800d61c:	1c79      	adds	r1, r7, #1
 800d61e:	2d00      	cmp	r5, #0
 800d620:	f000 8114 	beq.w	800d84c <st_sssa8_ch_nn_mat_mult_nt_t+0x668>
 800d624:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800d626:	1eb5      	subs	r5, r6, #2
 800d628:	2d00      	cmp	r5, #0
 800d62a:	f340 8176 	ble.w	800d91a <st_sssa8_ch_nn_mat_mult_nt_t+0x736>
 800d62e:	951d      	str	r5, [sp, #116]	; 0x74
 800d630:	9d03      	ldr	r5, [sp, #12]
 800d632:	9e08      	ldr	r6, [sp, #32]
 800d634:	3502      	adds	r5, #2
 800d636:	2e00      	cmp	r6, #0
 800d638:	f040 80ef 	bne.w	800d81a <st_sssa8_ch_nn_mat_mult_nt_t+0x636>
 800d63c:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800d63e:	0040      	lsls	r0, r0, #1
 800d640:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800d642:	0064      	lsls	r4, r4, #1
 800d644:	fb50 7006 	smmla	r0, r0, r6, r7
 800d648:	fb54 7406 	smmla	r4, r4, r6, r7
 800d64c:	9e1e      	ldr	r6, [sp, #120]	; 0x78
 800d64e:	4130      	asrs	r0, r6
 800d650:	f300 0007 	ssat	r0, #8, r0
 800d654:	9f03      	ldr	r7, [sp, #12]
 800d656:	4134      	asrs	r4, r6
 800d658:	7038      	strb	r0, [r7, #0]
 800d65a:	f304 0407 	ssat	r4, #8, r4
 800d65e:	700c      	strb	r4, [r1, #0]
 800d660:	984b      	ldr	r0, [sp, #300]	; 0x12c
 800d662:	9e03      	ldr	r6, [sp, #12]
 800d664:	9f07      	ldr	r7, [sp, #28]
 800d666:	1834      	adds	r4, r6, r0
 800d668:	1808      	adds	r0, r1, r0
 800d66a:	2f00      	cmp	r7, #0
 800d66c:	f040 80bd 	bne.w	800d7ea <st_sssa8_ch_nn_mat_mult_nt_t+0x606>
 800d670:	980d      	ldr	r0, [sp, #52]	; 0x34
 800d672:	0052      	lsls	r2, r2, #1
 800d674:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800d676:	005b      	lsls	r3, r3, #1
 800d678:	fb52 4200 	smmla	r2, r2, r0, r4
 800d67c:	fb53 4300 	smmla	r3, r3, r0, r4
 800d680:	981a      	ldr	r0, [sp, #104]	; 0x68
 800d682:	4102      	asrs	r2, r0
 800d684:	f302 0207 	ssat	r2, #8, r2
 800d688:	9c4b      	ldr	r4, [sp, #300]	; 0x12c
 800d68a:	4103      	asrs	r3, r0
 800d68c:	5532      	strb	r2, [r6, r4]
 800d68e:	f303 0307 	ssat	r3, #8, r3
 800d692:	550b      	strb	r3, [r1, r4]
 800d694:	9503      	str	r5, [sp, #12]
 800d696:	9b01      	ldr	r3, [sp, #4]
 800d698:	9a4d      	ldr	r2, [sp, #308]	; 0x134
 800d69a:	4413      	add	r3, r2
 800d69c:	9301      	str	r3, [sp, #4]
 800d69e:	9b05      	ldr	r3, [sp, #20]
 800d6a0:	3b01      	subs	r3, #1
 800d6a2:	9305      	str	r3, [sp, #20]
 800d6a4:	f47f ae80 	bne.w	800d3a8 <st_sssa8_ch_nn_mat_mult_nt_t+0x1c4>
 800d6a8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 800d6aa:	2b00      	cmp	r3, #0
 800d6ac:	f040 817f 	bne.w	800d9ae <st_sssa8_ch_nn_mat_mult_nt_t+0x7ca>
 800d6b0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800d6b2:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 800d6b4:	4413      	add	r3, r2
 800d6b6:	9329      	str	r3, [sp, #164]	; 0xa4
 800d6b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d6ba:	2b00      	cmp	r3, #0
 800d6bc:	f000 8271 	beq.w	800dba2 <st_sssa8_ch_nn_mat_mult_nt_t+0x9be>
 800d6c0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800d6c2:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 800d6c4:	4413      	add	r3, r2
 800d6c6:	9328      	str	r3, [sp, #160]	; 0xa0
 800d6c8:	9b53      	ldr	r3, [sp, #332]	; 0x14c
 800d6ca:	b11b      	cbz	r3, 800d6d4 <st_sssa8_ch_nn_mat_mult_nt_t+0x4f0>
 800d6cc:	9b52      	ldr	r3, [sp, #328]	; 0x148
 800d6ce:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 800d6d0:	4413      	add	r3, r2
 800d6d2:	9352      	str	r3, [sp, #328]	; 0x148
 800d6d4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800d6d6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800d6d8:	3208      	adds	r2, #8
 800d6da:	3304      	adds	r3, #4
 800d6dc:	9226      	str	r2, [sp, #152]	; 0x98
 800d6de:	9a25      	ldr	r2, [sp, #148]	; 0x94
 800d6e0:	9327      	str	r3, [sp, #156]	; 0x9c
 800d6e2:	3208      	adds	r2, #8
 800d6e4:	9225      	str	r2, [sp, #148]	; 0x94
 800d6e6:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800d6e8:	3208      	adds	r2, #8
 800d6ea:	9224      	str	r2, [sp, #144]	; 0x90
 800d6ec:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 800d6ee:	429a      	cmp	r2, r3
 800d6f0:	f47f adf7 	bne.w	800d2e2 <st_sssa8_ch_nn_mat_mult_nt_t+0xfe>
 800d6f4:	9a3c      	ldr	r2, [sp, #240]	; 0xf0
 800d6f6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 800d6f8:	fb02 3303 	mla	r3, r2, r3, r3
 800d6fc:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 800d6fe:	441a      	add	r2, r3
 800d700:	9234      	str	r2, [sp, #208]	; 0xd0
 800d702:	9b4c      	ldr	r3, [sp, #304]	; 0x130
 800d704:	07db      	lsls	r3, r3, #31
 800d706:	d56c      	bpl.n	800d7e2 <st_sssa8_ch_nn_mat_mult_nt_t+0x5fe>
 800d708:	9b4f      	ldr	r3, [sp, #316]	; 0x13c
 800d70a:	f013 0b01 	ands.w	fp, r3, #1
 800d70e:	d004      	beq.n	800d71a <st_sssa8_ch_nn_mat_mult_nt_t+0x536>
 800d710:	9b50      	ldr	r3, [sp, #320]	; 0x140
 800d712:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 800d714:	3303      	adds	r3, #3
 800d716:	441a      	add	r2, r3
 800d718:	9228      	str	r2, [sp, #160]	; 0xa0
 800d71a:	9b4a      	ldr	r3, [sp, #296]	; 0x128
 800d71c:	2b00      	cmp	r3, #0
 800d71e:	dd60      	ble.n	800d7e2 <st_sssa8_ch_nn_mat_mult_nt_t+0x5fe>
 800d720:	9b4f      	ldr	r3, [sp, #316]	; 0x13c
 800d722:	f06f 4440 	mvn.w	r4, #3221225472	; 0xc0000000
 800d726:	f06f 4800 	mvn.w	r8, #2147483648	; 0x80000000
 800d72a:	f8dd 9140 	ldr.w	r9, [sp, #320]	; 0x140
 800d72e:	f003 0c02 	and.w	ip, r3, #2
 800d732:	9b4c      	ldr	r3, [sp, #304]	; 0x130
 800d734:	2100      	movs	r1, #0
 800d736:	f04f 0a01 	mov.w	sl, #1
 800d73a:	441c      	add	r4, r3
 800d73c:	9b3d      	ldr	r3, [sp, #244]	; 0xf4
 800d73e:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 800d740:	eb03 0e84 	add.w	lr, r3, r4, lsl #2
 800d744:	9b48      	ldr	r3, [sp, #288]	; 0x120
 800d746:	f8cd b00c 	str.w	fp, [sp, #12]
 800d74a:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800d74e:	9b51      	ldr	r3, [sp, #324]	; 0x144
 800d750:	f8cd 9010 	str.w	r9, [sp, #16]
 800d754:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800d758:	9b4c      	ldr	r3, [sp, #304]	; 0x130
 800d75a:	4498      	add	r8, r3
 800d75c:	9b49      	ldr	r3, [sp, #292]	; 0x124
 800d75e:	e9cd ec01 	strd	lr, ip, [sp, #4]
 800d762:	eb03 0848 	add.w	r8, r3, r8, lsl #1
 800d766:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800d768:	e9dd e24d 	ldrd	lr, r2, [sp, #308]	; 0x134
 800d76c:	9d01      	ldr	r5, [sp, #4]
 800d76e:	f1be 0f00 	cmp.w	lr, #0
 800d772:	682f      	ldr	r7, [r5, #0]
 800d774:	dd0d      	ble.n	800d792 <st_sssa8_ch_nn_mat_mult_nt_t+0x5ae>
 800d776:	9d34      	ldr	r5, [sp, #208]	; 0xd0
 800d778:	eb03 0b0e 	add.w	fp, r3, lr
 800d77c:	f105 3cff 	add.w	ip, r5, #4294967295
 800d780:	f913 5b01 	ldrsb.w	r5, [r3], #1
 800d784:	f91c 9f01 	ldrsb.w	r9, [ip, #1]!
 800d788:	1aad      	subs	r5, r5, r2
 800d78a:	459b      	cmp	fp, r3
 800d78c:	fb09 7705 	mla	r7, r9, r5, r7
 800d790:	d1f6      	bne.n	800d780 <st_sssa8_ch_nn_mat_mult_nt_t+0x59c>
 800d792:	f9b8 c000 	ldrsh.w	ip, [r8]
 800d796:	f1bc 0f15 	cmp.w	ip, #21
 800d79a:	f340 8394 	ble.w	800dec6 <st_sssa8_ch_nn_mat_mult_nt_t+0xce2>
 800d79e:	f1ac 0902 	sub.w	r9, ip, #2
 800d7a2:	f10c 3cff 	add.w	ip, ip, #4294967295
 800d7a6:	6805      	ldr	r5, [r0, #0]
 800d7a8:	fa0a f909 	lsl.w	r9, sl, r9
 800d7ac:	fb57 9505 	smmla	r5, r7, r5, r9
 800d7b0:	fa45 fc0c 	asr.w	ip, r5, ip
 800d7b4:	6825      	ldr	r5, [r4, #0]
 800d7b6:	4465      	add	r5, ip
 800d7b8:	f305 0507 	ssat	r5, #8, r5
 800d7bc:	7035      	strb	r5, [r6, #0]
 800d7be:	9d02      	ldr	r5, [sp, #8]
 800d7c0:	2d00      	cmp	r5, #0
 800d7c2:	f000 837d 	beq.w	800dec0 <st_sssa8_ch_nn_mat_mult_nt_t+0xcdc>
 800d7c6:	9d03      	ldr	r5, [sp, #12]
 800d7c8:	b135      	cbz	r5, 800d7d8 <st_sssa8_ch_nn_mat_mult_nt_t+0x5f4>
 800d7ca:	9d04      	ldr	r5, [sp, #16]
 800d7cc:	3d01      	subs	r5, #1
 800d7ce:	9504      	str	r5, [sp, #16]
 800d7d0:	d102      	bne.n	800d7d8 <st_sssa8_ch_nn_mat_mult_nt_t+0x5f4>
 800d7d2:	9d50      	ldr	r5, [sp, #320]	; 0x140
 800d7d4:	3602      	adds	r6, #2
 800d7d6:	9504      	str	r5, [sp, #16]
 800d7d8:	3601      	adds	r6, #1
 800d7da:	3101      	adds	r1, #1
 800d7dc:	9d4a      	ldr	r5, [sp, #296]	; 0x128
 800d7de:	428d      	cmp	r5, r1
 800d7e0:	d1c4      	bne.n	800d76c <st_sssa8_ch_nn_mat_mult_nt_t+0x588>
 800d7e2:	2000      	movs	r0, #0
 800d7e4:	b03f      	add	sp, #252	; 0xfc
 800d7e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d7ea:	4639      	mov	r1, r7
 800d7ec:	3101      	adds	r1, #1
 800d7ee:	f000 80b4 	beq.w	800d95a <st_sssa8_ch_nn_mat_mult_nt_t+0x776>
 800d7f2:	9f23      	ldr	r7, [sp, #140]	; 0x8c
 800d7f4:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d7f6:	9e21      	ldr	r6, [sp, #132]	; 0x84
 800d7f8:	fb52 6201 	smmla	r2, r2, r1, r6
 800d7fc:	fb53 6301 	smmla	r3, r3, r1, r6
 800d800:	413a      	asrs	r2, r7
 800d802:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800d804:	440a      	add	r2, r1
 800d806:	f302 0207 	ssat	r2, #8, r2
 800d80a:	413b      	asrs	r3, r7
 800d80c:	7022      	strb	r2, [r4, #0]
 800d80e:	440b      	add	r3, r1
 800d810:	f303 0307 	ssat	r3, #8, r3
 800d814:	7003      	strb	r3, [r0, #0]
 800d816:	9503      	str	r5, [sp, #12]
 800d818:	e73d      	b.n	800d696 <st_sssa8_ch_nn_mat_mult_nt_t+0x4b2>
 800d81a:	3601      	adds	r6, #1
 800d81c:	f000 8086 	beq.w	800d92c <st_sssa8_ch_nn_mat_mult_nt_t+0x748>
 800d820:	9f22      	ldr	r7, [sp, #136]	; 0x88
 800d822:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800d824:	fb50 7006 	smmla	r0, r0, r6, r7
 800d828:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 800d82a:	4130      	asrs	r0, r6
 800d82c:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800d82e:	fb54 7406 	smmla	r4, r4, r6, r7
 800d832:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800d834:	4438      	add	r0, r7
 800d836:	f300 0007 	ssat	r0, #8, r0
 800d83a:	9e03      	ldr	r6, [sp, #12]
 800d83c:	7030      	strb	r0, [r6, #0]
 800d83e:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 800d840:	4134      	asrs	r4, r6
 800d842:	19e0      	adds	r0, r4, r7
 800d844:	f300 0007 	ssat	r0, #8, r0
 800d848:	7008      	strb	r0, [r1, #0]
 800d84a:	e709      	b.n	800d660 <st_sssa8_ch_nn_mat_mult_nt_t+0x47c>
 800d84c:	463d      	mov	r5, r7
 800d84e:	e6f0      	b.n	800d632 <st_sssa8_ch_nn_mat_mult_nt_t+0x44e>
 800d850:	9e03      	ldr	r6, [sp, #12]
 800d852:	994c      	ldr	r1, [sp, #304]	; 0x130
 800d854:	9d4c      	ldr	r5, [sp, #304]	; 0x130
 800d856:	9f08      	ldr	r7, [sp, #32]
 800d858:	1871      	adds	r1, r6, r1
 800d85a:	eb06 0c45 	add.w	ip, r6, r5, lsl #1
 800d85e:	bb47      	cbnz	r7, 800d8b2 <st_sssa8_ch_nn_mat_mult_nt_t+0x6ce>
 800d860:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800d862:	0065      	lsls	r5, r4, #1
 800d864:	0040      	lsls	r0, r0, #1
 800d866:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800d868:	fb50 4007 	smmla	r0, r0, r7, r4
 800d86c:	fb55 4407 	smmla	r4, r5, r7, r4
 800d870:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800d872:	4138      	asrs	r0, r7
 800d874:	f300 0007 	ssat	r0, #8, r0
 800d878:	7030      	strb	r0, [r6, #0]
 800d87a:	413c      	asrs	r4, r7
 800d87c:	f304 0407 	ssat	r4, #8, r4
 800d880:	984c      	ldr	r0, [sp, #304]	; 0x130
 800d882:	5434      	strb	r4, [r6, r0]
 800d884:	9807      	ldr	r0, [sp, #28]
 800d886:	bb78      	cbnz	r0, 800d8e8 <st_sssa8_ch_nn_mat_mult_nt_t+0x704>
 800d888:	980d      	ldr	r0, [sp, #52]	; 0x34
 800d88a:	0052      	lsls	r2, r2, #1
 800d88c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800d88e:	005b      	lsls	r3, r3, #1
 800d890:	fb52 4200 	smmla	r2, r2, r0, r4
 800d894:	fb53 4300 	smmla	r3, r3, r0, r4
 800d898:	981a      	ldr	r0, [sp, #104]	; 0x68
 800d89a:	4102      	asrs	r2, r0
 800d89c:	f302 0207 	ssat	r2, #8, r2
 800d8a0:	9c03      	ldr	r4, [sp, #12]
 800d8a2:	4103      	asrs	r3, r0
 800d8a4:	7062      	strb	r2, [r4, #1]
 800d8a6:	f303 0307 	ssat	r3, #8, r3
 800d8aa:	704b      	strb	r3, [r1, #1]
 800d8ac:	f8cd c00c 	str.w	ip, [sp, #12]
 800d8b0:	e6f1      	b.n	800d696 <st_sssa8_ch_nn_mat_mult_nt_t+0x4b2>
 800d8b2:	463e      	mov	r6, r7
 800d8b4:	3601      	adds	r6, #1
 800d8b6:	f000 82ac 	beq.w	800de12 <st_sssa8_ch_nn_mat_mult_nt_t+0xc2e>
 800d8ba:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 800d8bc:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800d8be:	9f22      	ldr	r7, [sp, #136]	; 0x88
 800d8c0:	fb50 7006 	smmla	r0, r0, r6, r7
 800d8c4:	fb54 7406 	smmla	r4, r4, r6, r7
 800d8c8:	4128      	asrs	r0, r5
 800d8ca:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800d8cc:	4430      	add	r0, r6
 800d8ce:	f300 0007 	ssat	r0, #8, r0
 800d8d2:	9f03      	ldr	r7, [sp, #12]
 800d8d4:	7038      	strb	r0, [r7, #0]
 800d8d6:	fa44 f005 	asr.w	r0, r4, r5
 800d8da:	4430      	add	r0, r6
 800d8dc:	f300 0007 	ssat	r0, #8, r0
 800d8e0:	7008      	strb	r0, [r1, #0]
 800d8e2:	9807      	ldr	r0, [sp, #28]
 800d8e4:	2800      	cmp	r0, #0
 800d8e6:	d0cf      	beq.n	800d888 <st_sssa8_ch_nn_mat_mult_nt_t+0x6a4>
 800d8e8:	3001      	adds	r0, #1
 800d8ea:	f000 82a9 	beq.w	800de40 <st_sssa8_ch_nn_mat_mult_nt_t+0xc5c>
 800d8ee:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 800d8f0:	980d      	ldr	r0, [sp, #52]	; 0x34
 800d8f2:	9c21      	ldr	r4, [sp, #132]	; 0x84
 800d8f4:	fb52 4200 	smmla	r2, r2, r0, r4
 800d8f8:	fb53 4300 	smmla	r3, r3, r0, r4
 800d8fc:	412a      	asrs	r2, r5
 800d8fe:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d900:	4402      	add	r2, r0
 800d902:	f302 0207 	ssat	r2, #8, r2
 800d906:	9c03      	ldr	r4, [sp, #12]
 800d908:	412b      	asrs	r3, r5
 800d90a:	7062      	strb	r2, [r4, #1]
 800d90c:	4403      	add	r3, r0
 800d90e:	f303 0307 	ssat	r3, #8, r3
 800d912:	704b      	strb	r3, [r1, #1]
 800d914:	f8cd c00c 	str.w	ip, [sp, #12]
 800d918:	e6bd      	b.n	800d696 <st_sssa8_ch_nn_mat_mult_nt_t+0x4b2>
 800d91a:	f1c6 0602 	rsb	r6, r6, #2
 800d91e:	eb01 0146 	add.w	r1, r1, r6, lsl #1
 800d922:	9e50      	ldr	r6, [sp, #320]	; 0x140
 800d924:	1975      	adds	r5, r6, r5
 800d926:	951d      	str	r5, [sp, #116]	; 0x74
 800d928:	1cbd      	adds	r5, r7, #2
 800d92a:	e682      	b.n	800d632 <st_sssa8_ch_nn_mat_mult_nt_t+0x44e>
 800d92c:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 800d92e:	40b0      	lsls	r0, r6
 800d930:	f300 001f 	ssat	r0, #32, r0
 800d934:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800d936:	fb50 f017 	smmulr	r0, r0, r7
 800d93a:	40b4      	lsls	r4, r6
 800d93c:	f304 041f 	ssat	r4, #32, r4
 800d940:	fb54 f417 	smmulr	r4, r4, r7
 800d944:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800d946:	4430      	add	r0, r6
 800d948:	f300 0007 	ssat	r0, #8, r0
 800d94c:	9f03      	ldr	r7, [sp, #12]
 800d94e:	7038      	strb	r0, [r7, #0]
 800d950:	1930      	adds	r0, r6, r4
 800d952:	f300 0007 	ssat	r0, #8, r0
 800d956:	7008      	strb	r0, [r1, #0]
 800d958:	e682      	b.n	800d660 <st_sssa8_ch_nn_mat_mult_nt_t+0x47c>
 800d95a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800d95c:	408a      	lsls	r2, r1
 800d95e:	f302 021f 	ssat	r2, #32, r2
 800d962:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 800d964:	fb52 f216 	smmulr	r2, r2, r6
 800d968:	408b      	lsls	r3, r1
 800d96a:	f303 031f 	ssat	r3, #32, r3
 800d96e:	fb53 f316 	smmulr	r3, r3, r6
 800d972:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800d974:	440a      	add	r2, r1
 800d976:	f302 0207 	ssat	r2, #8, r2
 800d97a:	440b      	add	r3, r1
 800d97c:	7022      	strb	r2, [r4, #0]
 800d97e:	f303 0307 	ssat	r3, #8, r3
 800d982:	7003      	strb	r3, [r0, #0]
 800d984:	9503      	str	r5, [sp, #12]
 800d986:	e686      	b.n	800d696 <st_sssa8_ch_nn_mat_mult_nt_t+0x4b2>
 800d988:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d98a:	980a      	ldr	r0, [sp, #40]	; 0x28
 800d98c:	f8dd b148 	ldr.w	fp, [sp, #328]	; 0x148
 800d990:	4613      	mov	r3, r2
 800d992:	4604      	mov	r4, r0
 800d994:	e5ae      	b.n	800d4f4 <st_sssa8_ch_nn_mat_mult_nt_t+0x310>
 800d996:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800d998:	982f      	ldr	r0, [sp, #188]	; 0xbc
 800d99a:	9303      	str	r3, [sp, #12]
 800d99c:	2800      	cmp	r0, #0
 800d99e:	f47f ace5 	bne.w	800d36c <st_sssa8_ch_nn_mat_mult_nt_t+0x188>
 800d9a2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800d9a4:	9301      	str	r3, [sp, #4]
 800d9a6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 800d9a8:	2b00      	cmp	r3, #0
 800d9aa:	f43f ae81 	beq.w	800d6b0 <st_sssa8_ch_nn_mat_mult_nt_t+0x4cc>
 800d9ae:	9b37      	ldr	r3, [sp, #220]	; 0xdc
 800d9b0:	2b00      	cmp	r3, #0
 800d9b2:	f340 82cc 	ble.w	800df4e <st_sssa8_ch_nn_mat_mult_nt_t+0xd6a>
 800d9b6:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 800d9b8:	9801      	ldr	r0, [sp, #4]
 800d9ba:	e9dd 520a 	ldrd	r5, r2, [sp, #40]	; 0x28
 800d9be:	18c7      	adds	r7, r0, r3
 800d9c0:	9b52      	ldr	r3, [sp, #328]	; 0x148
 800d9c2:	6801      	ldr	r1, [r0, #0]
 800d9c4:	fa2f f481 	sxtb16	r4, r1
 800d9c8:	fa2f f191 	sxtb16	r1, r1, ror #8
 800d9cc:	681e      	ldr	r6, [r3, #0]
 800d9ce:	fb24 5506 	smlad	r5, r4, r6, r5
 800d9d2:	685e      	ldr	r6, [r3, #4]
 800d9d4:	fb21 5606 	smlad	r6, r1, r6, r5
 800d9d8:	689d      	ldr	r5, [r3, #8]
 800d9da:	fb24 2205 	smlad	r2, r4, r5, r2
 800d9de:	68dc      	ldr	r4, [r3, #12]
 800d9e0:	fb21 2104 	smlad	r1, r1, r4, r2
 800d9e4:	6842      	ldr	r2, [r0, #4]
 800d9e6:	fa2f f482 	sxtb16	r4, r2
 800d9ea:	fa2f f292 	sxtb16	r2, r2, ror #8
 800d9ee:	691d      	ldr	r5, [r3, #16]
 800d9f0:	fb24 6505 	smlad	r5, r4, r5, r6
 800d9f4:	695e      	ldr	r6, [r3, #20]
 800d9f6:	fb22 5606 	smlad	r6, r2, r6, r5
 800d9fa:	699d      	ldr	r5, [r3, #24]
 800d9fc:	fb24 1105 	smlad	r1, r4, r5, r1
 800da00:	69dc      	ldr	r4, [r3, #28]
 800da02:	fb22 1104 	smlad	r1, r2, r4, r1
 800da06:	6882      	ldr	r2, [r0, #8]
 800da08:	fa2f f482 	sxtb16	r4, r2
 800da0c:	fa2f f292 	sxtb16	r2, r2, ror #8
 800da10:	6a1d      	ldr	r5, [r3, #32]
 800da12:	fb24 6505 	smlad	r5, r4, r5, r6
 800da16:	6a5e      	ldr	r6, [r3, #36]	; 0x24
 800da18:	fb22 5606 	smlad	r6, r2, r6, r5
 800da1c:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800da1e:	fb24 1105 	smlad	r1, r4, r5, r1
 800da22:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800da24:	fb22 1104 	smlad	r1, r2, r4, r1
 800da28:	68c2      	ldr	r2, [r0, #12]
 800da2a:	3340      	adds	r3, #64	; 0x40
 800da2c:	f853 5c10 	ldr.w	r5, [r3, #-16]
 800da30:	3010      	adds	r0, #16
 800da32:	f853 8c0c 	ldr.w	r8, [r3, #-12]
 800da36:	f853 ec08 	ldr.w	lr, [r3, #-8]
 800da3a:	f853 cc04 	ldr.w	ip, [r3, #-4]
 800da3e:	fa2f f482 	sxtb16	r4, r2
 800da42:	fa2f f292 	sxtb16	r2, r2, ror #8
 800da46:	fb24 6505 	smlad	r5, r4, r5, r6
 800da4a:	fb22 5508 	smlad	r5, r2, r8, r5
 800da4e:	fb24 110e 	smlad	r1, r4, lr, r1
 800da52:	fb22 120c 	smlad	r2, r2, ip, r1
 800da56:	4287      	cmp	r7, r0
 800da58:	d1b3      	bne.n	800d9c2 <st_sssa8_ch_nn_mat_mult_nt_t+0x7de>
 800da5a:	9b52      	ldr	r3, [sp, #328]	; 0x148
 800da5c:	f8dd e0c8 	ldr.w	lr, [sp, #200]	; 0xc8
 800da60:	9001      	str	r0, [sp, #4]
 800da62:	e9cd 520a 	strd	r5, r2, [sp, #40]	; 0x28
 800da66:	9a38      	ldr	r2, [sp, #224]	; 0xe0
 800da68:	eb03 0c02 	add.w	ip, r3, r2
 800da6c:	9b39      	ldr	r3, [sp, #228]	; 0xe4
 800da6e:	459e      	cmp	lr, r3
 800da70:	f280 8275 	bge.w	800df5e <st_sssa8_ch_nn_mat_mult_nt_t+0xd7a>
 800da74:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800da76:	9c01      	ldr	r4, [sp, #4]
 800da78:	eba3 090e 	sub.w	r9, r3, lr
 800da7c:	4663      	mov	r3, ip
 800da7e:	f8cd c004 	str.w	ip, [sp, #4]
 800da82:	ea4f 0999 	mov.w	r9, r9, lsr #2
 800da86:	f109 0801 	add.w	r8, r9, #1
 800da8a:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 800da8e:	eb04 0788 	add.w	r7, r4, r8, lsl #2
 800da92:	6818      	ldr	r0, [r3, #0]
 800da94:	3310      	adds	r3, #16
 800da96:	f854 2b04 	ldr.w	r2, [r4], #4
 800da9a:	f853 bc0c 	ldr.w	fp, [r3, #-12]
 800da9e:	f853 ac08 	ldr.w	sl, [r3, #-8]
 800daa2:	f853 cc04 	ldr.w	ip, [r3, #-4]
 800daa6:	fa2f f182 	sxtb16	r1, r2
 800daaa:	fa2f f292 	sxtb16	r2, r2, ror #8
 800daae:	fb21 5500 	smlad	r5, r1, r0, r5
 800dab2:	fb22 550b 	smlad	r5, r2, fp, r5
 800dab6:	fb21 660a 	smlad	r6, r1, sl, r6
 800daba:	fb22 660c 	smlad	r6, r2, ip, r6
 800dabe:	42bc      	cmp	r4, r7
 800dac0:	d1e7      	bne.n	800da92 <st_sssa8_ch_nn_mat_mult_nt_t+0x8ae>
 800dac2:	f8dd c004 	ldr.w	ip, [sp, #4]
 800dac6:	f10e 0e04 	add.w	lr, lr, #4
 800daca:	eb0c 1c08 	add.w	ip, ip, r8, lsl #4
 800dace:	eb0e 0e89 	add.w	lr, lr, r9, lsl #2
 800dad2:	e9cd 560a 	strd	r5, r6, [sp, #40]	; 0x28
 800dad6:	9b4d      	ldr	r3, [sp, #308]	; 0x134
 800dad8:	4573      	cmp	r3, lr
 800dada:	dd40      	ble.n	800db5e <st_sssa8_ch_nn_mat_mult_nt_t+0x97a>
 800dadc:	f997 3000 	ldrsb.w	r3, [r7]
 800dae0:	f8bc 2000 	ldrh.w	r2, [ip]
 800dae4:	990a      	ldr	r1, [sp, #40]	; 0x28
 800dae6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800dae8:	fb12 1103 	smlabb	r1, r2, r3, r1
 800daec:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 800daf0:	fb12 0003 	smlabb	r0, r2, r3, r0
 800daf4:	f10e 0301 	add.w	r3, lr, #1
 800daf8:	9a4d      	ldr	r2, [sp, #308]	; 0x134
 800dafa:	910a      	str	r1, [sp, #40]	; 0x28
 800dafc:	429a      	cmp	r2, r3
 800dafe:	900b      	str	r0, [sp, #44]	; 0x2c
 800db00:	dd2d      	ble.n	800db5e <st_sssa8_ch_nn_mat_mult_nt_t+0x97a>
 800db02:	f997 3001 	ldrsb.w	r3, [r7, #1]
 800db06:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800db0a:	fb12 1103 	smlabb	r1, r2, r3, r1
 800db0e:	f8bc 2006 	ldrh.w	r2, [ip, #6]
 800db12:	fb12 0003 	smlabb	r0, r2, r3, r0
 800db16:	f10e 0302 	add.w	r3, lr, #2
 800db1a:	9a4d      	ldr	r2, [sp, #308]	; 0x134
 800db1c:	910a      	str	r1, [sp, #40]	; 0x28
 800db1e:	429a      	cmp	r2, r3
 800db20:	900b      	str	r0, [sp, #44]	; 0x2c
 800db22:	dd1c      	ble.n	800db5e <st_sssa8_ch_nn_mat_mult_nt_t+0x97a>
 800db24:	f997 3002 	ldrsb.w	r3, [r7, #2]
 800db28:	f10e 0e03 	add.w	lr, lr, #3
 800db2c:	f8bc 2008 	ldrh.w	r2, [ip, #8]
 800db30:	fb12 1103 	smlabb	r1, r2, r3, r1
 800db34:	f8bc 200a 	ldrh.w	r2, [ip, #10]
 800db38:	fb12 0003 	smlabb	r0, r2, r3, r0
 800db3c:	9b4d      	ldr	r3, [sp, #308]	; 0x134
 800db3e:	910a      	str	r1, [sp, #40]	; 0x28
 800db40:	4573      	cmp	r3, lr
 800db42:	900b      	str	r0, [sp, #44]	; 0x2c
 800db44:	dd0b      	ble.n	800db5e <st_sssa8_ch_nn_mat_mult_nt_t+0x97a>
 800db46:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800db4a:	f8bc 200c 	ldrh.w	r2, [ip, #12]
 800db4e:	fb12 1203 	smlabb	r2, r2, r3, r1
 800db52:	920a      	str	r2, [sp, #40]	; 0x28
 800db54:	f8bc 200e 	ldrh.w	r2, [ip, #14]
 800db58:	fb12 0303 	smlabb	r3, r2, r3, r0
 800db5c:	930b      	str	r3, [sp, #44]	; 0x2c
 800db5e:	9b3b      	ldr	r3, [sp, #236]	; 0xec
 800db60:	9a03      	ldr	r2, [sp, #12]
 800db62:	18d1      	adds	r1, r2, r3
 800db64:	9b08      	ldr	r3, [sp, #32]
 800db66:	2b00      	cmp	r3, #0
 800db68:	f040 8196 	bne.w	800de98 <st_sssa8_ch_nn_mat_mult_nt_t+0xcb4>
 800db6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800db6e:	9809      	ldr	r0, [sp, #36]	; 0x24
 800db70:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800db72:	005b      	lsls	r3, r3, #1
 800db74:	fb53 4300 	smmla	r3, r3, r0, r4
 800db78:	981e      	ldr	r0, [sp, #120]	; 0x78
 800db7a:	4103      	asrs	r3, r0
 800db7c:	f303 0307 	ssat	r3, #8, r3
 800db80:	7013      	strb	r3, [r2, #0]
 800db82:	9b07      	ldr	r3, [sp, #28]
 800db84:	2b00      	cmp	r3, #0
 800db86:	f040 8174 	bne.w	800de72 <st_sssa8_ch_nn_mat_mult_nt_t+0xc8e>
 800db8a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800db8c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800db8e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800db90:	005b      	lsls	r3, r3, #1
 800db92:	fb53 0302 	smmla	r3, r3, r2, r0
 800db96:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800db98:	4113      	asrs	r3, r2
 800db9a:	f303 0307 	ssat	r3, #8, r3
 800db9e:	700b      	strb	r3, [r1, #0]
 800dba0:	e586      	b.n	800d6b0 <st_sssa8_ch_nn_mat_mult_nt_t+0x4cc>
 800dba2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800dba4:	3302      	adds	r3, #2
 800dba6:	9328      	str	r3, [sp, #160]	; 0xa0
 800dba8:	e58e      	b.n	800d6c8 <st_sssa8_ch_nn_mat_mult_nt_t+0x4e4>
 800dbaa:	2301      	movs	r3, #1
 800dbac:	9307      	str	r3, [sp, #28]
 800dbae:	9b53      	ldr	r3, [sp, #332]	; 0x14c
 800dbb0:	2b00      	cmp	r3, #0
 800dbb2:	f47f abc0 	bne.w	800d336 <st_sssa8_ch_nn_mat_mult_nt_t+0x152>
 800dbb6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800dbb8:	9a4d      	ldr	r2, [sp, #308]	; 0x134
 800dbba:	eb03 0a02 	add.w	sl, r3, r2
 800dbbe:	9b37      	ldr	r3, [sp, #220]	; 0xdc
 800dbc0:	2b00      	cmp	r3, #0
 800dbc2:	f340 81d0 	ble.w	800df66 <st_sssa8_ch_nn_mat_mult_nt_t+0xd82>
 800dbc6:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 800dbc8:	4650      	mov	r0, sl
 800dbca:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800dbcc:	18d4      	adds	r4, r2, r3
 800dbce:	9b52      	ldr	r3, [sp, #328]	; 0x148
 800dbd0:	6811      	ldr	r1, [r2, #0]
 800dbd2:	3210      	adds	r2, #16
 800dbd4:	6805      	ldr	r5, [r0, #0]
 800dbd6:	3340      	adds	r3, #64	; 0x40
 800dbd8:	fa2f f681 	sxtb16	r6, r1
 800dbdc:	3010      	adds	r0, #16
 800dbde:	f843 6c40 	str.w	r6, [r3, #-64]
 800dbe2:	ea4f 2131 	mov.w	r1, r1, ror #8
 800dbe6:	42a2      	cmp	r2, r4
 800dbe8:	fa2f f181 	sxtb16	r1, r1
 800dbec:	f843 1c3c 	str.w	r1, [r3, #-60]
 800dbf0:	ea4f 2135 	mov.w	r1, r5, ror #8
 800dbf4:	fa2f f585 	sxtb16	r5, r5
 800dbf8:	fa2f f181 	sxtb16	r1, r1
 800dbfc:	f843 5c38 	str.w	r5, [r3, #-56]
 800dc00:	f843 1c34 	str.w	r1, [r3, #-52]
 800dc04:	f850 1c0c 	ldr.w	r1, [r0, #-12]
 800dc08:	f852 5c0c 	ldr.w	r5, [r2, #-12]
 800dc0c:	ea4f 2631 	mov.w	r6, r1, ror #8
 800dc10:	fa2f f181 	sxtb16	r1, r1
 800dc14:	fa2f f686 	sxtb16	r6, r6
 800dc18:	f843 1c28 	str.w	r1, [r3, #-40]
 800dc1c:	f843 6c24 	str.w	r6, [r3, #-36]
 800dc20:	ea4f 2635 	mov.w	r6, r5, ror #8
 800dc24:	fa2f f585 	sxtb16	r5, r5
 800dc28:	f843 5c30 	str.w	r5, [r3, #-48]
 800dc2c:	fa2f f586 	sxtb16	r5, r6
 800dc30:	f843 5c2c 	str.w	r5, [r3, #-44]
 800dc34:	f852 5c08 	ldr.w	r5, [r2, #-8]
 800dc38:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800dc3c:	ea4f 2635 	mov.w	r6, r5, ror #8
 800dc40:	fa2f f585 	sxtb16	r5, r5
 800dc44:	fa2f f686 	sxtb16	r6, r6
 800dc48:	f843 5c20 	str.w	r5, [r3, #-32]
 800dc4c:	ea4f 2531 	mov.w	r5, r1, ror #8
 800dc50:	f843 6c1c 	str.w	r6, [r3, #-28]
 800dc54:	fa2f f585 	sxtb16	r5, r5
 800dc58:	fa2f f181 	sxtb16	r1, r1
 800dc5c:	f843 5c14 	str.w	r5, [r3, #-20]
 800dc60:	f843 1c18 	str.w	r1, [r3, #-24]
 800dc64:	f852 5c04 	ldr.w	r5, [r2, #-4]
 800dc68:	f850 1c04 	ldr.w	r1, [r0, #-4]
 800dc6c:	ea4f 2635 	mov.w	r6, r5, ror #8
 800dc70:	fa2f f585 	sxtb16	r5, r5
 800dc74:	fa2f f686 	sxtb16	r6, r6
 800dc78:	f843 5c10 	str.w	r5, [r3, #-16]
 800dc7c:	ea4f 2531 	mov.w	r5, r1, ror #8
 800dc80:	f843 6c0c 	str.w	r6, [r3, #-12]
 800dc84:	fa2f f585 	sxtb16	r5, r5
 800dc88:	fa2f f181 	sxtb16	r1, r1
 800dc8c:	f843 5c04 	str.w	r5, [r3, #-4]
 800dc90:	f843 1c08 	str.w	r1, [r3, #-8]
 800dc94:	d19c      	bne.n	800dbd0 <st_sssa8_ch_nn_mat_mult_nt_t+0x9ec>
 800dc96:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 800dc98:	9a52      	ldr	r2, [sp, #328]	; 0x148
 800dc9a:	9938      	ldr	r1, [sp, #224]	; 0xe0
 800dc9c:	449a      	add	sl, r3
 800dc9e:	469c      	mov	ip, r3
 800dca0:	1857      	adds	r7, r2, r1
 800dca2:	9b39      	ldr	r3, [sp, #228]	; 0xe4
 800dca4:	4563      	cmp	r3, ip
 800dca6:	f340 815c 	ble.w	800df62 <st_sssa8_ch_nn_mat_mult_nt_t+0xd7e>
 800dcaa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800dcac:	463a      	mov	r2, r7
 800dcae:	4650      	mov	r0, sl
 800dcb0:	eba3 030c 	sub.w	r3, r3, ip
 800dcb4:	ea4f 0893 	mov.w	r8, r3, lsr #2
 800dcb8:	f108 0e01 	add.w	lr, r8, #1
 800dcbc:	ea4f 098e 	mov.w	r9, lr, lsl #2
 800dcc0:	eb04 068e 	add.w	r6, r4, lr, lsl #2
 800dcc4:	f854 3b04 	ldr.w	r3, [r4], #4
 800dcc8:	3210      	adds	r2, #16
 800dcca:	f850 1b04 	ldr.w	r1, [r0], #4
 800dcce:	fa2f f583 	sxtb16	r5, r3
 800dcd2:	42a6      	cmp	r6, r4
 800dcd4:	ea4f 2333 	mov.w	r3, r3, ror #8
 800dcd8:	fa2f f383 	sxtb16	r3, r3
 800dcdc:	f842 3c0c 	str.w	r3, [r2, #-12]
 800dce0:	ea4f 2331 	mov.w	r3, r1, ror #8
 800dce4:	fa2f f181 	sxtb16	r1, r1
 800dce8:	f842 5c10 	str.w	r5, [r2, #-16]
 800dcec:	f842 1c08 	str.w	r1, [r2, #-8]
 800dcf0:	fa2f f383 	sxtb16	r3, r3
 800dcf4:	f842 3c04 	str.w	r3, [r2, #-4]
 800dcf8:	d1e4      	bne.n	800dcc4 <st_sssa8_ch_nn_mat_mult_nt_t+0xae0>
 800dcfa:	f10c 0304 	add.w	r3, ip, #4
 800dcfe:	44ca      	add	sl, r9
 800dd00:	eb07 170e 	add.w	r7, r7, lr, lsl #4
 800dd04:	eb03 0c88 	add.w	ip, r3, r8, lsl #2
 800dd08:	9b4d      	ldr	r3, [sp, #308]	; 0x134
 800dd0a:	4563      	cmp	r3, ip
 800dd0c:	f77f ab13 	ble.w	800d336 <st_sssa8_ch_nn_mat_mult_nt_t+0x152>
 800dd10:	f996 3000 	ldrsb.w	r3, [r6]
 800dd14:	803b      	strh	r3, [r7, #0]
 800dd16:	f10c 0301 	add.w	r3, ip, #1
 800dd1a:	f99a 2000 	ldrsb.w	r2, [sl]
 800dd1e:	807a      	strh	r2, [r7, #2]
 800dd20:	9a4d      	ldr	r2, [sp, #308]	; 0x134
 800dd22:	4293      	cmp	r3, r2
 800dd24:	f6bf ab07 	bge.w	800d336 <st_sssa8_ch_nn_mat_mult_nt_t+0x152>
 800dd28:	f996 3001 	ldrsb.w	r3, [r6, #1]
 800dd2c:	80bb      	strh	r3, [r7, #4]
 800dd2e:	f10c 0302 	add.w	r3, ip, #2
 800dd32:	f99a 2001 	ldrsb.w	r2, [sl, #1]
 800dd36:	80fa      	strh	r2, [r7, #6]
 800dd38:	9a4d      	ldr	r2, [sp, #308]	; 0x134
 800dd3a:	4293      	cmp	r3, r2
 800dd3c:	f6bf aafb 	bge.w	800d336 <st_sssa8_ch_nn_mat_mult_nt_t+0x152>
 800dd40:	f996 3002 	ldrsb.w	r3, [r6, #2]
 800dd44:	f10c 0c03 	add.w	ip, ip, #3
 800dd48:	813b      	strh	r3, [r7, #8]
 800dd4a:	4594      	cmp	ip, r2
 800dd4c:	f99a 3002 	ldrsb.w	r3, [sl, #2]
 800dd50:	817b      	strh	r3, [r7, #10]
 800dd52:	f6bf aaf0 	bge.w	800d336 <st_sssa8_ch_nn_mat_mult_nt_t+0x152>
 800dd56:	f996 3003 	ldrsb.w	r3, [r6, #3]
 800dd5a:	81bb      	strh	r3, [r7, #12]
 800dd5c:	f99a 3003 	ldrsb.w	r3, [sl, #3]
 800dd60:	81fb      	strh	r3, [r7, #14]
 800dd62:	9b4e      	ldr	r3, [sp, #312]	; 0x138
 800dd64:	2b00      	cmp	r3, #0
 800dd66:	f43f aaea 	beq.w	800d33e <st_sssa8_ch_nn_mat_mult_nt_t+0x15a>
 800dd6a:	9836      	ldr	r0, [sp, #216]	; 0xd8
 800dd6c:	2800      	cmp	r0, #0
 800dd6e:	f000 80ea 	beq.w	800df46 <st_sssa8_ch_nn_mat_mult_nt_t+0xd62>
 800dd72:	9a52      	ldr	r2, [sp, #328]	; 0x148
 800dd74:	2300      	movs	r3, #0
 800dd76:	f102 0110 	add.w	r1, r2, #16
 800dd7a:	461a      	mov	r2, r3
 800dd7c:	f931 4c10 	ldrsh.w	r4, [r1, #-16]
 800dd80:	3801      	subs	r0, #1
 800dd82:	f101 0110 	add.w	r1, r1, #16
 800dd86:	eba3 0304 	sub.w	r3, r3, r4
 800dd8a:	f931 4c18 	ldrsh.w	r4, [r1, #-24]
 800dd8e:	eba2 0204 	sub.w	r2, r2, r4
 800dd92:	f931 4c1e 	ldrsh.w	r4, [r1, #-30]
 800dd96:	eba3 0304 	sub.w	r3, r3, r4
 800dd9a:	f931 4c16 	ldrsh.w	r4, [r1, #-22]
 800dd9e:	eba2 0204 	sub.w	r2, r2, r4
 800dda2:	f931 4c1c 	ldrsh.w	r4, [r1, #-28]
 800dda6:	eba3 0304 	sub.w	r3, r3, r4
 800ddaa:	f931 4c14 	ldrsh.w	r4, [r1, #-20]
 800ddae:	eba2 0204 	sub.w	r2, r2, r4
 800ddb2:	f931 4c1a 	ldrsh.w	r4, [r1, #-26]
 800ddb6:	eba3 0304 	sub.w	r3, r3, r4
 800ddba:	f931 4c12 	ldrsh.w	r4, [r1, #-18]
 800ddbe:	eba2 0204 	sub.w	r2, r2, r4
 800ddc2:	d1db      	bne.n	800dd7c <st_sssa8_ch_nn_mat_mult_nt_t+0xb98>
 800ddc4:	9952      	ldr	r1, [sp, #328]	; 0x148
 800ddc6:	983a      	ldr	r0, [sp, #232]	; 0xe8
 800ddc8:	4401      	add	r1, r0
 800ddca:	9804      	ldr	r0, [sp, #16]
 800ddcc:	b1a8      	cbz	r0, 800ddfa <st_sssa8_ch_nn_mat_mult_nt_t+0xc16>
 800ddce:	f9b1 0000 	ldrsh.w	r0, [r1]
 800ddd2:	1a1b      	subs	r3, r3, r0
 800ddd4:	f9b1 0002 	ldrsh.w	r0, [r1, #2]
 800ddd8:	1a12      	subs	r2, r2, r0
 800ddda:	981c      	ldr	r0, [sp, #112]	; 0x70
 800dddc:	b168      	cbz	r0, 800ddfa <st_sssa8_ch_nn_mat_mult_nt_t+0xc16>
 800ddde:	f9b1 0004 	ldrsh.w	r0, [r1, #4]
 800dde2:	1a1b      	subs	r3, r3, r0
 800dde4:	f9b1 0006 	ldrsh.w	r0, [r1, #6]
 800dde8:	1a12      	subs	r2, r2, r0
 800ddea:	9820      	ldr	r0, [sp, #128]	; 0x80
 800ddec:	b128      	cbz	r0, 800ddfa <st_sssa8_ch_nn_mat_mult_nt_t+0xc16>
 800ddee:	f9b1 0008 	ldrsh.w	r0, [r1, #8]
 800ddf2:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800ddf6:	1a1b      	subs	r3, r3, r0
 800ddf8:	1a52      	subs	r2, r2, r1
 800ddfa:	994e      	ldr	r1, [sp, #312]	; 0x138
 800ddfc:	fb03 f101 	mul.w	r1, r3, r1
 800de00:	9b4e      	ldr	r3, [sp, #312]	; 0x138
 800de02:	fb03 f202 	mul.w	r2, r3, r2
 800de06:	f7ff ba9c 	b.w	800d342 <st_sssa8_ch_nn_mat_mult_nt_t+0x15e>
 800de0a:	2301      	movs	r3, #1
 800de0c:	9308      	str	r3, [sp, #32]
 800de0e:	f7ff ba84 	b.w	800d31a <st_sssa8_ch_nn_mat_mult_nt_t+0x136>
 800de12:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800de14:	40a8      	lsls	r0, r5
 800de16:	f300 001f 	ssat	r0, #32, r0
 800de1a:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800de1c:	fb50 f016 	smmulr	r0, r0, r6
 800de20:	40ac      	lsls	r4, r5
 800de22:	f304 041f 	ssat	r4, #32, r4
 800de26:	fb54 f416 	smmulr	r4, r4, r6
 800de2a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800de2c:	4428      	add	r0, r5
 800de2e:	f300 0007 	ssat	r0, #8, r0
 800de32:	9e03      	ldr	r6, [sp, #12]
 800de34:	7030      	strb	r0, [r6, #0]
 800de36:	1928      	adds	r0, r5, r4
 800de38:	f300 0007 	ssat	r0, #8, r0
 800de3c:	7008      	strb	r0, [r1, #0]
 800de3e:	e521      	b.n	800d884 <st_sssa8_ch_nn_mat_mult_nt_t+0x6a0>
 800de40:	982a      	ldr	r0, [sp, #168]	; 0xa8
 800de42:	4082      	lsls	r2, r0
 800de44:	f302 021f 	ssat	r2, #32, r2
 800de48:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800de4a:	fb52 f214 	smmulr	r2, r2, r4
 800de4e:	4083      	lsls	r3, r0
 800de50:	f303 031f 	ssat	r3, #32, r3
 800de54:	fb53 f314 	smmulr	r3, r3, r4
 800de58:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800de5a:	4402      	add	r2, r0
 800de5c:	f302 0207 	ssat	r2, #8, r2
 800de60:	9c03      	ldr	r4, [sp, #12]
 800de62:	4403      	add	r3, r0
 800de64:	7062      	strb	r2, [r4, #1]
 800de66:	f303 0307 	ssat	r3, #8, r3
 800de6a:	704b      	strb	r3, [r1, #1]
 800de6c:	f8cd c00c 	str.w	ip, [sp, #12]
 800de70:	e411      	b.n	800d696 <st_sssa8_ch_nn_mat_mult_nt_t+0x4b2>
 800de72:	3301      	adds	r3, #1
 800de74:	d056      	beq.n	800df24 <st_sssa8_ch_nn_mat_mult_nt_t+0xd40>
 800de76:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800de78:	2001      	movs	r0, #1
 800de7a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800de7c:	1e93      	subs	r3, r2, #2
 800de7e:	3a01      	subs	r2, #1
 800de80:	fa00 f303 	lsl.w	r3, r0, r3
 800de84:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800de86:	fb50 3304 	smmla	r3, r0, r4, r3
 800de8a:	4113      	asrs	r3, r2
 800de8c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800de8e:	4413      	add	r3, r2
 800de90:	f303 0307 	ssat	r3, #8, r3
 800de94:	700b      	strb	r3, [r1, #0]
 800de96:	e40b      	b.n	800d6b0 <st_sssa8_ch_nn_mat_mult_nt_t+0x4cc>
 800de98:	3301      	adds	r3, #1
 800de9a:	d032      	beq.n	800df02 <st_sssa8_ch_nn_mat_mult_nt_t+0xd1e>
 800de9c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 800de9e:	2001      	movs	r0, #1
 800dea0:	1e93      	subs	r3, r2, #2
 800dea2:	3a01      	subs	r2, #1
 800dea4:	fa00 f303 	lsl.w	r3, r0, r3
 800dea8:	e9dd 4009 	ldrd	r4, r0, [sp, #36]	; 0x24
 800deac:	fb50 3304 	smmla	r3, r0, r4, r3
 800deb0:	4113      	asrs	r3, r2
 800deb2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800deb4:	4413      	add	r3, r2
 800deb6:	f303 0307 	ssat	r3, #8, r3
 800deba:	9a03      	ldr	r2, [sp, #12]
 800debc:	7013      	strb	r3, [r2, #0]
 800debe:	e660      	b.n	800db82 <st_sssa8_ch_nn_mat_mult_nt_t+0x99e>
 800dec0:	9d4c      	ldr	r5, [sp, #304]	; 0x130
 800dec2:	442e      	add	r6, r5
 800dec4:	e489      	b.n	800d7da <st_sssa8_ch_nn_mat_mult_nt_t+0x5f6>
 800dec6:	f1bc 0f00 	cmp.w	ip, #0
 800deca:	dd0b      	ble.n	800dee4 <st_sssa8_ch_nn_mat_mult_nt_t+0xd00>
 800decc:	ea4f 0947 	mov.w	r9, r7, lsl #1
 800ded0:	6805      	ldr	r5, [r0, #0]
 800ded2:	6827      	ldr	r7, [r4, #0]
 800ded4:	fb59 7705 	smmla	r7, r9, r5, r7
 800ded8:	fa47 f50c 	asr.w	r5, r7, ip
 800dedc:	f305 0507 	ssat	r5, #8, r5
 800dee0:	7035      	strb	r5, [r6, #0]
 800dee2:	e46c      	b.n	800d7be <st_sssa8_ch_nn_mat_mult_nt_t+0x5da>
 800dee4:	f1cc 0c01 	rsb	ip, ip, #1
 800dee8:	fa07 f70c 	lsl.w	r7, r7, ip
 800deec:	f307 071f 	ssat	r7, #32, r7
 800def0:	6805      	ldr	r5, [r0, #0]
 800def2:	fb57 f715 	smmulr	r7, r7, r5
 800def6:	6825      	ldr	r5, [r4, #0]
 800def8:	443d      	add	r5, r7
 800defa:	f305 0507 	ssat	r5, #8, r5
 800defe:	7035      	strb	r5, [r6, #0]
 800df00:	e45d      	b.n	800d7be <st_sssa8_ch_nn_mat_mult_nt_t+0x5da>
 800df02:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800df04:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800df06:	f1c3 0301 	rsb	r3, r3, #1
 800df0a:	409a      	lsls	r2, r3
 800df0c:	f302 031f 	ssat	r3, #32, r2
 800df10:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800df12:	fb53 f312 	smmulr	r3, r3, r2
 800df16:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800df18:	441a      	add	r2, r3
 800df1a:	f302 0307 	ssat	r3, #8, r2
 800df1e:	9a03      	ldr	r2, [sp, #12]
 800df20:	7013      	strb	r3, [r2, #0]
 800df22:	e62e      	b.n	800db82 <st_sssa8_ch_nn_mat_mult_nt_t+0x99e>
 800df24:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800df26:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800df28:	f1c3 0301 	rsb	r3, r3, #1
 800df2c:	409a      	lsls	r2, r3
 800df2e:	f302 031f 	ssat	r3, #32, r2
 800df32:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800df34:	fb53 f312 	smmulr	r3, r3, r2
 800df38:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800df3a:	441a      	add	r2, r3
 800df3c:	f302 0307 	ssat	r3, #8, r2
 800df40:	700b      	strb	r3, [r1, #0]
 800df42:	f7ff bbb5 	b.w	800d6b0 <st_sssa8_ch_nn_mat_mult_nt_t+0x4cc>
 800df46:	4602      	mov	r2, r0
 800df48:	9952      	ldr	r1, [sp, #328]	; 0x148
 800df4a:	4603      	mov	r3, r0
 800df4c:	e73d      	b.n	800ddca <st_sssa8_ch_nn_mat_mult_nt_t+0xbe6>
 800df4e:	f04f 0e00 	mov.w	lr, #0
 800df52:	9b39      	ldr	r3, [sp, #228]	; 0xe4
 800df54:	f8dd c148 	ldr.w	ip, [sp, #328]	; 0x148
 800df58:	459e      	cmp	lr, r3
 800df5a:	f6ff ad8b 	blt.w	800da74 <st_sssa8_ch_nn_mat_mult_nt_t+0x890>
 800df5e:	9f01      	ldr	r7, [sp, #4]
 800df60:	e5b9      	b.n	800dad6 <st_sssa8_ch_nn_mat_mult_nt_t+0x8f2>
 800df62:	4626      	mov	r6, r4
 800df64:	e6d0      	b.n	800dd08 <st_sssa8_ch_nn_mat_mult_nt_t+0xb24>
 800df66:	9f52      	ldr	r7, [sp, #328]	; 0x148
 800df68:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 800df6a:	f8dd c14c 	ldr.w	ip, [sp, #332]	; 0x14c
 800df6e:	e698      	b.n	800dca2 <st_sssa8_ch_nn_mat_mult_nt_t+0xabe>

0800df70 <st_int8_avepool>:
 800df70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df74:	b095      	sub	sp, #84	; 0x54
 800df76:	4699      	mov	r9, r3
 800df78:	4692      	mov	sl, r2
 800df7a:	ee80 6a20 	vdiv.f32	s12, s0, s1
 800df7e:	9102      	str	r1, [sp, #8]
 800df80:	f8bd 108c 	ldrh.w	r1, [sp, #140]	; 0x8c
 800df84:	f8bd 307c 	ldrh.w	r3, [sp, #124]	; 0x7c
 800df88:	910f      	str	r1, [sp, #60]	; 0x3c
 800df8a:	f8bd 1090 	ldrh.w	r1, [sp, #144]	; 0x90
 800df8e:	930d      	str	r3, [sp, #52]	; 0x34
 800df90:	9110      	str	r1, [sp, #64]	; 0x40
 800df92:	f8bd 3080 	ldrh.w	r3, [sp, #128]	; 0x80
 800df96:	f8bd 1094 	ldrh.w	r1, [sp, #148]	; 0x94
 800df9a:	f8bd 2098 	ldrh.w	r2, [sp, #152]	; 0x98
 800df9e:	9309      	str	r3, [sp, #36]	; 0x24
 800dfa0:	9104      	str	r1, [sp, #16]
 800dfa2:	f8bd 3084 	ldrh.w	r3, [sp, #132]	; 0x84
 800dfa6:	f99d 109c 	ldrsb.w	r1, [sp, #156]	; 0x9c
 800dfaa:	930e      	str	r3, [sp, #56]	; 0x38
 800dfac:	ee03 1a90 	vmov	s7, r1
 800dfb0:	f8bd 8078 	ldrh.w	r8, [sp, #120]	; 0x78
 800dfb4:	f8bd 3088 	ldrh.w	r3, [sp, #136]	; 0x88
 800dfb8:	f99d 10a0 	ldrsb.w	r1, [sp, #160]	; 0xa0
 800dfbc:	9211      	str	r2, [sp, #68]	; 0x44
 800dfbe:	2a00      	cmp	r2, #0
 800dfc0:	f000 80b3 	beq.w	800e12a <st_int8_avepool+0x1ba>
 800dfc4:	eeb4 0a60 	vcmp.f32	s0, s1
 800dfc8:	ee03 1a10 	vmov	s6, r1
 800dfcc:	4683      	mov	fp, r0
 800dfce:	ee13 1a90 	vmov	r1, s7
 800dfd2:	ee13 0a10 	vmov	r0, s6
 800dfd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dfda:	bf0c      	ite	eq
 800dfdc:	2201      	moveq	r2, #1
 800dfde:	2200      	movne	r2, #0
 800dfe0:	4281      	cmp	r1, r0
 800dfe2:	bf14      	ite	ne
 800dfe4:	2200      	movne	r2, #0
 800dfe6:	f002 0201 	andeq.w	r2, r2, #1
 800dfea:	f1b8 0f01 	cmp.w	r8, #1
 800dfee:	9201      	str	r2, [sp, #4]
 800dff0:	f040 80c2 	bne.w	800e178 <st_int8_avepool+0x208>
 800dff4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800dff6:	eddf 5a5e 	vldr	s11, [pc, #376]	; 800e170 <st_int8_avepool+0x200>
 800dffa:	1ad3      	subs	r3, r2, r3
 800dffc:	eddf 2a5d 	vldr	s5, [pc, #372]	; 800e174 <st_int8_avepool+0x204>
 800e000:	e9dd 120d 	ldrd	r1, r2, [sp, #52]	; 0x34
 800e004:	b29b      	uxth	r3, r3
 800e006:	1a89      	subs	r1, r1, r2
 800e008:	4252      	negs	r2, r2
 800e00a:	9306      	str	r3, [sp, #24]
 800e00c:	b293      	uxth	r3, r2
 800e00e:	2200      	movs	r2, #0
 800e010:	910d      	str	r1, [sp, #52]	; 0x34
 800e012:	930c      	str	r3, [sp, #48]	; 0x30
 800e014:	4613      	mov	r3, r2
 800e016:	9904      	ldr	r1, [sp, #16]
 800e018:	2900      	cmp	r1, #0
 800e01a:	f000 80a6 	beq.w	800e16a <st_int8_avepool+0x1fa>
 800e01e:	b292      	uxth	r2, r2
 800e020:	2100      	movs	r1, #0
 800e022:	eeb8 4ae3 	vcvt.f32.s32	s8, s7
 800e026:	9207      	str	r2, [sp, #28]
 800e028:	eef8 4ac3 	vcvt.f32.s32	s9, s6
 800e02c:	9a04      	ldr	r2, [sp, #16]
 800e02e:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 800e032:	4688      	mov	r8, r1
 800e034:	fb02 f303 	mul.w	r3, r2, r3
 800e038:	9a06      	ldr	r2, [sp, #24]
 800e03a:	9308      	str	r3, [sp, #32]
 800e03c:	fa0f fe82 	sxth.w	lr, r2
 800e040:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e042:	1ad3      	subs	r3, r2, r3
 800e044:	b21b      	sxth	r3, r3
 800e046:	930b      	str	r3, [sp, #44]	; 0x2c
 800e048:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e04a:	9303      	str	r3, [sp, #12]
 800e04c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 800e050:	9305      	str	r3, [sp, #20]
 800e052:	b28b      	uxth	r3, r1
 800e054:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800e056:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 800e05a:	930a      	str	r3, [sp, #40]	; 0x28
 800e05c:	4570      	cmp	r0, lr
 800e05e:	9b08      	ldr	r3, [sp, #32]
 800e060:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 800e064:	4498      	add	r8, r3
 800e066:	da79      	bge.n	800e15c <st_int8_avepool+0x1ec>
 800e068:	2700      	movs	r7, #0
 800e06a:	46bc      	mov	ip, r7
 800e06c:	42a6      	cmp	r6, r4
 800e06e:	da17      	bge.n	800e0a0 <st_int8_avepool+0x130>
 800e070:	43c5      	mvns	r5, r0
 800e072:	4548      	cmp	r0, r9
 800e074:	fb0a f200 	mul.w	r2, sl, r0
 800e078:	ea4f 75d5 	mov.w	r5, r5, lsr #31
 800e07c:	da10      	bge.n	800e0a0 <st_int8_avepool+0x130>
 800e07e:	4432      	add	r2, r6
 800e080:	4633      	mov	r3, r6
 800e082:	445a      	add	r2, fp
 800e084:	0419      	lsls	r1, r3, #16
 800e086:	d406      	bmi.n	800e096 <st_int8_avepool+0x126>
 800e088:	b12d      	cbz	r5, 800e096 <st_int8_avepool+0x126>
 800e08a:	4553      	cmp	r3, sl
 800e08c:	da03      	bge.n	800e096 <st_int8_avepool+0x126>
 800e08e:	f992 1000 	ldrsb.w	r1, [r2]
 800e092:	3701      	adds	r7, #1
 800e094:	448c      	add	ip, r1
 800e096:	3301      	adds	r3, #1
 800e098:	3201      	adds	r2, #1
 800e09a:	b219      	sxth	r1, r3
 800e09c:	42a1      	cmp	r1, r4
 800e09e:	dbf1      	blt.n	800e084 <st_int8_avepool+0x114>
 800e0a0:	3001      	adds	r0, #1
 800e0a2:	b200      	sxth	r0, r0
 800e0a4:	4570      	cmp	r0, lr
 800e0a6:	dbe1      	blt.n	800e06c <st_int8_avepool+0xfc>
 800e0a8:	9b01      	ldr	r3, [sp, #4]
 800e0aa:	2b00      	cmp	r3, #0
 800e0ac:	d140      	bne.n	800e130 <st_int8_avepool+0x1c0>
 800e0ae:	ee07 ca90 	vmov	s15, ip
 800e0b2:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 800e0b6:	ee07 7a90 	vmov	s15, r7
 800e0ba:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800e0be:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800e0c2:	ee77 7ac4 	vsub.f32	s15, s15, s8
 800e0c6:	eeb0 7a64 	vmov.f32	s14, s9
 800e0ca:	eea6 7a27 	vfma.f32	s14, s12, s15
 800e0ce:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800e0d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e0d6:	fe65 7a25 	vselge.f32	s15, s10, s11
 800e0da:	ee77 7a87 	vadd.f32	s15, s15, s14
 800e0de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e0e2:	ee17 3a90 	vmov	r3, s15
 800e0e6:	f303 0307 	ssat	r3, #8, r3
 800e0ea:	9a02      	ldr	r2, [sp, #8]
 800e0ec:	f802 3008 	strb.w	r3, [r2, r8]
 800e0f0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800e0f2:	9b05      	ldr	r3, [sp, #20]
 800e0f4:	990a      	ldr	r1, [sp, #40]	; 0x28
 800e0f6:	4403      	add	r3, r0
 800e0f8:	9a03      	ldr	r2, [sp, #12]
 800e0fa:	3101      	adds	r1, #1
 800e0fc:	b29b      	uxth	r3, r3
 800e0fe:	4402      	add	r2, r0
 800e100:	b209      	sxth	r1, r1
 800e102:	9305      	str	r3, [sp, #20]
 800e104:	b292      	uxth	r2, r2
 800e106:	9b04      	ldr	r3, [sp, #16]
 800e108:	4688      	mov	r8, r1
 800e10a:	9203      	str	r2, [sp, #12]
 800e10c:	428b      	cmp	r3, r1
 800e10e:	dca0      	bgt.n	800e052 <st_int8_avepool+0xe2>
 800e110:	9a07      	ldr	r2, [sp, #28]
 800e112:	9b06      	ldr	r3, [sp, #24]
 800e114:	9910      	ldr	r1, [sp, #64]	; 0x40
 800e116:	3201      	adds	r2, #1
 800e118:	440b      	add	r3, r1
 800e11a:	b212      	sxth	r2, r2
 800e11c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800e11e:	b29b      	uxth	r3, r3
 800e120:	4291      	cmp	r1, r2
 800e122:	9306      	str	r3, [sp, #24]
 800e124:	4613      	mov	r3, r2
 800e126:	f73f af76 	bgt.w	800e016 <st_int8_avepool+0xa6>
 800e12a:	b015      	add	sp, #84	; 0x54
 800e12c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e130:	f1bc 0f00 	cmp.w	ip, #0
 800e134:	db09      	blt.n	800e14a <st_int8_avepool+0x1da>
 800e136:	eb0c 0367 	add.w	r3, ip, r7, asr #1
 800e13a:	fbb3 f7f7 	udiv	r7, r3, r7
 800e13e:	f307 0307 	ssat	r3, #8, r7
 800e142:	9a02      	ldr	r2, [sp, #8]
 800e144:	f802 3008 	strb.w	r3, [r2, r8]
 800e148:	e7d2      	b.n	800e0f0 <st_int8_avepool+0x180>
 800e14a:	2f00      	cmp	r7, #0
 800e14c:	463b      	mov	r3, r7
 800e14e:	bfb8      	it	lt
 800e150:	1c7b      	addlt	r3, r7, #1
 800e152:	ebac 0363 	sub.w	r3, ip, r3, asr #1
 800e156:	fb93 f7f7 	sdiv	r7, r3, r7
 800e15a:	e7f0      	b.n	800e13e <st_int8_avepool+0x1ce>
 800e15c:	9b01      	ldr	r3, [sp, #4]
 800e15e:	2b00      	cmp	r3, #0
 800e160:	f040 80df 	bne.w	800e322 <st_int8_avepool+0x3b2>
 800e164:	eef0 7a62 	vmov.f32	s15, s5
 800e168:	e7ab      	b.n	800e0c2 <st_int8_avepool+0x152>
 800e16a:	b293      	uxth	r3, r2
 800e16c:	9307      	str	r3, [sp, #28]
 800e16e:	e7cf      	b.n	800e110 <st_int8_avepool+0x1a0>
 800e170:	befffffc 	.word	0xbefffffc
 800e174:	7fc00000 	.word	0x7fc00000
 800e178:	425b      	negs	r3, r3
 800e17a:	2200      	movs	r2, #0
 800e17c:	9904      	ldr	r1, [sp, #16]
 800e17e:	b29b      	uxth	r3, r3
 800e180:	f8cd b00c 	str.w	fp, [sp, #12]
 800e184:	ed5f 5a06 	vldr	s11, [pc, #-24]	; 800e170 <st_int8_avepool+0x200>
 800e188:	46d3      	mov	fp, sl
 800e18a:	9308      	str	r3, [sp, #32]
 800e18c:	46ca      	mov	sl, r9
 800e18e:	ed5f 6a07 	vldr	s13, [pc, #-28]	; 800e174 <st_int8_avepool+0x204>
 800e192:	4613      	mov	r3, r2
 800e194:	2900      	cmp	r1, #0
 800e196:	f000 80a3 	beq.w	800e2e0 <st_int8_avepool+0x370>
 800e19a:	b292      	uxth	r2, r2
 800e19c:	2100      	movs	r1, #0
 800e19e:	eeb8 5ae3 	vcvt.f32.s32	s10, s7
 800e1a2:	920c      	str	r2, [sp, #48]	; 0x30
 800e1a4:	9a04      	ldr	r2, [sp, #16]
 800e1a6:	fb03 f302 	mul.w	r3, r3, r2
 800e1aa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800e1ac:	9313      	str	r3, [sp, #76]	; 0x4c
 800e1ae:	4253      	negs	r3, r2
 800e1b0:	b29b      	uxth	r3, r3
 800e1b2:	9306      	str	r3, [sp, #24]
 800e1b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e1b6:	1a9b      	subs	r3, r3, r2
 800e1b8:	b29b      	uxth	r3, r3
 800e1ba:	9307      	str	r3, [sp, #28]
 800e1bc:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800e1c0:	4413      	add	r3, r2
 800e1c2:	fa0f fe83 	sxth.w	lr, r3
 800e1c6:	b213      	sxth	r3, r2
 800e1c8:	930a      	str	r3, [sp, #40]	; 0x28
 800e1ca:	460b      	mov	r3, r1
 800e1cc:	f1b8 0f00 	cmp.w	r8, #0
 800e1d0:	f000 80a4 	beq.w	800e31c <st_int8_avepool+0x3ac>
 800e1d4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800e1d6:	eeb8 4ac3 	vcvt.f32.s32	s8, s6
 800e1da:	eef6 4a00 	vmov.f32	s9, #96	; 0x3f000000  0.5
 800e1de:	f9bd 6018 	ldrsh.w	r6, [sp, #24]
 800e1e2:	4413      	add	r3, r2
 800e1e4:	b28a      	uxth	r2, r1
 800e1e6:	f9bd 501c 	ldrsh.w	r5, [sp, #28]
 800e1ea:	920b      	str	r2, [sp, #44]	; 0x2c
 800e1ec:	9a02      	ldr	r2, [sp, #8]
 800e1ee:	fb08 2303 	mla	r3, r8, r3, r2
 800e1f2:	9312      	str	r3, [sp, #72]	; 0x48
 800e1f4:	2300      	movs	r3, #0
 800e1f6:	4699      	mov	r9, r3
 800e1f8:	9305      	str	r3, [sp, #20]
 800e1fa:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e1fc:	4570      	cmp	r0, lr
 800e1fe:	f280 8088 	bge.w	800e312 <st_int8_avepool+0x3a2>
 800e202:	2700      	movs	r7, #0
 800e204:	46bc      	mov	ip, r7
 800e206:	42ae      	cmp	r6, r5
 800e208:	da1a      	bge.n	800e240 <st_int8_avepool+0x2d0>
 800e20a:	43c4      	mvns	r4, r0
 800e20c:	4550      	cmp	r0, sl
 800e20e:	fb0b f300 	mul.w	r3, fp, r0
 800e212:	f3c4 34c0 	ubfx	r4, r4, #15, #1
 800e216:	da13      	bge.n	800e240 <st_int8_avepool+0x2d0>
 800e218:	199a      	adds	r2, r3, r6
 800e21a:	9b03      	ldr	r3, [sp, #12]
 800e21c:	fb08 9202 	mla	r2, r8, r2, r9
 800e220:	441a      	add	r2, r3
 800e222:	4633      	mov	r3, r6
 800e224:	0419      	lsls	r1, r3, #16
 800e226:	d406      	bmi.n	800e236 <st_int8_avepool+0x2c6>
 800e228:	b12c      	cbz	r4, 800e236 <st_int8_avepool+0x2c6>
 800e22a:	459b      	cmp	fp, r3
 800e22c:	dd03      	ble.n	800e236 <st_int8_avepool+0x2c6>
 800e22e:	f992 1000 	ldrsb.w	r1, [r2]
 800e232:	3701      	adds	r7, #1
 800e234:	448c      	add	ip, r1
 800e236:	3301      	adds	r3, #1
 800e238:	4442      	add	r2, r8
 800e23a:	b219      	sxth	r1, r3
 800e23c:	42a9      	cmp	r1, r5
 800e23e:	dbf1      	blt.n	800e224 <st_int8_avepool+0x2b4>
 800e240:	3001      	adds	r0, #1
 800e242:	b200      	sxth	r0, r0
 800e244:	4570      	cmp	r0, lr
 800e246:	dbde      	blt.n	800e206 <st_int8_avepool+0x296>
 800e248:	9b01      	ldr	r3, [sp, #4]
 800e24a:	2b00      	cmp	r3, #0
 800e24c:	d14b      	bne.n	800e2e6 <st_int8_avepool+0x376>
 800e24e:	ee07 ca90 	vmov	s15, ip
 800e252:	eef8 2ae7 	vcvt.f32.s32	s5, s15
 800e256:	ee07 7a90 	vmov	s15, r7
 800e25a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800e25e:	eec2 7a87 	vdiv.f32	s15, s5, s14
 800e262:	ee77 7ac5 	vsub.f32	s15, s15, s10
 800e266:	eeb0 7a44 	vmov.f32	s14, s8
 800e26a:	eea7 7a86 	vfma.f32	s14, s15, s12
 800e26e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800e272:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e276:	fe64 7aa5 	vselge.f32	s15, s9, s11
 800e27a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800e27e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e282:	ee17 3a90 	vmov	r3, s15
 800e286:	f303 0307 	ssat	r3, #8, r3
 800e28a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e28c:	f802 3009 	strb.w	r3, [r2, r9]
 800e290:	9b05      	ldr	r3, [sp, #20]
 800e292:	3301      	adds	r3, #1
 800e294:	b21b      	sxth	r3, r3
 800e296:	4543      	cmp	r3, r8
 800e298:	4699      	mov	r9, r3
 800e29a:	9305      	str	r3, [sp, #20]
 800e29c:	dbad      	blt.n	800e1fa <st_int8_avepool+0x28a>
 800e29e:	9a06      	ldr	r2, [sp, #24]
 800e2a0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800e2a2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800e2a4:	4402      	add	r2, r0
 800e2a6:	9b07      	ldr	r3, [sp, #28]
 800e2a8:	3101      	adds	r1, #1
 800e2aa:	b292      	uxth	r2, r2
 800e2ac:	4403      	add	r3, r0
 800e2ae:	b209      	sxth	r1, r1
 800e2b0:	9206      	str	r2, [sp, #24]
 800e2b2:	b29b      	uxth	r3, r3
 800e2b4:	9a04      	ldr	r2, [sp, #16]
 800e2b6:	9307      	str	r3, [sp, #28]
 800e2b8:	460b      	mov	r3, r1
 800e2ba:	4291      	cmp	r1, r2
 800e2bc:	db86      	blt.n	800e1cc <st_int8_avepool+0x25c>
 800e2be:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800e2c0:	9b08      	ldr	r3, [sp, #32]
 800e2c2:	9910      	ldr	r1, [sp, #64]	; 0x40
 800e2c4:	3201      	adds	r2, #1
 800e2c6:	440b      	add	r3, r1
 800e2c8:	b212      	sxth	r2, r2
 800e2ca:	9911      	ldr	r1, [sp, #68]	; 0x44
 800e2cc:	b29b      	uxth	r3, r3
 800e2ce:	4291      	cmp	r1, r2
 800e2d0:	9308      	str	r3, [sp, #32]
 800e2d2:	4613      	mov	r3, r2
 800e2d4:	f77f af29 	ble.w	800e12a <st_int8_avepool+0x1ba>
 800e2d8:	9904      	ldr	r1, [sp, #16]
 800e2da:	2900      	cmp	r1, #0
 800e2dc:	f47f af5d 	bne.w	800e19a <st_int8_avepool+0x22a>
 800e2e0:	b293      	uxth	r3, r2
 800e2e2:	930c      	str	r3, [sp, #48]	; 0x30
 800e2e4:	e7eb      	b.n	800e2be <st_int8_avepool+0x34e>
 800e2e6:	f1bc 0f00 	cmp.w	ip, #0
 800e2ea:	db09      	blt.n	800e300 <st_int8_avepool+0x390>
 800e2ec:	eb0c 0c67 	add.w	ip, ip, r7, asr #1
 800e2f0:	fbbc f7f7 	udiv	r7, ip, r7
 800e2f4:	f307 0707 	ssat	r7, #8, r7
 800e2f8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e2fa:	f803 7009 	strb.w	r7, [r3, r9]
 800e2fe:	e7c7      	b.n	800e290 <st_int8_avepool+0x320>
 800e300:	2f00      	cmp	r7, #0
 800e302:	463b      	mov	r3, r7
 800e304:	bfb8      	it	lt
 800e306:	1c7b      	addlt	r3, r7, #1
 800e308:	ebac 0363 	sub.w	r3, ip, r3, asr #1
 800e30c:	fb93 f7f7 	sdiv	r7, r3, r7
 800e310:	e7f0      	b.n	800e2f4 <st_int8_avepool+0x384>
 800e312:	9b01      	ldr	r3, [sp, #4]
 800e314:	b92b      	cbnz	r3, 800e322 <st_int8_avepool+0x3b2>
 800e316:	eef0 7a66 	vmov.f32	s15, s13
 800e31a:	e7a2      	b.n	800e262 <st_int8_avepool+0x2f2>
 800e31c:	b28b      	uxth	r3, r1
 800e31e:	930b      	str	r3, [sp, #44]	; 0x2c
 800e320:	e7bd      	b.n	800e29e <st_int8_avepool+0x32e>
 800e322:	deff      	udf	#255	; 0xff

0800e324 <arm_fill_q15>:
 800e324:	b510      	push	{r4, lr}
 800e326:	eac0 4400 	pkhbt	r4, r0, r0, lsl #16
 800e32a:	ea5f 0e92 	movs.w	lr, r2, lsr #2
 800e32e:	d013      	beq.n	800e358 <arm_fill_q15+0x34>
 800e330:	f10e 33ff 	add.w	r3, lr, #4294967295
 800e334:	2b09      	cmp	r3, #9
 800e336:	460b      	mov	r3, r1
 800e338:	d919      	bls.n	800e36e <arm_fill_q15+0x4a>
 800e33a:	f011 0f07 	tst.w	r1, #7
 800e33e:	d116      	bne.n	800e36e <arm_fill_q15+0x4a>
 800e340:	f04f 0c00 	mov.w	ip, #0
 800e344:	f10c 0c01 	add.w	ip, ip, #1
 800e348:	45e6      	cmp	lr, ip
 800e34a:	e9c3 4400 	strd	r4, r4, [r3]
 800e34e:	f103 0308 	add.w	r3, r3, #8
 800e352:	d1f7      	bne.n	800e344 <arm_fill_q15+0x20>
 800e354:	eb01 01ce 	add.w	r1, r1, lr, lsl #3
 800e358:	f012 0203 	ands.w	r2, r2, #3
 800e35c:	d006      	beq.n	800e36c <arm_fill_q15+0x48>
 800e35e:	3a01      	subs	r2, #1
 800e360:	8008      	strh	r0, [r1, #0]
 800e362:	d003      	beq.n	800e36c <arm_fill_q15+0x48>
 800e364:	2a01      	cmp	r2, #1
 800e366:	8048      	strh	r0, [r1, #2]
 800e368:	bf18      	it	ne
 800e36a:	8088      	strhne	r0, [r1, #4]
 800e36c:	bd10      	pop	{r4, pc}
 800e36e:	46f4      	mov	ip, lr
 800e370:	f1bc 0c01 	subs.w	ip, ip, #1
 800e374:	601c      	str	r4, [r3, #0]
 800e376:	605c      	str	r4, [r3, #4]
 800e378:	f103 0308 	add.w	r3, r3, #8
 800e37c:	d1f8      	bne.n	800e370 <arm_fill_q15+0x4c>
 800e37e:	e7e9      	b.n	800e354 <arm_fill_q15+0x30>

0800e380 <arm_float_to_q15>:
 800e380:	b530      	push	{r4, r5, lr}
 800e382:	0895      	lsrs	r5, r2, #2
 800e384:	d069      	beq.n	800e45a <arm_float_to_q15+0xda>
 800e386:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800e38a:	f100 0c10 	add.w	ip, r0, #16
 800e38e:	eefe 5a00 	vmov.f32	s11, #224	; 0xbf000000 -0.5
 800e392:	ed9f 6a55 	vldr	s12, [pc, #340]	; 800e4e8 <arm_float_to_q15+0x168>
 800e396:	f101 0e08 	add.w	lr, r1, #8
 800e39a:	462c      	mov	r4, r5
 800e39c:	ed5c 7a04 	vldr	s15, [ip, #-16]
 800e3a0:	ee67 6a86 	vmul.f32	s13, s15, s12
 800e3a4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 800e3a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e3ac:	fe77 7a25 	vselgt.f32	s15, s14, s11
 800e3b0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e3b4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e3b8:	ee17 3a90 	vmov	r3, s15
 800e3bc:	f303 030f 	ssat	r3, #16, r3
 800e3c0:	f82e 3c08 	strh.w	r3, [lr, #-8]
 800e3c4:	ed5c 7a03 	vldr	s15, [ip, #-12]
 800e3c8:	ee67 6a86 	vmul.f32	s13, s15, s12
 800e3cc:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 800e3d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e3d4:	fe77 7a25 	vselgt.f32	s15, s14, s11
 800e3d8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e3dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e3e0:	ee17 3a90 	vmov	r3, s15
 800e3e4:	f303 030f 	ssat	r3, #16, r3
 800e3e8:	f82e 3c06 	strh.w	r3, [lr, #-6]
 800e3ec:	ed5c 7a02 	vldr	s15, [ip, #-8]
 800e3f0:	ee67 6a86 	vmul.f32	s13, s15, s12
 800e3f4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 800e3f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e3fc:	fe77 7a25 	vselgt.f32	s15, s14, s11
 800e400:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e404:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e408:	ee17 3a90 	vmov	r3, s15
 800e40c:	f303 030f 	ssat	r3, #16, r3
 800e410:	f82e 3c04 	strh.w	r3, [lr, #-4]
 800e414:	ed5c 7a01 	vldr	s15, [ip, #-4]
 800e418:	ee67 7a86 	vmul.f32	s15, s15, s12
 800e41c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800e420:	ee77 6a87 	vadd.f32	s13, s15, s14
 800e424:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800e428:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e42c:	eefd 6ae6 	vcvt.s32.f32	s13, s13
 800e430:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e434:	bfcc      	ite	gt
 800e436:	ee16 3a90 	vmovgt	r3, s13
 800e43a:	ee17 3a90 	vmovle	r3, s15
 800e43e:	f303 030f 	ssat	r3, #16, r3
 800e442:	3c01      	subs	r4, #1
 800e444:	f82e 3c02 	strh.w	r3, [lr, #-2]
 800e448:	f10c 0c10 	add.w	ip, ip, #16
 800e44c:	f10e 0e08 	add.w	lr, lr, #8
 800e450:	d1a4      	bne.n	800e39c <arm_float_to_q15+0x1c>
 800e452:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
 800e456:	eb00 1005 	add.w	r0, r0, r5, lsl #4
 800e45a:	f012 0203 	ands.w	r2, r2, #3
 800e45e:	d042      	beq.n	800e4e6 <arm_float_to_q15+0x166>
 800e460:	edd0 7a00 	vldr	s15, [r0]
 800e464:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800e468:	eddf 5a1f 	vldr	s11, [pc, #124]	; 800e4e8 <arm_float_to_q15+0x168>
 800e46c:	eebe 6a00 	vmov.f32	s12, #224	; 0xbf000000 -0.5
 800e470:	ee67 6aa5 	vmul.f32	s13, s15, s11
 800e474:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 800e478:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e47c:	fe77 7a06 	vselgt.f32	s15, s14, s12
 800e480:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e484:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e488:	ee17 3a90 	vmov	r3, s15
 800e48c:	f303 030f 	ssat	r3, #16, r3
 800e490:	3a01      	subs	r2, #1
 800e492:	800b      	strh	r3, [r1, #0]
 800e494:	d027      	beq.n	800e4e6 <arm_float_to_q15+0x166>
 800e496:	edd0 7a01 	vldr	s15, [r0, #4]
 800e49a:	ee67 7aa5 	vmul.f32	s15, s15, s11
 800e49e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800e4a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e4a6:	fe77 6a06 	vselgt.f32	s13, s14, s12
 800e4aa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e4ae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e4b2:	ee17 3a90 	vmov	r3, s15
 800e4b6:	f303 030f 	ssat	r3, #16, r3
 800e4ba:	2a01      	cmp	r2, #1
 800e4bc:	804b      	strh	r3, [r1, #2]
 800e4be:	d012      	beq.n	800e4e6 <arm_float_to_q15+0x166>
 800e4c0:	edd0 7a02 	vldr	s15, [r0, #8]
 800e4c4:	ee67 5aa5 	vmul.f32	s11, s15, s11
 800e4c8:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800e4cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e4d0:	fe37 7a06 	vselgt.f32	s14, s14, s12
 800e4d4:	ee37 7a25 	vadd.f32	s14, s14, s11
 800e4d8:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800e4dc:	ee17 3a10 	vmov	r3, s14
 800e4e0:	f303 030f 	ssat	r3, #16, r3
 800e4e4:	808b      	strh	r3, [r1, #4]
 800e4e6:	bd30      	pop	{r4, r5, pc}
 800e4e8:	47000000 	.word	0x47000000

0800e4ec <arm_float_to_q7>:
 800e4ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e4ee:	0895      	lsrs	r5, r2, #2
 800e4f0:	d06f      	beq.n	800e5d2 <arm_float_to_q7+0xe6>
 800e4f2:	f101 0c04 	add.w	ip, r1, #4
 800e4f6:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 800e4fa:	eebe 5a00 	vmov.f32	s10, #224	; 0xbf000000 -0.5
 800e4fe:	f100 0e10 	add.w	lr, r0, #16
 800e502:	eddf 5a5f 	vldr	s11, [pc, #380]	; 800e680 <arm_float_to_q7+0x194>
 800e506:	00ae      	lsls	r6, r5, #2
 800e508:	eb0c 0485 	add.w	r4, ip, r5, lsl #2
 800e50c:	ed5e 7a04 	vldr	s15, [lr, #-16]
 800e510:	ee27 7aa5 	vmul.f32	s14, s15, s11
 800e514:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800e518:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e51c:	fe76 7a05 	vselgt.f32	s15, s12, s10
 800e520:	ee77 7a87 	vadd.f32	s15, s15, s14
 800e524:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e528:	ee17 3a90 	vmov	r3, s15
 800e52c:	b21b      	sxth	r3, r3
 800e52e:	f303 0307 	ssat	r3, #8, r3
 800e532:	f80c 3c04 	strb.w	r3, [ip, #-4]
 800e536:	ed5e 7a03 	vldr	s15, [lr, #-12]
 800e53a:	ee27 7aa5 	vmul.f32	s14, s15, s11
 800e53e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800e542:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e546:	fe76 7a05 	vselgt.f32	s15, s12, s10
 800e54a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800e54e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e552:	ee17 3a90 	vmov	r3, s15
 800e556:	b21b      	sxth	r3, r3
 800e558:	f303 0307 	ssat	r3, #8, r3
 800e55c:	f80c 3c03 	strb.w	r3, [ip, #-3]
 800e560:	ed5e 7a02 	vldr	s15, [lr, #-8]
 800e564:	ee27 7aa5 	vmul.f32	s14, s15, s11
 800e568:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800e56c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e570:	fe76 7a05 	vselgt.f32	s15, s12, s10
 800e574:	ee77 7a87 	vadd.f32	s15, s15, s14
 800e578:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e57c:	ee17 3a90 	vmov	r3, s15
 800e580:	b21b      	sxth	r3, r3
 800e582:	f303 0307 	ssat	r3, #8, r3
 800e586:	f80c 3c02 	strb.w	r3, [ip, #-2]
 800e58a:	ed5e 6a01 	vldr	s13, [lr, #-4]
 800e58e:	ee66 6aa5 	vmul.f32	s13, s13, s11
 800e592:	ee76 7a86 	vadd.f32	s15, s13, s12
 800e596:	ee36 7ac6 	vsub.f32	s14, s13, s12
 800e59a:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 800e59e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e5a2:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800e5a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e5aa:	ee17 3a90 	vmov	r3, s15
 800e5ae:	ee17 7a10 	vmov	r7, s14
 800e5b2:	b21b      	sxth	r3, r3
 800e5b4:	b23f      	sxth	r7, r7
 800e5b6:	dd56      	ble.n	800e666 <arm_float_to_q7+0x17a>
 800e5b8:	f303 0307 	ssat	r3, #8, r3
 800e5bc:	f80c 3c01 	strb.w	r3, [ip, #-1]
 800e5c0:	f10c 0c04 	add.w	ip, ip, #4
 800e5c4:	f10e 0e10 	add.w	lr, lr, #16
 800e5c8:	4564      	cmp	r4, ip
 800e5ca:	d19f      	bne.n	800e50c <arm_float_to_q7+0x20>
 800e5cc:	4431      	add	r1, r6
 800e5ce:	eb00 1005 	add.w	r0, r0, r5, lsl #4
 800e5d2:	f012 0203 	ands.w	r2, r2, #3
 800e5d6:	d045      	beq.n	800e664 <arm_float_to_q7+0x178>
 800e5d8:	edd0 7a00 	vldr	s15, [r0]
 800e5dc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800e5e0:	ed9f 5a27 	vldr	s10, [pc, #156]	; 800e680 <arm_float_to_q7+0x194>
 800e5e4:	eefe 5a00 	vmov.f32	s11, #224	; 0xbf000000 -0.5
 800e5e8:	ee67 6a85 	vmul.f32	s13, s15, s10
 800e5ec:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 800e5f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e5f4:	fe77 7a25 	vselgt.f32	s15, s14, s11
 800e5f8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e5fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e600:	ee17 3a90 	vmov	r3, s15
 800e604:	b21b      	sxth	r3, r3
 800e606:	f303 0307 	ssat	r3, #8, r3
 800e60a:	3a01      	subs	r2, #1
 800e60c:	700b      	strb	r3, [r1, #0]
 800e60e:	d029      	beq.n	800e664 <arm_float_to_q7+0x178>
 800e610:	edd0 6a01 	vldr	s13, [r0, #4]
 800e614:	ee26 6a85 	vmul.f32	s12, s13, s10
 800e618:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 800e61c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e620:	fe77 6a25 	vselgt.f32	s13, s14, s11
 800e624:	ee76 6a86 	vadd.f32	s13, s13, s12
 800e628:	eefd 6ae6 	vcvt.s32.f32	s13, s13
 800e62c:	ee16 3a90 	vmov	r3, s13
 800e630:	b21b      	sxth	r3, r3
 800e632:	f303 0307 	ssat	r3, #8, r3
 800e636:	2a01      	cmp	r2, #1
 800e638:	704b      	strb	r3, [r1, #1]
 800e63a:	d013      	beq.n	800e664 <arm_float_to_q7+0x178>
 800e63c:	edd0 7a02 	vldr	s15, [r0, #8]
 800e640:	ee27 5a85 	vmul.f32	s10, s15, s10
 800e644:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 800e648:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e64c:	fe77 7a25 	vselgt.f32	s15, s14, s11
 800e650:	ee77 7a85 	vadd.f32	s15, s15, s10
 800e654:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e658:	ee17 3a90 	vmov	r3, s15
 800e65c:	b21b      	sxth	r3, r3
 800e65e:	f303 0307 	ssat	r3, #8, r3
 800e662:	708b      	strb	r3, [r1, #2]
 800e664:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e666:	f307 0707 	ssat	r7, #8, r7
 800e66a:	f80c 7c01 	strb.w	r7, [ip, #-1]
 800e66e:	f10c 0c04 	add.w	ip, ip, #4
 800e672:	f10e 0e10 	add.w	lr, lr, #16
 800e676:	45a4      	cmp	ip, r4
 800e678:	f47f af48 	bne.w	800e50c <arm_float_to_q7+0x20>
 800e67c:	e7a6      	b.n	800e5cc <arm_float_to_q7+0xe0>
 800e67e:	bf00      	nop
 800e680:	43000000 	.word	0x43000000

0800e684 <arm_q15_to_float>:
 800e684:	b530      	push	{r4, r5, lr}
 800e686:	0894      	lsrs	r4, r2, #2
 800e688:	d038      	beq.n	800e6fc <arm_q15_to_float+0x78>
 800e68a:	f100 0c08 	add.w	ip, r0, #8
 800e68e:	ed9f 7a2f 	vldr	s14, [pc, #188]	; 800e74c <arm_q15_to_float+0xc8>
 800e692:	f101 0310 	add.w	r3, r1, #16
 800e696:	46a6      	mov	lr, r4
 800e698:	f93c 5c08 	ldrsh.w	r5, [ip, #-8]
 800e69c:	3310      	adds	r3, #16
 800e69e:	f10c 0c08 	add.w	ip, ip, #8
 800e6a2:	f1be 0e01 	subs.w	lr, lr, #1
 800e6a6:	ee07 5a90 	vmov	s15, r5
 800e6aa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e6ae:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e6b2:	ed43 7a08 	vstr	s15, [r3, #-32]	; 0xffffffe0
 800e6b6:	f93c 5c0e 	ldrsh.w	r5, [ip, #-14]
 800e6ba:	ee07 5a90 	vmov	s15, r5
 800e6be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e6c2:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e6c6:	ed43 7a07 	vstr	s15, [r3, #-28]	; 0xffffffe4
 800e6ca:	f93c 5c0c 	ldrsh.w	r5, [ip, #-12]
 800e6ce:	ee07 5a90 	vmov	s15, r5
 800e6d2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e6d6:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e6da:	ed43 7a06 	vstr	s15, [r3, #-24]	; 0xffffffe8
 800e6de:	f93c 5c0a 	ldrsh.w	r5, [ip, #-10]
 800e6e2:	ee07 5a90 	vmov	s15, r5
 800e6e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e6ea:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e6ee:	ed43 7a05 	vstr	s15, [r3, #-20]	; 0xffffffec
 800e6f2:	d1d1      	bne.n	800e698 <arm_q15_to_float+0x14>
 800e6f4:	eb01 1104 	add.w	r1, r1, r4, lsl #4
 800e6f8:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 800e6fc:	f012 0203 	ands.w	r2, r2, #3
 800e700:	d023      	beq.n	800e74a <arm_q15_to_float+0xc6>
 800e702:	f9b0 3000 	ldrsh.w	r3, [r0]
 800e706:	3a01      	subs	r2, #1
 800e708:	ed9f 7a10 	vldr	s14, [pc, #64]	; 800e74c <arm_q15_to_float+0xc8>
 800e70c:	ee07 3a90 	vmov	s15, r3
 800e710:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e714:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e718:	edc1 7a00 	vstr	s15, [r1]
 800e71c:	d015      	beq.n	800e74a <arm_q15_to_float+0xc6>
 800e71e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800e722:	2a01      	cmp	r2, #1
 800e724:	ee07 3a90 	vmov	s15, r3
 800e728:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e72c:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e730:	edc1 7a01 	vstr	s15, [r1, #4]
 800e734:	d009      	beq.n	800e74a <arm_q15_to_float+0xc6>
 800e736:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800e73a:	ee07 3a90 	vmov	s15, r3
 800e73e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e742:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e746:	edc1 7a02 	vstr	s15, [r1, #8]
 800e74a:	bd30      	pop	{r4, r5, pc}
 800e74c:	38000000 	.word	0x38000000

0800e750 <arm_q7_to_float>:
 800e750:	b530      	push	{r4, r5, lr}
 800e752:	0894      	lsrs	r4, r2, #2
 800e754:	d036      	beq.n	800e7c4 <arm_q7_to_float+0x74>
 800e756:	1d03      	adds	r3, r0, #4
 800e758:	eb00 0c84 	add.w	ip, r0, r4, lsl #2
 800e75c:	ed9f 7a2d 	vldr	s14, [pc, #180]	; 800e814 <arm_q7_to_float+0xc4>
 800e760:	f101 0010 	add.w	r0, r1, #16
 800e764:	f913 ec04 	ldrsb.w	lr, [r3, #-4]
 800e768:	3010      	adds	r0, #16
 800e76a:	ee07 ea90 	vmov	s15, lr
 800e76e:	469e      	mov	lr, r3
 800e770:	3304      	adds	r3, #4
 800e772:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e776:	45e6      	cmp	lr, ip
 800e778:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e77c:	ed40 7a08 	vstr	s15, [r0, #-32]	; 0xffffffe0
 800e780:	f913 5c07 	ldrsb.w	r5, [r3, #-7]
 800e784:	ee07 5a90 	vmov	s15, r5
 800e788:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e78c:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e790:	ed40 7a07 	vstr	s15, [r0, #-28]	; 0xffffffe4
 800e794:	f913 5c06 	ldrsb.w	r5, [r3, #-6]
 800e798:	ee07 5a90 	vmov	s15, r5
 800e79c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e7a0:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e7a4:	ed40 7a06 	vstr	s15, [r0, #-24]	; 0xffffffe8
 800e7a8:	f913 5c05 	ldrsb.w	r5, [r3, #-5]
 800e7ac:	ee07 5a90 	vmov	s15, r5
 800e7b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e7b4:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e7b8:	ed40 7a05 	vstr	s15, [r0, #-20]	; 0xffffffec
 800e7bc:	d1d2      	bne.n	800e764 <arm_q7_to_float+0x14>
 800e7be:	eb01 1104 	add.w	r1, r1, r4, lsl #4
 800e7c2:	4660      	mov	r0, ip
 800e7c4:	f012 0203 	ands.w	r2, r2, #3
 800e7c8:	d023      	beq.n	800e812 <arm_q7_to_float+0xc2>
 800e7ca:	f990 3000 	ldrsb.w	r3, [r0]
 800e7ce:	3a01      	subs	r2, #1
 800e7d0:	ed9f 7a10 	vldr	s14, [pc, #64]	; 800e814 <arm_q7_to_float+0xc4>
 800e7d4:	ee07 3a90 	vmov	s15, r3
 800e7d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e7dc:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e7e0:	edc1 7a00 	vstr	s15, [r1]
 800e7e4:	d015      	beq.n	800e812 <arm_q7_to_float+0xc2>
 800e7e6:	f990 3001 	ldrsb.w	r3, [r0, #1]
 800e7ea:	2a01      	cmp	r2, #1
 800e7ec:	ee07 3a90 	vmov	s15, r3
 800e7f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e7f4:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e7f8:	edc1 7a01 	vstr	s15, [r1, #4]
 800e7fc:	d009      	beq.n	800e812 <arm_q7_to_float+0xc2>
 800e7fe:	f990 3002 	ldrsb.w	r3, [r0, #2]
 800e802:	ee07 3a90 	vmov	s15, r3
 800e806:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e80a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e80e:	edc1 7a02 	vstr	s15, [r1, #8]
 800e812:	bd30      	pop	{r4, r5, pc}
 800e814:	3c000000 	.word	0x3c000000

0800e818 <ai_array_to_buffer_fmt>:
 800e818:	f3c0 4343 	ubfx	r3, r0, #17, #4
 800e81c:	2b02      	cmp	r3, #2
 800e81e:	d050      	beq.n	800e8c2 <ai_array_to_buffer_fmt+0xaa>
 800e820:	f020 427e 	bic.w	r2, r0, #4261412864	; 0xfe000000
 800e824:	4b29      	ldr	r3, [pc, #164]	; (800e8cc <ai_array_to_buffer_fmt+0xb4>)
 800e826:	429a      	cmp	r2, r3
 800e828:	d00b      	beq.n	800e842 <ai_array_to_buffer_fmt+0x2a>
 800e82a:	dc1c      	bgt.n	800e866 <ai_array_to_buffer_fmt+0x4e>
 800e82c:	4b28      	ldr	r3, [pc, #160]	; (800e8d0 <ai_array_to_buffer_fmt+0xb8>)
 800e82e:	429a      	cmp	r2, r3
 800e830:	d007      	beq.n	800e842 <ai_array_to_buffer_fmt+0x2a>
 800e832:	dd0b      	ble.n	800e84c <ai_array_to_buffer_fmt+0x34>
 800e834:	4b27      	ldr	r3, [pc, #156]	; (800e8d4 <ai_array_to_buffer_fmt+0xbc>)
 800e836:	429a      	cmp	r2, r3
 800e838:	d003      	beq.n	800e842 <ai_array_to_buffer_fmt+0x2a>
 800e83a:	f503 33fa 	add.w	r3, r3, #128000	; 0x1f400
 800e83e:	429a      	cmp	r2, r3
 800e840:	d131      	bne.n	800e8a6 <ai_array_to_buffer_fmt+0x8e>
 800e842:	4613      	mov	r3, r2
 800e844:	f000 40d0 	and.w	r0, r0, #1744830464	; 0x68000000
 800e848:	4318      	orrs	r0, r3
 800e84a:	4770      	bx	lr
 800e84c:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 800e850:	429a      	cmp	r2, r3
 800e852:	d0f6      	beq.n	800e842 <ai_array_to_buffer_fmt+0x2a>
 800e854:	dd2c      	ble.n	800e8b0 <ai_array_to_buffer_fmt+0x98>
 800e856:	4b20      	ldr	r3, [pc, #128]	; (800e8d8 <ai_array_to_buffer_fmt+0xc0>)
 800e858:	f000 40d0 	and.w	r0, r0, #1744830464	; 0x68000000
 800e85c:	429a      	cmp	r2, r3
 800e85e:	bf18      	it	ne
 800e860:	2340      	movne	r3, #64	; 0x40
 800e862:	4318      	orrs	r0, r3
 800e864:	4770      	bx	lr
 800e866:	4b1d      	ldr	r3, [pc, #116]	; (800e8dc <ai_array_to_buffer_fmt+0xc4>)
 800e868:	429a      	cmp	r2, r3
 800e86a:	d0ea      	beq.n	800e842 <ai_array_to_buffer_fmt+0x2a>
 800e86c:	dd0e      	ble.n	800e88c <ai_array_to_buffer_fmt+0x74>
 800e86e:	4b1c      	ldr	r3, [pc, #112]	; (800e8e0 <ai_array_to_buffer_fmt+0xc8>)
 800e870:	429a      	cmp	r2, r3
 800e872:	d0e6      	beq.n	800e842 <ai_array_to_buffer_fmt+0x2a>
 800e874:	f503 037e 	add.w	r3, r3, #16646144	; 0xfe0000
 800e878:	429a      	cmp	r2, r3
 800e87a:	d0e2      	beq.n	800e842 <ai_array_to_buffer_fmt+0x2a>
 800e87c:	4b19      	ldr	r3, [pc, #100]	; (800e8e4 <ai_array_to_buffer_fmt+0xcc>)
 800e87e:	f000 40d0 	and.w	r0, r0, #1744830464	; 0x68000000
 800e882:	429a      	cmp	r2, r3
 800e884:	bf18      	it	ne
 800e886:	2340      	movne	r3, #64	; 0x40
 800e888:	4318      	orrs	r0, r3
 800e88a:	4770      	bx	lr
 800e88c:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 800e890:	429a      	cmp	r2, r3
 800e892:	d0d6      	beq.n	800e842 <ai_array_to_buffer_fmt+0x2a>
 800e894:	3307      	adds	r3, #7
 800e896:	429a      	cmp	r2, r3
 800e898:	d0d3      	beq.n	800e842 <ai_array_to_buffer_fmt+0x2a>
 800e89a:	f2a3 3387 	subw	r3, r3, #903	; 0x387
 800e89e:	429a      	cmp	r2, r3
 800e8a0:	bf18      	it	ne
 800e8a2:	2340      	movne	r3, #64	; 0x40
 800e8a4:	e7ce      	b.n	800e844 <ai_array_to_buffer_fmt+0x2c>
 800e8a6:	4b10      	ldr	r3, [pc, #64]	; (800e8e8 <ai_array_to_buffer_fmt+0xd0>)
 800e8a8:	429a      	cmp	r2, r3
 800e8aa:	bf18      	it	ne
 800e8ac:	2340      	movne	r3, #64	; 0x40
 800e8ae:	e7c9      	b.n	800e844 <ai_array_to_buffer_fmt+0x2c>
 800e8b0:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 800e8b4:	429a      	cmp	r2, r3
 800e8b6:	d0c4      	beq.n	800e842 <ai_array_to_buffer_fmt+0x2a>
 800e8b8:	3380      	adds	r3, #128	; 0x80
 800e8ba:	429a      	cmp	r2, r3
 800e8bc:	bf18      	it	ne
 800e8be:	2340      	movne	r3, #64	; 0x40
 800e8c0:	e7c0      	b.n	800e844 <ai_array_to_buffer_fmt+0x2c>
 800e8c2:	4b0a      	ldr	r3, [pc, #40]	; (800e8ec <ai_array_to_buffer_fmt+0xd4>)
 800e8c4:	4003      	ands	r3, r0
 800e8c6:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800e8ca:	e7bb      	b.n	800e844 <ai_array_to_buffer_fmt+0x2c>
 800e8cc:	00840040 	.word	0x00840040
 800e8d0:	00040840 	.word	0x00040840
 800e8d4:	00041040 	.word	0x00041040
 800e8d8:	00040447 	.word	0x00040447
 800e8dc:	00840840 	.word	0x00840840
 800e8e0:	00841040 	.word	0x00841040
 800e8e4:	0084084f 	.word	0x0084084f
 800e8e8:	0004084f 	.word	0x0004084f
 800e8ec:	00803fff 	.word	0x00803fff

0800e8f0 <ai_array_get_byte_size>:
 800e8f0:	b319      	cbz	r1, 800e93a <ai_array_get_byte_size+0x4a>
 800e8f2:	f3c0 13c6 	ubfx	r3, r0, #7, #7
 800e8f6:	f3c0 4243 	ubfx	r2, r0, #17, #4
 800e8fa:	f3c0 5c41 	ubfx	ip, r0, #21, #2
 800e8fe:	11c0      	asrs	r0, r0, #7
 800e900:	fb03 f101 	mul.w	r1, r3, r1
 800e904:	2a04      	cmp	r2, #4
 800e906:	f101 0107 	add.w	r1, r1, #7
 800e90a:	f021 0107 	bic.w	r1, r1, #7
 800e90e:	fa21 f10c 	lsr.w	r1, r1, ip
 800e912:	d00b      	beq.n	800e92c <ai_array_get_byte_size+0x3c>
 800e914:	2a08      	cmp	r2, #8
 800e916:	d002      	beq.n	800e91e <ai_array_get_byte_size+0x2e>
 800e918:	3107      	adds	r1, #7
 800e91a:	08c8      	lsrs	r0, r1, #3
 800e91c:	4770      	bx	lr
 800e91e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800e922:	eb01 2100 	add.w	r1, r1, r0, lsl #8
 800e926:	3107      	adds	r1, #7
 800e928:	08c8      	lsrs	r0, r1, #3
 800e92a:	4770      	bx	lr
 800e92c:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800e930:	eb01 1100 	add.w	r1, r1, r0, lsl #4
 800e934:	3107      	adds	r1, #7
 800e936:	08c8      	lsrs	r0, r1, #3
 800e938:	4770      	bx	lr
 800e93a:	4608      	mov	r0, r1
 800e93c:	4770      	bx	lr
 800e93e:	bf00      	nop

0800e940 <ai_array_get_data_byte_size>:
 800e940:	b161      	cbz	r1, 800e95c <ai_array_get_data_byte_size+0x1c>
 800e942:	f3c0 13c6 	ubfx	r3, r0, #7, #7
 800e946:	f3c0 5241 	ubfx	r2, r0, #21, #2
 800e94a:	fb03 f101 	mul.w	r1, r3, r1
 800e94e:	1dc8      	adds	r0, r1, #7
 800e950:	f020 0007 	bic.w	r0, r0, #7
 800e954:	40d0      	lsrs	r0, r2
 800e956:	3007      	adds	r0, #7
 800e958:	08c0      	lsrs	r0, r0, #3
 800e95a:	4770      	bx	lr
 800e95c:	4608      	mov	r0, r1
 800e95e:	4770      	bx	lr

0800e960 <ai_version_get>:
 800e960:	0212      	lsls	r2, r2, #8
 800e962:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800e966:	ea42 6000 	orr.w	r0, r2, r0, lsl #24
 800e96a:	4770      	bx	lr

0800e96c <ai_platform_version_get>:
 800e96c:	0e01      	lsrs	r1, r0, #24
 800e96e:	2300      	movs	r3, #0
 800e970:	f3c0 4207 	ubfx	r2, r0, #16, #8
 800e974:	f3c0 2007 	ubfx	r0, r0, #8, #8
 800e978:	f361 0307 	bfi	r3, r1, #0, #8
 800e97c:	b082      	sub	sp, #8
 800e97e:	f362 230f 	bfi	r3, r2, #8, #8
 800e982:	f360 4317 	bfi	r3, r0, #16, #8
 800e986:	f023 407f 	bic.w	r0, r3, #4278190080	; 0xff000000
 800e98a:	b002      	add	sp, #8
 800e98c:	4770      	bx	lr
 800e98e:	bf00      	nop

0800e990 <get_tensor_byte_size>:
 800e990:	b430      	push	{r4, r5}
 800e992:	6985      	ldr	r5, [r0, #24]
 800e994:	68c4      	ldr	r4, [r0, #12]
 800e996:	6941      	ldr	r1, [r0, #20]
 800e998:	4b06      	ldr	r3, [pc, #24]	; (800e9b4 <get_tensor_byte_size+0x24>)
 800e99a:	6828      	ldr	r0, [r5, #0]
 800e99c:	4a06      	ldr	r2, [pc, #24]	; (800e9b8 <get_tensor_byte_size+0x28>)
 800e99e:	4003      	ands	r3, r0
 800e9a0:	68c9      	ldr	r1, [r1, #12]
 800e9a2:	68e0      	ldr	r0, [r4, #12]
 800e9a4:	4293      	cmp	r3, r2
 800e9a6:	fb01 f000 	mul.w	r0, r1, r0
 800e9aa:	d101      	bne.n	800e9b0 <get_tensor_byte_size+0x20>
 800e9ac:	3007      	adds	r0, #7
 800e9ae:	08c0      	lsrs	r0, r0, #3
 800e9b0:	bc30      	pop	{r4, r5}
 800e9b2:	4770      	bx	lr
 800e9b4:	017fffff 	.word	0x017fffff
 800e9b8:	000400c0 	.word	0x000400c0

0800e9bc <malloc>:
 800e9bc:	4b02      	ldr	r3, [pc, #8]	; (800e9c8 <malloc+0xc>)
 800e9be:	4601      	mov	r1, r0
 800e9c0:	6818      	ldr	r0, [r3, #0]
 800e9c2:	f000 b82b 	b.w	800ea1c <_malloc_r>
 800e9c6:	bf00      	nop
 800e9c8:	20001d84 	.word	0x20001d84

0800e9cc <free>:
 800e9cc:	4b02      	ldr	r3, [pc, #8]	; (800e9d8 <free+0xc>)
 800e9ce:	4601      	mov	r1, r0
 800e9d0:	6818      	ldr	r0, [r3, #0]
 800e9d2:	f001 bdcd 	b.w	8010570 <_free_r>
 800e9d6:	bf00      	nop
 800e9d8:	20001d84 	.word	0x20001d84

0800e9dc <sbrk_aligned>:
 800e9dc:	b570      	push	{r4, r5, r6, lr}
 800e9de:	4e0e      	ldr	r6, [pc, #56]	; (800ea18 <sbrk_aligned+0x3c>)
 800e9e0:	460c      	mov	r4, r1
 800e9e2:	6831      	ldr	r1, [r6, #0]
 800e9e4:	4605      	mov	r5, r0
 800e9e6:	b911      	cbnz	r1, 800e9ee <sbrk_aligned+0x12>
 800e9e8:	f000 ff54 	bl	800f894 <_sbrk_r>
 800e9ec:	6030      	str	r0, [r6, #0]
 800e9ee:	4621      	mov	r1, r4
 800e9f0:	4628      	mov	r0, r5
 800e9f2:	f000 ff4f 	bl	800f894 <_sbrk_r>
 800e9f6:	1c43      	adds	r3, r0, #1
 800e9f8:	d00a      	beq.n	800ea10 <sbrk_aligned+0x34>
 800e9fa:	1cc4      	adds	r4, r0, #3
 800e9fc:	f024 0403 	bic.w	r4, r4, #3
 800ea00:	42a0      	cmp	r0, r4
 800ea02:	d007      	beq.n	800ea14 <sbrk_aligned+0x38>
 800ea04:	1a21      	subs	r1, r4, r0
 800ea06:	4628      	mov	r0, r5
 800ea08:	f000 ff44 	bl	800f894 <_sbrk_r>
 800ea0c:	3001      	adds	r0, #1
 800ea0e:	d101      	bne.n	800ea14 <sbrk_aligned+0x38>
 800ea10:	f04f 34ff 	mov.w	r4, #4294967295
 800ea14:	4620      	mov	r0, r4
 800ea16:	bd70      	pop	{r4, r5, r6, pc}
 800ea18:	2001d8cc 	.word	0x2001d8cc

0800ea1c <_malloc_r>:
 800ea1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ea20:	1ccd      	adds	r5, r1, #3
 800ea22:	f025 0503 	bic.w	r5, r5, #3
 800ea26:	3508      	adds	r5, #8
 800ea28:	2d0c      	cmp	r5, #12
 800ea2a:	bf38      	it	cc
 800ea2c:	250c      	movcc	r5, #12
 800ea2e:	2d00      	cmp	r5, #0
 800ea30:	4607      	mov	r7, r0
 800ea32:	db01      	blt.n	800ea38 <_malloc_r+0x1c>
 800ea34:	42a9      	cmp	r1, r5
 800ea36:	d905      	bls.n	800ea44 <_malloc_r+0x28>
 800ea38:	230c      	movs	r3, #12
 800ea3a:	603b      	str	r3, [r7, #0]
 800ea3c:	2600      	movs	r6, #0
 800ea3e:	4630      	mov	r0, r6
 800ea40:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ea44:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 800eb18 <_malloc_r+0xfc>
 800ea48:	f000 f868 	bl	800eb1c <__malloc_lock>
 800ea4c:	f8d8 3000 	ldr.w	r3, [r8]
 800ea50:	461c      	mov	r4, r3
 800ea52:	bb5c      	cbnz	r4, 800eaac <_malloc_r+0x90>
 800ea54:	4629      	mov	r1, r5
 800ea56:	4638      	mov	r0, r7
 800ea58:	f7ff ffc0 	bl	800e9dc <sbrk_aligned>
 800ea5c:	1c43      	adds	r3, r0, #1
 800ea5e:	4604      	mov	r4, r0
 800ea60:	d155      	bne.n	800eb0e <_malloc_r+0xf2>
 800ea62:	f8d8 4000 	ldr.w	r4, [r8]
 800ea66:	4626      	mov	r6, r4
 800ea68:	2e00      	cmp	r6, #0
 800ea6a:	d145      	bne.n	800eaf8 <_malloc_r+0xdc>
 800ea6c:	2c00      	cmp	r4, #0
 800ea6e:	d048      	beq.n	800eb02 <_malloc_r+0xe6>
 800ea70:	6823      	ldr	r3, [r4, #0]
 800ea72:	4631      	mov	r1, r6
 800ea74:	4638      	mov	r0, r7
 800ea76:	eb04 0903 	add.w	r9, r4, r3
 800ea7a:	f000 ff0b 	bl	800f894 <_sbrk_r>
 800ea7e:	4581      	cmp	r9, r0
 800ea80:	d13f      	bne.n	800eb02 <_malloc_r+0xe6>
 800ea82:	6821      	ldr	r1, [r4, #0]
 800ea84:	1a6d      	subs	r5, r5, r1
 800ea86:	4629      	mov	r1, r5
 800ea88:	4638      	mov	r0, r7
 800ea8a:	f7ff ffa7 	bl	800e9dc <sbrk_aligned>
 800ea8e:	3001      	adds	r0, #1
 800ea90:	d037      	beq.n	800eb02 <_malloc_r+0xe6>
 800ea92:	6823      	ldr	r3, [r4, #0]
 800ea94:	442b      	add	r3, r5
 800ea96:	6023      	str	r3, [r4, #0]
 800ea98:	f8d8 3000 	ldr.w	r3, [r8]
 800ea9c:	2b00      	cmp	r3, #0
 800ea9e:	d038      	beq.n	800eb12 <_malloc_r+0xf6>
 800eaa0:	685a      	ldr	r2, [r3, #4]
 800eaa2:	42a2      	cmp	r2, r4
 800eaa4:	d12b      	bne.n	800eafe <_malloc_r+0xe2>
 800eaa6:	2200      	movs	r2, #0
 800eaa8:	605a      	str	r2, [r3, #4]
 800eaaa:	e00f      	b.n	800eacc <_malloc_r+0xb0>
 800eaac:	6822      	ldr	r2, [r4, #0]
 800eaae:	1b52      	subs	r2, r2, r5
 800eab0:	d41f      	bmi.n	800eaf2 <_malloc_r+0xd6>
 800eab2:	2a0b      	cmp	r2, #11
 800eab4:	d917      	bls.n	800eae6 <_malloc_r+0xca>
 800eab6:	1961      	adds	r1, r4, r5
 800eab8:	42a3      	cmp	r3, r4
 800eaba:	6025      	str	r5, [r4, #0]
 800eabc:	bf18      	it	ne
 800eabe:	6059      	strne	r1, [r3, #4]
 800eac0:	6863      	ldr	r3, [r4, #4]
 800eac2:	bf08      	it	eq
 800eac4:	f8c8 1000 	streq.w	r1, [r8]
 800eac8:	5162      	str	r2, [r4, r5]
 800eaca:	604b      	str	r3, [r1, #4]
 800eacc:	4638      	mov	r0, r7
 800eace:	f104 060b 	add.w	r6, r4, #11
 800ead2:	f000 f829 	bl	800eb28 <__malloc_unlock>
 800ead6:	f026 0607 	bic.w	r6, r6, #7
 800eada:	1d23      	adds	r3, r4, #4
 800eadc:	1af2      	subs	r2, r6, r3
 800eade:	d0ae      	beq.n	800ea3e <_malloc_r+0x22>
 800eae0:	1b9b      	subs	r3, r3, r6
 800eae2:	50a3      	str	r3, [r4, r2]
 800eae4:	e7ab      	b.n	800ea3e <_malloc_r+0x22>
 800eae6:	42a3      	cmp	r3, r4
 800eae8:	6862      	ldr	r2, [r4, #4]
 800eaea:	d1dd      	bne.n	800eaa8 <_malloc_r+0x8c>
 800eaec:	f8c8 2000 	str.w	r2, [r8]
 800eaf0:	e7ec      	b.n	800eacc <_malloc_r+0xb0>
 800eaf2:	4623      	mov	r3, r4
 800eaf4:	6864      	ldr	r4, [r4, #4]
 800eaf6:	e7ac      	b.n	800ea52 <_malloc_r+0x36>
 800eaf8:	4634      	mov	r4, r6
 800eafa:	6876      	ldr	r6, [r6, #4]
 800eafc:	e7b4      	b.n	800ea68 <_malloc_r+0x4c>
 800eafe:	4613      	mov	r3, r2
 800eb00:	e7cc      	b.n	800ea9c <_malloc_r+0x80>
 800eb02:	230c      	movs	r3, #12
 800eb04:	603b      	str	r3, [r7, #0]
 800eb06:	4638      	mov	r0, r7
 800eb08:	f000 f80e 	bl	800eb28 <__malloc_unlock>
 800eb0c:	e797      	b.n	800ea3e <_malloc_r+0x22>
 800eb0e:	6025      	str	r5, [r4, #0]
 800eb10:	e7dc      	b.n	800eacc <_malloc_r+0xb0>
 800eb12:	605b      	str	r3, [r3, #4]
 800eb14:	deff      	udf	#255	; 0xff
 800eb16:	bf00      	nop
 800eb18:	2001d8c8 	.word	0x2001d8c8

0800eb1c <__malloc_lock>:
 800eb1c:	4801      	ldr	r0, [pc, #4]	; (800eb24 <__malloc_lock+0x8>)
 800eb1e:	f000 bf05 	b.w	800f92c <__retarget_lock_acquire_recursive>
 800eb22:	bf00      	nop
 800eb24:	2001da10 	.word	0x2001da10

0800eb28 <__malloc_unlock>:
 800eb28:	4801      	ldr	r0, [pc, #4]	; (800eb30 <__malloc_unlock+0x8>)
 800eb2a:	f000 bf00 	b.w	800f92e <__retarget_lock_release_recursive>
 800eb2e:	bf00      	nop
 800eb30:	2001da10 	.word	0x2001da10

0800eb34 <srand>:
 800eb34:	b538      	push	{r3, r4, r5, lr}
 800eb36:	4b10      	ldr	r3, [pc, #64]	; (800eb78 <srand+0x44>)
 800eb38:	681d      	ldr	r5, [r3, #0]
 800eb3a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800eb3c:	4604      	mov	r4, r0
 800eb3e:	b9b3      	cbnz	r3, 800eb6e <srand+0x3a>
 800eb40:	2018      	movs	r0, #24
 800eb42:	f7f4 fead 	bl	80038a0 <__wrap_malloc>
 800eb46:	4602      	mov	r2, r0
 800eb48:	6328      	str	r0, [r5, #48]	; 0x30
 800eb4a:	b920      	cbnz	r0, 800eb56 <srand+0x22>
 800eb4c:	4b0b      	ldr	r3, [pc, #44]	; (800eb7c <srand+0x48>)
 800eb4e:	480c      	ldr	r0, [pc, #48]	; (800eb80 <srand+0x4c>)
 800eb50:	2146      	movs	r1, #70	; 0x46
 800eb52:	f000 fefb 	bl	800f94c <__assert_func>
 800eb56:	490b      	ldr	r1, [pc, #44]	; (800eb84 <srand+0x50>)
 800eb58:	4b0b      	ldr	r3, [pc, #44]	; (800eb88 <srand+0x54>)
 800eb5a:	e9c0 1300 	strd	r1, r3, [r0]
 800eb5e:	4b0b      	ldr	r3, [pc, #44]	; (800eb8c <srand+0x58>)
 800eb60:	6083      	str	r3, [r0, #8]
 800eb62:	230b      	movs	r3, #11
 800eb64:	8183      	strh	r3, [r0, #12]
 800eb66:	2100      	movs	r1, #0
 800eb68:	2001      	movs	r0, #1
 800eb6a:	e9c2 0104 	strd	r0, r1, [r2, #16]
 800eb6e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800eb70:	2200      	movs	r2, #0
 800eb72:	611c      	str	r4, [r3, #16]
 800eb74:	615a      	str	r2, [r3, #20]
 800eb76:	bd38      	pop	{r3, r4, r5, pc}
 800eb78:	20001d84 	.word	0x20001d84
 800eb7c:	080368b0 	.word	0x080368b0
 800eb80:	080368c7 	.word	0x080368c7
 800eb84:	abcd330e 	.word	0xabcd330e
 800eb88:	e66d1234 	.word	0xe66d1234
 800eb8c:	0005deec 	.word	0x0005deec

0800eb90 <rand>:
 800eb90:	4b16      	ldr	r3, [pc, #88]	; (800ebec <rand+0x5c>)
 800eb92:	b510      	push	{r4, lr}
 800eb94:	681c      	ldr	r4, [r3, #0]
 800eb96:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800eb98:	b9b3      	cbnz	r3, 800ebc8 <rand+0x38>
 800eb9a:	2018      	movs	r0, #24
 800eb9c:	f7f4 fe80 	bl	80038a0 <__wrap_malloc>
 800eba0:	4602      	mov	r2, r0
 800eba2:	6320      	str	r0, [r4, #48]	; 0x30
 800eba4:	b920      	cbnz	r0, 800ebb0 <rand+0x20>
 800eba6:	4b12      	ldr	r3, [pc, #72]	; (800ebf0 <rand+0x60>)
 800eba8:	4812      	ldr	r0, [pc, #72]	; (800ebf4 <rand+0x64>)
 800ebaa:	2152      	movs	r1, #82	; 0x52
 800ebac:	f000 fece 	bl	800f94c <__assert_func>
 800ebb0:	4911      	ldr	r1, [pc, #68]	; (800ebf8 <rand+0x68>)
 800ebb2:	4b12      	ldr	r3, [pc, #72]	; (800ebfc <rand+0x6c>)
 800ebb4:	e9c0 1300 	strd	r1, r3, [r0]
 800ebb8:	4b11      	ldr	r3, [pc, #68]	; (800ec00 <rand+0x70>)
 800ebba:	6083      	str	r3, [r0, #8]
 800ebbc:	230b      	movs	r3, #11
 800ebbe:	8183      	strh	r3, [r0, #12]
 800ebc0:	2100      	movs	r1, #0
 800ebc2:	2001      	movs	r0, #1
 800ebc4:	e9c2 0104 	strd	r0, r1, [r2, #16]
 800ebc8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ebca:	480e      	ldr	r0, [pc, #56]	; (800ec04 <rand+0x74>)
 800ebcc:	690b      	ldr	r3, [r1, #16]
 800ebce:	694c      	ldr	r4, [r1, #20]
 800ebd0:	4a0d      	ldr	r2, [pc, #52]	; (800ec08 <rand+0x78>)
 800ebd2:	4358      	muls	r0, r3
 800ebd4:	fb02 0004 	mla	r0, r2, r4, r0
 800ebd8:	fba3 3202 	umull	r3, r2, r3, r2
 800ebdc:	3301      	adds	r3, #1
 800ebde:	eb40 0002 	adc.w	r0, r0, r2
 800ebe2:	e9c1 3004 	strd	r3, r0, [r1, #16]
 800ebe6:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 800ebea:	bd10      	pop	{r4, pc}
 800ebec:	20001d84 	.word	0x20001d84
 800ebf0:	080368b0 	.word	0x080368b0
 800ebf4:	080368c7 	.word	0x080368c7
 800ebf8:	abcd330e 	.word	0xabcd330e
 800ebfc:	e66d1234 	.word	0xe66d1234
 800ec00:	0005deec 	.word	0x0005deec
 800ec04:	5851f42d 	.word	0x5851f42d
 800ec08:	4c957f2d 	.word	0x4c957f2d

0800ec0c <__cvt>:
 800ec0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ec0e:	ed2d 8b02 	vpush	{d8}
 800ec12:	eeb0 8b40 	vmov.f64	d8, d0
 800ec16:	b085      	sub	sp, #20
 800ec18:	4617      	mov	r7, r2
 800ec1a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800ec1c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800ec1e:	ee18 2a90 	vmov	r2, s17
 800ec22:	f025 0520 	bic.w	r5, r5, #32
 800ec26:	2a00      	cmp	r2, #0
 800ec28:	bfb6      	itet	lt
 800ec2a:	222d      	movlt	r2, #45	; 0x2d
 800ec2c:	2200      	movge	r2, #0
 800ec2e:	eeb1 8b40 	vneglt.f64	d8, d0
 800ec32:	2d46      	cmp	r5, #70	; 0x46
 800ec34:	460c      	mov	r4, r1
 800ec36:	701a      	strb	r2, [r3, #0]
 800ec38:	d004      	beq.n	800ec44 <__cvt+0x38>
 800ec3a:	2d45      	cmp	r5, #69	; 0x45
 800ec3c:	d100      	bne.n	800ec40 <__cvt+0x34>
 800ec3e:	3401      	adds	r4, #1
 800ec40:	2102      	movs	r1, #2
 800ec42:	e000      	b.n	800ec46 <__cvt+0x3a>
 800ec44:	2103      	movs	r1, #3
 800ec46:	ab03      	add	r3, sp, #12
 800ec48:	9301      	str	r3, [sp, #4]
 800ec4a:	ab02      	add	r3, sp, #8
 800ec4c:	9300      	str	r3, [sp, #0]
 800ec4e:	4622      	mov	r2, r4
 800ec50:	4633      	mov	r3, r6
 800ec52:	eeb0 0b48 	vmov.f64	d0, d8
 800ec56:	f000 ff1f 	bl	800fa98 <_dtoa_r>
 800ec5a:	2d47      	cmp	r5, #71	; 0x47
 800ec5c:	d101      	bne.n	800ec62 <__cvt+0x56>
 800ec5e:	07fb      	lsls	r3, r7, #31
 800ec60:	d51a      	bpl.n	800ec98 <__cvt+0x8c>
 800ec62:	2d46      	cmp	r5, #70	; 0x46
 800ec64:	eb00 0204 	add.w	r2, r0, r4
 800ec68:	d10c      	bne.n	800ec84 <__cvt+0x78>
 800ec6a:	7803      	ldrb	r3, [r0, #0]
 800ec6c:	2b30      	cmp	r3, #48	; 0x30
 800ec6e:	d107      	bne.n	800ec80 <__cvt+0x74>
 800ec70:	eeb5 8b40 	vcmp.f64	d8, #0.0
 800ec74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ec78:	bf1c      	itt	ne
 800ec7a:	f1c4 0401 	rsbne	r4, r4, #1
 800ec7e:	6034      	strne	r4, [r6, #0]
 800ec80:	6833      	ldr	r3, [r6, #0]
 800ec82:	441a      	add	r2, r3
 800ec84:	eeb5 8b40 	vcmp.f64	d8, #0.0
 800ec88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ec8c:	bf08      	it	eq
 800ec8e:	9203      	streq	r2, [sp, #12]
 800ec90:	2130      	movs	r1, #48	; 0x30
 800ec92:	9b03      	ldr	r3, [sp, #12]
 800ec94:	4293      	cmp	r3, r2
 800ec96:	d307      	bcc.n	800eca8 <__cvt+0x9c>
 800ec98:	9b03      	ldr	r3, [sp, #12]
 800ec9a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800ec9c:	1a1b      	subs	r3, r3, r0
 800ec9e:	6013      	str	r3, [r2, #0]
 800eca0:	b005      	add	sp, #20
 800eca2:	ecbd 8b02 	vpop	{d8}
 800eca6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eca8:	1c5c      	adds	r4, r3, #1
 800ecaa:	9403      	str	r4, [sp, #12]
 800ecac:	7019      	strb	r1, [r3, #0]
 800ecae:	e7f0      	b.n	800ec92 <__cvt+0x86>

0800ecb0 <__exponent>:
 800ecb0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ecb2:	4603      	mov	r3, r0
 800ecb4:	2900      	cmp	r1, #0
 800ecb6:	bfb8      	it	lt
 800ecb8:	4249      	neglt	r1, r1
 800ecba:	f803 2b02 	strb.w	r2, [r3], #2
 800ecbe:	bfb4      	ite	lt
 800ecc0:	222d      	movlt	r2, #45	; 0x2d
 800ecc2:	222b      	movge	r2, #43	; 0x2b
 800ecc4:	2909      	cmp	r1, #9
 800ecc6:	7042      	strb	r2, [r0, #1]
 800ecc8:	dd2a      	ble.n	800ed20 <__exponent+0x70>
 800ecca:	f10d 0207 	add.w	r2, sp, #7
 800ecce:	4617      	mov	r7, r2
 800ecd0:	260a      	movs	r6, #10
 800ecd2:	4694      	mov	ip, r2
 800ecd4:	fb91 f5f6 	sdiv	r5, r1, r6
 800ecd8:	fb06 1415 	mls	r4, r6, r5, r1
 800ecdc:	3430      	adds	r4, #48	; 0x30
 800ecde:	f80c 4c01 	strb.w	r4, [ip, #-1]
 800ece2:	460c      	mov	r4, r1
 800ece4:	2c63      	cmp	r4, #99	; 0x63
 800ece6:	f102 32ff 	add.w	r2, r2, #4294967295
 800ecea:	4629      	mov	r1, r5
 800ecec:	dcf1      	bgt.n	800ecd2 <__exponent+0x22>
 800ecee:	3130      	adds	r1, #48	; 0x30
 800ecf0:	f1ac 0402 	sub.w	r4, ip, #2
 800ecf4:	f802 1c01 	strb.w	r1, [r2, #-1]
 800ecf8:	1c41      	adds	r1, r0, #1
 800ecfa:	4622      	mov	r2, r4
 800ecfc:	42ba      	cmp	r2, r7
 800ecfe:	d30a      	bcc.n	800ed16 <__exponent+0x66>
 800ed00:	f10d 0209 	add.w	r2, sp, #9
 800ed04:	eba2 020c 	sub.w	r2, r2, ip
 800ed08:	42bc      	cmp	r4, r7
 800ed0a:	bf88      	it	hi
 800ed0c:	2200      	movhi	r2, #0
 800ed0e:	4413      	add	r3, r2
 800ed10:	1a18      	subs	r0, r3, r0
 800ed12:	b003      	add	sp, #12
 800ed14:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ed16:	f812 5b01 	ldrb.w	r5, [r2], #1
 800ed1a:	f801 5f01 	strb.w	r5, [r1, #1]!
 800ed1e:	e7ed      	b.n	800ecfc <__exponent+0x4c>
 800ed20:	2330      	movs	r3, #48	; 0x30
 800ed22:	3130      	adds	r1, #48	; 0x30
 800ed24:	7083      	strb	r3, [r0, #2]
 800ed26:	70c1      	strb	r1, [r0, #3]
 800ed28:	1d03      	adds	r3, r0, #4
 800ed2a:	e7f1      	b.n	800ed10 <__exponent+0x60>
 800ed2c:	0000      	movs	r0, r0
	...

0800ed30 <_printf_float>:
 800ed30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed34:	b08b      	sub	sp, #44	; 0x2c
 800ed36:	460c      	mov	r4, r1
 800ed38:	f8dd 8050 	ldr.w	r8, [sp, #80]	; 0x50
 800ed3c:	4616      	mov	r6, r2
 800ed3e:	461f      	mov	r7, r3
 800ed40:	4605      	mov	r5, r0
 800ed42:	f000 fd6f 	bl	800f824 <_localeconv_r>
 800ed46:	f8d0 b000 	ldr.w	fp, [r0]
 800ed4a:	4658      	mov	r0, fp
 800ed4c:	f7f1 fac8 	bl	80002e0 <strlen>
 800ed50:	2300      	movs	r3, #0
 800ed52:	9308      	str	r3, [sp, #32]
 800ed54:	f8d8 3000 	ldr.w	r3, [r8]
 800ed58:	f894 9018 	ldrb.w	r9, [r4, #24]
 800ed5c:	6822      	ldr	r2, [r4, #0]
 800ed5e:	3307      	adds	r3, #7
 800ed60:	f023 0307 	bic.w	r3, r3, #7
 800ed64:	f103 0108 	add.w	r1, r3, #8
 800ed68:	f8c8 1000 	str.w	r1, [r8]
 800ed6c:	ed93 0b00 	vldr	d0, [r3]
 800ed70:	ed9f 6b97 	vldr	d6, [pc, #604]	; 800efd0 <_printf_float+0x2a0>
 800ed74:	eeb0 7bc0 	vabs.f64	d7, d0
 800ed78:	eeb4 7b46 	vcmp.f64	d7, d6
 800ed7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ed80:	ed84 0b12 	vstr	d0, [r4, #72]	; 0x48
 800ed84:	4682      	mov	sl, r0
 800ed86:	dd24      	ble.n	800edd2 <_printf_float+0xa2>
 800ed88:	eeb5 0bc0 	vcmpe.f64	d0, #0.0
 800ed8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ed90:	d502      	bpl.n	800ed98 <_printf_float+0x68>
 800ed92:	232d      	movs	r3, #45	; 0x2d
 800ed94:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ed98:	498f      	ldr	r1, [pc, #572]	; (800efd8 <_printf_float+0x2a8>)
 800ed9a:	4b90      	ldr	r3, [pc, #576]	; (800efdc <_printf_float+0x2ac>)
 800ed9c:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 800eda0:	bf94      	ite	ls
 800eda2:	4688      	movls	r8, r1
 800eda4:	4698      	movhi	r8, r3
 800eda6:	2303      	movs	r3, #3
 800eda8:	6123      	str	r3, [r4, #16]
 800edaa:	f022 0204 	bic.w	r2, r2, #4
 800edae:	2300      	movs	r3, #0
 800edb0:	6022      	str	r2, [r4, #0]
 800edb2:	9304      	str	r3, [sp, #16]
 800edb4:	9700      	str	r7, [sp, #0]
 800edb6:	4633      	mov	r3, r6
 800edb8:	aa09      	add	r2, sp, #36	; 0x24
 800edba:	4621      	mov	r1, r4
 800edbc:	4628      	mov	r0, r5
 800edbe:	f000 f9d1 	bl	800f164 <_printf_common>
 800edc2:	3001      	adds	r0, #1
 800edc4:	f040 808a 	bne.w	800eedc <_printf_float+0x1ac>
 800edc8:	f04f 30ff 	mov.w	r0, #4294967295
 800edcc:	b00b      	add	sp, #44	; 0x2c
 800edce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800edd2:	eeb4 0b40 	vcmp.f64	d0, d0
 800edd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800edda:	d709      	bvc.n	800edf0 <_printf_float+0xc0>
 800eddc:	ee10 3a90 	vmov	r3, s1
 800ede0:	2b00      	cmp	r3, #0
 800ede2:	bfbc      	itt	lt
 800ede4:	232d      	movlt	r3, #45	; 0x2d
 800ede6:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800edea:	497d      	ldr	r1, [pc, #500]	; (800efe0 <_printf_float+0x2b0>)
 800edec:	4b7d      	ldr	r3, [pc, #500]	; (800efe4 <_printf_float+0x2b4>)
 800edee:	e7d5      	b.n	800ed9c <_printf_float+0x6c>
 800edf0:	6863      	ldr	r3, [r4, #4]
 800edf2:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 800edf6:	9104      	str	r1, [sp, #16]
 800edf8:	1c59      	adds	r1, r3, #1
 800edfa:	d13c      	bne.n	800ee76 <_printf_float+0x146>
 800edfc:	2306      	movs	r3, #6
 800edfe:	6063      	str	r3, [r4, #4]
 800ee00:	2300      	movs	r3, #0
 800ee02:	9303      	str	r3, [sp, #12]
 800ee04:	ab08      	add	r3, sp, #32
 800ee06:	e9cd 9301 	strd	r9, r3, [sp, #4]
 800ee0a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ee0e:	ab07      	add	r3, sp, #28
 800ee10:	6861      	ldr	r1, [r4, #4]
 800ee12:	9300      	str	r3, [sp, #0]
 800ee14:	6022      	str	r2, [r4, #0]
 800ee16:	f10d 031b 	add.w	r3, sp, #27
 800ee1a:	4628      	mov	r0, r5
 800ee1c:	f7ff fef6 	bl	800ec0c <__cvt>
 800ee20:	9b04      	ldr	r3, [sp, #16]
 800ee22:	9907      	ldr	r1, [sp, #28]
 800ee24:	2b47      	cmp	r3, #71	; 0x47
 800ee26:	4680      	mov	r8, r0
 800ee28:	d108      	bne.n	800ee3c <_printf_float+0x10c>
 800ee2a:	1cc8      	adds	r0, r1, #3
 800ee2c:	db02      	blt.n	800ee34 <_printf_float+0x104>
 800ee2e:	6863      	ldr	r3, [r4, #4]
 800ee30:	4299      	cmp	r1, r3
 800ee32:	dd41      	ble.n	800eeb8 <_printf_float+0x188>
 800ee34:	f1a9 0902 	sub.w	r9, r9, #2
 800ee38:	fa5f f989 	uxtb.w	r9, r9
 800ee3c:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 800ee40:	d820      	bhi.n	800ee84 <_printf_float+0x154>
 800ee42:	3901      	subs	r1, #1
 800ee44:	464a      	mov	r2, r9
 800ee46:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800ee4a:	9107      	str	r1, [sp, #28]
 800ee4c:	f7ff ff30 	bl	800ecb0 <__exponent>
 800ee50:	9a08      	ldr	r2, [sp, #32]
 800ee52:	9004      	str	r0, [sp, #16]
 800ee54:	1813      	adds	r3, r2, r0
 800ee56:	2a01      	cmp	r2, #1
 800ee58:	6123      	str	r3, [r4, #16]
 800ee5a:	dc02      	bgt.n	800ee62 <_printf_float+0x132>
 800ee5c:	6822      	ldr	r2, [r4, #0]
 800ee5e:	07d2      	lsls	r2, r2, #31
 800ee60:	d501      	bpl.n	800ee66 <_printf_float+0x136>
 800ee62:	3301      	adds	r3, #1
 800ee64:	6123      	str	r3, [r4, #16]
 800ee66:	f89d 301b 	ldrb.w	r3, [sp, #27]
 800ee6a:	2b00      	cmp	r3, #0
 800ee6c:	d0a2      	beq.n	800edb4 <_printf_float+0x84>
 800ee6e:	232d      	movs	r3, #45	; 0x2d
 800ee70:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ee74:	e79e      	b.n	800edb4 <_printf_float+0x84>
 800ee76:	9904      	ldr	r1, [sp, #16]
 800ee78:	2947      	cmp	r1, #71	; 0x47
 800ee7a:	d1c1      	bne.n	800ee00 <_printf_float+0xd0>
 800ee7c:	2b00      	cmp	r3, #0
 800ee7e:	d1bf      	bne.n	800ee00 <_printf_float+0xd0>
 800ee80:	2301      	movs	r3, #1
 800ee82:	e7bc      	b.n	800edfe <_printf_float+0xce>
 800ee84:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 800ee88:	d118      	bne.n	800eebc <_printf_float+0x18c>
 800ee8a:	2900      	cmp	r1, #0
 800ee8c:	6863      	ldr	r3, [r4, #4]
 800ee8e:	dd0b      	ble.n	800eea8 <_printf_float+0x178>
 800ee90:	6121      	str	r1, [r4, #16]
 800ee92:	b913      	cbnz	r3, 800ee9a <_printf_float+0x16a>
 800ee94:	6822      	ldr	r2, [r4, #0]
 800ee96:	07d0      	lsls	r0, r2, #31
 800ee98:	d502      	bpl.n	800eea0 <_printf_float+0x170>
 800ee9a:	3301      	adds	r3, #1
 800ee9c:	440b      	add	r3, r1
 800ee9e:	6123      	str	r3, [r4, #16]
 800eea0:	2300      	movs	r3, #0
 800eea2:	65a1      	str	r1, [r4, #88]	; 0x58
 800eea4:	9304      	str	r3, [sp, #16]
 800eea6:	e7de      	b.n	800ee66 <_printf_float+0x136>
 800eea8:	b913      	cbnz	r3, 800eeb0 <_printf_float+0x180>
 800eeaa:	6822      	ldr	r2, [r4, #0]
 800eeac:	07d2      	lsls	r2, r2, #31
 800eeae:	d501      	bpl.n	800eeb4 <_printf_float+0x184>
 800eeb0:	3302      	adds	r3, #2
 800eeb2:	e7f4      	b.n	800ee9e <_printf_float+0x16e>
 800eeb4:	2301      	movs	r3, #1
 800eeb6:	e7f2      	b.n	800ee9e <_printf_float+0x16e>
 800eeb8:	f04f 0967 	mov.w	r9, #103	; 0x67
 800eebc:	9b08      	ldr	r3, [sp, #32]
 800eebe:	4299      	cmp	r1, r3
 800eec0:	db05      	blt.n	800eece <_printf_float+0x19e>
 800eec2:	6823      	ldr	r3, [r4, #0]
 800eec4:	6121      	str	r1, [r4, #16]
 800eec6:	07d8      	lsls	r0, r3, #31
 800eec8:	d5ea      	bpl.n	800eea0 <_printf_float+0x170>
 800eeca:	1c4b      	adds	r3, r1, #1
 800eecc:	e7e7      	b.n	800ee9e <_printf_float+0x16e>
 800eece:	2900      	cmp	r1, #0
 800eed0:	bfd4      	ite	le
 800eed2:	f1c1 0202 	rsble	r2, r1, #2
 800eed6:	2201      	movgt	r2, #1
 800eed8:	4413      	add	r3, r2
 800eeda:	e7e0      	b.n	800ee9e <_printf_float+0x16e>
 800eedc:	6823      	ldr	r3, [r4, #0]
 800eede:	055a      	lsls	r2, r3, #21
 800eee0:	d407      	bmi.n	800eef2 <_printf_float+0x1c2>
 800eee2:	6923      	ldr	r3, [r4, #16]
 800eee4:	4642      	mov	r2, r8
 800eee6:	4631      	mov	r1, r6
 800eee8:	4628      	mov	r0, r5
 800eeea:	47b8      	blx	r7
 800eeec:	3001      	adds	r0, #1
 800eeee:	d12a      	bne.n	800ef46 <_printf_float+0x216>
 800eef0:	e76a      	b.n	800edc8 <_printf_float+0x98>
 800eef2:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 800eef6:	f240 80e0 	bls.w	800f0ba <_printf_float+0x38a>
 800eefa:	ed94 7b12 	vldr	d7, [r4, #72]	; 0x48
 800eefe:	eeb5 7b40 	vcmp.f64	d7, #0.0
 800ef02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ef06:	d133      	bne.n	800ef70 <_printf_float+0x240>
 800ef08:	4a37      	ldr	r2, [pc, #220]	; (800efe8 <_printf_float+0x2b8>)
 800ef0a:	2301      	movs	r3, #1
 800ef0c:	4631      	mov	r1, r6
 800ef0e:	4628      	mov	r0, r5
 800ef10:	47b8      	blx	r7
 800ef12:	3001      	adds	r0, #1
 800ef14:	f43f af58 	beq.w	800edc8 <_printf_float+0x98>
 800ef18:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800ef1c:	429a      	cmp	r2, r3
 800ef1e:	db02      	blt.n	800ef26 <_printf_float+0x1f6>
 800ef20:	6823      	ldr	r3, [r4, #0]
 800ef22:	07d8      	lsls	r0, r3, #31
 800ef24:	d50f      	bpl.n	800ef46 <_printf_float+0x216>
 800ef26:	4653      	mov	r3, sl
 800ef28:	465a      	mov	r2, fp
 800ef2a:	4631      	mov	r1, r6
 800ef2c:	4628      	mov	r0, r5
 800ef2e:	47b8      	blx	r7
 800ef30:	3001      	adds	r0, #1
 800ef32:	f43f af49 	beq.w	800edc8 <_printf_float+0x98>
 800ef36:	f04f 0800 	mov.w	r8, #0
 800ef3a:	f104 091a 	add.w	r9, r4, #26
 800ef3e:	9b08      	ldr	r3, [sp, #32]
 800ef40:	3b01      	subs	r3, #1
 800ef42:	4543      	cmp	r3, r8
 800ef44:	dc09      	bgt.n	800ef5a <_printf_float+0x22a>
 800ef46:	6823      	ldr	r3, [r4, #0]
 800ef48:	079b      	lsls	r3, r3, #30
 800ef4a:	f100 8106 	bmi.w	800f15a <_printf_float+0x42a>
 800ef4e:	68e0      	ldr	r0, [r4, #12]
 800ef50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ef52:	4298      	cmp	r0, r3
 800ef54:	bfb8      	it	lt
 800ef56:	4618      	movlt	r0, r3
 800ef58:	e738      	b.n	800edcc <_printf_float+0x9c>
 800ef5a:	2301      	movs	r3, #1
 800ef5c:	464a      	mov	r2, r9
 800ef5e:	4631      	mov	r1, r6
 800ef60:	4628      	mov	r0, r5
 800ef62:	47b8      	blx	r7
 800ef64:	3001      	adds	r0, #1
 800ef66:	f43f af2f 	beq.w	800edc8 <_printf_float+0x98>
 800ef6a:	f108 0801 	add.w	r8, r8, #1
 800ef6e:	e7e6      	b.n	800ef3e <_printf_float+0x20e>
 800ef70:	9b07      	ldr	r3, [sp, #28]
 800ef72:	2b00      	cmp	r3, #0
 800ef74:	dc3a      	bgt.n	800efec <_printf_float+0x2bc>
 800ef76:	4a1c      	ldr	r2, [pc, #112]	; (800efe8 <_printf_float+0x2b8>)
 800ef78:	2301      	movs	r3, #1
 800ef7a:	4631      	mov	r1, r6
 800ef7c:	4628      	mov	r0, r5
 800ef7e:	47b8      	blx	r7
 800ef80:	3001      	adds	r0, #1
 800ef82:	f43f af21 	beq.w	800edc8 <_printf_float+0x98>
 800ef86:	e9dd 3207 	ldrd	r3, r2, [sp, #28]
 800ef8a:	4313      	orrs	r3, r2
 800ef8c:	d102      	bne.n	800ef94 <_printf_float+0x264>
 800ef8e:	6823      	ldr	r3, [r4, #0]
 800ef90:	07d9      	lsls	r1, r3, #31
 800ef92:	d5d8      	bpl.n	800ef46 <_printf_float+0x216>
 800ef94:	4653      	mov	r3, sl
 800ef96:	465a      	mov	r2, fp
 800ef98:	4631      	mov	r1, r6
 800ef9a:	4628      	mov	r0, r5
 800ef9c:	47b8      	blx	r7
 800ef9e:	3001      	adds	r0, #1
 800efa0:	f43f af12 	beq.w	800edc8 <_printf_float+0x98>
 800efa4:	f04f 0900 	mov.w	r9, #0
 800efa8:	f104 0a1a 	add.w	sl, r4, #26
 800efac:	9b07      	ldr	r3, [sp, #28]
 800efae:	425b      	negs	r3, r3
 800efb0:	454b      	cmp	r3, r9
 800efb2:	dc01      	bgt.n	800efb8 <_printf_float+0x288>
 800efb4:	9b08      	ldr	r3, [sp, #32]
 800efb6:	e795      	b.n	800eee4 <_printf_float+0x1b4>
 800efb8:	2301      	movs	r3, #1
 800efba:	4652      	mov	r2, sl
 800efbc:	4631      	mov	r1, r6
 800efbe:	4628      	mov	r0, r5
 800efc0:	47b8      	blx	r7
 800efc2:	3001      	adds	r0, #1
 800efc4:	f43f af00 	beq.w	800edc8 <_printf_float+0x98>
 800efc8:	f109 0901 	add.w	r9, r9, #1
 800efcc:	e7ee      	b.n	800efac <_printf_float+0x27c>
 800efce:	bf00      	nop
 800efd0:	ffffffff 	.word	0xffffffff
 800efd4:	7fefffff 	.word	0x7fefffff
 800efd8:	0803691f 	.word	0x0803691f
 800efdc:	08036923 	.word	0x08036923
 800efe0:	08036927 	.word	0x08036927
 800efe4:	0803692b 	.word	0x0803692b
 800efe8:	0803692f 	.word	0x0803692f
 800efec:	9a08      	ldr	r2, [sp, #32]
 800efee:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800eff0:	429a      	cmp	r2, r3
 800eff2:	bfa8      	it	ge
 800eff4:	461a      	movge	r2, r3
 800eff6:	2a00      	cmp	r2, #0
 800eff8:	4691      	mov	r9, r2
 800effa:	dc38      	bgt.n	800f06e <_printf_float+0x33e>
 800effc:	2300      	movs	r3, #0
 800effe:	9305      	str	r3, [sp, #20]
 800f000:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800f004:	f104 021a 	add.w	r2, r4, #26
 800f008:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800f00a:	9905      	ldr	r1, [sp, #20]
 800f00c:	9304      	str	r3, [sp, #16]
 800f00e:	eba3 0309 	sub.w	r3, r3, r9
 800f012:	428b      	cmp	r3, r1
 800f014:	dc33      	bgt.n	800f07e <_printf_float+0x34e>
 800f016:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800f01a:	429a      	cmp	r2, r3
 800f01c:	db3c      	blt.n	800f098 <_printf_float+0x368>
 800f01e:	6823      	ldr	r3, [r4, #0]
 800f020:	07da      	lsls	r2, r3, #31
 800f022:	d439      	bmi.n	800f098 <_printf_float+0x368>
 800f024:	e9dd 3207 	ldrd	r3, r2, [sp, #28]
 800f028:	eba2 0903 	sub.w	r9, r2, r3
 800f02c:	9b04      	ldr	r3, [sp, #16]
 800f02e:	1ad2      	subs	r2, r2, r3
 800f030:	4591      	cmp	r9, r2
 800f032:	bfa8      	it	ge
 800f034:	4691      	movge	r9, r2
 800f036:	f1b9 0f00 	cmp.w	r9, #0
 800f03a:	dc35      	bgt.n	800f0a8 <_printf_float+0x378>
 800f03c:	f04f 0800 	mov.w	r8, #0
 800f040:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800f044:	f104 0a1a 	add.w	sl, r4, #26
 800f048:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800f04c:	1a9b      	subs	r3, r3, r2
 800f04e:	eba3 0309 	sub.w	r3, r3, r9
 800f052:	4543      	cmp	r3, r8
 800f054:	f77f af77 	ble.w	800ef46 <_printf_float+0x216>
 800f058:	2301      	movs	r3, #1
 800f05a:	4652      	mov	r2, sl
 800f05c:	4631      	mov	r1, r6
 800f05e:	4628      	mov	r0, r5
 800f060:	47b8      	blx	r7
 800f062:	3001      	adds	r0, #1
 800f064:	f43f aeb0 	beq.w	800edc8 <_printf_float+0x98>
 800f068:	f108 0801 	add.w	r8, r8, #1
 800f06c:	e7ec      	b.n	800f048 <_printf_float+0x318>
 800f06e:	4613      	mov	r3, r2
 800f070:	4631      	mov	r1, r6
 800f072:	4642      	mov	r2, r8
 800f074:	4628      	mov	r0, r5
 800f076:	47b8      	blx	r7
 800f078:	3001      	adds	r0, #1
 800f07a:	d1bf      	bne.n	800effc <_printf_float+0x2cc>
 800f07c:	e6a4      	b.n	800edc8 <_printf_float+0x98>
 800f07e:	2301      	movs	r3, #1
 800f080:	4631      	mov	r1, r6
 800f082:	4628      	mov	r0, r5
 800f084:	9204      	str	r2, [sp, #16]
 800f086:	47b8      	blx	r7
 800f088:	3001      	adds	r0, #1
 800f08a:	f43f ae9d 	beq.w	800edc8 <_printf_float+0x98>
 800f08e:	9b05      	ldr	r3, [sp, #20]
 800f090:	9a04      	ldr	r2, [sp, #16]
 800f092:	3301      	adds	r3, #1
 800f094:	9305      	str	r3, [sp, #20]
 800f096:	e7b7      	b.n	800f008 <_printf_float+0x2d8>
 800f098:	4653      	mov	r3, sl
 800f09a:	465a      	mov	r2, fp
 800f09c:	4631      	mov	r1, r6
 800f09e:	4628      	mov	r0, r5
 800f0a0:	47b8      	blx	r7
 800f0a2:	3001      	adds	r0, #1
 800f0a4:	d1be      	bne.n	800f024 <_printf_float+0x2f4>
 800f0a6:	e68f      	b.n	800edc8 <_printf_float+0x98>
 800f0a8:	9a04      	ldr	r2, [sp, #16]
 800f0aa:	464b      	mov	r3, r9
 800f0ac:	4442      	add	r2, r8
 800f0ae:	4631      	mov	r1, r6
 800f0b0:	4628      	mov	r0, r5
 800f0b2:	47b8      	blx	r7
 800f0b4:	3001      	adds	r0, #1
 800f0b6:	d1c1      	bne.n	800f03c <_printf_float+0x30c>
 800f0b8:	e686      	b.n	800edc8 <_printf_float+0x98>
 800f0ba:	9a08      	ldr	r2, [sp, #32]
 800f0bc:	2a01      	cmp	r2, #1
 800f0be:	dc01      	bgt.n	800f0c4 <_printf_float+0x394>
 800f0c0:	07db      	lsls	r3, r3, #31
 800f0c2:	d537      	bpl.n	800f134 <_printf_float+0x404>
 800f0c4:	2301      	movs	r3, #1
 800f0c6:	4642      	mov	r2, r8
 800f0c8:	4631      	mov	r1, r6
 800f0ca:	4628      	mov	r0, r5
 800f0cc:	47b8      	blx	r7
 800f0ce:	3001      	adds	r0, #1
 800f0d0:	f43f ae7a 	beq.w	800edc8 <_printf_float+0x98>
 800f0d4:	4653      	mov	r3, sl
 800f0d6:	465a      	mov	r2, fp
 800f0d8:	4631      	mov	r1, r6
 800f0da:	4628      	mov	r0, r5
 800f0dc:	47b8      	blx	r7
 800f0de:	3001      	adds	r0, #1
 800f0e0:	f43f ae72 	beq.w	800edc8 <_printf_float+0x98>
 800f0e4:	ed94 7b12 	vldr	d7, [r4, #72]	; 0x48
 800f0e8:	eeb5 7b40 	vcmp.f64	d7, #0.0
 800f0ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f0f0:	9b08      	ldr	r3, [sp, #32]
 800f0f2:	d01a      	beq.n	800f12a <_printf_float+0x3fa>
 800f0f4:	3b01      	subs	r3, #1
 800f0f6:	f108 0201 	add.w	r2, r8, #1
 800f0fa:	4631      	mov	r1, r6
 800f0fc:	4628      	mov	r0, r5
 800f0fe:	47b8      	blx	r7
 800f100:	3001      	adds	r0, #1
 800f102:	d10e      	bne.n	800f122 <_printf_float+0x3f2>
 800f104:	e660      	b.n	800edc8 <_printf_float+0x98>
 800f106:	2301      	movs	r3, #1
 800f108:	464a      	mov	r2, r9
 800f10a:	4631      	mov	r1, r6
 800f10c:	4628      	mov	r0, r5
 800f10e:	47b8      	blx	r7
 800f110:	3001      	adds	r0, #1
 800f112:	f43f ae59 	beq.w	800edc8 <_printf_float+0x98>
 800f116:	f108 0801 	add.w	r8, r8, #1
 800f11a:	9b08      	ldr	r3, [sp, #32]
 800f11c:	3b01      	subs	r3, #1
 800f11e:	4543      	cmp	r3, r8
 800f120:	dcf1      	bgt.n	800f106 <_printf_float+0x3d6>
 800f122:	9b04      	ldr	r3, [sp, #16]
 800f124:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800f128:	e6dd      	b.n	800eee6 <_printf_float+0x1b6>
 800f12a:	f04f 0800 	mov.w	r8, #0
 800f12e:	f104 091a 	add.w	r9, r4, #26
 800f132:	e7f2      	b.n	800f11a <_printf_float+0x3ea>
 800f134:	2301      	movs	r3, #1
 800f136:	4642      	mov	r2, r8
 800f138:	e7df      	b.n	800f0fa <_printf_float+0x3ca>
 800f13a:	2301      	movs	r3, #1
 800f13c:	464a      	mov	r2, r9
 800f13e:	4631      	mov	r1, r6
 800f140:	4628      	mov	r0, r5
 800f142:	47b8      	blx	r7
 800f144:	3001      	adds	r0, #1
 800f146:	f43f ae3f 	beq.w	800edc8 <_printf_float+0x98>
 800f14a:	f108 0801 	add.w	r8, r8, #1
 800f14e:	68e3      	ldr	r3, [r4, #12]
 800f150:	9909      	ldr	r1, [sp, #36]	; 0x24
 800f152:	1a5b      	subs	r3, r3, r1
 800f154:	4543      	cmp	r3, r8
 800f156:	dcf0      	bgt.n	800f13a <_printf_float+0x40a>
 800f158:	e6f9      	b.n	800ef4e <_printf_float+0x21e>
 800f15a:	f04f 0800 	mov.w	r8, #0
 800f15e:	f104 0919 	add.w	r9, r4, #25
 800f162:	e7f4      	b.n	800f14e <_printf_float+0x41e>

0800f164 <_printf_common>:
 800f164:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f168:	4616      	mov	r6, r2
 800f16a:	4699      	mov	r9, r3
 800f16c:	688a      	ldr	r2, [r1, #8]
 800f16e:	690b      	ldr	r3, [r1, #16]
 800f170:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800f174:	4293      	cmp	r3, r2
 800f176:	bfb8      	it	lt
 800f178:	4613      	movlt	r3, r2
 800f17a:	6033      	str	r3, [r6, #0]
 800f17c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800f180:	4607      	mov	r7, r0
 800f182:	460c      	mov	r4, r1
 800f184:	b10a      	cbz	r2, 800f18a <_printf_common+0x26>
 800f186:	3301      	adds	r3, #1
 800f188:	6033      	str	r3, [r6, #0]
 800f18a:	6823      	ldr	r3, [r4, #0]
 800f18c:	0699      	lsls	r1, r3, #26
 800f18e:	bf42      	ittt	mi
 800f190:	6833      	ldrmi	r3, [r6, #0]
 800f192:	3302      	addmi	r3, #2
 800f194:	6033      	strmi	r3, [r6, #0]
 800f196:	6825      	ldr	r5, [r4, #0]
 800f198:	f015 0506 	ands.w	r5, r5, #6
 800f19c:	d106      	bne.n	800f1ac <_printf_common+0x48>
 800f19e:	f104 0a19 	add.w	sl, r4, #25
 800f1a2:	68e3      	ldr	r3, [r4, #12]
 800f1a4:	6832      	ldr	r2, [r6, #0]
 800f1a6:	1a9b      	subs	r3, r3, r2
 800f1a8:	42ab      	cmp	r3, r5
 800f1aa:	dc26      	bgt.n	800f1fa <_printf_common+0x96>
 800f1ac:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800f1b0:	1e13      	subs	r3, r2, #0
 800f1b2:	6822      	ldr	r2, [r4, #0]
 800f1b4:	bf18      	it	ne
 800f1b6:	2301      	movne	r3, #1
 800f1b8:	0692      	lsls	r2, r2, #26
 800f1ba:	d42b      	bmi.n	800f214 <_printf_common+0xb0>
 800f1bc:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800f1c0:	4649      	mov	r1, r9
 800f1c2:	4638      	mov	r0, r7
 800f1c4:	47c0      	blx	r8
 800f1c6:	3001      	adds	r0, #1
 800f1c8:	d01e      	beq.n	800f208 <_printf_common+0xa4>
 800f1ca:	6823      	ldr	r3, [r4, #0]
 800f1cc:	6922      	ldr	r2, [r4, #16]
 800f1ce:	f003 0306 	and.w	r3, r3, #6
 800f1d2:	2b04      	cmp	r3, #4
 800f1d4:	bf02      	ittt	eq
 800f1d6:	68e5      	ldreq	r5, [r4, #12]
 800f1d8:	6833      	ldreq	r3, [r6, #0]
 800f1da:	1aed      	subeq	r5, r5, r3
 800f1dc:	68a3      	ldr	r3, [r4, #8]
 800f1de:	bf0c      	ite	eq
 800f1e0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800f1e4:	2500      	movne	r5, #0
 800f1e6:	4293      	cmp	r3, r2
 800f1e8:	bfc4      	itt	gt
 800f1ea:	1a9b      	subgt	r3, r3, r2
 800f1ec:	18ed      	addgt	r5, r5, r3
 800f1ee:	2600      	movs	r6, #0
 800f1f0:	341a      	adds	r4, #26
 800f1f2:	42b5      	cmp	r5, r6
 800f1f4:	d11a      	bne.n	800f22c <_printf_common+0xc8>
 800f1f6:	2000      	movs	r0, #0
 800f1f8:	e008      	b.n	800f20c <_printf_common+0xa8>
 800f1fa:	2301      	movs	r3, #1
 800f1fc:	4652      	mov	r2, sl
 800f1fe:	4649      	mov	r1, r9
 800f200:	4638      	mov	r0, r7
 800f202:	47c0      	blx	r8
 800f204:	3001      	adds	r0, #1
 800f206:	d103      	bne.n	800f210 <_printf_common+0xac>
 800f208:	f04f 30ff 	mov.w	r0, #4294967295
 800f20c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f210:	3501      	adds	r5, #1
 800f212:	e7c6      	b.n	800f1a2 <_printf_common+0x3e>
 800f214:	18e1      	adds	r1, r4, r3
 800f216:	1c5a      	adds	r2, r3, #1
 800f218:	2030      	movs	r0, #48	; 0x30
 800f21a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800f21e:	4422      	add	r2, r4
 800f220:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800f224:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800f228:	3302      	adds	r3, #2
 800f22a:	e7c7      	b.n	800f1bc <_printf_common+0x58>
 800f22c:	2301      	movs	r3, #1
 800f22e:	4622      	mov	r2, r4
 800f230:	4649      	mov	r1, r9
 800f232:	4638      	mov	r0, r7
 800f234:	47c0      	blx	r8
 800f236:	3001      	adds	r0, #1
 800f238:	d0e6      	beq.n	800f208 <_printf_common+0xa4>
 800f23a:	3601      	adds	r6, #1
 800f23c:	e7d9      	b.n	800f1f2 <_printf_common+0x8e>
	...

0800f240 <_printf_i>:
 800f240:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800f244:	7e0f      	ldrb	r7, [r1, #24]
 800f246:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f248:	2f78      	cmp	r7, #120	; 0x78
 800f24a:	4691      	mov	r9, r2
 800f24c:	4680      	mov	r8, r0
 800f24e:	460c      	mov	r4, r1
 800f250:	469a      	mov	sl, r3
 800f252:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800f256:	d807      	bhi.n	800f268 <_printf_i+0x28>
 800f258:	2f62      	cmp	r7, #98	; 0x62
 800f25a:	d80a      	bhi.n	800f272 <_printf_i+0x32>
 800f25c:	2f00      	cmp	r7, #0
 800f25e:	f000 80d4 	beq.w	800f40a <_printf_i+0x1ca>
 800f262:	2f58      	cmp	r7, #88	; 0x58
 800f264:	f000 80c0 	beq.w	800f3e8 <_printf_i+0x1a8>
 800f268:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800f26c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800f270:	e03a      	b.n	800f2e8 <_printf_i+0xa8>
 800f272:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800f276:	2b15      	cmp	r3, #21
 800f278:	d8f6      	bhi.n	800f268 <_printf_i+0x28>
 800f27a:	a101      	add	r1, pc, #4	; (adr r1, 800f280 <_printf_i+0x40>)
 800f27c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800f280:	0800f2d9 	.word	0x0800f2d9
 800f284:	0800f2ed 	.word	0x0800f2ed
 800f288:	0800f269 	.word	0x0800f269
 800f28c:	0800f269 	.word	0x0800f269
 800f290:	0800f269 	.word	0x0800f269
 800f294:	0800f269 	.word	0x0800f269
 800f298:	0800f2ed 	.word	0x0800f2ed
 800f29c:	0800f269 	.word	0x0800f269
 800f2a0:	0800f269 	.word	0x0800f269
 800f2a4:	0800f269 	.word	0x0800f269
 800f2a8:	0800f269 	.word	0x0800f269
 800f2ac:	0800f3f1 	.word	0x0800f3f1
 800f2b0:	0800f319 	.word	0x0800f319
 800f2b4:	0800f3ab 	.word	0x0800f3ab
 800f2b8:	0800f269 	.word	0x0800f269
 800f2bc:	0800f269 	.word	0x0800f269
 800f2c0:	0800f413 	.word	0x0800f413
 800f2c4:	0800f269 	.word	0x0800f269
 800f2c8:	0800f319 	.word	0x0800f319
 800f2cc:	0800f269 	.word	0x0800f269
 800f2d0:	0800f269 	.word	0x0800f269
 800f2d4:	0800f3b3 	.word	0x0800f3b3
 800f2d8:	682b      	ldr	r3, [r5, #0]
 800f2da:	1d1a      	adds	r2, r3, #4
 800f2dc:	681b      	ldr	r3, [r3, #0]
 800f2de:	602a      	str	r2, [r5, #0]
 800f2e0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800f2e4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800f2e8:	2301      	movs	r3, #1
 800f2ea:	e09f      	b.n	800f42c <_printf_i+0x1ec>
 800f2ec:	6820      	ldr	r0, [r4, #0]
 800f2ee:	682b      	ldr	r3, [r5, #0]
 800f2f0:	0607      	lsls	r7, r0, #24
 800f2f2:	f103 0104 	add.w	r1, r3, #4
 800f2f6:	6029      	str	r1, [r5, #0]
 800f2f8:	d501      	bpl.n	800f2fe <_printf_i+0xbe>
 800f2fa:	681e      	ldr	r6, [r3, #0]
 800f2fc:	e003      	b.n	800f306 <_printf_i+0xc6>
 800f2fe:	0646      	lsls	r6, r0, #25
 800f300:	d5fb      	bpl.n	800f2fa <_printf_i+0xba>
 800f302:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f306:	2e00      	cmp	r6, #0
 800f308:	da03      	bge.n	800f312 <_printf_i+0xd2>
 800f30a:	232d      	movs	r3, #45	; 0x2d
 800f30c:	4276      	negs	r6, r6
 800f30e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800f312:	485a      	ldr	r0, [pc, #360]	; (800f47c <_printf_i+0x23c>)
 800f314:	230a      	movs	r3, #10
 800f316:	e012      	b.n	800f33e <_printf_i+0xfe>
 800f318:	682b      	ldr	r3, [r5, #0]
 800f31a:	6820      	ldr	r0, [r4, #0]
 800f31c:	1d19      	adds	r1, r3, #4
 800f31e:	6029      	str	r1, [r5, #0]
 800f320:	0605      	lsls	r5, r0, #24
 800f322:	d501      	bpl.n	800f328 <_printf_i+0xe8>
 800f324:	681e      	ldr	r6, [r3, #0]
 800f326:	e002      	b.n	800f32e <_printf_i+0xee>
 800f328:	0641      	lsls	r1, r0, #25
 800f32a:	d5fb      	bpl.n	800f324 <_printf_i+0xe4>
 800f32c:	881e      	ldrh	r6, [r3, #0]
 800f32e:	4853      	ldr	r0, [pc, #332]	; (800f47c <_printf_i+0x23c>)
 800f330:	2f6f      	cmp	r7, #111	; 0x6f
 800f332:	bf0c      	ite	eq
 800f334:	2308      	moveq	r3, #8
 800f336:	230a      	movne	r3, #10
 800f338:	2100      	movs	r1, #0
 800f33a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800f33e:	6865      	ldr	r5, [r4, #4]
 800f340:	60a5      	str	r5, [r4, #8]
 800f342:	2d00      	cmp	r5, #0
 800f344:	bfa2      	ittt	ge
 800f346:	6821      	ldrge	r1, [r4, #0]
 800f348:	f021 0104 	bicge.w	r1, r1, #4
 800f34c:	6021      	strge	r1, [r4, #0]
 800f34e:	b90e      	cbnz	r6, 800f354 <_printf_i+0x114>
 800f350:	2d00      	cmp	r5, #0
 800f352:	d04b      	beq.n	800f3ec <_printf_i+0x1ac>
 800f354:	4615      	mov	r5, r2
 800f356:	fbb6 f1f3 	udiv	r1, r6, r3
 800f35a:	fb03 6711 	mls	r7, r3, r1, r6
 800f35e:	5dc7      	ldrb	r7, [r0, r7]
 800f360:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800f364:	4637      	mov	r7, r6
 800f366:	42bb      	cmp	r3, r7
 800f368:	460e      	mov	r6, r1
 800f36a:	d9f4      	bls.n	800f356 <_printf_i+0x116>
 800f36c:	2b08      	cmp	r3, #8
 800f36e:	d10b      	bne.n	800f388 <_printf_i+0x148>
 800f370:	6823      	ldr	r3, [r4, #0]
 800f372:	07de      	lsls	r6, r3, #31
 800f374:	d508      	bpl.n	800f388 <_printf_i+0x148>
 800f376:	6923      	ldr	r3, [r4, #16]
 800f378:	6861      	ldr	r1, [r4, #4]
 800f37a:	4299      	cmp	r1, r3
 800f37c:	bfde      	ittt	le
 800f37e:	2330      	movle	r3, #48	; 0x30
 800f380:	f805 3c01 	strble.w	r3, [r5, #-1]
 800f384:	f105 35ff 	addle.w	r5, r5, #4294967295
 800f388:	1b52      	subs	r2, r2, r5
 800f38a:	6122      	str	r2, [r4, #16]
 800f38c:	f8cd a000 	str.w	sl, [sp]
 800f390:	464b      	mov	r3, r9
 800f392:	aa03      	add	r2, sp, #12
 800f394:	4621      	mov	r1, r4
 800f396:	4640      	mov	r0, r8
 800f398:	f7ff fee4 	bl	800f164 <_printf_common>
 800f39c:	3001      	adds	r0, #1
 800f39e:	d14a      	bne.n	800f436 <_printf_i+0x1f6>
 800f3a0:	f04f 30ff 	mov.w	r0, #4294967295
 800f3a4:	b004      	add	sp, #16
 800f3a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f3aa:	6823      	ldr	r3, [r4, #0]
 800f3ac:	f043 0320 	orr.w	r3, r3, #32
 800f3b0:	6023      	str	r3, [r4, #0]
 800f3b2:	4833      	ldr	r0, [pc, #204]	; (800f480 <_printf_i+0x240>)
 800f3b4:	2778      	movs	r7, #120	; 0x78
 800f3b6:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800f3ba:	6823      	ldr	r3, [r4, #0]
 800f3bc:	6829      	ldr	r1, [r5, #0]
 800f3be:	061f      	lsls	r7, r3, #24
 800f3c0:	f851 6b04 	ldr.w	r6, [r1], #4
 800f3c4:	d402      	bmi.n	800f3cc <_printf_i+0x18c>
 800f3c6:	065f      	lsls	r7, r3, #25
 800f3c8:	bf48      	it	mi
 800f3ca:	b2b6      	uxthmi	r6, r6
 800f3cc:	07df      	lsls	r7, r3, #31
 800f3ce:	bf48      	it	mi
 800f3d0:	f043 0320 	orrmi.w	r3, r3, #32
 800f3d4:	6029      	str	r1, [r5, #0]
 800f3d6:	bf48      	it	mi
 800f3d8:	6023      	strmi	r3, [r4, #0]
 800f3da:	b91e      	cbnz	r6, 800f3e4 <_printf_i+0x1a4>
 800f3dc:	6823      	ldr	r3, [r4, #0]
 800f3de:	f023 0320 	bic.w	r3, r3, #32
 800f3e2:	6023      	str	r3, [r4, #0]
 800f3e4:	2310      	movs	r3, #16
 800f3e6:	e7a7      	b.n	800f338 <_printf_i+0xf8>
 800f3e8:	4824      	ldr	r0, [pc, #144]	; (800f47c <_printf_i+0x23c>)
 800f3ea:	e7e4      	b.n	800f3b6 <_printf_i+0x176>
 800f3ec:	4615      	mov	r5, r2
 800f3ee:	e7bd      	b.n	800f36c <_printf_i+0x12c>
 800f3f0:	682b      	ldr	r3, [r5, #0]
 800f3f2:	6826      	ldr	r6, [r4, #0]
 800f3f4:	6961      	ldr	r1, [r4, #20]
 800f3f6:	1d18      	adds	r0, r3, #4
 800f3f8:	6028      	str	r0, [r5, #0]
 800f3fa:	0635      	lsls	r5, r6, #24
 800f3fc:	681b      	ldr	r3, [r3, #0]
 800f3fe:	d501      	bpl.n	800f404 <_printf_i+0x1c4>
 800f400:	6019      	str	r1, [r3, #0]
 800f402:	e002      	b.n	800f40a <_printf_i+0x1ca>
 800f404:	0670      	lsls	r0, r6, #25
 800f406:	d5fb      	bpl.n	800f400 <_printf_i+0x1c0>
 800f408:	8019      	strh	r1, [r3, #0]
 800f40a:	2300      	movs	r3, #0
 800f40c:	6123      	str	r3, [r4, #16]
 800f40e:	4615      	mov	r5, r2
 800f410:	e7bc      	b.n	800f38c <_printf_i+0x14c>
 800f412:	682b      	ldr	r3, [r5, #0]
 800f414:	1d1a      	adds	r2, r3, #4
 800f416:	602a      	str	r2, [r5, #0]
 800f418:	681d      	ldr	r5, [r3, #0]
 800f41a:	6862      	ldr	r2, [r4, #4]
 800f41c:	2100      	movs	r1, #0
 800f41e:	4628      	mov	r0, r5
 800f420:	f7f0 ff0e 	bl	8000240 <memchr>
 800f424:	b108      	cbz	r0, 800f42a <_printf_i+0x1ea>
 800f426:	1b40      	subs	r0, r0, r5
 800f428:	6060      	str	r0, [r4, #4]
 800f42a:	6863      	ldr	r3, [r4, #4]
 800f42c:	6123      	str	r3, [r4, #16]
 800f42e:	2300      	movs	r3, #0
 800f430:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800f434:	e7aa      	b.n	800f38c <_printf_i+0x14c>
 800f436:	6923      	ldr	r3, [r4, #16]
 800f438:	462a      	mov	r2, r5
 800f43a:	4649      	mov	r1, r9
 800f43c:	4640      	mov	r0, r8
 800f43e:	47d0      	blx	sl
 800f440:	3001      	adds	r0, #1
 800f442:	d0ad      	beq.n	800f3a0 <_printf_i+0x160>
 800f444:	6823      	ldr	r3, [r4, #0]
 800f446:	079b      	lsls	r3, r3, #30
 800f448:	d413      	bmi.n	800f472 <_printf_i+0x232>
 800f44a:	68e0      	ldr	r0, [r4, #12]
 800f44c:	9b03      	ldr	r3, [sp, #12]
 800f44e:	4298      	cmp	r0, r3
 800f450:	bfb8      	it	lt
 800f452:	4618      	movlt	r0, r3
 800f454:	e7a6      	b.n	800f3a4 <_printf_i+0x164>
 800f456:	2301      	movs	r3, #1
 800f458:	4632      	mov	r2, r6
 800f45a:	4649      	mov	r1, r9
 800f45c:	4640      	mov	r0, r8
 800f45e:	47d0      	blx	sl
 800f460:	3001      	adds	r0, #1
 800f462:	d09d      	beq.n	800f3a0 <_printf_i+0x160>
 800f464:	3501      	adds	r5, #1
 800f466:	68e3      	ldr	r3, [r4, #12]
 800f468:	9903      	ldr	r1, [sp, #12]
 800f46a:	1a5b      	subs	r3, r3, r1
 800f46c:	42ab      	cmp	r3, r5
 800f46e:	dcf2      	bgt.n	800f456 <_printf_i+0x216>
 800f470:	e7eb      	b.n	800f44a <_printf_i+0x20a>
 800f472:	2500      	movs	r5, #0
 800f474:	f104 0619 	add.w	r6, r4, #25
 800f478:	e7f5      	b.n	800f466 <_printf_i+0x226>
 800f47a:	bf00      	nop
 800f47c:	08036931 	.word	0x08036931
 800f480:	08036942 	.word	0x08036942

0800f484 <__sflush_r>:
 800f484:	898a      	ldrh	r2, [r1, #12]
 800f486:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f48a:	4605      	mov	r5, r0
 800f48c:	0710      	lsls	r0, r2, #28
 800f48e:	460c      	mov	r4, r1
 800f490:	d458      	bmi.n	800f544 <__sflush_r+0xc0>
 800f492:	684b      	ldr	r3, [r1, #4]
 800f494:	2b00      	cmp	r3, #0
 800f496:	dc05      	bgt.n	800f4a4 <__sflush_r+0x20>
 800f498:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800f49a:	2b00      	cmp	r3, #0
 800f49c:	dc02      	bgt.n	800f4a4 <__sflush_r+0x20>
 800f49e:	2000      	movs	r0, #0
 800f4a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f4a4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800f4a6:	2e00      	cmp	r6, #0
 800f4a8:	d0f9      	beq.n	800f49e <__sflush_r+0x1a>
 800f4aa:	2300      	movs	r3, #0
 800f4ac:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800f4b0:	682f      	ldr	r7, [r5, #0]
 800f4b2:	6a21      	ldr	r1, [r4, #32]
 800f4b4:	602b      	str	r3, [r5, #0]
 800f4b6:	d032      	beq.n	800f51e <__sflush_r+0x9a>
 800f4b8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800f4ba:	89a3      	ldrh	r3, [r4, #12]
 800f4bc:	075a      	lsls	r2, r3, #29
 800f4be:	d505      	bpl.n	800f4cc <__sflush_r+0x48>
 800f4c0:	6863      	ldr	r3, [r4, #4]
 800f4c2:	1ac0      	subs	r0, r0, r3
 800f4c4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f4c6:	b10b      	cbz	r3, 800f4cc <__sflush_r+0x48>
 800f4c8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800f4ca:	1ac0      	subs	r0, r0, r3
 800f4cc:	2300      	movs	r3, #0
 800f4ce:	4602      	mov	r2, r0
 800f4d0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800f4d2:	6a21      	ldr	r1, [r4, #32]
 800f4d4:	4628      	mov	r0, r5
 800f4d6:	47b0      	blx	r6
 800f4d8:	1c43      	adds	r3, r0, #1
 800f4da:	89a3      	ldrh	r3, [r4, #12]
 800f4dc:	d106      	bne.n	800f4ec <__sflush_r+0x68>
 800f4de:	6829      	ldr	r1, [r5, #0]
 800f4e0:	291d      	cmp	r1, #29
 800f4e2:	d82b      	bhi.n	800f53c <__sflush_r+0xb8>
 800f4e4:	4a29      	ldr	r2, [pc, #164]	; (800f58c <__sflush_r+0x108>)
 800f4e6:	410a      	asrs	r2, r1
 800f4e8:	07d6      	lsls	r6, r2, #31
 800f4ea:	d427      	bmi.n	800f53c <__sflush_r+0xb8>
 800f4ec:	2200      	movs	r2, #0
 800f4ee:	6062      	str	r2, [r4, #4]
 800f4f0:	04d9      	lsls	r1, r3, #19
 800f4f2:	6922      	ldr	r2, [r4, #16]
 800f4f4:	6022      	str	r2, [r4, #0]
 800f4f6:	d504      	bpl.n	800f502 <__sflush_r+0x7e>
 800f4f8:	1c42      	adds	r2, r0, #1
 800f4fa:	d101      	bne.n	800f500 <__sflush_r+0x7c>
 800f4fc:	682b      	ldr	r3, [r5, #0]
 800f4fe:	b903      	cbnz	r3, 800f502 <__sflush_r+0x7e>
 800f500:	6560      	str	r0, [r4, #84]	; 0x54
 800f502:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800f504:	602f      	str	r7, [r5, #0]
 800f506:	2900      	cmp	r1, #0
 800f508:	d0c9      	beq.n	800f49e <__sflush_r+0x1a>
 800f50a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800f50e:	4299      	cmp	r1, r3
 800f510:	d002      	beq.n	800f518 <__sflush_r+0x94>
 800f512:	4628      	mov	r0, r5
 800f514:	f001 f82c 	bl	8010570 <_free_r>
 800f518:	2000      	movs	r0, #0
 800f51a:	6360      	str	r0, [r4, #52]	; 0x34
 800f51c:	e7c0      	b.n	800f4a0 <__sflush_r+0x1c>
 800f51e:	2301      	movs	r3, #1
 800f520:	4628      	mov	r0, r5
 800f522:	47b0      	blx	r6
 800f524:	1c41      	adds	r1, r0, #1
 800f526:	d1c8      	bne.n	800f4ba <__sflush_r+0x36>
 800f528:	682b      	ldr	r3, [r5, #0]
 800f52a:	2b00      	cmp	r3, #0
 800f52c:	d0c5      	beq.n	800f4ba <__sflush_r+0x36>
 800f52e:	2b1d      	cmp	r3, #29
 800f530:	d001      	beq.n	800f536 <__sflush_r+0xb2>
 800f532:	2b16      	cmp	r3, #22
 800f534:	d101      	bne.n	800f53a <__sflush_r+0xb6>
 800f536:	602f      	str	r7, [r5, #0]
 800f538:	e7b1      	b.n	800f49e <__sflush_r+0x1a>
 800f53a:	89a3      	ldrh	r3, [r4, #12]
 800f53c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f540:	81a3      	strh	r3, [r4, #12]
 800f542:	e7ad      	b.n	800f4a0 <__sflush_r+0x1c>
 800f544:	690f      	ldr	r7, [r1, #16]
 800f546:	2f00      	cmp	r7, #0
 800f548:	d0a9      	beq.n	800f49e <__sflush_r+0x1a>
 800f54a:	0793      	lsls	r3, r2, #30
 800f54c:	680e      	ldr	r6, [r1, #0]
 800f54e:	bf08      	it	eq
 800f550:	694b      	ldreq	r3, [r1, #20]
 800f552:	600f      	str	r7, [r1, #0]
 800f554:	bf18      	it	ne
 800f556:	2300      	movne	r3, #0
 800f558:	eba6 0807 	sub.w	r8, r6, r7
 800f55c:	608b      	str	r3, [r1, #8]
 800f55e:	f1b8 0f00 	cmp.w	r8, #0
 800f562:	dd9c      	ble.n	800f49e <__sflush_r+0x1a>
 800f564:	6a21      	ldr	r1, [r4, #32]
 800f566:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800f568:	4643      	mov	r3, r8
 800f56a:	463a      	mov	r2, r7
 800f56c:	4628      	mov	r0, r5
 800f56e:	47b0      	blx	r6
 800f570:	2800      	cmp	r0, #0
 800f572:	dc06      	bgt.n	800f582 <__sflush_r+0xfe>
 800f574:	89a3      	ldrh	r3, [r4, #12]
 800f576:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f57a:	81a3      	strh	r3, [r4, #12]
 800f57c:	f04f 30ff 	mov.w	r0, #4294967295
 800f580:	e78e      	b.n	800f4a0 <__sflush_r+0x1c>
 800f582:	4407      	add	r7, r0
 800f584:	eba8 0800 	sub.w	r8, r8, r0
 800f588:	e7e9      	b.n	800f55e <__sflush_r+0xda>
 800f58a:	bf00      	nop
 800f58c:	dfbffffe 	.word	0xdfbffffe

0800f590 <_fflush_r>:
 800f590:	b538      	push	{r3, r4, r5, lr}
 800f592:	690b      	ldr	r3, [r1, #16]
 800f594:	4605      	mov	r5, r0
 800f596:	460c      	mov	r4, r1
 800f598:	b913      	cbnz	r3, 800f5a0 <_fflush_r+0x10>
 800f59a:	2500      	movs	r5, #0
 800f59c:	4628      	mov	r0, r5
 800f59e:	bd38      	pop	{r3, r4, r5, pc}
 800f5a0:	b118      	cbz	r0, 800f5aa <_fflush_r+0x1a>
 800f5a2:	6a03      	ldr	r3, [r0, #32]
 800f5a4:	b90b      	cbnz	r3, 800f5aa <_fflush_r+0x1a>
 800f5a6:	f000 f8a9 	bl	800f6fc <__sinit>
 800f5aa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f5ae:	2b00      	cmp	r3, #0
 800f5b0:	d0f3      	beq.n	800f59a <_fflush_r+0xa>
 800f5b2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800f5b4:	07d0      	lsls	r0, r2, #31
 800f5b6:	d404      	bmi.n	800f5c2 <_fflush_r+0x32>
 800f5b8:	0599      	lsls	r1, r3, #22
 800f5ba:	d402      	bmi.n	800f5c2 <_fflush_r+0x32>
 800f5bc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800f5be:	f000 f9b5 	bl	800f92c <__retarget_lock_acquire_recursive>
 800f5c2:	4628      	mov	r0, r5
 800f5c4:	4621      	mov	r1, r4
 800f5c6:	f7ff ff5d 	bl	800f484 <__sflush_r>
 800f5ca:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800f5cc:	07da      	lsls	r2, r3, #31
 800f5ce:	4605      	mov	r5, r0
 800f5d0:	d4e4      	bmi.n	800f59c <_fflush_r+0xc>
 800f5d2:	89a3      	ldrh	r3, [r4, #12]
 800f5d4:	059b      	lsls	r3, r3, #22
 800f5d6:	d4e1      	bmi.n	800f59c <_fflush_r+0xc>
 800f5d8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800f5da:	f000 f9a8 	bl	800f92e <__retarget_lock_release_recursive>
 800f5de:	e7dd      	b.n	800f59c <_fflush_r+0xc>

0800f5e0 <fflush>:
 800f5e0:	4601      	mov	r1, r0
 800f5e2:	b920      	cbnz	r0, 800f5ee <fflush+0xe>
 800f5e4:	4a04      	ldr	r2, [pc, #16]	; (800f5f8 <fflush+0x18>)
 800f5e6:	4905      	ldr	r1, [pc, #20]	; (800f5fc <fflush+0x1c>)
 800f5e8:	4805      	ldr	r0, [pc, #20]	; (800f600 <fflush+0x20>)
 800f5ea:	f000 b89f 	b.w	800f72c <_fwalk_sglue>
 800f5ee:	4b05      	ldr	r3, [pc, #20]	; (800f604 <fflush+0x24>)
 800f5f0:	6818      	ldr	r0, [r3, #0]
 800f5f2:	f7ff bfcd 	b.w	800f590 <_fflush_r>
 800f5f6:	bf00      	nop
 800f5f8:	20001d2c 	.word	0x20001d2c
 800f5fc:	0800f591 	.word	0x0800f591
 800f600:	20001d38 	.word	0x20001d38
 800f604:	20001d84 	.word	0x20001d84

0800f608 <std>:
 800f608:	2300      	movs	r3, #0
 800f60a:	b510      	push	{r4, lr}
 800f60c:	4604      	mov	r4, r0
 800f60e:	e9c0 3300 	strd	r3, r3, [r0]
 800f612:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800f616:	6083      	str	r3, [r0, #8]
 800f618:	8181      	strh	r1, [r0, #12]
 800f61a:	6643      	str	r3, [r0, #100]	; 0x64
 800f61c:	81c2      	strh	r2, [r0, #14]
 800f61e:	6183      	str	r3, [r0, #24]
 800f620:	4619      	mov	r1, r3
 800f622:	2208      	movs	r2, #8
 800f624:	305c      	adds	r0, #92	; 0x5c
 800f626:	f000 f8e2 	bl	800f7ee <memset>
 800f62a:	4b05      	ldr	r3, [pc, #20]	; (800f640 <std+0x38>)
 800f62c:	6263      	str	r3, [r4, #36]	; 0x24
 800f62e:	4b05      	ldr	r3, [pc, #20]	; (800f644 <std+0x3c>)
 800f630:	62a3      	str	r3, [r4, #40]	; 0x28
 800f632:	4b05      	ldr	r3, [pc, #20]	; (800f648 <std+0x40>)
 800f634:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f636:	4b05      	ldr	r3, [pc, #20]	; (800f64c <std+0x44>)
 800f638:	6224      	str	r4, [r4, #32]
 800f63a:	6323      	str	r3, [r4, #48]	; 0x30
 800f63c:	bd10      	pop	{r4, pc}
 800f63e:	bf00      	nop
 800f640:	0800f769 	.word	0x0800f769
 800f644:	0800f78b 	.word	0x0800f78b
 800f648:	0800f7c3 	.word	0x0800f7c3
 800f64c:	0800f7e7 	.word	0x0800f7e7

0800f650 <stdio_exit_handler>:
 800f650:	4a02      	ldr	r2, [pc, #8]	; (800f65c <stdio_exit_handler+0xc>)
 800f652:	4903      	ldr	r1, [pc, #12]	; (800f660 <stdio_exit_handler+0x10>)
 800f654:	4803      	ldr	r0, [pc, #12]	; (800f664 <stdio_exit_handler+0x14>)
 800f656:	f000 b869 	b.w	800f72c <_fwalk_sglue>
 800f65a:	bf00      	nop
 800f65c:	20001d2c 	.word	0x20001d2c
 800f660:	0800f591 	.word	0x0800f591
 800f664:	20001d38 	.word	0x20001d38

0800f668 <cleanup_stdio>:
 800f668:	6841      	ldr	r1, [r0, #4]
 800f66a:	4b0c      	ldr	r3, [pc, #48]	; (800f69c <cleanup_stdio+0x34>)
 800f66c:	4299      	cmp	r1, r3
 800f66e:	b510      	push	{r4, lr}
 800f670:	4604      	mov	r4, r0
 800f672:	d001      	beq.n	800f678 <cleanup_stdio+0x10>
 800f674:	f7ff ff8c 	bl	800f590 <_fflush_r>
 800f678:	68a1      	ldr	r1, [r4, #8]
 800f67a:	4b09      	ldr	r3, [pc, #36]	; (800f6a0 <cleanup_stdio+0x38>)
 800f67c:	4299      	cmp	r1, r3
 800f67e:	d002      	beq.n	800f686 <cleanup_stdio+0x1e>
 800f680:	4620      	mov	r0, r4
 800f682:	f7ff ff85 	bl	800f590 <_fflush_r>
 800f686:	68e1      	ldr	r1, [r4, #12]
 800f688:	4b06      	ldr	r3, [pc, #24]	; (800f6a4 <cleanup_stdio+0x3c>)
 800f68a:	4299      	cmp	r1, r3
 800f68c:	d004      	beq.n	800f698 <cleanup_stdio+0x30>
 800f68e:	4620      	mov	r0, r4
 800f690:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f694:	f7ff bf7c 	b.w	800f590 <_fflush_r>
 800f698:	bd10      	pop	{r4, pc}
 800f69a:	bf00      	nop
 800f69c:	2001d8d0 	.word	0x2001d8d0
 800f6a0:	2001d938 	.word	0x2001d938
 800f6a4:	2001d9a0 	.word	0x2001d9a0

0800f6a8 <global_stdio_init.part.0>:
 800f6a8:	b510      	push	{r4, lr}
 800f6aa:	4b0b      	ldr	r3, [pc, #44]	; (800f6d8 <global_stdio_init.part.0+0x30>)
 800f6ac:	4c0b      	ldr	r4, [pc, #44]	; (800f6dc <global_stdio_init.part.0+0x34>)
 800f6ae:	4a0c      	ldr	r2, [pc, #48]	; (800f6e0 <global_stdio_init.part.0+0x38>)
 800f6b0:	601a      	str	r2, [r3, #0]
 800f6b2:	4620      	mov	r0, r4
 800f6b4:	2200      	movs	r2, #0
 800f6b6:	2104      	movs	r1, #4
 800f6b8:	f7ff ffa6 	bl	800f608 <std>
 800f6bc:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800f6c0:	2201      	movs	r2, #1
 800f6c2:	2109      	movs	r1, #9
 800f6c4:	f7ff ffa0 	bl	800f608 <std>
 800f6c8:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 800f6cc:	2202      	movs	r2, #2
 800f6ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f6d2:	2112      	movs	r1, #18
 800f6d4:	f7ff bf98 	b.w	800f608 <std>
 800f6d8:	2001da08 	.word	0x2001da08
 800f6dc:	2001d8d0 	.word	0x2001d8d0
 800f6e0:	0800f651 	.word	0x0800f651

0800f6e4 <__sfp_lock_acquire>:
 800f6e4:	4801      	ldr	r0, [pc, #4]	; (800f6ec <__sfp_lock_acquire+0x8>)
 800f6e6:	f000 b921 	b.w	800f92c <__retarget_lock_acquire_recursive>
 800f6ea:	bf00      	nop
 800f6ec:	2001da11 	.word	0x2001da11

0800f6f0 <__sfp_lock_release>:
 800f6f0:	4801      	ldr	r0, [pc, #4]	; (800f6f8 <__sfp_lock_release+0x8>)
 800f6f2:	f000 b91c 	b.w	800f92e <__retarget_lock_release_recursive>
 800f6f6:	bf00      	nop
 800f6f8:	2001da11 	.word	0x2001da11

0800f6fc <__sinit>:
 800f6fc:	b510      	push	{r4, lr}
 800f6fe:	4604      	mov	r4, r0
 800f700:	f7ff fff0 	bl	800f6e4 <__sfp_lock_acquire>
 800f704:	6a23      	ldr	r3, [r4, #32]
 800f706:	b11b      	cbz	r3, 800f710 <__sinit+0x14>
 800f708:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f70c:	f7ff bff0 	b.w	800f6f0 <__sfp_lock_release>
 800f710:	4b04      	ldr	r3, [pc, #16]	; (800f724 <__sinit+0x28>)
 800f712:	6223      	str	r3, [r4, #32]
 800f714:	4b04      	ldr	r3, [pc, #16]	; (800f728 <__sinit+0x2c>)
 800f716:	681b      	ldr	r3, [r3, #0]
 800f718:	2b00      	cmp	r3, #0
 800f71a:	d1f5      	bne.n	800f708 <__sinit+0xc>
 800f71c:	f7ff ffc4 	bl	800f6a8 <global_stdio_init.part.0>
 800f720:	e7f2      	b.n	800f708 <__sinit+0xc>
 800f722:	bf00      	nop
 800f724:	0800f669 	.word	0x0800f669
 800f728:	2001da08 	.word	0x2001da08

0800f72c <_fwalk_sglue>:
 800f72c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f730:	4607      	mov	r7, r0
 800f732:	4688      	mov	r8, r1
 800f734:	4614      	mov	r4, r2
 800f736:	2600      	movs	r6, #0
 800f738:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800f73c:	f1b9 0901 	subs.w	r9, r9, #1
 800f740:	d505      	bpl.n	800f74e <_fwalk_sglue+0x22>
 800f742:	6824      	ldr	r4, [r4, #0]
 800f744:	2c00      	cmp	r4, #0
 800f746:	d1f7      	bne.n	800f738 <_fwalk_sglue+0xc>
 800f748:	4630      	mov	r0, r6
 800f74a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f74e:	89ab      	ldrh	r3, [r5, #12]
 800f750:	2b01      	cmp	r3, #1
 800f752:	d907      	bls.n	800f764 <_fwalk_sglue+0x38>
 800f754:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800f758:	3301      	adds	r3, #1
 800f75a:	d003      	beq.n	800f764 <_fwalk_sglue+0x38>
 800f75c:	4629      	mov	r1, r5
 800f75e:	4638      	mov	r0, r7
 800f760:	47c0      	blx	r8
 800f762:	4306      	orrs	r6, r0
 800f764:	3568      	adds	r5, #104	; 0x68
 800f766:	e7e9      	b.n	800f73c <_fwalk_sglue+0x10>

0800f768 <__sread>:
 800f768:	b510      	push	{r4, lr}
 800f76a:	460c      	mov	r4, r1
 800f76c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800f770:	f000 f87e 	bl	800f870 <_read_r>
 800f774:	2800      	cmp	r0, #0
 800f776:	bfab      	itete	ge
 800f778:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800f77a:	89a3      	ldrhlt	r3, [r4, #12]
 800f77c:	181b      	addge	r3, r3, r0
 800f77e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800f782:	bfac      	ite	ge
 800f784:	6563      	strge	r3, [r4, #84]	; 0x54
 800f786:	81a3      	strhlt	r3, [r4, #12]
 800f788:	bd10      	pop	{r4, pc}

0800f78a <__swrite>:
 800f78a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f78e:	461f      	mov	r7, r3
 800f790:	898b      	ldrh	r3, [r1, #12]
 800f792:	05db      	lsls	r3, r3, #23
 800f794:	4605      	mov	r5, r0
 800f796:	460c      	mov	r4, r1
 800f798:	4616      	mov	r6, r2
 800f79a:	d505      	bpl.n	800f7a8 <__swrite+0x1e>
 800f79c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800f7a0:	2302      	movs	r3, #2
 800f7a2:	2200      	movs	r2, #0
 800f7a4:	f000 f852 	bl	800f84c <_lseek_r>
 800f7a8:	89a3      	ldrh	r3, [r4, #12]
 800f7aa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800f7ae:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800f7b2:	81a3      	strh	r3, [r4, #12]
 800f7b4:	4632      	mov	r2, r6
 800f7b6:	463b      	mov	r3, r7
 800f7b8:	4628      	mov	r0, r5
 800f7ba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f7be:	f000 b879 	b.w	800f8b4 <_write_r>

0800f7c2 <__sseek>:
 800f7c2:	b510      	push	{r4, lr}
 800f7c4:	460c      	mov	r4, r1
 800f7c6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800f7ca:	f000 f83f 	bl	800f84c <_lseek_r>
 800f7ce:	1c43      	adds	r3, r0, #1
 800f7d0:	89a3      	ldrh	r3, [r4, #12]
 800f7d2:	bf15      	itete	ne
 800f7d4:	6560      	strne	r0, [r4, #84]	; 0x54
 800f7d6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800f7da:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800f7de:	81a3      	strheq	r3, [r4, #12]
 800f7e0:	bf18      	it	ne
 800f7e2:	81a3      	strhne	r3, [r4, #12]
 800f7e4:	bd10      	pop	{r4, pc}

0800f7e6 <__sclose>:
 800f7e6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800f7ea:	f000 b81f 	b.w	800f82c <_close_r>

0800f7ee <memset>:
 800f7ee:	4402      	add	r2, r0
 800f7f0:	4603      	mov	r3, r0
 800f7f2:	4293      	cmp	r3, r2
 800f7f4:	d100      	bne.n	800f7f8 <memset+0xa>
 800f7f6:	4770      	bx	lr
 800f7f8:	f803 1b01 	strb.w	r1, [r3], #1
 800f7fc:	e7f9      	b.n	800f7f2 <memset+0x4>

0800f7fe <strncmp>:
 800f7fe:	b510      	push	{r4, lr}
 800f800:	b16a      	cbz	r2, 800f81e <strncmp+0x20>
 800f802:	3901      	subs	r1, #1
 800f804:	1884      	adds	r4, r0, r2
 800f806:	f810 2b01 	ldrb.w	r2, [r0], #1
 800f80a:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800f80e:	429a      	cmp	r2, r3
 800f810:	d103      	bne.n	800f81a <strncmp+0x1c>
 800f812:	42a0      	cmp	r0, r4
 800f814:	d001      	beq.n	800f81a <strncmp+0x1c>
 800f816:	2a00      	cmp	r2, #0
 800f818:	d1f5      	bne.n	800f806 <strncmp+0x8>
 800f81a:	1ad0      	subs	r0, r2, r3
 800f81c:	bd10      	pop	{r4, pc}
 800f81e:	4610      	mov	r0, r2
 800f820:	e7fc      	b.n	800f81c <strncmp+0x1e>
	...

0800f824 <_localeconv_r>:
 800f824:	4800      	ldr	r0, [pc, #0]	; (800f828 <_localeconv_r+0x4>)
 800f826:	4770      	bx	lr
 800f828:	20001e78 	.word	0x20001e78

0800f82c <_close_r>:
 800f82c:	b538      	push	{r3, r4, r5, lr}
 800f82e:	4d06      	ldr	r5, [pc, #24]	; (800f848 <_close_r+0x1c>)
 800f830:	2300      	movs	r3, #0
 800f832:	4604      	mov	r4, r0
 800f834:	4608      	mov	r0, r1
 800f836:	602b      	str	r3, [r5, #0]
 800f838:	f001 ff10 	bl	801165c <_close>
 800f83c:	1c43      	adds	r3, r0, #1
 800f83e:	d102      	bne.n	800f846 <_close_r+0x1a>
 800f840:	682b      	ldr	r3, [r5, #0]
 800f842:	b103      	cbz	r3, 800f846 <_close_r+0x1a>
 800f844:	6023      	str	r3, [r4, #0]
 800f846:	bd38      	pop	{r3, r4, r5, pc}
 800f848:	2001da0c 	.word	0x2001da0c

0800f84c <_lseek_r>:
 800f84c:	b538      	push	{r3, r4, r5, lr}
 800f84e:	4d07      	ldr	r5, [pc, #28]	; (800f86c <_lseek_r+0x20>)
 800f850:	4604      	mov	r4, r0
 800f852:	4608      	mov	r0, r1
 800f854:	4611      	mov	r1, r2
 800f856:	2200      	movs	r2, #0
 800f858:	602a      	str	r2, [r5, #0]
 800f85a:	461a      	mov	r2, r3
 800f85c:	f001 ff26 	bl	80116ac <_lseek>
 800f860:	1c43      	adds	r3, r0, #1
 800f862:	d102      	bne.n	800f86a <_lseek_r+0x1e>
 800f864:	682b      	ldr	r3, [r5, #0]
 800f866:	b103      	cbz	r3, 800f86a <_lseek_r+0x1e>
 800f868:	6023      	str	r3, [r4, #0]
 800f86a:	bd38      	pop	{r3, r4, r5, pc}
 800f86c:	2001da0c 	.word	0x2001da0c

0800f870 <_read_r>:
 800f870:	b538      	push	{r3, r4, r5, lr}
 800f872:	4d07      	ldr	r5, [pc, #28]	; (800f890 <_read_r+0x20>)
 800f874:	4604      	mov	r4, r0
 800f876:	4608      	mov	r0, r1
 800f878:	4611      	mov	r1, r2
 800f87a:	2200      	movs	r2, #0
 800f87c:	602a      	str	r2, [r5, #0]
 800f87e:	461a      	mov	r2, r3
 800f880:	f001 ff1c 	bl	80116bc <_read>
 800f884:	1c43      	adds	r3, r0, #1
 800f886:	d102      	bne.n	800f88e <_read_r+0x1e>
 800f888:	682b      	ldr	r3, [r5, #0]
 800f88a:	b103      	cbz	r3, 800f88e <_read_r+0x1e>
 800f88c:	6023      	str	r3, [r4, #0]
 800f88e:	bd38      	pop	{r3, r4, r5, pc}
 800f890:	2001da0c 	.word	0x2001da0c

0800f894 <_sbrk_r>:
 800f894:	b538      	push	{r3, r4, r5, lr}
 800f896:	4d06      	ldr	r5, [pc, #24]	; (800f8b0 <_sbrk_r+0x1c>)
 800f898:	2300      	movs	r3, #0
 800f89a:	4604      	mov	r4, r0
 800f89c:	4608      	mov	r0, r1
 800f89e:	602b      	str	r3, [r5, #0]
 800f8a0:	f7f1 fcfc 	bl	800129c <_sbrk>
 800f8a4:	1c43      	adds	r3, r0, #1
 800f8a6:	d102      	bne.n	800f8ae <_sbrk_r+0x1a>
 800f8a8:	682b      	ldr	r3, [r5, #0]
 800f8aa:	b103      	cbz	r3, 800f8ae <_sbrk_r+0x1a>
 800f8ac:	6023      	str	r3, [r4, #0]
 800f8ae:	bd38      	pop	{r3, r4, r5, pc}
 800f8b0:	2001da0c 	.word	0x2001da0c

0800f8b4 <_write_r>:
 800f8b4:	b538      	push	{r3, r4, r5, lr}
 800f8b6:	4d07      	ldr	r5, [pc, #28]	; (800f8d4 <_write_r+0x20>)
 800f8b8:	4604      	mov	r4, r0
 800f8ba:	4608      	mov	r0, r1
 800f8bc:	4611      	mov	r1, r2
 800f8be:	2200      	movs	r2, #0
 800f8c0:	602a      	str	r2, [r5, #0]
 800f8c2:	461a      	mov	r2, r3
 800f8c4:	f7f3 ffba 	bl	800383c <_write>
 800f8c8:	1c43      	adds	r3, r0, #1
 800f8ca:	d102      	bne.n	800f8d2 <_write_r+0x1e>
 800f8cc:	682b      	ldr	r3, [r5, #0]
 800f8ce:	b103      	cbz	r3, 800f8d2 <_write_r+0x1e>
 800f8d0:	6023      	str	r3, [r4, #0]
 800f8d2:	bd38      	pop	{r3, r4, r5, pc}
 800f8d4:	2001da0c 	.word	0x2001da0c

0800f8d8 <__errno>:
 800f8d8:	4b01      	ldr	r3, [pc, #4]	; (800f8e0 <__errno+0x8>)
 800f8da:	6818      	ldr	r0, [r3, #0]
 800f8dc:	4770      	bx	lr
 800f8de:	bf00      	nop
 800f8e0:	20001d84 	.word	0x20001d84

0800f8e4 <__libc_init_array>:
 800f8e4:	b570      	push	{r4, r5, r6, lr}
 800f8e6:	4d0d      	ldr	r5, [pc, #52]	; (800f91c <__libc_init_array+0x38>)
 800f8e8:	4c0d      	ldr	r4, [pc, #52]	; (800f920 <__libc_init_array+0x3c>)
 800f8ea:	1b64      	subs	r4, r4, r5
 800f8ec:	10a4      	asrs	r4, r4, #2
 800f8ee:	2600      	movs	r6, #0
 800f8f0:	42a6      	cmp	r6, r4
 800f8f2:	d109      	bne.n	800f908 <__libc_init_array+0x24>
 800f8f4:	4d0b      	ldr	r5, [pc, #44]	; (800f924 <__libc_init_array+0x40>)
 800f8f6:	4c0c      	ldr	r4, [pc, #48]	; (800f928 <__libc_init_array+0x44>)
 800f8f8:	f001 feea 	bl	80116d0 <_init>
 800f8fc:	1b64      	subs	r4, r4, r5
 800f8fe:	10a4      	asrs	r4, r4, #2
 800f900:	2600      	movs	r6, #0
 800f902:	42a6      	cmp	r6, r4
 800f904:	d105      	bne.n	800f912 <__libc_init_array+0x2e>
 800f906:	bd70      	pop	{r4, r5, r6, pc}
 800f908:	f855 3b04 	ldr.w	r3, [r5], #4
 800f90c:	4798      	blx	r3
 800f90e:	3601      	adds	r6, #1
 800f910:	e7ee      	b.n	800f8f0 <__libc_init_array+0xc>
 800f912:	f855 3b04 	ldr.w	r3, [r5], #4
 800f916:	4798      	blx	r3
 800f918:	3601      	adds	r6, #1
 800f91a:	e7f2      	b.n	800f902 <__libc_init_array+0x1e>
 800f91c:	08036ef0 	.word	0x08036ef0
 800f920:	08036ef0 	.word	0x08036ef0
 800f924:	08036ef0 	.word	0x08036ef0
 800f928:	08036ef4 	.word	0x08036ef4

0800f92c <__retarget_lock_acquire_recursive>:
 800f92c:	4770      	bx	lr

0800f92e <__retarget_lock_release_recursive>:
 800f92e:	4770      	bx	lr

0800f930 <memcpy>:
 800f930:	440a      	add	r2, r1
 800f932:	4291      	cmp	r1, r2
 800f934:	f100 33ff 	add.w	r3, r0, #4294967295
 800f938:	d100      	bne.n	800f93c <memcpy+0xc>
 800f93a:	4770      	bx	lr
 800f93c:	b510      	push	{r4, lr}
 800f93e:	f811 4b01 	ldrb.w	r4, [r1], #1
 800f942:	f803 4f01 	strb.w	r4, [r3, #1]!
 800f946:	4291      	cmp	r1, r2
 800f948:	d1f9      	bne.n	800f93e <memcpy+0xe>
 800f94a:	bd10      	pop	{r4, pc}

0800f94c <__assert_func>:
 800f94c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f94e:	4614      	mov	r4, r2
 800f950:	461a      	mov	r2, r3
 800f952:	4b09      	ldr	r3, [pc, #36]	; (800f978 <__assert_func+0x2c>)
 800f954:	681b      	ldr	r3, [r3, #0]
 800f956:	4605      	mov	r5, r0
 800f958:	68d8      	ldr	r0, [r3, #12]
 800f95a:	b14c      	cbz	r4, 800f970 <__assert_func+0x24>
 800f95c:	4b07      	ldr	r3, [pc, #28]	; (800f97c <__assert_func+0x30>)
 800f95e:	9100      	str	r1, [sp, #0]
 800f960:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f964:	4906      	ldr	r1, [pc, #24]	; (800f980 <__assert_func+0x34>)
 800f966:	462b      	mov	r3, r5
 800f968:	f001 f9ca 	bl	8010d00 <fiprintf>
 800f96c:	f001 f9da 	bl	8010d24 <abort>
 800f970:	4b04      	ldr	r3, [pc, #16]	; (800f984 <__assert_func+0x38>)
 800f972:	461c      	mov	r4, r3
 800f974:	e7f3      	b.n	800f95e <__assert_func+0x12>
 800f976:	bf00      	nop
 800f978:	20001d84 	.word	0x20001d84
 800f97c:	08036953 	.word	0x08036953
 800f980:	08036960 	.word	0x08036960
 800f984:	0803698e 	.word	0x0803698e

0800f988 <quorem>:
 800f988:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f98c:	6903      	ldr	r3, [r0, #16]
 800f98e:	690c      	ldr	r4, [r1, #16]
 800f990:	42a3      	cmp	r3, r4
 800f992:	4607      	mov	r7, r0
 800f994:	db7e      	blt.n	800fa94 <quorem+0x10c>
 800f996:	3c01      	subs	r4, #1
 800f998:	f101 0814 	add.w	r8, r1, #20
 800f99c:	f100 0514 	add.w	r5, r0, #20
 800f9a0:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800f9a4:	9301      	str	r3, [sp, #4]
 800f9a6:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800f9aa:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800f9ae:	3301      	adds	r3, #1
 800f9b0:	429a      	cmp	r2, r3
 800f9b2:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800f9b6:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800f9ba:	fbb2 f6f3 	udiv	r6, r2, r3
 800f9be:	d331      	bcc.n	800fa24 <quorem+0x9c>
 800f9c0:	f04f 0e00 	mov.w	lr, #0
 800f9c4:	4640      	mov	r0, r8
 800f9c6:	46ac      	mov	ip, r5
 800f9c8:	46f2      	mov	sl, lr
 800f9ca:	f850 2b04 	ldr.w	r2, [r0], #4
 800f9ce:	b293      	uxth	r3, r2
 800f9d0:	fb06 e303 	mla	r3, r6, r3, lr
 800f9d4:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800f9d8:	0c1a      	lsrs	r2, r3, #16
 800f9da:	b29b      	uxth	r3, r3
 800f9dc:	ebaa 0303 	sub.w	r3, sl, r3
 800f9e0:	f8dc a000 	ldr.w	sl, [ip]
 800f9e4:	fa13 f38a 	uxtah	r3, r3, sl
 800f9e8:	fb06 220e 	mla	r2, r6, lr, r2
 800f9ec:	9300      	str	r3, [sp, #0]
 800f9ee:	9b00      	ldr	r3, [sp, #0]
 800f9f0:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800f9f4:	b292      	uxth	r2, r2
 800f9f6:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800f9fa:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800f9fe:	f8bd 3000 	ldrh.w	r3, [sp]
 800fa02:	4581      	cmp	r9, r0
 800fa04:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800fa08:	f84c 3b04 	str.w	r3, [ip], #4
 800fa0c:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800fa10:	d2db      	bcs.n	800f9ca <quorem+0x42>
 800fa12:	f855 300b 	ldr.w	r3, [r5, fp]
 800fa16:	b92b      	cbnz	r3, 800fa24 <quorem+0x9c>
 800fa18:	9b01      	ldr	r3, [sp, #4]
 800fa1a:	3b04      	subs	r3, #4
 800fa1c:	429d      	cmp	r5, r3
 800fa1e:	461a      	mov	r2, r3
 800fa20:	d32c      	bcc.n	800fa7c <quorem+0xf4>
 800fa22:	613c      	str	r4, [r7, #16]
 800fa24:	4638      	mov	r0, r7
 800fa26:	f001 f86b 	bl	8010b00 <__mcmp>
 800fa2a:	2800      	cmp	r0, #0
 800fa2c:	db22      	blt.n	800fa74 <quorem+0xec>
 800fa2e:	3601      	adds	r6, #1
 800fa30:	4629      	mov	r1, r5
 800fa32:	2000      	movs	r0, #0
 800fa34:	f858 2b04 	ldr.w	r2, [r8], #4
 800fa38:	f8d1 c000 	ldr.w	ip, [r1]
 800fa3c:	b293      	uxth	r3, r2
 800fa3e:	1ac3      	subs	r3, r0, r3
 800fa40:	0c12      	lsrs	r2, r2, #16
 800fa42:	fa13 f38c 	uxtah	r3, r3, ip
 800fa46:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 800fa4a:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800fa4e:	b29b      	uxth	r3, r3
 800fa50:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800fa54:	45c1      	cmp	r9, r8
 800fa56:	f841 3b04 	str.w	r3, [r1], #4
 800fa5a:	ea4f 4022 	mov.w	r0, r2, asr #16
 800fa5e:	d2e9      	bcs.n	800fa34 <quorem+0xac>
 800fa60:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800fa64:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800fa68:	b922      	cbnz	r2, 800fa74 <quorem+0xec>
 800fa6a:	3b04      	subs	r3, #4
 800fa6c:	429d      	cmp	r5, r3
 800fa6e:	461a      	mov	r2, r3
 800fa70:	d30a      	bcc.n	800fa88 <quorem+0x100>
 800fa72:	613c      	str	r4, [r7, #16]
 800fa74:	4630      	mov	r0, r6
 800fa76:	b003      	add	sp, #12
 800fa78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fa7c:	6812      	ldr	r2, [r2, #0]
 800fa7e:	3b04      	subs	r3, #4
 800fa80:	2a00      	cmp	r2, #0
 800fa82:	d1ce      	bne.n	800fa22 <quorem+0x9a>
 800fa84:	3c01      	subs	r4, #1
 800fa86:	e7c9      	b.n	800fa1c <quorem+0x94>
 800fa88:	6812      	ldr	r2, [r2, #0]
 800fa8a:	3b04      	subs	r3, #4
 800fa8c:	2a00      	cmp	r2, #0
 800fa8e:	d1f0      	bne.n	800fa72 <quorem+0xea>
 800fa90:	3c01      	subs	r4, #1
 800fa92:	e7eb      	b.n	800fa6c <quorem+0xe4>
 800fa94:	2000      	movs	r0, #0
 800fa96:	e7ee      	b.n	800fa76 <quorem+0xee>

0800fa98 <_dtoa_r>:
 800fa98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa9c:	ed2d 8b02 	vpush	{d8}
 800faa0:	69c5      	ldr	r5, [r0, #28]
 800faa2:	b091      	sub	sp, #68	; 0x44
 800faa4:	ed8d 0b02 	vstr	d0, [sp, #8]
 800faa8:	ec59 8b10 	vmov	r8, r9, d0
 800faac:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800faae:	9106      	str	r1, [sp, #24]
 800fab0:	4606      	mov	r6, r0
 800fab2:	9208      	str	r2, [sp, #32]
 800fab4:	930c      	str	r3, [sp, #48]	; 0x30
 800fab6:	b975      	cbnz	r5, 800fad6 <_dtoa_r+0x3e>
 800fab8:	2010      	movs	r0, #16
 800faba:	f7f3 fef1 	bl	80038a0 <__wrap_malloc>
 800fabe:	4602      	mov	r2, r0
 800fac0:	61f0      	str	r0, [r6, #28]
 800fac2:	b920      	cbnz	r0, 800face <_dtoa_r+0x36>
 800fac4:	4ba6      	ldr	r3, [pc, #664]	; (800fd60 <_dtoa_r+0x2c8>)
 800fac6:	21ef      	movs	r1, #239	; 0xef
 800fac8:	48a6      	ldr	r0, [pc, #664]	; (800fd64 <_dtoa_r+0x2cc>)
 800faca:	f7ff ff3f 	bl	800f94c <__assert_func>
 800face:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800fad2:	6005      	str	r5, [r0, #0]
 800fad4:	60c5      	str	r5, [r0, #12]
 800fad6:	69f3      	ldr	r3, [r6, #28]
 800fad8:	6819      	ldr	r1, [r3, #0]
 800fada:	b151      	cbz	r1, 800faf2 <_dtoa_r+0x5a>
 800fadc:	685a      	ldr	r2, [r3, #4]
 800fade:	604a      	str	r2, [r1, #4]
 800fae0:	2301      	movs	r3, #1
 800fae2:	4093      	lsls	r3, r2
 800fae4:	608b      	str	r3, [r1, #8]
 800fae6:	4630      	mov	r0, r6
 800fae8:	f000 fdce 	bl	8010688 <_Bfree>
 800faec:	69f3      	ldr	r3, [r6, #28]
 800faee:	2200      	movs	r2, #0
 800faf0:	601a      	str	r2, [r3, #0]
 800faf2:	f1b9 0300 	subs.w	r3, r9, #0
 800faf6:	bfbb      	ittet	lt
 800faf8:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 800fafc:	9303      	strlt	r3, [sp, #12]
 800fafe:	2300      	movge	r3, #0
 800fb00:	2201      	movlt	r2, #1
 800fb02:	bfac      	ite	ge
 800fb04:	6023      	strge	r3, [r4, #0]
 800fb06:	6022      	strlt	r2, [r4, #0]
 800fb08:	4b97      	ldr	r3, [pc, #604]	; (800fd68 <_dtoa_r+0x2d0>)
 800fb0a:	9c03      	ldr	r4, [sp, #12]
 800fb0c:	43a3      	bics	r3, r4
 800fb0e:	d11c      	bne.n	800fb4a <_dtoa_r+0xb2>
 800fb10:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800fb12:	f242 730f 	movw	r3, #9999	; 0x270f
 800fb16:	6013      	str	r3, [r2, #0]
 800fb18:	f3c4 0313 	ubfx	r3, r4, #0, #20
 800fb1c:	ea53 0308 	orrs.w	r3, r3, r8
 800fb20:	f000 84fb 	beq.w	801051a <_dtoa_r+0xa82>
 800fb24:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800fb26:	b963      	cbnz	r3, 800fb42 <_dtoa_r+0xaa>
 800fb28:	4b90      	ldr	r3, [pc, #576]	; (800fd6c <_dtoa_r+0x2d4>)
 800fb2a:	e020      	b.n	800fb6e <_dtoa_r+0xd6>
 800fb2c:	4b90      	ldr	r3, [pc, #576]	; (800fd70 <_dtoa_r+0x2d8>)
 800fb2e:	9301      	str	r3, [sp, #4]
 800fb30:	3308      	adds	r3, #8
 800fb32:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800fb34:	6013      	str	r3, [r2, #0]
 800fb36:	9801      	ldr	r0, [sp, #4]
 800fb38:	b011      	add	sp, #68	; 0x44
 800fb3a:	ecbd 8b02 	vpop	{d8}
 800fb3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fb42:	4b8a      	ldr	r3, [pc, #552]	; (800fd6c <_dtoa_r+0x2d4>)
 800fb44:	9301      	str	r3, [sp, #4]
 800fb46:	3303      	adds	r3, #3
 800fb48:	e7f3      	b.n	800fb32 <_dtoa_r+0x9a>
 800fb4a:	ed9d 8b02 	vldr	d8, [sp, #8]
 800fb4e:	eeb5 8b40 	vcmp.f64	d8, #0.0
 800fb52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fb56:	d10c      	bne.n	800fb72 <_dtoa_r+0xda>
 800fb58:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800fb5a:	2301      	movs	r3, #1
 800fb5c:	6013      	str	r3, [r2, #0]
 800fb5e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800fb60:	2b00      	cmp	r3, #0
 800fb62:	f000 84d7 	beq.w	8010514 <_dtoa_r+0xa7c>
 800fb66:	4b83      	ldr	r3, [pc, #524]	; (800fd74 <_dtoa_r+0x2dc>)
 800fb68:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800fb6a:	6013      	str	r3, [r2, #0]
 800fb6c:	3b01      	subs	r3, #1
 800fb6e:	9301      	str	r3, [sp, #4]
 800fb70:	e7e1      	b.n	800fb36 <_dtoa_r+0x9e>
 800fb72:	aa0e      	add	r2, sp, #56	; 0x38
 800fb74:	a90f      	add	r1, sp, #60	; 0x3c
 800fb76:	4630      	mov	r0, r6
 800fb78:	eeb0 0b48 	vmov.f64	d0, d8
 800fb7c:	f001 f866 	bl	8010c4c <__d2b>
 800fb80:	f3c4 530a 	ubfx	r3, r4, #20, #11
 800fb84:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800fb86:	4605      	mov	r5, r0
 800fb88:	2b00      	cmp	r3, #0
 800fb8a:	d046      	beq.n	800fc1a <_dtoa_r+0x182>
 800fb8c:	eeb0 7b48 	vmov.f64	d7, d8
 800fb90:	ee18 1a90 	vmov	r1, s17
 800fb94:	f3c1 0113 	ubfx	r1, r1, #0, #20
 800fb98:	f041 517f 	orr.w	r1, r1, #1069547520	; 0x3fc00000
 800fb9c:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 800fba0:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 800fba4:	2000      	movs	r0, #0
 800fba6:	ee07 1a90 	vmov	s15, r1
 800fbaa:	eeb7 6b08 	vmov.f64	d6, #120	; 0x3fc00000  1.5
 800fbae:	ed9f 5b66 	vldr	d5, [pc, #408]	; 800fd48 <_dtoa_r+0x2b0>
 800fbb2:	ee37 7b46 	vsub.f64	d7, d7, d6
 800fbb6:	ed9f 6b66 	vldr	d6, [pc, #408]	; 800fd50 <_dtoa_r+0x2b8>
 800fbba:	eea7 6b05 	vfma.f64	d6, d7, d5
 800fbbe:	ed9f 5b66 	vldr	d5, [pc, #408]	; 800fd58 <_dtoa_r+0x2c0>
 800fbc2:	ee07 3a90 	vmov	s15, r3
 800fbc6:	eeb8 4be7 	vcvt.f64.s32	d4, s15
 800fbca:	eeb0 7b46 	vmov.f64	d7, d6
 800fbce:	eea4 7b05 	vfma.f64	d7, d4, d5
 800fbd2:	eefd 6bc7 	vcvt.s32.f64	s13, d7
 800fbd6:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 800fbda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fbde:	ee16 ba90 	vmov	fp, s13
 800fbe2:	9009      	str	r0, [sp, #36]	; 0x24
 800fbe4:	d508      	bpl.n	800fbf8 <_dtoa_r+0x160>
 800fbe6:	eeb8 6be6 	vcvt.f64.s32	d6, s13
 800fbea:	eeb4 6b47 	vcmp.f64	d6, d7
 800fbee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fbf2:	bf18      	it	ne
 800fbf4:	f10b 3bff 	addne.w	fp, fp, #4294967295
 800fbf8:	f1bb 0f16 	cmp.w	fp, #22
 800fbfc:	d82b      	bhi.n	800fc56 <_dtoa_r+0x1be>
 800fbfe:	495e      	ldr	r1, [pc, #376]	; (800fd78 <_dtoa_r+0x2e0>)
 800fc00:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
 800fc04:	ed91 7b00 	vldr	d7, [r1]
 800fc08:	eeb4 8bc7 	vcmpe.f64	d8, d7
 800fc0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fc10:	d501      	bpl.n	800fc16 <_dtoa_r+0x17e>
 800fc12:	f10b 3bff 	add.w	fp, fp, #4294967295
 800fc16:	2100      	movs	r1, #0
 800fc18:	e01e      	b.n	800fc58 <_dtoa_r+0x1c0>
 800fc1a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fc1c:	4413      	add	r3, r2
 800fc1e:	f203 4132 	addw	r1, r3, #1074	; 0x432
 800fc22:	2920      	cmp	r1, #32
 800fc24:	bfc1      	itttt	gt
 800fc26:	f1c1 0140 	rsbgt	r1, r1, #64	; 0x40
 800fc2a:	408c      	lslgt	r4, r1
 800fc2c:	f203 4112 	addwgt	r1, r3, #1042	; 0x412
 800fc30:	fa28 f101 	lsrgt.w	r1, r8, r1
 800fc34:	bfd6      	itet	le
 800fc36:	f1c1 0120 	rsble	r1, r1, #32
 800fc3a:	4321      	orrgt	r1, r4
 800fc3c:	fa08 f101 	lslle.w	r1, r8, r1
 800fc40:	ee07 1a90 	vmov	s15, r1
 800fc44:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 800fc48:	3b01      	subs	r3, #1
 800fc4a:	ee17 1a90 	vmov	r1, s15
 800fc4e:	2001      	movs	r0, #1
 800fc50:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 800fc54:	e7a7      	b.n	800fba6 <_dtoa_r+0x10e>
 800fc56:	2101      	movs	r1, #1
 800fc58:	1ad2      	subs	r2, r2, r3
 800fc5a:	1e53      	subs	r3, r2, #1
 800fc5c:	9305      	str	r3, [sp, #20]
 800fc5e:	bf45      	ittet	mi
 800fc60:	f1c2 0301 	rsbmi	r3, r2, #1
 800fc64:	9304      	strmi	r3, [sp, #16]
 800fc66:	2300      	movpl	r3, #0
 800fc68:	2300      	movmi	r3, #0
 800fc6a:	bf4c      	ite	mi
 800fc6c:	9305      	strmi	r3, [sp, #20]
 800fc6e:	9304      	strpl	r3, [sp, #16]
 800fc70:	f1bb 0f00 	cmp.w	fp, #0
 800fc74:	910b      	str	r1, [sp, #44]	; 0x2c
 800fc76:	db18      	blt.n	800fcaa <_dtoa_r+0x212>
 800fc78:	9b05      	ldr	r3, [sp, #20]
 800fc7a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800fc7e:	445b      	add	r3, fp
 800fc80:	9305      	str	r3, [sp, #20]
 800fc82:	2300      	movs	r3, #0
 800fc84:	9a06      	ldr	r2, [sp, #24]
 800fc86:	2a09      	cmp	r2, #9
 800fc88:	d848      	bhi.n	800fd1c <_dtoa_r+0x284>
 800fc8a:	2a05      	cmp	r2, #5
 800fc8c:	bfc4      	itt	gt
 800fc8e:	3a04      	subgt	r2, #4
 800fc90:	9206      	strgt	r2, [sp, #24]
 800fc92:	9a06      	ldr	r2, [sp, #24]
 800fc94:	f1a2 0202 	sub.w	r2, r2, #2
 800fc98:	bfcc      	ite	gt
 800fc9a:	2400      	movgt	r4, #0
 800fc9c:	2401      	movle	r4, #1
 800fc9e:	2a03      	cmp	r2, #3
 800fca0:	d847      	bhi.n	800fd32 <_dtoa_r+0x29a>
 800fca2:	e8df f002 	tbb	[pc, r2]
 800fca6:	2d0b      	.short	0x2d0b
 800fca8:	392b      	.short	0x392b
 800fcaa:	9b04      	ldr	r3, [sp, #16]
 800fcac:	2200      	movs	r2, #0
 800fcae:	eba3 030b 	sub.w	r3, r3, fp
 800fcb2:	9304      	str	r3, [sp, #16]
 800fcb4:	920a      	str	r2, [sp, #40]	; 0x28
 800fcb6:	f1cb 0300 	rsb	r3, fp, #0
 800fcba:	e7e3      	b.n	800fc84 <_dtoa_r+0x1ec>
 800fcbc:	2200      	movs	r2, #0
 800fcbe:	9207      	str	r2, [sp, #28]
 800fcc0:	9a08      	ldr	r2, [sp, #32]
 800fcc2:	2a00      	cmp	r2, #0
 800fcc4:	dc38      	bgt.n	800fd38 <_dtoa_r+0x2a0>
 800fcc6:	f04f 0a01 	mov.w	sl, #1
 800fcca:	46d1      	mov	r9, sl
 800fccc:	4652      	mov	r2, sl
 800fcce:	f8cd a020 	str.w	sl, [sp, #32]
 800fcd2:	69f7      	ldr	r7, [r6, #28]
 800fcd4:	2100      	movs	r1, #0
 800fcd6:	2004      	movs	r0, #4
 800fcd8:	f100 0c14 	add.w	ip, r0, #20
 800fcdc:	4594      	cmp	ip, r2
 800fcde:	d930      	bls.n	800fd42 <_dtoa_r+0x2aa>
 800fce0:	6079      	str	r1, [r7, #4]
 800fce2:	4630      	mov	r0, r6
 800fce4:	930d      	str	r3, [sp, #52]	; 0x34
 800fce6:	f000 fc8f 	bl	8010608 <_Balloc>
 800fcea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fcec:	9001      	str	r0, [sp, #4]
 800fcee:	4602      	mov	r2, r0
 800fcf0:	2800      	cmp	r0, #0
 800fcf2:	d145      	bne.n	800fd80 <_dtoa_r+0x2e8>
 800fcf4:	4b21      	ldr	r3, [pc, #132]	; (800fd7c <_dtoa_r+0x2e4>)
 800fcf6:	f240 11af 	movw	r1, #431	; 0x1af
 800fcfa:	e6e5      	b.n	800fac8 <_dtoa_r+0x30>
 800fcfc:	2201      	movs	r2, #1
 800fcfe:	e7de      	b.n	800fcbe <_dtoa_r+0x226>
 800fd00:	2200      	movs	r2, #0
 800fd02:	9207      	str	r2, [sp, #28]
 800fd04:	9a08      	ldr	r2, [sp, #32]
 800fd06:	eb0b 0a02 	add.w	sl, fp, r2
 800fd0a:	f10a 0901 	add.w	r9, sl, #1
 800fd0e:	464a      	mov	r2, r9
 800fd10:	2a01      	cmp	r2, #1
 800fd12:	bfb8      	it	lt
 800fd14:	2201      	movlt	r2, #1
 800fd16:	e7dc      	b.n	800fcd2 <_dtoa_r+0x23a>
 800fd18:	2201      	movs	r2, #1
 800fd1a:	e7f2      	b.n	800fd02 <_dtoa_r+0x26a>
 800fd1c:	2401      	movs	r4, #1
 800fd1e:	2200      	movs	r2, #0
 800fd20:	e9cd 2406 	strd	r2, r4, [sp, #24]
 800fd24:	f04f 3aff 	mov.w	sl, #4294967295
 800fd28:	2100      	movs	r1, #0
 800fd2a:	46d1      	mov	r9, sl
 800fd2c:	2212      	movs	r2, #18
 800fd2e:	9108      	str	r1, [sp, #32]
 800fd30:	e7cf      	b.n	800fcd2 <_dtoa_r+0x23a>
 800fd32:	2201      	movs	r2, #1
 800fd34:	9207      	str	r2, [sp, #28]
 800fd36:	e7f5      	b.n	800fd24 <_dtoa_r+0x28c>
 800fd38:	f8dd a020 	ldr.w	sl, [sp, #32]
 800fd3c:	46d1      	mov	r9, sl
 800fd3e:	4652      	mov	r2, sl
 800fd40:	e7c7      	b.n	800fcd2 <_dtoa_r+0x23a>
 800fd42:	3101      	adds	r1, #1
 800fd44:	0040      	lsls	r0, r0, #1
 800fd46:	e7c7      	b.n	800fcd8 <_dtoa_r+0x240>
 800fd48:	636f4361 	.word	0x636f4361
 800fd4c:	3fd287a7 	.word	0x3fd287a7
 800fd50:	8b60c8b3 	.word	0x8b60c8b3
 800fd54:	3fc68a28 	.word	0x3fc68a28
 800fd58:	509f79fb 	.word	0x509f79fb
 800fd5c:	3fd34413 	.word	0x3fd34413
 800fd60:	080368b0 	.word	0x080368b0
 800fd64:	0803699c 	.word	0x0803699c
 800fd68:	7ff00000 	.word	0x7ff00000
 800fd6c:	08036998 	.word	0x08036998
 800fd70:	0803698f 	.word	0x0803698f
 800fd74:	08036930 	.word	0x08036930
 800fd78:	08036a88 	.word	0x08036a88
 800fd7c:	080369f4 	.word	0x080369f4
 800fd80:	69f2      	ldr	r2, [r6, #28]
 800fd82:	9901      	ldr	r1, [sp, #4]
 800fd84:	6011      	str	r1, [r2, #0]
 800fd86:	f1b9 0f0e 	cmp.w	r9, #14
 800fd8a:	d86c      	bhi.n	800fe66 <_dtoa_r+0x3ce>
 800fd8c:	2c00      	cmp	r4, #0
 800fd8e:	d06a      	beq.n	800fe66 <_dtoa_r+0x3ce>
 800fd90:	f1bb 0f00 	cmp.w	fp, #0
 800fd94:	f340 80a0 	ble.w	800fed8 <_dtoa_r+0x440>
 800fd98:	4ac1      	ldr	r2, [pc, #772]	; (80100a0 <_dtoa_r+0x608>)
 800fd9a:	f00b 010f 	and.w	r1, fp, #15
 800fd9e:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 800fda2:	f41b 7f80 	tst.w	fp, #256	; 0x100
 800fda6:	ed92 7b00 	vldr	d7, [r2]
 800fdaa:	ea4f 122b 	mov.w	r2, fp, asr #4
 800fdae:	f000 8087 	beq.w	800fec0 <_dtoa_r+0x428>
 800fdb2:	49bc      	ldr	r1, [pc, #752]	; (80100a4 <_dtoa_r+0x60c>)
 800fdb4:	ed91 6b08 	vldr	d6, [r1, #32]
 800fdb8:	ee88 6b06 	vdiv.f64	d6, d8, d6
 800fdbc:	ed8d 6b02 	vstr	d6, [sp, #8]
 800fdc0:	f002 020f 	and.w	r2, r2, #15
 800fdc4:	2103      	movs	r1, #3
 800fdc6:	48b7      	ldr	r0, [pc, #732]	; (80100a4 <_dtoa_r+0x60c>)
 800fdc8:	2a00      	cmp	r2, #0
 800fdca:	d17b      	bne.n	800fec4 <_dtoa_r+0x42c>
 800fdcc:	ed9d 6b02 	vldr	d6, [sp, #8]
 800fdd0:	ee86 7b07 	vdiv.f64	d7, d6, d7
 800fdd4:	ed8d 7b02 	vstr	d7, [sp, #8]
 800fdd8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fdda:	ed9d 7b02 	vldr	d7, [sp, #8]
 800fdde:	2a00      	cmp	r2, #0
 800fde0:	f000 80a0 	beq.w	800ff24 <_dtoa_r+0x48c>
 800fde4:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 800fde8:	eeb4 7bc6 	vcmpe.f64	d7, d6
 800fdec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fdf0:	f140 8098 	bpl.w	800ff24 <_dtoa_r+0x48c>
 800fdf4:	f1b9 0f00 	cmp.w	r9, #0
 800fdf8:	f000 8094 	beq.w	800ff24 <_dtoa_r+0x48c>
 800fdfc:	f1ba 0f00 	cmp.w	sl, #0
 800fe00:	dd2f      	ble.n	800fe62 <_dtoa_r+0x3ca>
 800fe02:	eeb2 6b04 	vmov.f64	d6, #36	; 0x41200000  10.0
 800fe06:	ee27 7b06 	vmul.f64	d7, d7, d6
 800fe0a:	ed8d 7b02 	vstr	d7, [sp, #8]
 800fe0e:	f10b 32ff 	add.w	r2, fp, #4294967295
 800fe12:	3101      	adds	r1, #1
 800fe14:	4654      	mov	r4, sl
 800fe16:	ed9d 6b02 	vldr	d6, [sp, #8]
 800fe1a:	eeb1 5b0c 	vmov.f64	d5, #28	; 0x40e00000  7.0
 800fe1e:	ee07 1a90 	vmov	s15, r1
 800fe22:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 800fe26:	eea7 5b06 	vfma.f64	d5, d7, d6
 800fe2a:	ee15 7a90 	vmov	r7, s11
 800fe2e:	ec51 0b15 	vmov	r0, r1, d5
 800fe32:	f1a7 7150 	sub.w	r1, r7, #54525952	; 0x3400000
 800fe36:	2c00      	cmp	r4, #0
 800fe38:	d177      	bne.n	800ff2a <_dtoa_r+0x492>
 800fe3a:	eeb1 7b04 	vmov.f64	d7, #20	; 0x40a00000  5.0
 800fe3e:	ee36 6b47 	vsub.f64	d6, d6, d7
 800fe42:	ec41 0b17 	vmov	d7, r0, r1
 800fe46:	eeb4 6bc7 	vcmpe.f64	d6, d7
 800fe4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fe4e:	f300 826a 	bgt.w	8010326 <_dtoa_r+0x88e>
 800fe52:	eeb1 7b47 	vneg.f64	d7, d7
 800fe56:	eeb4 6bc7 	vcmpe.f64	d6, d7
 800fe5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fe5e:	f100 8260 	bmi.w	8010322 <_dtoa_r+0x88a>
 800fe62:	ed8d 8b02 	vstr	d8, [sp, #8]
 800fe66:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800fe68:	2a00      	cmp	r2, #0
 800fe6a:	f2c0 811d 	blt.w	80100a8 <_dtoa_r+0x610>
 800fe6e:	f1bb 0f0e 	cmp.w	fp, #14
 800fe72:	f300 8119 	bgt.w	80100a8 <_dtoa_r+0x610>
 800fe76:	4b8a      	ldr	r3, [pc, #552]	; (80100a0 <_dtoa_r+0x608>)
 800fe78:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800fe7c:	ed93 6b00 	vldr	d6, [r3]
 800fe80:	9b08      	ldr	r3, [sp, #32]
 800fe82:	2b00      	cmp	r3, #0
 800fe84:	f280 80b7 	bge.w	800fff6 <_dtoa_r+0x55e>
 800fe88:	f1b9 0f00 	cmp.w	r9, #0
 800fe8c:	f300 80b3 	bgt.w	800fff6 <_dtoa_r+0x55e>
 800fe90:	f040 8246 	bne.w	8010320 <_dtoa_r+0x888>
 800fe94:	eeb1 7b04 	vmov.f64	d7, #20	; 0x40a00000  5.0
 800fe98:	ee26 6b07 	vmul.f64	d6, d6, d7
 800fe9c:	ed9d 7b02 	vldr	d7, [sp, #8]
 800fea0:	eeb4 6bc7 	vcmpe.f64	d6, d7
 800fea4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fea8:	464c      	mov	r4, r9
 800feaa:	464f      	mov	r7, r9
 800feac:	f280 821c 	bge.w	80102e8 <_dtoa_r+0x850>
 800feb0:	f8dd 8004 	ldr.w	r8, [sp, #4]
 800feb4:	2331      	movs	r3, #49	; 0x31
 800feb6:	f808 3b01 	strb.w	r3, [r8], #1
 800feba:	f10b 0b01 	add.w	fp, fp, #1
 800febe:	e218      	b.n	80102f2 <_dtoa_r+0x85a>
 800fec0:	2102      	movs	r1, #2
 800fec2:	e780      	b.n	800fdc6 <_dtoa_r+0x32e>
 800fec4:	07d4      	lsls	r4, r2, #31
 800fec6:	d504      	bpl.n	800fed2 <_dtoa_r+0x43a>
 800fec8:	ed90 6b00 	vldr	d6, [r0]
 800fecc:	3101      	adds	r1, #1
 800fece:	ee27 7b06 	vmul.f64	d7, d7, d6
 800fed2:	1052      	asrs	r2, r2, #1
 800fed4:	3008      	adds	r0, #8
 800fed6:	e777      	b.n	800fdc8 <_dtoa_r+0x330>
 800fed8:	d022      	beq.n	800ff20 <_dtoa_r+0x488>
 800feda:	f1cb 0200 	rsb	r2, fp, #0
 800fede:	4970      	ldr	r1, [pc, #448]	; (80100a0 <_dtoa_r+0x608>)
 800fee0:	f002 000f 	and.w	r0, r2, #15
 800fee4:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
 800fee8:	ed91 7b00 	vldr	d7, [r1]
 800feec:	ee28 7b07 	vmul.f64	d7, d8, d7
 800fef0:	ed8d 7b02 	vstr	d7, [sp, #8]
 800fef4:	486b      	ldr	r0, [pc, #428]	; (80100a4 <_dtoa_r+0x60c>)
 800fef6:	1112      	asrs	r2, r2, #4
 800fef8:	2400      	movs	r4, #0
 800fefa:	2102      	movs	r1, #2
 800fefc:	b92a      	cbnz	r2, 800ff0a <_dtoa_r+0x472>
 800fefe:	2c00      	cmp	r4, #0
 800ff00:	f43f af6a 	beq.w	800fdd8 <_dtoa_r+0x340>
 800ff04:	ed8d 7b02 	vstr	d7, [sp, #8]
 800ff08:	e766      	b.n	800fdd8 <_dtoa_r+0x340>
 800ff0a:	07d7      	lsls	r7, r2, #31
 800ff0c:	d505      	bpl.n	800ff1a <_dtoa_r+0x482>
 800ff0e:	ed90 6b00 	vldr	d6, [r0]
 800ff12:	3101      	adds	r1, #1
 800ff14:	2401      	movs	r4, #1
 800ff16:	ee27 7b06 	vmul.f64	d7, d7, d6
 800ff1a:	1052      	asrs	r2, r2, #1
 800ff1c:	3008      	adds	r0, #8
 800ff1e:	e7ed      	b.n	800fefc <_dtoa_r+0x464>
 800ff20:	2102      	movs	r1, #2
 800ff22:	e759      	b.n	800fdd8 <_dtoa_r+0x340>
 800ff24:	465a      	mov	r2, fp
 800ff26:	464c      	mov	r4, r9
 800ff28:	e775      	b.n	800fe16 <_dtoa_r+0x37e>
 800ff2a:	ec41 0b17 	vmov	d7, r0, r1
 800ff2e:	495c      	ldr	r1, [pc, #368]	; (80100a0 <_dtoa_r+0x608>)
 800ff30:	eb01 01c4 	add.w	r1, r1, r4, lsl #3
 800ff34:	ed11 4b02 	vldr	d4, [r1, #-8]
 800ff38:	9901      	ldr	r1, [sp, #4]
 800ff3a:	440c      	add	r4, r1
 800ff3c:	9907      	ldr	r1, [sp, #28]
 800ff3e:	b351      	cbz	r1, 800ff96 <_dtoa_r+0x4fe>
 800ff40:	eeb6 3b00 	vmov.f64	d3, #96	; 0x3f000000  0.5
 800ff44:	eeb7 2b00 	vmov.f64	d2, #112	; 0x3f800000  1.0
 800ff48:	f8dd 8004 	ldr.w	r8, [sp, #4]
 800ff4c:	ee83 5b04 	vdiv.f64	d5, d3, d4
 800ff50:	eeb2 3b04 	vmov.f64	d3, #36	; 0x41200000  10.0
 800ff54:	ee35 7b47 	vsub.f64	d7, d5, d7
 800ff58:	eefd 4bc6 	vcvt.s32.f64	s9, d6
 800ff5c:	ee14 1a90 	vmov	r1, s9
 800ff60:	eeb8 5be4 	vcvt.f64.s32	d5, s9
 800ff64:	3130      	adds	r1, #48	; 0x30
 800ff66:	ee36 6b45 	vsub.f64	d6, d6, d5
 800ff6a:	eeb4 6bc7 	vcmpe.f64	d6, d7
 800ff6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ff72:	f808 1b01 	strb.w	r1, [r8], #1
 800ff76:	d439      	bmi.n	800ffec <_dtoa_r+0x554>
 800ff78:	ee32 5b46 	vsub.f64	d5, d2, d6
 800ff7c:	eeb4 5bc7 	vcmpe.f64	d5, d7
 800ff80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ff84:	d472      	bmi.n	801006c <_dtoa_r+0x5d4>
 800ff86:	45a0      	cmp	r8, r4
 800ff88:	f43f af6b 	beq.w	800fe62 <_dtoa_r+0x3ca>
 800ff8c:	ee27 7b03 	vmul.f64	d7, d7, d3
 800ff90:	ee26 6b03 	vmul.f64	d6, d6, d3
 800ff94:	e7e0      	b.n	800ff58 <_dtoa_r+0x4c0>
 800ff96:	f8dd 8004 	ldr.w	r8, [sp, #4]
 800ff9a:	ee27 7b04 	vmul.f64	d7, d7, d4
 800ff9e:	4620      	mov	r0, r4
 800ffa0:	eeb2 3b04 	vmov.f64	d3, #36	; 0x41200000  10.0
 800ffa4:	eefd 4bc6 	vcvt.s32.f64	s9, d6
 800ffa8:	ee14 1a90 	vmov	r1, s9
 800ffac:	3130      	adds	r1, #48	; 0x30
 800ffae:	f808 1b01 	strb.w	r1, [r8], #1
 800ffb2:	45a0      	cmp	r8, r4
 800ffb4:	eeb8 5be4 	vcvt.f64.s32	d5, s9
 800ffb8:	ee36 6b45 	vsub.f64	d6, d6, d5
 800ffbc:	d118      	bne.n	800fff0 <_dtoa_r+0x558>
 800ffbe:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
 800ffc2:	ee37 4b05 	vadd.f64	d4, d7, d5
 800ffc6:	eeb4 6bc4 	vcmpe.f64	d6, d4
 800ffca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ffce:	dc4d      	bgt.n	801006c <_dtoa_r+0x5d4>
 800ffd0:	ee35 5b47 	vsub.f64	d5, d5, d7
 800ffd4:	eeb4 6bc5 	vcmpe.f64	d6, d5
 800ffd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ffdc:	f57f af41 	bpl.w	800fe62 <_dtoa_r+0x3ca>
 800ffe0:	4680      	mov	r8, r0
 800ffe2:	3801      	subs	r0, #1
 800ffe4:	f818 3c01 	ldrb.w	r3, [r8, #-1]
 800ffe8:	2b30      	cmp	r3, #48	; 0x30
 800ffea:	d0f9      	beq.n	800ffe0 <_dtoa_r+0x548>
 800ffec:	4693      	mov	fp, r2
 800ffee:	e02a      	b.n	8010046 <_dtoa_r+0x5ae>
 800fff0:	ee26 6b03 	vmul.f64	d6, d6, d3
 800fff4:	e7d6      	b.n	800ffa4 <_dtoa_r+0x50c>
 800fff6:	ed9d 7b02 	vldr	d7, [sp, #8]
 800fffa:	eeb2 4b04 	vmov.f64	d4, #36	; 0x41200000  10.0
 800fffe:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8010002:	ee87 5b06 	vdiv.f64	d5, d7, d6
 8010006:	eebd 5bc5 	vcvt.s32.f64	s10, d5
 801000a:	ee15 3a10 	vmov	r3, s10
 801000e:	3330      	adds	r3, #48	; 0x30
 8010010:	f808 3b01 	strb.w	r3, [r8], #1
 8010014:	9b01      	ldr	r3, [sp, #4]
 8010016:	eba8 0303 	sub.w	r3, r8, r3
 801001a:	4599      	cmp	r9, r3
 801001c:	eeb8 3bc5 	vcvt.f64.s32	d3, s10
 8010020:	eea3 7b46 	vfms.f64	d7, d3, d6
 8010024:	d133      	bne.n	801008e <_dtoa_r+0x5f6>
 8010026:	ee37 7b07 	vadd.f64	d7, d7, d7
 801002a:	eeb4 7bc6 	vcmpe.f64	d7, d6
 801002e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010032:	dc1a      	bgt.n	801006a <_dtoa_r+0x5d2>
 8010034:	eeb4 7b46 	vcmp.f64	d7, d6
 8010038:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801003c:	d103      	bne.n	8010046 <_dtoa_r+0x5ae>
 801003e:	ee15 3a10 	vmov	r3, s10
 8010042:	07d9      	lsls	r1, r3, #31
 8010044:	d411      	bmi.n	801006a <_dtoa_r+0x5d2>
 8010046:	4629      	mov	r1, r5
 8010048:	4630      	mov	r0, r6
 801004a:	f000 fb1d 	bl	8010688 <_Bfree>
 801004e:	2300      	movs	r3, #0
 8010050:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8010052:	f888 3000 	strb.w	r3, [r8]
 8010056:	f10b 0301 	add.w	r3, fp, #1
 801005a:	6013      	str	r3, [r2, #0]
 801005c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801005e:	2b00      	cmp	r3, #0
 8010060:	f43f ad69 	beq.w	800fb36 <_dtoa_r+0x9e>
 8010064:	f8c3 8000 	str.w	r8, [r3]
 8010068:	e565      	b.n	800fb36 <_dtoa_r+0x9e>
 801006a:	465a      	mov	r2, fp
 801006c:	4643      	mov	r3, r8
 801006e:	4698      	mov	r8, r3
 8010070:	f813 1d01 	ldrb.w	r1, [r3, #-1]!
 8010074:	2939      	cmp	r1, #57	; 0x39
 8010076:	d106      	bne.n	8010086 <_dtoa_r+0x5ee>
 8010078:	9901      	ldr	r1, [sp, #4]
 801007a:	4299      	cmp	r1, r3
 801007c:	d1f7      	bne.n	801006e <_dtoa_r+0x5d6>
 801007e:	9801      	ldr	r0, [sp, #4]
 8010080:	2130      	movs	r1, #48	; 0x30
 8010082:	3201      	adds	r2, #1
 8010084:	7001      	strb	r1, [r0, #0]
 8010086:	7819      	ldrb	r1, [r3, #0]
 8010088:	3101      	adds	r1, #1
 801008a:	7019      	strb	r1, [r3, #0]
 801008c:	e7ae      	b.n	800ffec <_dtoa_r+0x554>
 801008e:	ee27 7b04 	vmul.f64	d7, d7, d4
 8010092:	eeb5 7b40 	vcmp.f64	d7, #0.0
 8010096:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801009a:	d1b2      	bne.n	8010002 <_dtoa_r+0x56a>
 801009c:	e7d3      	b.n	8010046 <_dtoa_r+0x5ae>
 801009e:	bf00      	nop
 80100a0:	08036a88 	.word	0x08036a88
 80100a4:	08036a60 	.word	0x08036a60
 80100a8:	9907      	ldr	r1, [sp, #28]
 80100aa:	2900      	cmp	r1, #0
 80100ac:	f000 80d0 	beq.w	8010250 <_dtoa_r+0x7b8>
 80100b0:	9906      	ldr	r1, [sp, #24]
 80100b2:	2901      	cmp	r1, #1
 80100b4:	f300 80b4 	bgt.w	8010220 <_dtoa_r+0x788>
 80100b8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80100ba:	2900      	cmp	r1, #0
 80100bc:	f000 80ac 	beq.w	8010218 <_dtoa_r+0x780>
 80100c0:	f202 4233 	addw	r2, r2, #1075	; 0x433
 80100c4:	f8dd 8010 	ldr.w	r8, [sp, #16]
 80100c8:	461c      	mov	r4, r3
 80100ca:	9309      	str	r3, [sp, #36]	; 0x24
 80100cc:	9b04      	ldr	r3, [sp, #16]
 80100ce:	4413      	add	r3, r2
 80100d0:	9304      	str	r3, [sp, #16]
 80100d2:	9b05      	ldr	r3, [sp, #20]
 80100d4:	2101      	movs	r1, #1
 80100d6:	4413      	add	r3, r2
 80100d8:	4630      	mov	r0, r6
 80100da:	9305      	str	r3, [sp, #20]
 80100dc:	f000 fb8a 	bl	80107f4 <__i2b>
 80100e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80100e2:	4607      	mov	r7, r0
 80100e4:	f1b8 0f00 	cmp.w	r8, #0
 80100e8:	d00d      	beq.n	8010106 <_dtoa_r+0x66e>
 80100ea:	9a05      	ldr	r2, [sp, #20]
 80100ec:	2a00      	cmp	r2, #0
 80100ee:	dd0a      	ble.n	8010106 <_dtoa_r+0x66e>
 80100f0:	4542      	cmp	r2, r8
 80100f2:	9904      	ldr	r1, [sp, #16]
 80100f4:	bfa8      	it	ge
 80100f6:	4642      	movge	r2, r8
 80100f8:	1a89      	subs	r1, r1, r2
 80100fa:	9104      	str	r1, [sp, #16]
 80100fc:	9905      	ldr	r1, [sp, #20]
 80100fe:	eba8 0802 	sub.w	r8, r8, r2
 8010102:	1a8a      	subs	r2, r1, r2
 8010104:	9205      	str	r2, [sp, #20]
 8010106:	b303      	cbz	r3, 801014a <_dtoa_r+0x6b2>
 8010108:	9a07      	ldr	r2, [sp, #28]
 801010a:	2a00      	cmp	r2, #0
 801010c:	f000 80a5 	beq.w	801025a <_dtoa_r+0x7c2>
 8010110:	2c00      	cmp	r4, #0
 8010112:	dd13      	ble.n	801013c <_dtoa_r+0x6a4>
 8010114:	4639      	mov	r1, r7
 8010116:	4622      	mov	r2, r4
 8010118:	4630      	mov	r0, r6
 801011a:	930d      	str	r3, [sp, #52]	; 0x34
 801011c:	f000 fc2a 	bl	8010974 <__pow5mult>
 8010120:	462a      	mov	r2, r5
 8010122:	4601      	mov	r1, r0
 8010124:	4607      	mov	r7, r0
 8010126:	4630      	mov	r0, r6
 8010128:	f000 fb7a 	bl	8010820 <__multiply>
 801012c:	4629      	mov	r1, r5
 801012e:	9009      	str	r0, [sp, #36]	; 0x24
 8010130:	4630      	mov	r0, r6
 8010132:	f000 faa9 	bl	8010688 <_Bfree>
 8010136:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010138:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801013a:	4615      	mov	r5, r2
 801013c:	1b1a      	subs	r2, r3, r4
 801013e:	d004      	beq.n	801014a <_dtoa_r+0x6b2>
 8010140:	4629      	mov	r1, r5
 8010142:	4630      	mov	r0, r6
 8010144:	f000 fc16 	bl	8010974 <__pow5mult>
 8010148:	4605      	mov	r5, r0
 801014a:	2101      	movs	r1, #1
 801014c:	4630      	mov	r0, r6
 801014e:	f000 fb51 	bl	80107f4 <__i2b>
 8010152:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010154:	2b00      	cmp	r3, #0
 8010156:	4604      	mov	r4, r0
 8010158:	f340 8081 	ble.w	801025e <_dtoa_r+0x7c6>
 801015c:	461a      	mov	r2, r3
 801015e:	4601      	mov	r1, r0
 8010160:	4630      	mov	r0, r6
 8010162:	f000 fc07 	bl	8010974 <__pow5mult>
 8010166:	9b06      	ldr	r3, [sp, #24]
 8010168:	2b01      	cmp	r3, #1
 801016a:	4604      	mov	r4, r0
 801016c:	dd7a      	ble.n	8010264 <_dtoa_r+0x7cc>
 801016e:	2300      	movs	r3, #0
 8010170:	9309      	str	r3, [sp, #36]	; 0x24
 8010172:	6922      	ldr	r2, [r4, #16]
 8010174:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8010178:	6910      	ldr	r0, [r2, #16]
 801017a:	f000 faed 	bl	8010758 <__hi0bits>
 801017e:	f1c0 0020 	rsb	r0, r0, #32
 8010182:	9b05      	ldr	r3, [sp, #20]
 8010184:	4418      	add	r0, r3
 8010186:	f010 001f 	ands.w	r0, r0, #31
 801018a:	f000 8093 	beq.w	80102b4 <_dtoa_r+0x81c>
 801018e:	f1c0 0220 	rsb	r2, r0, #32
 8010192:	2a04      	cmp	r2, #4
 8010194:	f340 8085 	ble.w	80102a2 <_dtoa_r+0x80a>
 8010198:	9b04      	ldr	r3, [sp, #16]
 801019a:	f1c0 001c 	rsb	r0, r0, #28
 801019e:	4403      	add	r3, r0
 80101a0:	9304      	str	r3, [sp, #16]
 80101a2:	9b05      	ldr	r3, [sp, #20]
 80101a4:	4480      	add	r8, r0
 80101a6:	4403      	add	r3, r0
 80101a8:	9305      	str	r3, [sp, #20]
 80101aa:	9b04      	ldr	r3, [sp, #16]
 80101ac:	2b00      	cmp	r3, #0
 80101ae:	dd05      	ble.n	80101bc <_dtoa_r+0x724>
 80101b0:	4629      	mov	r1, r5
 80101b2:	461a      	mov	r2, r3
 80101b4:	4630      	mov	r0, r6
 80101b6:	f000 fc37 	bl	8010a28 <__lshift>
 80101ba:	4605      	mov	r5, r0
 80101bc:	9b05      	ldr	r3, [sp, #20]
 80101be:	2b00      	cmp	r3, #0
 80101c0:	dd05      	ble.n	80101ce <_dtoa_r+0x736>
 80101c2:	4621      	mov	r1, r4
 80101c4:	461a      	mov	r2, r3
 80101c6:	4630      	mov	r0, r6
 80101c8:	f000 fc2e 	bl	8010a28 <__lshift>
 80101cc:	4604      	mov	r4, r0
 80101ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80101d0:	2b00      	cmp	r3, #0
 80101d2:	d071      	beq.n	80102b8 <_dtoa_r+0x820>
 80101d4:	4621      	mov	r1, r4
 80101d6:	4628      	mov	r0, r5
 80101d8:	f000 fc92 	bl	8010b00 <__mcmp>
 80101dc:	2800      	cmp	r0, #0
 80101de:	da6b      	bge.n	80102b8 <_dtoa_r+0x820>
 80101e0:	2300      	movs	r3, #0
 80101e2:	4629      	mov	r1, r5
 80101e4:	220a      	movs	r2, #10
 80101e6:	4630      	mov	r0, r6
 80101e8:	f000 fa70 	bl	80106cc <__multadd>
 80101ec:	9b07      	ldr	r3, [sp, #28]
 80101ee:	f10b 3bff 	add.w	fp, fp, #4294967295
 80101f2:	4605      	mov	r5, r0
 80101f4:	2b00      	cmp	r3, #0
 80101f6:	f000 8197 	beq.w	8010528 <_dtoa_r+0xa90>
 80101fa:	4639      	mov	r1, r7
 80101fc:	2300      	movs	r3, #0
 80101fe:	220a      	movs	r2, #10
 8010200:	4630      	mov	r0, r6
 8010202:	f000 fa63 	bl	80106cc <__multadd>
 8010206:	f1ba 0f00 	cmp.w	sl, #0
 801020a:	4607      	mov	r7, r0
 801020c:	f300 8093 	bgt.w	8010336 <_dtoa_r+0x89e>
 8010210:	9b06      	ldr	r3, [sp, #24]
 8010212:	2b02      	cmp	r3, #2
 8010214:	dc57      	bgt.n	80102c6 <_dtoa_r+0x82e>
 8010216:	e08e      	b.n	8010336 <_dtoa_r+0x89e>
 8010218:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801021a:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 801021e:	e751      	b.n	80100c4 <_dtoa_r+0x62c>
 8010220:	f109 34ff 	add.w	r4, r9, #4294967295
 8010224:	42a3      	cmp	r3, r4
 8010226:	bfbf      	itttt	lt
 8010228:	1ae2      	sublt	r2, r4, r3
 801022a:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 801022c:	189b      	addlt	r3, r3, r2
 801022e:	930a      	strlt	r3, [sp, #40]	; 0x28
 8010230:	bfae      	itee	ge
 8010232:	1b1c      	subge	r4, r3, r4
 8010234:	4623      	movlt	r3, r4
 8010236:	2400      	movlt	r4, #0
 8010238:	f1b9 0f00 	cmp.w	r9, #0
 801023c:	bfb5      	itete	lt
 801023e:	9a04      	ldrlt	r2, [sp, #16]
 8010240:	f8dd 8010 	ldrge.w	r8, [sp, #16]
 8010244:	eba2 0809 	sublt.w	r8, r2, r9
 8010248:	464a      	movge	r2, r9
 801024a:	bfb8      	it	lt
 801024c:	2200      	movlt	r2, #0
 801024e:	e73c      	b.n	80100ca <_dtoa_r+0x632>
 8010250:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8010254:	9f07      	ldr	r7, [sp, #28]
 8010256:	461c      	mov	r4, r3
 8010258:	e744      	b.n	80100e4 <_dtoa_r+0x64c>
 801025a:	461a      	mov	r2, r3
 801025c:	e770      	b.n	8010140 <_dtoa_r+0x6a8>
 801025e:	9b06      	ldr	r3, [sp, #24]
 8010260:	2b01      	cmp	r3, #1
 8010262:	dc18      	bgt.n	8010296 <_dtoa_r+0x7fe>
 8010264:	9b02      	ldr	r3, [sp, #8]
 8010266:	b9b3      	cbnz	r3, 8010296 <_dtoa_r+0x7fe>
 8010268:	9b03      	ldr	r3, [sp, #12]
 801026a:	f3c3 0213 	ubfx	r2, r3, #0, #20
 801026e:	b9a2      	cbnz	r2, 801029a <_dtoa_r+0x802>
 8010270:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8010274:	0d12      	lsrs	r2, r2, #20
 8010276:	0512      	lsls	r2, r2, #20
 8010278:	b18a      	cbz	r2, 801029e <_dtoa_r+0x806>
 801027a:	9b04      	ldr	r3, [sp, #16]
 801027c:	3301      	adds	r3, #1
 801027e:	9304      	str	r3, [sp, #16]
 8010280:	9b05      	ldr	r3, [sp, #20]
 8010282:	3301      	adds	r3, #1
 8010284:	9305      	str	r3, [sp, #20]
 8010286:	2301      	movs	r3, #1
 8010288:	9309      	str	r3, [sp, #36]	; 0x24
 801028a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801028c:	2b00      	cmp	r3, #0
 801028e:	f47f af70 	bne.w	8010172 <_dtoa_r+0x6da>
 8010292:	2001      	movs	r0, #1
 8010294:	e775      	b.n	8010182 <_dtoa_r+0x6ea>
 8010296:	2300      	movs	r3, #0
 8010298:	e7f6      	b.n	8010288 <_dtoa_r+0x7f0>
 801029a:	9b02      	ldr	r3, [sp, #8]
 801029c:	e7f4      	b.n	8010288 <_dtoa_r+0x7f0>
 801029e:	9209      	str	r2, [sp, #36]	; 0x24
 80102a0:	e7f3      	b.n	801028a <_dtoa_r+0x7f2>
 80102a2:	d082      	beq.n	80101aa <_dtoa_r+0x712>
 80102a4:	9b04      	ldr	r3, [sp, #16]
 80102a6:	321c      	adds	r2, #28
 80102a8:	4413      	add	r3, r2
 80102aa:	9304      	str	r3, [sp, #16]
 80102ac:	9b05      	ldr	r3, [sp, #20]
 80102ae:	4490      	add	r8, r2
 80102b0:	4413      	add	r3, r2
 80102b2:	e779      	b.n	80101a8 <_dtoa_r+0x710>
 80102b4:	4602      	mov	r2, r0
 80102b6:	e7f5      	b.n	80102a4 <_dtoa_r+0x80c>
 80102b8:	f1b9 0f00 	cmp.w	r9, #0
 80102bc:	dc36      	bgt.n	801032c <_dtoa_r+0x894>
 80102be:	9b06      	ldr	r3, [sp, #24]
 80102c0:	2b02      	cmp	r3, #2
 80102c2:	dd33      	ble.n	801032c <_dtoa_r+0x894>
 80102c4:	46ca      	mov	sl, r9
 80102c6:	f1ba 0f00 	cmp.w	sl, #0
 80102ca:	d10d      	bne.n	80102e8 <_dtoa_r+0x850>
 80102cc:	4621      	mov	r1, r4
 80102ce:	4653      	mov	r3, sl
 80102d0:	2205      	movs	r2, #5
 80102d2:	4630      	mov	r0, r6
 80102d4:	f000 f9fa 	bl	80106cc <__multadd>
 80102d8:	4601      	mov	r1, r0
 80102da:	4604      	mov	r4, r0
 80102dc:	4628      	mov	r0, r5
 80102de:	f000 fc0f 	bl	8010b00 <__mcmp>
 80102e2:	2800      	cmp	r0, #0
 80102e4:	f73f ade4 	bgt.w	800feb0 <_dtoa_r+0x418>
 80102e8:	9b08      	ldr	r3, [sp, #32]
 80102ea:	f8dd 8004 	ldr.w	r8, [sp, #4]
 80102ee:	ea6f 0b03 	mvn.w	fp, r3
 80102f2:	f04f 0900 	mov.w	r9, #0
 80102f6:	4621      	mov	r1, r4
 80102f8:	4630      	mov	r0, r6
 80102fa:	f000 f9c5 	bl	8010688 <_Bfree>
 80102fe:	2f00      	cmp	r7, #0
 8010300:	f43f aea1 	beq.w	8010046 <_dtoa_r+0x5ae>
 8010304:	f1b9 0f00 	cmp.w	r9, #0
 8010308:	d005      	beq.n	8010316 <_dtoa_r+0x87e>
 801030a:	45b9      	cmp	r9, r7
 801030c:	d003      	beq.n	8010316 <_dtoa_r+0x87e>
 801030e:	4649      	mov	r1, r9
 8010310:	4630      	mov	r0, r6
 8010312:	f000 f9b9 	bl	8010688 <_Bfree>
 8010316:	4639      	mov	r1, r7
 8010318:	4630      	mov	r0, r6
 801031a:	f000 f9b5 	bl	8010688 <_Bfree>
 801031e:	e692      	b.n	8010046 <_dtoa_r+0x5ae>
 8010320:	2400      	movs	r4, #0
 8010322:	4627      	mov	r7, r4
 8010324:	e7e0      	b.n	80102e8 <_dtoa_r+0x850>
 8010326:	4693      	mov	fp, r2
 8010328:	4627      	mov	r7, r4
 801032a:	e5c1      	b.n	800feb0 <_dtoa_r+0x418>
 801032c:	9b07      	ldr	r3, [sp, #28]
 801032e:	46ca      	mov	sl, r9
 8010330:	2b00      	cmp	r3, #0
 8010332:	f000 8100 	beq.w	8010536 <_dtoa_r+0xa9e>
 8010336:	f1b8 0f00 	cmp.w	r8, #0
 801033a:	dd05      	ble.n	8010348 <_dtoa_r+0x8b0>
 801033c:	4639      	mov	r1, r7
 801033e:	4642      	mov	r2, r8
 8010340:	4630      	mov	r0, r6
 8010342:	f000 fb71 	bl	8010a28 <__lshift>
 8010346:	4607      	mov	r7, r0
 8010348:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801034a:	2b00      	cmp	r3, #0
 801034c:	d05d      	beq.n	801040a <_dtoa_r+0x972>
 801034e:	6879      	ldr	r1, [r7, #4]
 8010350:	4630      	mov	r0, r6
 8010352:	f000 f959 	bl	8010608 <_Balloc>
 8010356:	4680      	mov	r8, r0
 8010358:	b928      	cbnz	r0, 8010366 <_dtoa_r+0x8ce>
 801035a:	4b82      	ldr	r3, [pc, #520]	; (8010564 <_dtoa_r+0xacc>)
 801035c:	4602      	mov	r2, r0
 801035e:	f240 21ef 	movw	r1, #751	; 0x2ef
 8010362:	f7ff bbb1 	b.w	800fac8 <_dtoa_r+0x30>
 8010366:	693a      	ldr	r2, [r7, #16]
 8010368:	3202      	adds	r2, #2
 801036a:	0092      	lsls	r2, r2, #2
 801036c:	f107 010c 	add.w	r1, r7, #12
 8010370:	300c      	adds	r0, #12
 8010372:	f7ff fadd 	bl	800f930 <memcpy>
 8010376:	2201      	movs	r2, #1
 8010378:	4641      	mov	r1, r8
 801037a:	4630      	mov	r0, r6
 801037c:	f000 fb54 	bl	8010a28 <__lshift>
 8010380:	9b01      	ldr	r3, [sp, #4]
 8010382:	3301      	adds	r3, #1
 8010384:	9304      	str	r3, [sp, #16]
 8010386:	9b01      	ldr	r3, [sp, #4]
 8010388:	4453      	add	r3, sl
 801038a:	9308      	str	r3, [sp, #32]
 801038c:	9b02      	ldr	r3, [sp, #8]
 801038e:	f003 0301 	and.w	r3, r3, #1
 8010392:	46b9      	mov	r9, r7
 8010394:	9307      	str	r3, [sp, #28]
 8010396:	4607      	mov	r7, r0
 8010398:	9b04      	ldr	r3, [sp, #16]
 801039a:	4621      	mov	r1, r4
 801039c:	3b01      	subs	r3, #1
 801039e:	4628      	mov	r0, r5
 80103a0:	9302      	str	r3, [sp, #8]
 80103a2:	f7ff faf1 	bl	800f988 <quorem>
 80103a6:	4603      	mov	r3, r0
 80103a8:	3330      	adds	r3, #48	; 0x30
 80103aa:	9005      	str	r0, [sp, #20]
 80103ac:	4649      	mov	r1, r9
 80103ae:	4628      	mov	r0, r5
 80103b0:	9309      	str	r3, [sp, #36]	; 0x24
 80103b2:	f000 fba5 	bl	8010b00 <__mcmp>
 80103b6:	463a      	mov	r2, r7
 80103b8:	4682      	mov	sl, r0
 80103ba:	4621      	mov	r1, r4
 80103bc:	4630      	mov	r0, r6
 80103be:	f000 fbbb 	bl	8010b38 <__mdiff>
 80103c2:	68c2      	ldr	r2, [r0, #12]
 80103c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80103c6:	4680      	mov	r8, r0
 80103c8:	bb0a      	cbnz	r2, 801040e <_dtoa_r+0x976>
 80103ca:	4601      	mov	r1, r0
 80103cc:	4628      	mov	r0, r5
 80103ce:	f000 fb97 	bl	8010b00 <__mcmp>
 80103d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80103d4:	4602      	mov	r2, r0
 80103d6:	4641      	mov	r1, r8
 80103d8:	4630      	mov	r0, r6
 80103da:	e9cd 3209 	strd	r3, r2, [sp, #36]	; 0x24
 80103de:	f000 f953 	bl	8010688 <_Bfree>
 80103e2:	9b06      	ldr	r3, [sp, #24]
 80103e4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80103e6:	f8dd 8010 	ldr.w	r8, [sp, #16]
 80103ea:	ea43 0102 	orr.w	r1, r3, r2
 80103ee:	9b07      	ldr	r3, [sp, #28]
 80103f0:	4319      	orrs	r1, r3
 80103f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80103f4:	d10d      	bne.n	8010412 <_dtoa_r+0x97a>
 80103f6:	2b39      	cmp	r3, #57	; 0x39
 80103f8:	d029      	beq.n	801044e <_dtoa_r+0x9b6>
 80103fa:	f1ba 0f00 	cmp.w	sl, #0
 80103fe:	dd01      	ble.n	8010404 <_dtoa_r+0x96c>
 8010400:	9b05      	ldr	r3, [sp, #20]
 8010402:	3331      	adds	r3, #49	; 0x31
 8010404:	9a02      	ldr	r2, [sp, #8]
 8010406:	7013      	strb	r3, [r2, #0]
 8010408:	e775      	b.n	80102f6 <_dtoa_r+0x85e>
 801040a:	4638      	mov	r0, r7
 801040c:	e7b8      	b.n	8010380 <_dtoa_r+0x8e8>
 801040e:	2201      	movs	r2, #1
 8010410:	e7e1      	b.n	80103d6 <_dtoa_r+0x93e>
 8010412:	f1ba 0f00 	cmp.w	sl, #0
 8010416:	db06      	blt.n	8010426 <_dtoa_r+0x98e>
 8010418:	9906      	ldr	r1, [sp, #24]
 801041a:	ea41 0a0a 	orr.w	sl, r1, sl
 801041e:	9907      	ldr	r1, [sp, #28]
 8010420:	ea5a 0a01 	orrs.w	sl, sl, r1
 8010424:	d120      	bne.n	8010468 <_dtoa_r+0x9d0>
 8010426:	2a00      	cmp	r2, #0
 8010428:	ddec      	ble.n	8010404 <_dtoa_r+0x96c>
 801042a:	4629      	mov	r1, r5
 801042c:	2201      	movs	r2, #1
 801042e:	4630      	mov	r0, r6
 8010430:	9304      	str	r3, [sp, #16]
 8010432:	f000 faf9 	bl	8010a28 <__lshift>
 8010436:	4621      	mov	r1, r4
 8010438:	4605      	mov	r5, r0
 801043a:	f000 fb61 	bl	8010b00 <__mcmp>
 801043e:	2800      	cmp	r0, #0
 8010440:	9b04      	ldr	r3, [sp, #16]
 8010442:	dc02      	bgt.n	801044a <_dtoa_r+0x9b2>
 8010444:	d1de      	bne.n	8010404 <_dtoa_r+0x96c>
 8010446:	07da      	lsls	r2, r3, #31
 8010448:	d5dc      	bpl.n	8010404 <_dtoa_r+0x96c>
 801044a:	2b39      	cmp	r3, #57	; 0x39
 801044c:	d1d8      	bne.n	8010400 <_dtoa_r+0x968>
 801044e:	9a02      	ldr	r2, [sp, #8]
 8010450:	2339      	movs	r3, #57	; 0x39
 8010452:	7013      	strb	r3, [r2, #0]
 8010454:	4643      	mov	r3, r8
 8010456:	4698      	mov	r8, r3
 8010458:	3b01      	subs	r3, #1
 801045a:	f818 2c01 	ldrb.w	r2, [r8, #-1]
 801045e:	2a39      	cmp	r2, #57	; 0x39
 8010460:	d051      	beq.n	8010506 <_dtoa_r+0xa6e>
 8010462:	3201      	adds	r2, #1
 8010464:	701a      	strb	r2, [r3, #0]
 8010466:	e746      	b.n	80102f6 <_dtoa_r+0x85e>
 8010468:	2a00      	cmp	r2, #0
 801046a:	dd03      	ble.n	8010474 <_dtoa_r+0x9dc>
 801046c:	2b39      	cmp	r3, #57	; 0x39
 801046e:	d0ee      	beq.n	801044e <_dtoa_r+0x9b6>
 8010470:	3301      	adds	r3, #1
 8010472:	e7c7      	b.n	8010404 <_dtoa_r+0x96c>
 8010474:	9a04      	ldr	r2, [sp, #16]
 8010476:	9908      	ldr	r1, [sp, #32]
 8010478:	f802 3c01 	strb.w	r3, [r2, #-1]
 801047c:	428a      	cmp	r2, r1
 801047e:	d02b      	beq.n	80104d8 <_dtoa_r+0xa40>
 8010480:	4629      	mov	r1, r5
 8010482:	2300      	movs	r3, #0
 8010484:	220a      	movs	r2, #10
 8010486:	4630      	mov	r0, r6
 8010488:	f000 f920 	bl	80106cc <__multadd>
 801048c:	45b9      	cmp	r9, r7
 801048e:	4605      	mov	r5, r0
 8010490:	f04f 0300 	mov.w	r3, #0
 8010494:	f04f 020a 	mov.w	r2, #10
 8010498:	4649      	mov	r1, r9
 801049a:	4630      	mov	r0, r6
 801049c:	d107      	bne.n	80104ae <_dtoa_r+0xa16>
 801049e:	f000 f915 	bl	80106cc <__multadd>
 80104a2:	4681      	mov	r9, r0
 80104a4:	4607      	mov	r7, r0
 80104a6:	9b04      	ldr	r3, [sp, #16]
 80104a8:	3301      	adds	r3, #1
 80104aa:	9304      	str	r3, [sp, #16]
 80104ac:	e774      	b.n	8010398 <_dtoa_r+0x900>
 80104ae:	f000 f90d 	bl	80106cc <__multadd>
 80104b2:	4639      	mov	r1, r7
 80104b4:	4681      	mov	r9, r0
 80104b6:	2300      	movs	r3, #0
 80104b8:	220a      	movs	r2, #10
 80104ba:	4630      	mov	r0, r6
 80104bc:	f000 f906 	bl	80106cc <__multadd>
 80104c0:	4607      	mov	r7, r0
 80104c2:	e7f0      	b.n	80104a6 <_dtoa_r+0xa0e>
 80104c4:	f1ba 0f00 	cmp.w	sl, #0
 80104c8:	9a01      	ldr	r2, [sp, #4]
 80104ca:	bfcc      	ite	gt
 80104cc:	46d0      	movgt	r8, sl
 80104ce:	f04f 0801 	movle.w	r8, #1
 80104d2:	4490      	add	r8, r2
 80104d4:	f04f 0900 	mov.w	r9, #0
 80104d8:	4629      	mov	r1, r5
 80104da:	2201      	movs	r2, #1
 80104dc:	4630      	mov	r0, r6
 80104de:	9302      	str	r3, [sp, #8]
 80104e0:	f000 faa2 	bl	8010a28 <__lshift>
 80104e4:	4621      	mov	r1, r4
 80104e6:	4605      	mov	r5, r0
 80104e8:	f000 fb0a 	bl	8010b00 <__mcmp>
 80104ec:	2800      	cmp	r0, #0
 80104ee:	dcb1      	bgt.n	8010454 <_dtoa_r+0x9bc>
 80104f0:	d102      	bne.n	80104f8 <_dtoa_r+0xa60>
 80104f2:	9b02      	ldr	r3, [sp, #8]
 80104f4:	07db      	lsls	r3, r3, #31
 80104f6:	d4ad      	bmi.n	8010454 <_dtoa_r+0x9bc>
 80104f8:	4643      	mov	r3, r8
 80104fa:	4698      	mov	r8, r3
 80104fc:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8010500:	2a30      	cmp	r2, #48	; 0x30
 8010502:	d0fa      	beq.n	80104fa <_dtoa_r+0xa62>
 8010504:	e6f7      	b.n	80102f6 <_dtoa_r+0x85e>
 8010506:	9a01      	ldr	r2, [sp, #4]
 8010508:	429a      	cmp	r2, r3
 801050a:	d1a4      	bne.n	8010456 <_dtoa_r+0x9be>
 801050c:	f10b 0b01 	add.w	fp, fp, #1
 8010510:	2331      	movs	r3, #49	; 0x31
 8010512:	e778      	b.n	8010406 <_dtoa_r+0x96e>
 8010514:	4b14      	ldr	r3, [pc, #80]	; (8010568 <_dtoa_r+0xad0>)
 8010516:	f7ff bb2a 	b.w	800fb6e <_dtoa_r+0xd6>
 801051a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801051c:	2b00      	cmp	r3, #0
 801051e:	f47f ab05 	bne.w	800fb2c <_dtoa_r+0x94>
 8010522:	4b12      	ldr	r3, [pc, #72]	; (801056c <_dtoa_r+0xad4>)
 8010524:	f7ff bb23 	b.w	800fb6e <_dtoa_r+0xd6>
 8010528:	f1ba 0f00 	cmp.w	sl, #0
 801052c:	dc03      	bgt.n	8010536 <_dtoa_r+0xa9e>
 801052e:	9b06      	ldr	r3, [sp, #24]
 8010530:	2b02      	cmp	r3, #2
 8010532:	f73f aec8 	bgt.w	80102c6 <_dtoa_r+0x82e>
 8010536:	f8dd 8004 	ldr.w	r8, [sp, #4]
 801053a:	4621      	mov	r1, r4
 801053c:	4628      	mov	r0, r5
 801053e:	f7ff fa23 	bl	800f988 <quorem>
 8010542:	f100 0330 	add.w	r3, r0, #48	; 0x30
 8010546:	f808 3b01 	strb.w	r3, [r8], #1
 801054a:	9a01      	ldr	r2, [sp, #4]
 801054c:	eba8 0202 	sub.w	r2, r8, r2
 8010550:	4592      	cmp	sl, r2
 8010552:	ddb7      	ble.n	80104c4 <_dtoa_r+0xa2c>
 8010554:	4629      	mov	r1, r5
 8010556:	2300      	movs	r3, #0
 8010558:	220a      	movs	r2, #10
 801055a:	4630      	mov	r0, r6
 801055c:	f000 f8b6 	bl	80106cc <__multadd>
 8010560:	4605      	mov	r5, r0
 8010562:	e7ea      	b.n	801053a <_dtoa_r+0xaa2>
 8010564:	080369f4 	.word	0x080369f4
 8010568:	0803692f 	.word	0x0803692f
 801056c:	0803698f 	.word	0x0803698f

08010570 <_free_r>:
 8010570:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010572:	2900      	cmp	r1, #0
 8010574:	d044      	beq.n	8010600 <_free_r+0x90>
 8010576:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801057a:	9001      	str	r0, [sp, #4]
 801057c:	2b00      	cmp	r3, #0
 801057e:	f1a1 0404 	sub.w	r4, r1, #4
 8010582:	bfb8      	it	lt
 8010584:	18e4      	addlt	r4, r4, r3
 8010586:	f7fe fac9 	bl	800eb1c <__malloc_lock>
 801058a:	4a1e      	ldr	r2, [pc, #120]	; (8010604 <_free_r+0x94>)
 801058c:	9801      	ldr	r0, [sp, #4]
 801058e:	6813      	ldr	r3, [r2, #0]
 8010590:	b933      	cbnz	r3, 80105a0 <_free_r+0x30>
 8010592:	6063      	str	r3, [r4, #4]
 8010594:	6014      	str	r4, [r2, #0]
 8010596:	b003      	add	sp, #12
 8010598:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801059c:	f7fe bac4 	b.w	800eb28 <__malloc_unlock>
 80105a0:	42a3      	cmp	r3, r4
 80105a2:	d908      	bls.n	80105b6 <_free_r+0x46>
 80105a4:	6825      	ldr	r5, [r4, #0]
 80105a6:	1961      	adds	r1, r4, r5
 80105a8:	428b      	cmp	r3, r1
 80105aa:	bf01      	itttt	eq
 80105ac:	6819      	ldreq	r1, [r3, #0]
 80105ae:	685b      	ldreq	r3, [r3, #4]
 80105b0:	1949      	addeq	r1, r1, r5
 80105b2:	6021      	streq	r1, [r4, #0]
 80105b4:	e7ed      	b.n	8010592 <_free_r+0x22>
 80105b6:	461a      	mov	r2, r3
 80105b8:	685b      	ldr	r3, [r3, #4]
 80105ba:	b10b      	cbz	r3, 80105c0 <_free_r+0x50>
 80105bc:	42a3      	cmp	r3, r4
 80105be:	d9fa      	bls.n	80105b6 <_free_r+0x46>
 80105c0:	6811      	ldr	r1, [r2, #0]
 80105c2:	1855      	adds	r5, r2, r1
 80105c4:	42a5      	cmp	r5, r4
 80105c6:	d10b      	bne.n	80105e0 <_free_r+0x70>
 80105c8:	6824      	ldr	r4, [r4, #0]
 80105ca:	4421      	add	r1, r4
 80105cc:	1854      	adds	r4, r2, r1
 80105ce:	42a3      	cmp	r3, r4
 80105d0:	6011      	str	r1, [r2, #0]
 80105d2:	d1e0      	bne.n	8010596 <_free_r+0x26>
 80105d4:	681c      	ldr	r4, [r3, #0]
 80105d6:	685b      	ldr	r3, [r3, #4]
 80105d8:	6053      	str	r3, [r2, #4]
 80105da:	440c      	add	r4, r1
 80105dc:	6014      	str	r4, [r2, #0]
 80105de:	e7da      	b.n	8010596 <_free_r+0x26>
 80105e0:	d902      	bls.n	80105e8 <_free_r+0x78>
 80105e2:	230c      	movs	r3, #12
 80105e4:	6003      	str	r3, [r0, #0]
 80105e6:	e7d6      	b.n	8010596 <_free_r+0x26>
 80105e8:	6825      	ldr	r5, [r4, #0]
 80105ea:	1961      	adds	r1, r4, r5
 80105ec:	428b      	cmp	r3, r1
 80105ee:	bf04      	itt	eq
 80105f0:	6819      	ldreq	r1, [r3, #0]
 80105f2:	685b      	ldreq	r3, [r3, #4]
 80105f4:	6063      	str	r3, [r4, #4]
 80105f6:	bf04      	itt	eq
 80105f8:	1949      	addeq	r1, r1, r5
 80105fa:	6021      	streq	r1, [r4, #0]
 80105fc:	6054      	str	r4, [r2, #4]
 80105fe:	e7ca      	b.n	8010596 <_free_r+0x26>
 8010600:	b003      	add	sp, #12
 8010602:	bd30      	pop	{r4, r5, pc}
 8010604:	2001d8c8 	.word	0x2001d8c8

08010608 <_Balloc>:
 8010608:	b570      	push	{r4, r5, r6, lr}
 801060a:	69c6      	ldr	r6, [r0, #28]
 801060c:	4604      	mov	r4, r0
 801060e:	460d      	mov	r5, r1
 8010610:	b976      	cbnz	r6, 8010630 <_Balloc+0x28>
 8010612:	2010      	movs	r0, #16
 8010614:	f7f3 f944 	bl	80038a0 <__wrap_malloc>
 8010618:	4602      	mov	r2, r0
 801061a:	61e0      	str	r0, [r4, #28]
 801061c:	b920      	cbnz	r0, 8010628 <_Balloc+0x20>
 801061e:	4b18      	ldr	r3, [pc, #96]	; (8010680 <_Balloc+0x78>)
 8010620:	4818      	ldr	r0, [pc, #96]	; (8010684 <_Balloc+0x7c>)
 8010622:	216b      	movs	r1, #107	; 0x6b
 8010624:	f7ff f992 	bl	800f94c <__assert_func>
 8010628:	e9c0 6601 	strd	r6, r6, [r0, #4]
 801062c:	6006      	str	r6, [r0, #0]
 801062e:	60c6      	str	r6, [r0, #12]
 8010630:	69e6      	ldr	r6, [r4, #28]
 8010632:	68f3      	ldr	r3, [r6, #12]
 8010634:	b183      	cbz	r3, 8010658 <_Balloc+0x50>
 8010636:	69e3      	ldr	r3, [r4, #28]
 8010638:	68db      	ldr	r3, [r3, #12]
 801063a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 801063e:	b9b8      	cbnz	r0, 8010670 <_Balloc+0x68>
 8010640:	2101      	movs	r1, #1
 8010642:	fa01 f605 	lsl.w	r6, r1, r5
 8010646:	1d72      	adds	r2, r6, #5
 8010648:	0092      	lsls	r2, r2, #2
 801064a:	4620      	mov	r0, r4
 801064c:	f000 fb71 	bl	8010d32 <_calloc_r>
 8010650:	b160      	cbz	r0, 801066c <_Balloc+0x64>
 8010652:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8010656:	e00e      	b.n	8010676 <_Balloc+0x6e>
 8010658:	2221      	movs	r2, #33	; 0x21
 801065a:	2104      	movs	r1, #4
 801065c:	4620      	mov	r0, r4
 801065e:	f000 fb68 	bl	8010d32 <_calloc_r>
 8010662:	69e3      	ldr	r3, [r4, #28]
 8010664:	60f0      	str	r0, [r6, #12]
 8010666:	68db      	ldr	r3, [r3, #12]
 8010668:	2b00      	cmp	r3, #0
 801066a:	d1e4      	bne.n	8010636 <_Balloc+0x2e>
 801066c:	2000      	movs	r0, #0
 801066e:	bd70      	pop	{r4, r5, r6, pc}
 8010670:	6802      	ldr	r2, [r0, #0]
 8010672:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8010676:	2300      	movs	r3, #0
 8010678:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801067c:	e7f7      	b.n	801066e <_Balloc+0x66>
 801067e:	bf00      	nop
 8010680:	080368b0 	.word	0x080368b0
 8010684:	08036a05 	.word	0x08036a05

08010688 <_Bfree>:
 8010688:	b570      	push	{r4, r5, r6, lr}
 801068a:	69c6      	ldr	r6, [r0, #28]
 801068c:	4605      	mov	r5, r0
 801068e:	460c      	mov	r4, r1
 8010690:	b976      	cbnz	r6, 80106b0 <_Bfree+0x28>
 8010692:	2010      	movs	r0, #16
 8010694:	f7f3 f904 	bl	80038a0 <__wrap_malloc>
 8010698:	4602      	mov	r2, r0
 801069a:	61e8      	str	r0, [r5, #28]
 801069c:	b920      	cbnz	r0, 80106a8 <_Bfree+0x20>
 801069e:	4b09      	ldr	r3, [pc, #36]	; (80106c4 <_Bfree+0x3c>)
 80106a0:	4809      	ldr	r0, [pc, #36]	; (80106c8 <_Bfree+0x40>)
 80106a2:	218f      	movs	r1, #143	; 0x8f
 80106a4:	f7ff f952 	bl	800f94c <__assert_func>
 80106a8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80106ac:	6006      	str	r6, [r0, #0]
 80106ae:	60c6      	str	r6, [r0, #12]
 80106b0:	b13c      	cbz	r4, 80106c2 <_Bfree+0x3a>
 80106b2:	69eb      	ldr	r3, [r5, #28]
 80106b4:	6862      	ldr	r2, [r4, #4]
 80106b6:	68db      	ldr	r3, [r3, #12]
 80106b8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80106bc:	6021      	str	r1, [r4, #0]
 80106be:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80106c2:	bd70      	pop	{r4, r5, r6, pc}
 80106c4:	080368b0 	.word	0x080368b0
 80106c8:	08036a05 	.word	0x08036a05

080106cc <__multadd>:
 80106cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80106d0:	690d      	ldr	r5, [r1, #16]
 80106d2:	4607      	mov	r7, r0
 80106d4:	460c      	mov	r4, r1
 80106d6:	461e      	mov	r6, r3
 80106d8:	f101 0c14 	add.w	ip, r1, #20
 80106dc:	2000      	movs	r0, #0
 80106de:	f8dc 3000 	ldr.w	r3, [ip]
 80106e2:	b299      	uxth	r1, r3
 80106e4:	fb02 6101 	mla	r1, r2, r1, r6
 80106e8:	0c1e      	lsrs	r6, r3, #16
 80106ea:	0c0b      	lsrs	r3, r1, #16
 80106ec:	fb02 3306 	mla	r3, r2, r6, r3
 80106f0:	b289      	uxth	r1, r1
 80106f2:	3001      	adds	r0, #1
 80106f4:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80106f8:	4285      	cmp	r5, r0
 80106fa:	f84c 1b04 	str.w	r1, [ip], #4
 80106fe:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8010702:	dcec      	bgt.n	80106de <__multadd+0x12>
 8010704:	b30e      	cbz	r6, 801074a <__multadd+0x7e>
 8010706:	68a3      	ldr	r3, [r4, #8]
 8010708:	42ab      	cmp	r3, r5
 801070a:	dc19      	bgt.n	8010740 <__multadd+0x74>
 801070c:	6861      	ldr	r1, [r4, #4]
 801070e:	4638      	mov	r0, r7
 8010710:	3101      	adds	r1, #1
 8010712:	f7ff ff79 	bl	8010608 <_Balloc>
 8010716:	4680      	mov	r8, r0
 8010718:	b928      	cbnz	r0, 8010726 <__multadd+0x5a>
 801071a:	4602      	mov	r2, r0
 801071c:	4b0c      	ldr	r3, [pc, #48]	; (8010750 <__multadd+0x84>)
 801071e:	480d      	ldr	r0, [pc, #52]	; (8010754 <__multadd+0x88>)
 8010720:	21ba      	movs	r1, #186	; 0xba
 8010722:	f7ff f913 	bl	800f94c <__assert_func>
 8010726:	6922      	ldr	r2, [r4, #16]
 8010728:	3202      	adds	r2, #2
 801072a:	f104 010c 	add.w	r1, r4, #12
 801072e:	0092      	lsls	r2, r2, #2
 8010730:	300c      	adds	r0, #12
 8010732:	f7ff f8fd 	bl	800f930 <memcpy>
 8010736:	4621      	mov	r1, r4
 8010738:	4638      	mov	r0, r7
 801073a:	f7ff ffa5 	bl	8010688 <_Bfree>
 801073e:	4644      	mov	r4, r8
 8010740:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8010744:	3501      	adds	r5, #1
 8010746:	615e      	str	r6, [r3, #20]
 8010748:	6125      	str	r5, [r4, #16]
 801074a:	4620      	mov	r0, r4
 801074c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010750:	080369f4 	.word	0x080369f4
 8010754:	08036a05 	.word	0x08036a05

08010758 <__hi0bits>:
 8010758:	0c03      	lsrs	r3, r0, #16
 801075a:	041b      	lsls	r3, r3, #16
 801075c:	b9d3      	cbnz	r3, 8010794 <__hi0bits+0x3c>
 801075e:	0400      	lsls	r0, r0, #16
 8010760:	2310      	movs	r3, #16
 8010762:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8010766:	bf04      	itt	eq
 8010768:	0200      	lsleq	r0, r0, #8
 801076a:	3308      	addeq	r3, #8
 801076c:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8010770:	bf04      	itt	eq
 8010772:	0100      	lsleq	r0, r0, #4
 8010774:	3304      	addeq	r3, #4
 8010776:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 801077a:	bf04      	itt	eq
 801077c:	0080      	lsleq	r0, r0, #2
 801077e:	3302      	addeq	r3, #2
 8010780:	2800      	cmp	r0, #0
 8010782:	db05      	blt.n	8010790 <__hi0bits+0x38>
 8010784:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8010788:	f103 0301 	add.w	r3, r3, #1
 801078c:	bf08      	it	eq
 801078e:	2320      	moveq	r3, #32
 8010790:	4618      	mov	r0, r3
 8010792:	4770      	bx	lr
 8010794:	2300      	movs	r3, #0
 8010796:	e7e4      	b.n	8010762 <__hi0bits+0xa>

08010798 <__lo0bits>:
 8010798:	6803      	ldr	r3, [r0, #0]
 801079a:	f013 0207 	ands.w	r2, r3, #7
 801079e:	d00c      	beq.n	80107ba <__lo0bits+0x22>
 80107a0:	07d9      	lsls	r1, r3, #31
 80107a2:	d422      	bmi.n	80107ea <__lo0bits+0x52>
 80107a4:	079a      	lsls	r2, r3, #30
 80107a6:	bf49      	itett	mi
 80107a8:	085b      	lsrmi	r3, r3, #1
 80107aa:	089b      	lsrpl	r3, r3, #2
 80107ac:	6003      	strmi	r3, [r0, #0]
 80107ae:	2201      	movmi	r2, #1
 80107b0:	bf5c      	itt	pl
 80107b2:	6003      	strpl	r3, [r0, #0]
 80107b4:	2202      	movpl	r2, #2
 80107b6:	4610      	mov	r0, r2
 80107b8:	4770      	bx	lr
 80107ba:	b299      	uxth	r1, r3
 80107bc:	b909      	cbnz	r1, 80107c2 <__lo0bits+0x2a>
 80107be:	0c1b      	lsrs	r3, r3, #16
 80107c0:	2210      	movs	r2, #16
 80107c2:	b2d9      	uxtb	r1, r3
 80107c4:	b909      	cbnz	r1, 80107ca <__lo0bits+0x32>
 80107c6:	3208      	adds	r2, #8
 80107c8:	0a1b      	lsrs	r3, r3, #8
 80107ca:	0719      	lsls	r1, r3, #28
 80107cc:	bf04      	itt	eq
 80107ce:	091b      	lsreq	r3, r3, #4
 80107d0:	3204      	addeq	r2, #4
 80107d2:	0799      	lsls	r1, r3, #30
 80107d4:	bf04      	itt	eq
 80107d6:	089b      	lsreq	r3, r3, #2
 80107d8:	3202      	addeq	r2, #2
 80107da:	07d9      	lsls	r1, r3, #31
 80107dc:	d403      	bmi.n	80107e6 <__lo0bits+0x4e>
 80107de:	085b      	lsrs	r3, r3, #1
 80107e0:	f102 0201 	add.w	r2, r2, #1
 80107e4:	d003      	beq.n	80107ee <__lo0bits+0x56>
 80107e6:	6003      	str	r3, [r0, #0]
 80107e8:	e7e5      	b.n	80107b6 <__lo0bits+0x1e>
 80107ea:	2200      	movs	r2, #0
 80107ec:	e7e3      	b.n	80107b6 <__lo0bits+0x1e>
 80107ee:	2220      	movs	r2, #32
 80107f0:	e7e1      	b.n	80107b6 <__lo0bits+0x1e>
	...

080107f4 <__i2b>:
 80107f4:	b510      	push	{r4, lr}
 80107f6:	460c      	mov	r4, r1
 80107f8:	2101      	movs	r1, #1
 80107fa:	f7ff ff05 	bl	8010608 <_Balloc>
 80107fe:	4602      	mov	r2, r0
 8010800:	b928      	cbnz	r0, 801080e <__i2b+0x1a>
 8010802:	4b05      	ldr	r3, [pc, #20]	; (8010818 <__i2b+0x24>)
 8010804:	4805      	ldr	r0, [pc, #20]	; (801081c <__i2b+0x28>)
 8010806:	f240 1145 	movw	r1, #325	; 0x145
 801080a:	f7ff f89f 	bl	800f94c <__assert_func>
 801080e:	2301      	movs	r3, #1
 8010810:	6144      	str	r4, [r0, #20]
 8010812:	6103      	str	r3, [r0, #16]
 8010814:	bd10      	pop	{r4, pc}
 8010816:	bf00      	nop
 8010818:	080369f4 	.word	0x080369f4
 801081c:	08036a05 	.word	0x08036a05

08010820 <__multiply>:
 8010820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010824:	4691      	mov	r9, r2
 8010826:	690a      	ldr	r2, [r1, #16]
 8010828:	f8d9 3010 	ldr.w	r3, [r9, #16]
 801082c:	429a      	cmp	r2, r3
 801082e:	bfb8      	it	lt
 8010830:	460b      	movlt	r3, r1
 8010832:	460c      	mov	r4, r1
 8010834:	bfbc      	itt	lt
 8010836:	464c      	movlt	r4, r9
 8010838:	4699      	movlt	r9, r3
 801083a:	6927      	ldr	r7, [r4, #16]
 801083c:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8010840:	68a3      	ldr	r3, [r4, #8]
 8010842:	6861      	ldr	r1, [r4, #4]
 8010844:	eb07 060a 	add.w	r6, r7, sl
 8010848:	42b3      	cmp	r3, r6
 801084a:	b085      	sub	sp, #20
 801084c:	bfb8      	it	lt
 801084e:	3101      	addlt	r1, #1
 8010850:	f7ff feda 	bl	8010608 <_Balloc>
 8010854:	b930      	cbnz	r0, 8010864 <__multiply+0x44>
 8010856:	4602      	mov	r2, r0
 8010858:	4b44      	ldr	r3, [pc, #272]	; (801096c <__multiply+0x14c>)
 801085a:	4845      	ldr	r0, [pc, #276]	; (8010970 <__multiply+0x150>)
 801085c:	f44f 71b1 	mov.w	r1, #354	; 0x162
 8010860:	f7ff f874 	bl	800f94c <__assert_func>
 8010864:	f100 0514 	add.w	r5, r0, #20
 8010868:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 801086c:	462b      	mov	r3, r5
 801086e:	2200      	movs	r2, #0
 8010870:	4543      	cmp	r3, r8
 8010872:	d321      	bcc.n	80108b8 <__multiply+0x98>
 8010874:	f104 0314 	add.w	r3, r4, #20
 8010878:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 801087c:	f109 0314 	add.w	r3, r9, #20
 8010880:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8010884:	9202      	str	r2, [sp, #8]
 8010886:	1b3a      	subs	r2, r7, r4
 8010888:	3a15      	subs	r2, #21
 801088a:	f022 0203 	bic.w	r2, r2, #3
 801088e:	3204      	adds	r2, #4
 8010890:	f104 0115 	add.w	r1, r4, #21
 8010894:	428f      	cmp	r7, r1
 8010896:	bf38      	it	cc
 8010898:	2204      	movcc	r2, #4
 801089a:	9201      	str	r2, [sp, #4]
 801089c:	9a02      	ldr	r2, [sp, #8]
 801089e:	9303      	str	r3, [sp, #12]
 80108a0:	429a      	cmp	r2, r3
 80108a2:	d80c      	bhi.n	80108be <__multiply+0x9e>
 80108a4:	2e00      	cmp	r6, #0
 80108a6:	dd03      	ble.n	80108b0 <__multiply+0x90>
 80108a8:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80108ac:	2b00      	cmp	r3, #0
 80108ae:	d05b      	beq.n	8010968 <__multiply+0x148>
 80108b0:	6106      	str	r6, [r0, #16]
 80108b2:	b005      	add	sp, #20
 80108b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80108b8:	f843 2b04 	str.w	r2, [r3], #4
 80108bc:	e7d8      	b.n	8010870 <__multiply+0x50>
 80108be:	f8b3 a000 	ldrh.w	sl, [r3]
 80108c2:	f1ba 0f00 	cmp.w	sl, #0
 80108c6:	d024      	beq.n	8010912 <__multiply+0xf2>
 80108c8:	f104 0e14 	add.w	lr, r4, #20
 80108cc:	46a9      	mov	r9, r5
 80108ce:	f04f 0c00 	mov.w	ip, #0
 80108d2:	f85e 2b04 	ldr.w	r2, [lr], #4
 80108d6:	f8d9 1000 	ldr.w	r1, [r9]
 80108da:	fa1f fb82 	uxth.w	fp, r2
 80108de:	b289      	uxth	r1, r1
 80108e0:	fb0a 110b 	mla	r1, sl, fp, r1
 80108e4:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 80108e8:	f8d9 2000 	ldr.w	r2, [r9]
 80108ec:	4461      	add	r1, ip
 80108ee:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80108f2:	fb0a c20b 	mla	r2, sl, fp, ip
 80108f6:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 80108fa:	b289      	uxth	r1, r1
 80108fc:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8010900:	4577      	cmp	r7, lr
 8010902:	f849 1b04 	str.w	r1, [r9], #4
 8010906:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 801090a:	d8e2      	bhi.n	80108d2 <__multiply+0xb2>
 801090c:	9a01      	ldr	r2, [sp, #4]
 801090e:	f845 c002 	str.w	ip, [r5, r2]
 8010912:	9a03      	ldr	r2, [sp, #12]
 8010914:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8010918:	3304      	adds	r3, #4
 801091a:	f1b9 0f00 	cmp.w	r9, #0
 801091e:	d021      	beq.n	8010964 <__multiply+0x144>
 8010920:	6829      	ldr	r1, [r5, #0]
 8010922:	f104 0c14 	add.w	ip, r4, #20
 8010926:	46ae      	mov	lr, r5
 8010928:	f04f 0a00 	mov.w	sl, #0
 801092c:	f8bc b000 	ldrh.w	fp, [ip]
 8010930:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8010934:	fb09 220b 	mla	r2, r9, fp, r2
 8010938:	4452      	add	r2, sl
 801093a:	b289      	uxth	r1, r1
 801093c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8010940:	f84e 1b04 	str.w	r1, [lr], #4
 8010944:	f85c 1b04 	ldr.w	r1, [ip], #4
 8010948:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 801094c:	f8be 1000 	ldrh.w	r1, [lr]
 8010950:	fb09 110a 	mla	r1, r9, sl, r1
 8010954:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 8010958:	4567      	cmp	r7, ip
 801095a:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 801095e:	d8e5      	bhi.n	801092c <__multiply+0x10c>
 8010960:	9a01      	ldr	r2, [sp, #4]
 8010962:	50a9      	str	r1, [r5, r2]
 8010964:	3504      	adds	r5, #4
 8010966:	e799      	b.n	801089c <__multiply+0x7c>
 8010968:	3e01      	subs	r6, #1
 801096a:	e79b      	b.n	80108a4 <__multiply+0x84>
 801096c:	080369f4 	.word	0x080369f4
 8010970:	08036a05 	.word	0x08036a05

08010974 <__pow5mult>:
 8010974:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010978:	4615      	mov	r5, r2
 801097a:	f012 0203 	ands.w	r2, r2, #3
 801097e:	4606      	mov	r6, r0
 8010980:	460f      	mov	r7, r1
 8010982:	d007      	beq.n	8010994 <__pow5mult+0x20>
 8010984:	4c25      	ldr	r4, [pc, #148]	; (8010a1c <__pow5mult+0xa8>)
 8010986:	3a01      	subs	r2, #1
 8010988:	2300      	movs	r3, #0
 801098a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 801098e:	f7ff fe9d 	bl	80106cc <__multadd>
 8010992:	4607      	mov	r7, r0
 8010994:	10ad      	asrs	r5, r5, #2
 8010996:	d03d      	beq.n	8010a14 <__pow5mult+0xa0>
 8010998:	69f4      	ldr	r4, [r6, #28]
 801099a:	b97c      	cbnz	r4, 80109bc <__pow5mult+0x48>
 801099c:	2010      	movs	r0, #16
 801099e:	f7f2 ff7f 	bl	80038a0 <__wrap_malloc>
 80109a2:	4602      	mov	r2, r0
 80109a4:	61f0      	str	r0, [r6, #28]
 80109a6:	b928      	cbnz	r0, 80109b4 <__pow5mult+0x40>
 80109a8:	4b1d      	ldr	r3, [pc, #116]	; (8010a20 <__pow5mult+0xac>)
 80109aa:	481e      	ldr	r0, [pc, #120]	; (8010a24 <__pow5mult+0xb0>)
 80109ac:	f240 11b3 	movw	r1, #435	; 0x1b3
 80109b0:	f7fe ffcc 	bl	800f94c <__assert_func>
 80109b4:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80109b8:	6004      	str	r4, [r0, #0]
 80109ba:	60c4      	str	r4, [r0, #12]
 80109bc:	f8d6 801c 	ldr.w	r8, [r6, #28]
 80109c0:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80109c4:	b94c      	cbnz	r4, 80109da <__pow5mult+0x66>
 80109c6:	f240 2171 	movw	r1, #625	; 0x271
 80109ca:	4630      	mov	r0, r6
 80109cc:	f7ff ff12 	bl	80107f4 <__i2b>
 80109d0:	2300      	movs	r3, #0
 80109d2:	f8c8 0008 	str.w	r0, [r8, #8]
 80109d6:	4604      	mov	r4, r0
 80109d8:	6003      	str	r3, [r0, #0]
 80109da:	f04f 0900 	mov.w	r9, #0
 80109de:	07eb      	lsls	r3, r5, #31
 80109e0:	d50a      	bpl.n	80109f8 <__pow5mult+0x84>
 80109e2:	4639      	mov	r1, r7
 80109e4:	4622      	mov	r2, r4
 80109e6:	4630      	mov	r0, r6
 80109e8:	f7ff ff1a 	bl	8010820 <__multiply>
 80109ec:	4639      	mov	r1, r7
 80109ee:	4680      	mov	r8, r0
 80109f0:	4630      	mov	r0, r6
 80109f2:	f7ff fe49 	bl	8010688 <_Bfree>
 80109f6:	4647      	mov	r7, r8
 80109f8:	106d      	asrs	r5, r5, #1
 80109fa:	d00b      	beq.n	8010a14 <__pow5mult+0xa0>
 80109fc:	6820      	ldr	r0, [r4, #0]
 80109fe:	b938      	cbnz	r0, 8010a10 <__pow5mult+0x9c>
 8010a00:	4622      	mov	r2, r4
 8010a02:	4621      	mov	r1, r4
 8010a04:	4630      	mov	r0, r6
 8010a06:	f7ff ff0b 	bl	8010820 <__multiply>
 8010a0a:	6020      	str	r0, [r4, #0]
 8010a0c:	f8c0 9000 	str.w	r9, [r0]
 8010a10:	4604      	mov	r4, r0
 8010a12:	e7e4      	b.n	80109de <__pow5mult+0x6a>
 8010a14:	4638      	mov	r0, r7
 8010a16:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010a1a:	bf00      	nop
 8010a1c:	08036b50 	.word	0x08036b50
 8010a20:	080368b0 	.word	0x080368b0
 8010a24:	08036a05 	.word	0x08036a05

08010a28 <__lshift>:
 8010a28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010a2c:	460c      	mov	r4, r1
 8010a2e:	6849      	ldr	r1, [r1, #4]
 8010a30:	6923      	ldr	r3, [r4, #16]
 8010a32:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8010a36:	68a3      	ldr	r3, [r4, #8]
 8010a38:	4607      	mov	r7, r0
 8010a3a:	4691      	mov	r9, r2
 8010a3c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8010a40:	f108 0601 	add.w	r6, r8, #1
 8010a44:	42b3      	cmp	r3, r6
 8010a46:	db0b      	blt.n	8010a60 <__lshift+0x38>
 8010a48:	4638      	mov	r0, r7
 8010a4a:	f7ff fddd 	bl	8010608 <_Balloc>
 8010a4e:	4605      	mov	r5, r0
 8010a50:	b948      	cbnz	r0, 8010a66 <__lshift+0x3e>
 8010a52:	4602      	mov	r2, r0
 8010a54:	4b28      	ldr	r3, [pc, #160]	; (8010af8 <__lshift+0xd0>)
 8010a56:	4829      	ldr	r0, [pc, #164]	; (8010afc <__lshift+0xd4>)
 8010a58:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 8010a5c:	f7fe ff76 	bl	800f94c <__assert_func>
 8010a60:	3101      	adds	r1, #1
 8010a62:	005b      	lsls	r3, r3, #1
 8010a64:	e7ee      	b.n	8010a44 <__lshift+0x1c>
 8010a66:	2300      	movs	r3, #0
 8010a68:	f100 0114 	add.w	r1, r0, #20
 8010a6c:	f100 0210 	add.w	r2, r0, #16
 8010a70:	4618      	mov	r0, r3
 8010a72:	4553      	cmp	r3, sl
 8010a74:	db33      	blt.n	8010ade <__lshift+0xb6>
 8010a76:	6920      	ldr	r0, [r4, #16]
 8010a78:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8010a7c:	f104 0314 	add.w	r3, r4, #20
 8010a80:	f019 091f 	ands.w	r9, r9, #31
 8010a84:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8010a88:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8010a8c:	d02b      	beq.n	8010ae6 <__lshift+0xbe>
 8010a8e:	f1c9 0e20 	rsb	lr, r9, #32
 8010a92:	468a      	mov	sl, r1
 8010a94:	2200      	movs	r2, #0
 8010a96:	6818      	ldr	r0, [r3, #0]
 8010a98:	fa00 f009 	lsl.w	r0, r0, r9
 8010a9c:	4310      	orrs	r0, r2
 8010a9e:	f84a 0b04 	str.w	r0, [sl], #4
 8010aa2:	f853 2b04 	ldr.w	r2, [r3], #4
 8010aa6:	459c      	cmp	ip, r3
 8010aa8:	fa22 f20e 	lsr.w	r2, r2, lr
 8010aac:	d8f3      	bhi.n	8010a96 <__lshift+0x6e>
 8010aae:	ebac 0304 	sub.w	r3, ip, r4
 8010ab2:	3b15      	subs	r3, #21
 8010ab4:	f023 0303 	bic.w	r3, r3, #3
 8010ab8:	3304      	adds	r3, #4
 8010aba:	f104 0015 	add.w	r0, r4, #21
 8010abe:	4584      	cmp	ip, r0
 8010ac0:	bf38      	it	cc
 8010ac2:	2304      	movcc	r3, #4
 8010ac4:	50ca      	str	r2, [r1, r3]
 8010ac6:	b10a      	cbz	r2, 8010acc <__lshift+0xa4>
 8010ac8:	f108 0602 	add.w	r6, r8, #2
 8010acc:	3e01      	subs	r6, #1
 8010ace:	4638      	mov	r0, r7
 8010ad0:	612e      	str	r6, [r5, #16]
 8010ad2:	4621      	mov	r1, r4
 8010ad4:	f7ff fdd8 	bl	8010688 <_Bfree>
 8010ad8:	4628      	mov	r0, r5
 8010ada:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010ade:	f842 0f04 	str.w	r0, [r2, #4]!
 8010ae2:	3301      	adds	r3, #1
 8010ae4:	e7c5      	b.n	8010a72 <__lshift+0x4a>
 8010ae6:	3904      	subs	r1, #4
 8010ae8:	f853 2b04 	ldr.w	r2, [r3], #4
 8010aec:	f841 2f04 	str.w	r2, [r1, #4]!
 8010af0:	459c      	cmp	ip, r3
 8010af2:	d8f9      	bhi.n	8010ae8 <__lshift+0xc0>
 8010af4:	e7ea      	b.n	8010acc <__lshift+0xa4>
 8010af6:	bf00      	nop
 8010af8:	080369f4 	.word	0x080369f4
 8010afc:	08036a05 	.word	0x08036a05

08010b00 <__mcmp>:
 8010b00:	b530      	push	{r4, r5, lr}
 8010b02:	6902      	ldr	r2, [r0, #16]
 8010b04:	690c      	ldr	r4, [r1, #16]
 8010b06:	1b12      	subs	r2, r2, r4
 8010b08:	d10e      	bne.n	8010b28 <__mcmp+0x28>
 8010b0a:	f100 0314 	add.w	r3, r0, #20
 8010b0e:	3114      	adds	r1, #20
 8010b10:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8010b14:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8010b18:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8010b1c:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8010b20:	42a5      	cmp	r5, r4
 8010b22:	d003      	beq.n	8010b2c <__mcmp+0x2c>
 8010b24:	d305      	bcc.n	8010b32 <__mcmp+0x32>
 8010b26:	2201      	movs	r2, #1
 8010b28:	4610      	mov	r0, r2
 8010b2a:	bd30      	pop	{r4, r5, pc}
 8010b2c:	4283      	cmp	r3, r0
 8010b2e:	d3f3      	bcc.n	8010b18 <__mcmp+0x18>
 8010b30:	e7fa      	b.n	8010b28 <__mcmp+0x28>
 8010b32:	f04f 32ff 	mov.w	r2, #4294967295
 8010b36:	e7f7      	b.n	8010b28 <__mcmp+0x28>

08010b38 <__mdiff>:
 8010b38:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b3c:	460c      	mov	r4, r1
 8010b3e:	4606      	mov	r6, r0
 8010b40:	4611      	mov	r1, r2
 8010b42:	4620      	mov	r0, r4
 8010b44:	4690      	mov	r8, r2
 8010b46:	f7ff ffdb 	bl	8010b00 <__mcmp>
 8010b4a:	1e05      	subs	r5, r0, #0
 8010b4c:	d110      	bne.n	8010b70 <__mdiff+0x38>
 8010b4e:	4629      	mov	r1, r5
 8010b50:	4630      	mov	r0, r6
 8010b52:	f7ff fd59 	bl	8010608 <_Balloc>
 8010b56:	b930      	cbnz	r0, 8010b66 <__mdiff+0x2e>
 8010b58:	4b3a      	ldr	r3, [pc, #232]	; (8010c44 <__mdiff+0x10c>)
 8010b5a:	4602      	mov	r2, r0
 8010b5c:	f240 2137 	movw	r1, #567	; 0x237
 8010b60:	4839      	ldr	r0, [pc, #228]	; (8010c48 <__mdiff+0x110>)
 8010b62:	f7fe fef3 	bl	800f94c <__assert_func>
 8010b66:	2301      	movs	r3, #1
 8010b68:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8010b6c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b70:	bfa4      	itt	ge
 8010b72:	4643      	movge	r3, r8
 8010b74:	46a0      	movge	r8, r4
 8010b76:	4630      	mov	r0, r6
 8010b78:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8010b7c:	bfa6      	itte	ge
 8010b7e:	461c      	movge	r4, r3
 8010b80:	2500      	movge	r5, #0
 8010b82:	2501      	movlt	r5, #1
 8010b84:	f7ff fd40 	bl	8010608 <_Balloc>
 8010b88:	b920      	cbnz	r0, 8010b94 <__mdiff+0x5c>
 8010b8a:	4b2e      	ldr	r3, [pc, #184]	; (8010c44 <__mdiff+0x10c>)
 8010b8c:	4602      	mov	r2, r0
 8010b8e:	f240 2145 	movw	r1, #581	; 0x245
 8010b92:	e7e5      	b.n	8010b60 <__mdiff+0x28>
 8010b94:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8010b98:	6926      	ldr	r6, [r4, #16]
 8010b9a:	60c5      	str	r5, [r0, #12]
 8010b9c:	f104 0914 	add.w	r9, r4, #20
 8010ba0:	f108 0514 	add.w	r5, r8, #20
 8010ba4:	f100 0e14 	add.w	lr, r0, #20
 8010ba8:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8010bac:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8010bb0:	f108 0210 	add.w	r2, r8, #16
 8010bb4:	46f2      	mov	sl, lr
 8010bb6:	2100      	movs	r1, #0
 8010bb8:	f859 3b04 	ldr.w	r3, [r9], #4
 8010bbc:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8010bc0:	fa11 f88b 	uxtah	r8, r1, fp
 8010bc4:	b299      	uxth	r1, r3
 8010bc6:	0c1b      	lsrs	r3, r3, #16
 8010bc8:	eba8 0801 	sub.w	r8, r8, r1
 8010bcc:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8010bd0:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8010bd4:	fa1f f888 	uxth.w	r8, r8
 8010bd8:	1419      	asrs	r1, r3, #16
 8010bda:	454e      	cmp	r6, r9
 8010bdc:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8010be0:	f84a 3b04 	str.w	r3, [sl], #4
 8010be4:	d8e8      	bhi.n	8010bb8 <__mdiff+0x80>
 8010be6:	1b33      	subs	r3, r6, r4
 8010be8:	3b15      	subs	r3, #21
 8010bea:	f023 0303 	bic.w	r3, r3, #3
 8010bee:	3304      	adds	r3, #4
 8010bf0:	3415      	adds	r4, #21
 8010bf2:	42a6      	cmp	r6, r4
 8010bf4:	bf38      	it	cc
 8010bf6:	2304      	movcc	r3, #4
 8010bf8:	441d      	add	r5, r3
 8010bfa:	4473      	add	r3, lr
 8010bfc:	469e      	mov	lr, r3
 8010bfe:	462e      	mov	r6, r5
 8010c00:	4566      	cmp	r6, ip
 8010c02:	d30e      	bcc.n	8010c22 <__mdiff+0xea>
 8010c04:	f10c 0203 	add.w	r2, ip, #3
 8010c08:	1b52      	subs	r2, r2, r5
 8010c0a:	f022 0203 	bic.w	r2, r2, #3
 8010c0e:	3d03      	subs	r5, #3
 8010c10:	45ac      	cmp	ip, r5
 8010c12:	bf38      	it	cc
 8010c14:	2200      	movcc	r2, #0
 8010c16:	4413      	add	r3, r2
 8010c18:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8010c1c:	b17a      	cbz	r2, 8010c3e <__mdiff+0x106>
 8010c1e:	6107      	str	r7, [r0, #16]
 8010c20:	e7a4      	b.n	8010b6c <__mdiff+0x34>
 8010c22:	f856 8b04 	ldr.w	r8, [r6], #4
 8010c26:	fa11 f288 	uxtah	r2, r1, r8
 8010c2a:	1414      	asrs	r4, r2, #16
 8010c2c:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8010c30:	b292      	uxth	r2, r2
 8010c32:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8010c36:	f84e 2b04 	str.w	r2, [lr], #4
 8010c3a:	1421      	asrs	r1, r4, #16
 8010c3c:	e7e0      	b.n	8010c00 <__mdiff+0xc8>
 8010c3e:	3f01      	subs	r7, #1
 8010c40:	e7ea      	b.n	8010c18 <__mdiff+0xe0>
 8010c42:	bf00      	nop
 8010c44:	080369f4 	.word	0x080369f4
 8010c48:	08036a05 	.word	0x08036a05

08010c4c <__d2b>:
 8010c4c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8010c50:	460f      	mov	r7, r1
 8010c52:	2101      	movs	r1, #1
 8010c54:	ec59 8b10 	vmov	r8, r9, d0
 8010c58:	4616      	mov	r6, r2
 8010c5a:	f7ff fcd5 	bl	8010608 <_Balloc>
 8010c5e:	4604      	mov	r4, r0
 8010c60:	b930      	cbnz	r0, 8010c70 <__d2b+0x24>
 8010c62:	4602      	mov	r2, r0
 8010c64:	4b24      	ldr	r3, [pc, #144]	; (8010cf8 <__d2b+0xac>)
 8010c66:	4825      	ldr	r0, [pc, #148]	; (8010cfc <__d2b+0xb0>)
 8010c68:	f240 310f 	movw	r1, #783	; 0x30f
 8010c6c:	f7fe fe6e 	bl	800f94c <__assert_func>
 8010c70:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8010c74:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8010c78:	bb2d      	cbnz	r5, 8010cc6 <__d2b+0x7a>
 8010c7a:	9301      	str	r3, [sp, #4]
 8010c7c:	f1b8 0300 	subs.w	r3, r8, #0
 8010c80:	d026      	beq.n	8010cd0 <__d2b+0x84>
 8010c82:	4668      	mov	r0, sp
 8010c84:	9300      	str	r3, [sp, #0]
 8010c86:	f7ff fd87 	bl	8010798 <__lo0bits>
 8010c8a:	e9dd 1200 	ldrd	r1, r2, [sp]
 8010c8e:	b1e8      	cbz	r0, 8010ccc <__d2b+0x80>
 8010c90:	f1c0 0320 	rsb	r3, r0, #32
 8010c94:	fa02 f303 	lsl.w	r3, r2, r3
 8010c98:	430b      	orrs	r3, r1
 8010c9a:	40c2      	lsrs	r2, r0
 8010c9c:	6163      	str	r3, [r4, #20]
 8010c9e:	9201      	str	r2, [sp, #4]
 8010ca0:	9b01      	ldr	r3, [sp, #4]
 8010ca2:	61a3      	str	r3, [r4, #24]
 8010ca4:	2b00      	cmp	r3, #0
 8010ca6:	bf14      	ite	ne
 8010ca8:	2202      	movne	r2, #2
 8010caa:	2201      	moveq	r2, #1
 8010cac:	6122      	str	r2, [r4, #16]
 8010cae:	b1bd      	cbz	r5, 8010ce0 <__d2b+0x94>
 8010cb0:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8010cb4:	4405      	add	r5, r0
 8010cb6:	603d      	str	r5, [r7, #0]
 8010cb8:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8010cbc:	6030      	str	r0, [r6, #0]
 8010cbe:	4620      	mov	r0, r4
 8010cc0:	b003      	add	sp, #12
 8010cc2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010cc6:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8010cca:	e7d6      	b.n	8010c7a <__d2b+0x2e>
 8010ccc:	6161      	str	r1, [r4, #20]
 8010cce:	e7e7      	b.n	8010ca0 <__d2b+0x54>
 8010cd0:	a801      	add	r0, sp, #4
 8010cd2:	f7ff fd61 	bl	8010798 <__lo0bits>
 8010cd6:	9b01      	ldr	r3, [sp, #4]
 8010cd8:	6163      	str	r3, [r4, #20]
 8010cda:	3020      	adds	r0, #32
 8010cdc:	2201      	movs	r2, #1
 8010cde:	e7e5      	b.n	8010cac <__d2b+0x60>
 8010ce0:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8010ce4:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8010ce8:	6038      	str	r0, [r7, #0]
 8010cea:	6918      	ldr	r0, [r3, #16]
 8010cec:	f7ff fd34 	bl	8010758 <__hi0bits>
 8010cf0:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8010cf4:	e7e2      	b.n	8010cbc <__d2b+0x70>
 8010cf6:	bf00      	nop
 8010cf8:	080369f4 	.word	0x080369f4
 8010cfc:	08036a05 	.word	0x08036a05

08010d00 <fiprintf>:
 8010d00:	b40e      	push	{r1, r2, r3}
 8010d02:	b503      	push	{r0, r1, lr}
 8010d04:	4601      	mov	r1, r0
 8010d06:	ab03      	add	r3, sp, #12
 8010d08:	4805      	ldr	r0, [pc, #20]	; (8010d20 <fiprintf+0x20>)
 8010d0a:	f853 2b04 	ldr.w	r2, [r3], #4
 8010d0e:	6800      	ldr	r0, [r0, #0]
 8010d10:	9301      	str	r3, [sp, #4]
 8010d12:	f000 f86d 	bl	8010df0 <_vfiprintf_r>
 8010d16:	b002      	add	sp, #8
 8010d18:	f85d eb04 	ldr.w	lr, [sp], #4
 8010d1c:	b003      	add	sp, #12
 8010d1e:	4770      	bx	lr
 8010d20:	20001d84 	.word	0x20001d84

08010d24 <abort>:
 8010d24:	b508      	push	{r3, lr}
 8010d26:	2006      	movs	r0, #6
 8010d28:	f000 fa3a 	bl	80111a0 <raise>
 8010d2c:	2001      	movs	r0, #1
 8010d2e:	f000 fccd 	bl	80116cc <_exit>

08010d32 <_calloc_r>:
 8010d32:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010d34:	fba1 2402 	umull	r2, r4, r1, r2
 8010d38:	b94c      	cbnz	r4, 8010d4e <_calloc_r+0x1c>
 8010d3a:	4611      	mov	r1, r2
 8010d3c:	9201      	str	r2, [sp, #4]
 8010d3e:	f7fd fe6d 	bl	800ea1c <_malloc_r>
 8010d42:	9a01      	ldr	r2, [sp, #4]
 8010d44:	4605      	mov	r5, r0
 8010d46:	b930      	cbnz	r0, 8010d56 <_calloc_r+0x24>
 8010d48:	4628      	mov	r0, r5
 8010d4a:	b003      	add	sp, #12
 8010d4c:	bd30      	pop	{r4, r5, pc}
 8010d4e:	220c      	movs	r2, #12
 8010d50:	6002      	str	r2, [r0, #0]
 8010d52:	2500      	movs	r5, #0
 8010d54:	e7f8      	b.n	8010d48 <_calloc_r+0x16>
 8010d56:	4621      	mov	r1, r4
 8010d58:	f7fe fd49 	bl	800f7ee <memset>
 8010d5c:	e7f4      	b.n	8010d48 <_calloc_r+0x16>

08010d5e <__ascii_mbtowc>:
 8010d5e:	b082      	sub	sp, #8
 8010d60:	b901      	cbnz	r1, 8010d64 <__ascii_mbtowc+0x6>
 8010d62:	a901      	add	r1, sp, #4
 8010d64:	b142      	cbz	r2, 8010d78 <__ascii_mbtowc+0x1a>
 8010d66:	b14b      	cbz	r3, 8010d7c <__ascii_mbtowc+0x1e>
 8010d68:	7813      	ldrb	r3, [r2, #0]
 8010d6a:	600b      	str	r3, [r1, #0]
 8010d6c:	7812      	ldrb	r2, [r2, #0]
 8010d6e:	1e10      	subs	r0, r2, #0
 8010d70:	bf18      	it	ne
 8010d72:	2001      	movne	r0, #1
 8010d74:	b002      	add	sp, #8
 8010d76:	4770      	bx	lr
 8010d78:	4610      	mov	r0, r2
 8010d7a:	e7fb      	b.n	8010d74 <__ascii_mbtowc+0x16>
 8010d7c:	f06f 0001 	mvn.w	r0, #1
 8010d80:	e7f8      	b.n	8010d74 <__ascii_mbtowc+0x16>

08010d82 <__ascii_wctomb>:
 8010d82:	b149      	cbz	r1, 8010d98 <__ascii_wctomb+0x16>
 8010d84:	2aff      	cmp	r2, #255	; 0xff
 8010d86:	bf85      	ittet	hi
 8010d88:	238a      	movhi	r3, #138	; 0x8a
 8010d8a:	6003      	strhi	r3, [r0, #0]
 8010d8c:	700a      	strbls	r2, [r1, #0]
 8010d8e:	f04f 30ff 	movhi.w	r0, #4294967295
 8010d92:	bf98      	it	ls
 8010d94:	2001      	movls	r0, #1
 8010d96:	4770      	bx	lr
 8010d98:	4608      	mov	r0, r1
 8010d9a:	4770      	bx	lr

08010d9c <__sfputc_r>:
 8010d9c:	6893      	ldr	r3, [r2, #8]
 8010d9e:	3b01      	subs	r3, #1
 8010da0:	2b00      	cmp	r3, #0
 8010da2:	b410      	push	{r4}
 8010da4:	6093      	str	r3, [r2, #8]
 8010da6:	da08      	bge.n	8010dba <__sfputc_r+0x1e>
 8010da8:	6994      	ldr	r4, [r2, #24]
 8010daa:	42a3      	cmp	r3, r4
 8010dac:	db01      	blt.n	8010db2 <__sfputc_r+0x16>
 8010dae:	290a      	cmp	r1, #10
 8010db0:	d103      	bne.n	8010dba <__sfputc_r+0x1e>
 8010db2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010db6:	f000 b935 	b.w	8011024 <__swbuf_r>
 8010dba:	6813      	ldr	r3, [r2, #0]
 8010dbc:	1c58      	adds	r0, r3, #1
 8010dbe:	6010      	str	r0, [r2, #0]
 8010dc0:	7019      	strb	r1, [r3, #0]
 8010dc2:	4608      	mov	r0, r1
 8010dc4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010dc8:	4770      	bx	lr

08010dca <__sfputs_r>:
 8010dca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010dcc:	4606      	mov	r6, r0
 8010dce:	460f      	mov	r7, r1
 8010dd0:	4614      	mov	r4, r2
 8010dd2:	18d5      	adds	r5, r2, r3
 8010dd4:	42ac      	cmp	r4, r5
 8010dd6:	d101      	bne.n	8010ddc <__sfputs_r+0x12>
 8010dd8:	2000      	movs	r0, #0
 8010dda:	e007      	b.n	8010dec <__sfputs_r+0x22>
 8010ddc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8010de0:	463a      	mov	r2, r7
 8010de2:	4630      	mov	r0, r6
 8010de4:	f7ff ffda 	bl	8010d9c <__sfputc_r>
 8010de8:	1c43      	adds	r3, r0, #1
 8010dea:	d1f3      	bne.n	8010dd4 <__sfputs_r+0xa>
 8010dec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08010df0 <_vfiprintf_r>:
 8010df0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010df4:	460d      	mov	r5, r1
 8010df6:	b09d      	sub	sp, #116	; 0x74
 8010df8:	4614      	mov	r4, r2
 8010dfa:	4698      	mov	r8, r3
 8010dfc:	4606      	mov	r6, r0
 8010dfe:	b118      	cbz	r0, 8010e08 <_vfiprintf_r+0x18>
 8010e00:	6a03      	ldr	r3, [r0, #32]
 8010e02:	b90b      	cbnz	r3, 8010e08 <_vfiprintf_r+0x18>
 8010e04:	f7fe fc7a 	bl	800f6fc <__sinit>
 8010e08:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8010e0a:	07d9      	lsls	r1, r3, #31
 8010e0c:	d405      	bmi.n	8010e1a <_vfiprintf_r+0x2a>
 8010e0e:	89ab      	ldrh	r3, [r5, #12]
 8010e10:	059a      	lsls	r2, r3, #22
 8010e12:	d402      	bmi.n	8010e1a <_vfiprintf_r+0x2a>
 8010e14:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8010e16:	f7fe fd89 	bl	800f92c <__retarget_lock_acquire_recursive>
 8010e1a:	89ab      	ldrh	r3, [r5, #12]
 8010e1c:	071b      	lsls	r3, r3, #28
 8010e1e:	d501      	bpl.n	8010e24 <_vfiprintf_r+0x34>
 8010e20:	692b      	ldr	r3, [r5, #16]
 8010e22:	b99b      	cbnz	r3, 8010e4c <_vfiprintf_r+0x5c>
 8010e24:	4629      	mov	r1, r5
 8010e26:	4630      	mov	r0, r6
 8010e28:	f000 f93a 	bl	80110a0 <__swsetup_r>
 8010e2c:	b170      	cbz	r0, 8010e4c <_vfiprintf_r+0x5c>
 8010e2e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8010e30:	07dc      	lsls	r4, r3, #31
 8010e32:	d504      	bpl.n	8010e3e <_vfiprintf_r+0x4e>
 8010e34:	f04f 30ff 	mov.w	r0, #4294967295
 8010e38:	b01d      	add	sp, #116	; 0x74
 8010e3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010e3e:	89ab      	ldrh	r3, [r5, #12]
 8010e40:	0598      	lsls	r0, r3, #22
 8010e42:	d4f7      	bmi.n	8010e34 <_vfiprintf_r+0x44>
 8010e44:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8010e46:	f7fe fd72 	bl	800f92e <__retarget_lock_release_recursive>
 8010e4a:	e7f3      	b.n	8010e34 <_vfiprintf_r+0x44>
 8010e4c:	2300      	movs	r3, #0
 8010e4e:	9309      	str	r3, [sp, #36]	; 0x24
 8010e50:	2320      	movs	r3, #32
 8010e52:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8010e56:	f8cd 800c 	str.w	r8, [sp, #12]
 8010e5a:	2330      	movs	r3, #48	; 0x30
 8010e5c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8011010 <_vfiprintf_r+0x220>
 8010e60:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8010e64:	f04f 0901 	mov.w	r9, #1
 8010e68:	4623      	mov	r3, r4
 8010e6a:	469a      	mov	sl, r3
 8010e6c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8010e70:	b10a      	cbz	r2, 8010e76 <_vfiprintf_r+0x86>
 8010e72:	2a25      	cmp	r2, #37	; 0x25
 8010e74:	d1f9      	bne.n	8010e6a <_vfiprintf_r+0x7a>
 8010e76:	ebba 0b04 	subs.w	fp, sl, r4
 8010e7a:	d00b      	beq.n	8010e94 <_vfiprintf_r+0xa4>
 8010e7c:	465b      	mov	r3, fp
 8010e7e:	4622      	mov	r2, r4
 8010e80:	4629      	mov	r1, r5
 8010e82:	4630      	mov	r0, r6
 8010e84:	f7ff ffa1 	bl	8010dca <__sfputs_r>
 8010e88:	3001      	adds	r0, #1
 8010e8a:	f000 80a9 	beq.w	8010fe0 <_vfiprintf_r+0x1f0>
 8010e8e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010e90:	445a      	add	r2, fp
 8010e92:	9209      	str	r2, [sp, #36]	; 0x24
 8010e94:	f89a 3000 	ldrb.w	r3, [sl]
 8010e98:	2b00      	cmp	r3, #0
 8010e9a:	f000 80a1 	beq.w	8010fe0 <_vfiprintf_r+0x1f0>
 8010e9e:	2300      	movs	r3, #0
 8010ea0:	f04f 32ff 	mov.w	r2, #4294967295
 8010ea4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8010ea8:	f10a 0a01 	add.w	sl, sl, #1
 8010eac:	9304      	str	r3, [sp, #16]
 8010eae:	9307      	str	r3, [sp, #28]
 8010eb0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8010eb4:	931a      	str	r3, [sp, #104]	; 0x68
 8010eb6:	4654      	mov	r4, sl
 8010eb8:	2205      	movs	r2, #5
 8010eba:	f814 1b01 	ldrb.w	r1, [r4], #1
 8010ebe:	4854      	ldr	r0, [pc, #336]	; (8011010 <_vfiprintf_r+0x220>)
 8010ec0:	f7ef f9be 	bl	8000240 <memchr>
 8010ec4:	9a04      	ldr	r2, [sp, #16]
 8010ec6:	b9d8      	cbnz	r0, 8010f00 <_vfiprintf_r+0x110>
 8010ec8:	06d1      	lsls	r1, r2, #27
 8010eca:	bf44      	itt	mi
 8010ecc:	2320      	movmi	r3, #32
 8010ece:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8010ed2:	0713      	lsls	r3, r2, #28
 8010ed4:	bf44      	itt	mi
 8010ed6:	232b      	movmi	r3, #43	; 0x2b
 8010ed8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8010edc:	f89a 3000 	ldrb.w	r3, [sl]
 8010ee0:	2b2a      	cmp	r3, #42	; 0x2a
 8010ee2:	d015      	beq.n	8010f10 <_vfiprintf_r+0x120>
 8010ee4:	9a07      	ldr	r2, [sp, #28]
 8010ee6:	4654      	mov	r4, sl
 8010ee8:	2000      	movs	r0, #0
 8010eea:	f04f 0c0a 	mov.w	ip, #10
 8010eee:	4621      	mov	r1, r4
 8010ef0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010ef4:	3b30      	subs	r3, #48	; 0x30
 8010ef6:	2b09      	cmp	r3, #9
 8010ef8:	d94d      	bls.n	8010f96 <_vfiprintf_r+0x1a6>
 8010efa:	b1b0      	cbz	r0, 8010f2a <_vfiprintf_r+0x13a>
 8010efc:	9207      	str	r2, [sp, #28]
 8010efe:	e014      	b.n	8010f2a <_vfiprintf_r+0x13a>
 8010f00:	eba0 0308 	sub.w	r3, r0, r8
 8010f04:	fa09 f303 	lsl.w	r3, r9, r3
 8010f08:	4313      	orrs	r3, r2
 8010f0a:	9304      	str	r3, [sp, #16]
 8010f0c:	46a2      	mov	sl, r4
 8010f0e:	e7d2      	b.n	8010eb6 <_vfiprintf_r+0xc6>
 8010f10:	9b03      	ldr	r3, [sp, #12]
 8010f12:	1d19      	adds	r1, r3, #4
 8010f14:	681b      	ldr	r3, [r3, #0]
 8010f16:	9103      	str	r1, [sp, #12]
 8010f18:	2b00      	cmp	r3, #0
 8010f1a:	bfbb      	ittet	lt
 8010f1c:	425b      	neglt	r3, r3
 8010f1e:	f042 0202 	orrlt.w	r2, r2, #2
 8010f22:	9307      	strge	r3, [sp, #28]
 8010f24:	9307      	strlt	r3, [sp, #28]
 8010f26:	bfb8      	it	lt
 8010f28:	9204      	strlt	r2, [sp, #16]
 8010f2a:	7823      	ldrb	r3, [r4, #0]
 8010f2c:	2b2e      	cmp	r3, #46	; 0x2e
 8010f2e:	d10c      	bne.n	8010f4a <_vfiprintf_r+0x15a>
 8010f30:	7863      	ldrb	r3, [r4, #1]
 8010f32:	2b2a      	cmp	r3, #42	; 0x2a
 8010f34:	d134      	bne.n	8010fa0 <_vfiprintf_r+0x1b0>
 8010f36:	9b03      	ldr	r3, [sp, #12]
 8010f38:	1d1a      	adds	r2, r3, #4
 8010f3a:	681b      	ldr	r3, [r3, #0]
 8010f3c:	9203      	str	r2, [sp, #12]
 8010f3e:	2b00      	cmp	r3, #0
 8010f40:	bfb8      	it	lt
 8010f42:	f04f 33ff 	movlt.w	r3, #4294967295
 8010f46:	3402      	adds	r4, #2
 8010f48:	9305      	str	r3, [sp, #20]
 8010f4a:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8011020 <_vfiprintf_r+0x230>
 8010f4e:	7821      	ldrb	r1, [r4, #0]
 8010f50:	2203      	movs	r2, #3
 8010f52:	4650      	mov	r0, sl
 8010f54:	f7ef f974 	bl	8000240 <memchr>
 8010f58:	b138      	cbz	r0, 8010f6a <_vfiprintf_r+0x17a>
 8010f5a:	9b04      	ldr	r3, [sp, #16]
 8010f5c:	eba0 000a 	sub.w	r0, r0, sl
 8010f60:	2240      	movs	r2, #64	; 0x40
 8010f62:	4082      	lsls	r2, r0
 8010f64:	4313      	orrs	r3, r2
 8010f66:	3401      	adds	r4, #1
 8010f68:	9304      	str	r3, [sp, #16]
 8010f6a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8010f6e:	4829      	ldr	r0, [pc, #164]	; (8011014 <_vfiprintf_r+0x224>)
 8010f70:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8010f74:	2206      	movs	r2, #6
 8010f76:	f7ef f963 	bl	8000240 <memchr>
 8010f7a:	2800      	cmp	r0, #0
 8010f7c:	d03f      	beq.n	8010ffe <_vfiprintf_r+0x20e>
 8010f7e:	4b26      	ldr	r3, [pc, #152]	; (8011018 <_vfiprintf_r+0x228>)
 8010f80:	bb1b      	cbnz	r3, 8010fca <_vfiprintf_r+0x1da>
 8010f82:	9b03      	ldr	r3, [sp, #12]
 8010f84:	3307      	adds	r3, #7
 8010f86:	f023 0307 	bic.w	r3, r3, #7
 8010f8a:	3308      	adds	r3, #8
 8010f8c:	9303      	str	r3, [sp, #12]
 8010f8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010f90:	443b      	add	r3, r7
 8010f92:	9309      	str	r3, [sp, #36]	; 0x24
 8010f94:	e768      	b.n	8010e68 <_vfiprintf_r+0x78>
 8010f96:	fb0c 3202 	mla	r2, ip, r2, r3
 8010f9a:	460c      	mov	r4, r1
 8010f9c:	2001      	movs	r0, #1
 8010f9e:	e7a6      	b.n	8010eee <_vfiprintf_r+0xfe>
 8010fa0:	2300      	movs	r3, #0
 8010fa2:	3401      	adds	r4, #1
 8010fa4:	9305      	str	r3, [sp, #20]
 8010fa6:	4619      	mov	r1, r3
 8010fa8:	f04f 0c0a 	mov.w	ip, #10
 8010fac:	4620      	mov	r0, r4
 8010fae:	f810 2b01 	ldrb.w	r2, [r0], #1
 8010fb2:	3a30      	subs	r2, #48	; 0x30
 8010fb4:	2a09      	cmp	r2, #9
 8010fb6:	d903      	bls.n	8010fc0 <_vfiprintf_r+0x1d0>
 8010fb8:	2b00      	cmp	r3, #0
 8010fba:	d0c6      	beq.n	8010f4a <_vfiprintf_r+0x15a>
 8010fbc:	9105      	str	r1, [sp, #20]
 8010fbe:	e7c4      	b.n	8010f4a <_vfiprintf_r+0x15a>
 8010fc0:	fb0c 2101 	mla	r1, ip, r1, r2
 8010fc4:	4604      	mov	r4, r0
 8010fc6:	2301      	movs	r3, #1
 8010fc8:	e7f0      	b.n	8010fac <_vfiprintf_r+0x1bc>
 8010fca:	ab03      	add	r3, sp, #12
 8010fcc:	9300      	str	r3, [sp, #0]
 8010fce:	462a      	mov	r2, r5
 8010fd0:	4b12      	ldr	r3, [pc, #72]	; (801101c <_vfiprintf_r+0x22c>)
 8010fd2:	a904      	add	r1, sp, #16
 8010fd4:	4630      	mov	r0, r6
 8010fd6:	f7fd feab 	bl	800ed30 <_printf_float>
 8010fda:	4607      	mov	r7, r0
 8010fdc:	1c78      	adds	r0, r7, #1
 8010fde:	d1d6      	bne.n	8010f8e <_vfiprintf_r+0x19e>
 8010fe0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8010fe2:	07d9      	lsls	r1, r3, #31
 8010fe4:	d405      	bmi.n	8010ff2 <_vfiprintf_r+0x202>
 8010fe6:	89ab      	ldrh	r3, [r5, #12]
 8010fe8:	059a      	lsls	r2, r3, #22
 8010fea:	d402      	bmi.n	8010ff2 <_vfiprintf_r+0x202>
 8010fec:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8010fee:	f7fe fc9e 	bl	800f92e <__retarget_lock_release_recursive>
 8010ff2:	89ab      	ldrh	r3, [r5, #12]
 8010ff4:	065b      	lsls	r3, r3, #25
 8010ff6:	f53f af1d 	bmi.w	8010e34 <_vfiprintf_r+0x44>
 8010ffa:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010ffc:	e71c      	b.n	8010e38 <_vfiprintf_r+0x48>
 8010ffe:	ab03      	add	r3, sp, #12
 8011000:	9300      	str	r3, [sp, #0]
 8011002:	462a      	mov	r2, r5
 8011004:	4b05      	ldr	r3, [pc, #20]	; (801101c <_vfiprintf_r+0x22c>)
 8011006:	a904      	add	r1, sp, #16
 8011008:	4630      	mov	r0, r6
 801100a:	f7fe f919 	bl	800f240 <_printf_i>
 801100e:	e7e4      	b.n	8010fda <_vfiprintf_r+0x1ea>
 8011010:	08036c67 	.word	0x08036c67
 8011014:	08036c71 	.word	0x08036c71
 8011018:	0800ed31 	.word	0x0800ed31
 801101c:	08010dcb 	.word	0x08010dcb
 8011020:	08036c6d 	.word	0x08036c6d

08011024 <__swbuf_r>:
 8011024:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011026:	460e      	mov	r6, r1
 8011028:	4614      	mov	r4, r2
 801102a:	4605      	mov	r5, r0
 801102c:	b118      	cbz	r0, 8011036 <__swbuf_r+0x12>
 801102e:	6a03      	ldr	r3, [r0, #32]
 8011030:	b90b      	cbnz	r3, 8011036 <__swbuf_r+0x12>
 8011032:	f7fe fb63 	bl	800f6fc <__sinit>
 8011036:	69a3      	ldr	r3, [r4, #24]
 8011038:	60a3      	str	r3, [r4, #8]
 801103a:	89a3      	ldrh	r3, [r4, #12]
 801103c:	071a      	lsls	r2, r3, #28
 801103e:	d525      	bpl.n	801108c <__swbuf_r+0x68>
 8011040:	6923      	ldr	r3, [r4, #16]
 8011042:	b31b      	cbz	r3, 801108c <__swbuf_r+0x68>
 8011044:	6823      	ldr	r3, [r4, #0]
 8011046:	6922      	ldr	r2, [r4, #16]
 8011048:	1a98      	subs	r0, r3, r2
 801104a:	6963      	ldr	r3, [r4, #20]
 801104c:	b2f6      	uxtb	r6, r6
 801104e:	4283      	cmp	r3, r0
 8011050:	4637      	mov	r7, r6
 8011052:	dc04      	bgt.n	801105e <__swbuf_r+0x3a>
 8011054:	4621      	mov	r1, r4
 8011056:	4628      	mov	r0, r5
 8011058:	f7fe fa9a 	bl	800f590 <_fflush_r>
 801105c:	b9e0      	cbnz	r0, 8011098 <__swbuf_r+0x74>
 801105e:	68a3      	ldr	r3, [r4, #8]
 8011060:	3b01      	subs	r3, #1
 8011062:	60a3      	str	r3, [r4, #8]
 8011064:	6823      	ldr	r3, [r4, #0]
 8011066:	1c5a      	adds	r2, r3, #1
 8011068:	6022      	str	r2, [r4, #0]
 801106a:	701e      	strb	r6, [r3, #0]
 801106c:	6962      	ldr	r2, [r4, #20]
 801106e:	1c43      	adds	r3, r0, #1
 8011070:	429a      	cmp	r2, r3
 8011072:	d004      	beq.n	801107e <__swbuf_r+0x5a>
 8011074:	89a3      	ldrh	r3, [r4, #12]
 8011076:	07db      	lsls	r3, r3, #31
 8011078:	d506      	bpl.n	8011088 <__swbuf_r+0x64>
 801107a:	2e0a      	cmp	r6, #10
 801107c:	d104      	bne.n	8011088 <__swbuf_r+0x64>
 801107e:	4621      	mov	r1, r4
 8011080:	4628      	mov	r0, r5
 8011082:	f7fe fa85 	bl	800f590 <_fflush_r>
 8011086:	b938      	cbnz	r0, 8011098 <__swbuf_r+0x74>
 8011088:	4638      	mov	r0, r7
 801108a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801108c:	4621      	mov	r1, r4
 801108e:	4628      	mov	r0, r5
 8011090:	f000 f806 	bl	80110a0 <__swsetup_r>
 8011094:	2800      	cmp	r0, #0
 8011096:	d0d5      	beq.n	8011044 <__swbuf_r+0x20>
 8011098:	f04f 37ff 	mov.w	r7, #4294967295
 801109c:	e7f4      	b.n	8011088 <__swbuf_r+0x64>
	...

080110a0 <__swsetup_r>:
 80110a0:	b538      	push	{r3, r4, r5, lr}
 80110a2:	4b2a      	ldr	r3, [pc, #168]	; (801114c <__swsetup_r+0xac>)
 80110a4:	4605      	mov	r5, r0
 80110a6:	6818      	ldr	r0, [r3, #0]
 80110a8:	460c      	mov	r4, r1
 80110aa:	b118      	cbz	r0, 80110b4 <__swsetup_r+0x14>
 80110ac:	6a03      	ldr	r3, [r0, #32]
 80110ae:	b90b      	cbnz	r3, 80110b4 <__swsetup_r+0x14>
 80110b0:	f7fe fb24 	bl	800f6fc <__sinit>
 80110b4:	89a3      	ldrh	r3, [r4, #12]
 80110b6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80110ba:	0718      	lsls	r0, r3, #28
 80110bc:	d422      	bmi.n	8011104 <__swsetup_r+0x64>
 80110be:	06d9      	lsls	r1, r3, #27
 80110c0:	d407      	bmi.n	80110d2 <__swsetup_r+0x32>
 80110c2:	2309      	movs	r3, #9
 80110c4:	602b      	str	r3, [r5, #0]
 80110c6:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80110ca:	81a3      	strh	r3, [r4, #12]
 80110cc:	f04f 30ff 	mov.w	r0, #4294967295
 80110d0:	e034      	b.n	801113c <__swsetup_r+0x9c>
 80110d2:	0758      	lsls	r0, r3, #29
 80110d4:	d512      	bpl.n	80110fc <__swsetup_r+0x5c>
 80110d6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80110d8:	b141      	cbz	r1, 80110ec <__swsetup_r+0x4c>
 80110da:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80110de:	4299      	cmp	r1, r3
 80110e0:	d002      	beq.n	80110e8 <__swsetup_r+0x48>
 80110e2:	4628      	mov	r0, r5
 80110e4:	f7ff fa44 	bl	8010570 <_free_r>
 80110e8:	2300      	movs	r3, #0
 80110ea:	6363      	str	r3, [r4, #52]	; 0x34
 80110ec:	89a3      	ldrh	r3, [r4, #12]
 80110ee:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80110f2:	81a3      	strh	r3, [r4, #12]
 80110f4:	2300      	movs	r3, #0
 80110f6:	6063      	str	r3, [r4, #4]
 80110f8:	6923      	ldr	r3, [r4, #16]
 80110fa:	6023      	str	r3, [r4, #0]
 80110fc:	89a3      	ldrh	r3, [r4, #12]
 80110fe:	f043 0308 	orr.w	r3, r3, #8
 8011102:	81a3      	strh	r3, [r4, #12]
 8011104:	6923      	ldr	r3, [r4, #16]
 8011106:	b94b      	cbnz	r3, 801111c <__swsetup_r+0x7c>
 8011108:	89a3      	ldrh	r3, [r4, #12]
 801110a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801110e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8011112:	d003      	beq.n	801111c <__swsetup_r+0x7c>
 8011114:	4621      	mov	r1, r4
 8011116:	4628      	mov	r0, r5
 8011118:	f000 f884 	bl	8011224 <__smakebuf_r>
 801111c:	89a0      	ldrh	r0, [r4, #12]
 801111e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8011122:	f010 0301 	ands.w	r3, r0, #1
 8011126:	d00a      	beq.n	801113e <__swsetup_r+0x9e>
 8011128:	2300      	movs	r3, #0
 801112a:	60a3      	str	r3, [r4, #8]
 801112c:	6963      	ldr	r3, [r4, #20]
 801112e:	425b      	negs	r3, r3
 8011130:	61a3      	str	r3, [r4, #24]
 8011132:	6923      	ldr	r3, [r4, #16]
 8011134:	b943      	cbnz	r3, 8011148 <__swsetup_r+0xa8>
 8011136:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801113a:	d1c4      	bne.n	80110c6 <__swsetup_r+0x26>
 801113c:	bd38      	pop	{r3, r4, r5, pc}
 801113e:	0781      	lsls	r1, r0, #30
 8011140:	bf58      	it	pl
 8011142:	6963      	ldrpl	r3, [r4, #20]
 8011144:	60a3      	str	r3, [r4, #8]
 8011146:	e7f4      	b.n	8011132 <__swsetup_r+0x92>
 8011148:	2000      	movs	r0, #0
 801114a:	e7f7      	b.n	801113c <__swsetup_r+0x9c>
 801114c:	20001d84 	.word	0x20001d84

08011150 <_raise_r>:
 8011150:	291f      	cmp	r1, #31
 8011152:	b538      	push	{r3, r4, r5, lr}
 8011154:	4604      	mov	r4, r0
 8011156:	460d      	mov	r5, r1
 8011158:	d904      	bls.n	8011164 <_raise_r+0x14>
 801115a:	2316      	movs	r3, #22
 801115c:	6003      	str	r3, [r0, #0]
 801115e:	f04f 30ff 	mov.w	r0, #4294967295
 8011162:	bd38      	pop	{r3, r4, r5, pc}
 8011164:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8011166:	b112      	cbz	r2, 801116e <_raise_r+0x1e>
 8011168:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801116c:	b94b      	cbnz	r3, 8011182 <_raise_r+0x32>
 801116e:	4620      	mov	r0, r4
 8011170:	f000 f830 	bl	80111d4 <_getpid_r>
 8011174:	462a      	mov	r2, r5
 8011176:	4601      	mov	r1, r0
 8011178:	4620      	mov	r0, r4
 801117a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801117e:	f000 b817 	b.w	80111b0 <_kill_r>
 8011182:	2b01      	cmp	r3, #1
 8011184:	d00a      	beq.n	801119c <_raise_r+0x4c>
 8011186:	1c59      	adds	r1, r3, #1
 8011188:	d103      	bne.n	8011192 <_raise_r+0x42>
 801118a:	2316      	movs	r3, #22
 801118c:	6003      	str	r3, [r0, #0]
 801118e:	2001      	movs	r0, #1
 8011190:	e7e7      	b.n	8011162 <_raise_r+0x12>
 8011192:	2400      	movs	r4, #0
 8011194:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8011198:	4628      	mov	r0, r5
 801119a:	4798      	blx	r3
 801119c:	2000      	movs	r0, #0
 801119e:	e7e0      	b.n	8011162 <_raise_r+0x12>

080111a0 <raise>:
 80111a0:	4b02      	ldr	r3, [pc, #8]	; (80111ac <raise+0xc>)
 80111a2:	4601      	mov	r1, r0
 80111a4:	6818      	ldr	r0, [r3, #0]
 80111a6:	f7ff bfd3 	b.w	8011150 <_raise_r>
 80111aa:	bf00      	nop
 80111ac:	20001d84 	.word	0x20001d84

080111b0 <_kill_r>:
 80111b0:	b538      	push	{r3, r4, r5, lr}
 80111b2:	4d07      	ldr	r5, [pc, #28]	; (80111d0 <_kill_r+0x20>)
 80111b4:	2300      	movs	r3, #0
 80111b6:	4604      	mov	r4, r0
 80111b8:	4608      	mov	r0, r1
 80111ba:	4611      	mov	r1, r2
 80111bc:	602b      	str	r3, [r5, #0]
 80111be:	f000 fa6d 	bl	801169c <_kill>
 80111c2:	1c43      	adds	r3, r0, #1
 80111c4:	d102      	bne.n	80111cc <_kill_r+0x1c>
 80111c6:	682b      	ldr	r3, [r5, #0]
 80111c8:	b103      	cbz	r3, 80111cc <_kill_r+0x1c>
 80111ca:	6023      	str	r3, [r4, #0]
 80111cc:	bd38      	pop	{r3, r4, r5, pc}
 80111ce:	bf00      	nop
 80111d0:	2001da0c 	.word	0x2001da0c

080111d4 <_getpid_r>:
 80111d4:	f000 ba52 	b.w	801167c <_getpid>

080111d8 <__swhatbuf_r>:
 80111d8:	b570      	push	{r4, r5, r6, lr}
 80111da:	460c      	mov	r4, r1
 80111dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80111e0:	2900      	cmp	r1, #0
 80111e2:	b096      	sub	sp, #88	; 0x58
 80111e4:	4615      	mov	r5, r2
 80111e6:	461e      	mov	r6, r3
 80111e8:	da0d      	bge.n	8011206 <__swhatbuf_r+0x2e>
 80111ea:	89a3      	ldrh	r3, [r4, #12]
 80111ec:	f013 0f80 	tst.w	r3, #128	; 0x80
 80111f0:	f04f 0100 	mov.w	r1, #0
 80111f4:	bf0c      	ite	eq
 80111f6:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80111fa:	2340      	movne	r3, #64	; 0x40
 80111fc:	2000      	movs	r0, #0
 80111fe:	6031      	str	r1, [r6, #0]
 8011200:	602b      	str	r3, [r5, #0]
 8011202:	b016      	add	sp, #88	; 0x58
 8011204:	bd70      	pop	{r4, r5, r6, pc}
 8011206:	466a      	mov	r2, sp
 8011208:	f000 f848 	bl	801129c <_fstat_r>
 801120c:	2800      	cmp	r0, #0
 801120e:	dbec      	blt.n	80111ea <__swhatbuf_r+0x12>
 8011210:	9901      	ldr	r1, [sp, #4]
 8011212:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8011216:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 801121a:	4259      	negs	r1, r3
 801121c:	4159      	adcs	r1, r3
 801121e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8011222:	e7eb      	b.n	80111fc <__swhatbuf_r+0x24>

08011224 <__smakebuf_r>:
 8011224:	898b      	ldrh	r3, [r1, #12]
 8011226:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011228:	079d      	lsls	r5, r3, #30
 801122a:	4606      	mov	r6, r0
 801122c:	460c      	mov	r4, r1
 801122e:	d507      	bpl.n	8011240 <__smakebuf_r+0x1c>
 8011230:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8011234:	6023      	str	r3, [r4, #0]
 8011236:	6123      	str	r3, [r4, #16]
 8011238:	2301      	movs	r3, #1
 801123a:	6163      	str	r3, [r4, #20]
 801123c:	b002      	add	sp, #8
 801123e:	bd70      	pop	{r4, r5, r6, pc}
 8011240:	ab01      	add	r3, sp, #4
 8011242:	466a      	mov	r2, sp
 8011244:	f7ff ffc8 	bl	80111d8 <__swhatbuf_r>
 8011248:	9900      	ldr	r1, [sp, #0]
 801124a:	4605      	mov	r5, r0
 801124c:	4630      	mov	r0, r6
 801124e:	f7fd fbe5 	bl	800ea1c <_malloc_r>
 8011252:	b948      	cbnz	r0, 8011268 <__smakebuf_r+0x44>
 8011254:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8011258:	059a      	lsls	r2, r3, #22
 801125a:	d4ef      	bmi.n	801123c <__smakebuf_r+0x18>
 801125c:	f023 0303 	bic.w	r3, r3, #3
 8011260:	f043 0302 	orr.w	r3, r3, #2
 8011264:	81a3      	strh	r3, [r4, #12]
 8011266:	e7e3      	b.n	8011230 <__smakebuf_r+0xc>
 8011268:	89a3      	ldrh	r3, [r4, #12]
 801126a:	6020      	str	r0, [r4, #0]
 801126c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8011270:	81a3      	strh	r3, [r4, #12]
 8011272:	9b00      	ldr	r3, [sp, #0]
 8011274:	6163      	str	r3, [r4, #20]
 8011276:	9b01      	ldr	r3, [sp, #4]
 8011278:	6120      	str	r0, [r4, #16]
 801127a:	b15b      	cbz	r3, 8011294 <__smakebuf_r+0x70>
 801127c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8011280:	4630      	mov	r0, r6
 8011282:	f000 f81d 	bl	80112c0 <_isatty_r>
 8011286:	b128      	cbz	r0, 8011294 <__smakebuf_r+0x70>
 8011288:	89a3      	ldrh	r3, [r4, #12]
 801128a:	f023 0303 	bic.w	r3, r3, #3
 801128e:	f043 0301 	orr.w	r3, r3, #1
 8011292:	81a3      	strh	r3, [r4, #12]
 8011294:	89a3      	ldrh	r3, [r4, #12]
 8011296:	431d      	orrs	r5, r3
 8011298:	81a5      	strh	r5, [r4, #12]
 801129a:	e7cf      	b.n	801123c <__smakebuf_r+0x18>

0801129c <_fstat_r>:
 801129c:	b538      	push	{r3, r4, r5, lr}
 801129e:	4d07      	ldr	r5, [pc, #28]	; (80112bc <_fstat_r+0x20>)
 80112a0:	2300      	movs	r3, #0
 80112a2:	4604      	mov	r4, r0
 80112a4:	4608      	mov	r0, r1
 80112a6:	4611      	mov	r1, r2
 80112a8:	602b      	str	r3, [r5, #0]
 80112aa:	f000 f9df 	bl	801166c <_fstat>
 80112ae:	1c43      	adds	r3, r0, #1
 80112b0:	d102      	bne.n	80112b8 <_fstat_r+0x1c>
 80112b2:	682b      	ldr	r3, [r5, #0]
 80112b4:	b103      	cbz	r3, 80112b8 <_fstat_r+0x1c>
 80112b6:	6023      	str	r3, [r4, #0]
 80112b8:	bd38      	pop	{r3, r4, r5, pc}
 80112ba:	bf00      	nop
 80112bc:	2001da0c 	.word	0x2001da0c

080112c0 <_isatty_r>:
 80112c0:	b538      	push	{r3, r4, r5, lr}
 80112c2:	4d06      	ldr	r5, [pc, #24]	; (80112dc <_isatty_r+0x1c>)
 80112c4:	2300      	movs	r3, #0
 80112c6:	4604      	mov	r4, r0
 80112c8:	4608      	mov	r0, r1
 80112ca:	602b      	str	r3, [r5, #0]
 80112cc:	f000 f9de 	bl	801168c <_isatty>
 80112d0:	1c43      	adds	r3, r0, #1
 80112d2:	d102      	bne.n	80112da <_isatty_r+0x1a>
 80112d4:	682b      	ldr	r3, [r5, #0]
 80112d6:	b103      	cbz	r3, 80112da <_isatty_r+0x1a>
 80112d8:	6023      	str	r3, [r4, #0]
 80112da:	bd38      	pop	{r3, r4, r5, pc}
 80112dc:	2001da0c 	.word	0x2001da0c

080112e0 <checkint>:
 80112e0:	f3c0 53c7 	ubfx	r3, r0, #23, #8
 80112e4:	2b7e      	cmp	r3, #126	; 0x7e
 80112e6:	dd10      	ble.n	801130a <checkint+0x2a>
 80112e8:	2b96      	cmp	r3, #150	; 0x96
 80112ea:	dc0c      	bgt.n	8011306 <checkint+0x26>
 80112ec:	2201      	movs	r2, #1
 80112ee:	f1c3 0396 	rsb	r3, r3, #150	; 0x96
 80112f2:	fa02 f303 	lsl.w	r3, r2, r3
 80112f6:	1e5a      	subs	r2, r3, #1
 80112f8:	4202      	tst	r2, r0
 80112fa:	d106      	bne.n	801130a <checkint+0x2a>
 80112fc:	4203      	tst	r3, r0
 80112fe:	bf0c      	ite	eq
 8011300:	2002      	moveq	r0, #2
 8011302:	2001      	movne	r0, #1
 8011304:	4770      	bx	lr
 8011306:	2002      	movs	r0, #2
 8011308:	4770      	bx	lr
 801130a:	2000      	movs	r0, #0
 801130c:	4770      	bx	lr
	...

08011310 <powf>:
 8011310:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011312:	ee10 1a10 	vmov	r1, s0
 8011316:	ee10 4a90 	vmov	r4, s1
 801131a:	f5a1 0300 	sub.w	r3, r1, #8388608	; 0x800000
 801131e:	0062      	lsls	r2, r4, #1
 8011320:	f1b3 4ffe 	cmp.w	r3, #2130706432	; 0x7f000000
 8011324:	eef0 7a40 	vmov.f32	s15, s0
 8011328:	f102 30ff 	add.w	r0, r2, #4294967295
 801132c:	f06f 7380 	mvn.w	r3, #16777216	; 0x1000000
 8011330:	d252      	bcs.n	80113d8 <powf+0xc8>
 8011332:	4298      	cmp	r0, r3
 8011334:	d252      	bcs.n	80113dc <powf+0xcc>
 8011336:	2000      	movs	r0, #0
 8011338:	f101 4340 	add.w	r3, r1, #3221225472	; 0xc0000000
 801133c:	4a9e      	ldr	r2, [pc, #632]	; (80115b8 <powf+0x2a8>)
 801133e:	eebf 6b00 	vmov.f64	d6, #240	; 0xbf800000 -1.0
 8011342:	f503 034d 	add.w	r3, r3, #13434880	; 0xcd0000
 8011346:	f3c3 44c3 	ubfx	r4, r3, #19, #4
 801134a:	0ddb      	lsrs	r3, r3, #23
 801134c:	eb02 1404 	add.w	r4, r2, r4, lsl #4
 8011350:	05db      	lsls	r3, r3, #23
 8011352:	ed94 5b00 	vldr	d5, [r4]
 8011356:	1ac9      	subs	r1, r1, r3
 8011358:	ee07 1a90 	vmov	s15, r1
 801135c:	15db      	asrs	r3, r3, #23
 801135e:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8011362:	eea5 6b07 	vfma.f64	d6, d5, d7
 8011366:	ed94 5b02 	vldr	d5, [r4, #8]
 801136a:	ee26 2b06 	vmul.f64	d2, d6, d6
 801136e:	ee22 1b02 	vmul.f64	d1, d2, d2
 8011372:	ee07 3a90 	vmov	s15, r3
 8011376:	ed92 3b42 	vldr	d3, [r2, #264]	; 0x108
 801137a:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 801137e:	ee37 7b05 	vadd.f64	d7, d7, d5
 8011382:	ed92 5b40 	vldr	d5, [r2, #256]	; 0x100
 8011386:	ed92 4b44 	vldr	d4, [r2, #272]	; 0x110
 801138a:	eea6 3b05 	vfma.f64	d3, d6, d5
 801138e:	ed92 5b46 	vldr	d5, [r2, #280]	; 0x118
 8011392:	eea6 5b04 	vfma.f64	d5, d6, d4
 8011396:	ed92 4b48 	vldr	d4, [r2, #288]	; 0x120
 801139a:	eea6 7b04 	vfma.f64	d7, d6, d4
 801139e:	eeb7 6ae0 	vcvt.f64.f32	d6, s1
 80113a2:	eea2 7b05 	vfma.f64	d7, d2, d5
 80113a6:	eea3 7b01 	vfma.f64	d7, d3, d1
 80113aa:	ee26 6b07 	vmul.f64	d6, d6, d7
 80113ae:	ee16 3a90 	vmov	r3, s13
 80113b2:	f3c3 32cf 	ubfx	r2, r3, #15, #16
 80113b6:	f248 03bf 	movw	r3, #32959	; 0x80bf
 80113ba:	429a      	cmp	r2, r3
 80113bc:	f0c0 80b0 	bcc.w	8011520 <powf+0x210>
 80113c0:	ed9f 7b75 	vldr	d7, [pc, #468]	; 8011598 <powf+0x288>
 80113c4:	eeb4 6bc7 	vcmpe.f64	d6, d7
 80113c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80113cc:	dd78      	ble.n	80114c0 <powf+0x1b0>
 80113ce:	b003      	add	sp, #12
 80113d0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80113d4:	f000 b91a 	b.w	801160c <__math_oflowf>
 80113d8:	4298      	cmp	r0, r3
 80113da:	d32d      	bcc.n	8011438 <powf+0x128>
 80113dc:	b952      	cbnz	r2, 80113f4 <powf+0xe4>
 80113de:	f481 0180 	eor.w	r1, r1, #4194304	; 0x400000
 80113e2:	0049      	lsls	r1, r1, #1
 80113e4:	f511 0f00 	cmn.w	r1, #8388608	; 0x800000
 80113e8:	f240 80c8 	bls.w	801157c <powf+0x26c>
 80113ec:	ee37 0aa0 	vadd.f32	s0, s15, s1
 80113f0:	b003      	add	sp, #12
 80113f2:	bd30      	pop	{r4, r5, pc}
 80113f4:	f1b1 5f7e 	cmp.w	r1, #1065353216	; 0x3f800000
 80113f8:	d105      	bne.n	8011406 <powf+0xf6>
 80113fa:	f484 0480 	eor.w	r4, r4, #4194304	; 0x400000
 80113fe:	0064      	lsls	r4, r4, #1
 8011400:	f514 0f00 	cmn.w	r4, #8388608	; 0x800000
 8011404:	e7f0      	b.n	80113e8 <powf+0xd8>
 8011406:	0049      	lsls	r1, r1, #1
 8011408:	f1b1 4f7f 	cmp.w	r1, #4278190080	; 0xff000000
 801140c:	d8ee      	bhi.n	80113ec <powf+0xdc>
 801140e:	f1b2 4f7f 	cmp.w	r2, #4278190080	; 0xff000000
 8011412:	d1eb      	bne.n	80113ec <powf+0xdc>
 8011414:	f1b1 4ffe 	cmp.w	r1, #2130706432	; 0x7f000000
 8011418:	f000 80b0 	beq.w	801157c <powf+0x26c>
 801141c:	f1b1 4ffe 	cmp.w	r1, #2130706432	; 0x7f000000
 8011420:	ea6f 0404 	mvn.w	r4, r4
 8011424:	bf34      	ite	cc
 8011426:	2100      	movcc	r1, #0
 8011428:	2101      	movcs	r1, #1
 801142a:	0fe4      	lsrs	r4, r4, #31
 801142c:	42a1      	cmp	r1, r4
 801142e:	f040 80a8 	bne.w	8011582 <powf+0x272>
 8011432:	ee20 0aa0 	vmul.f32	s0, s1, s1
 8011436:	e7db      	b.n	80113f0 <powf+0xe0>
 8011438:	004d      	lsls	r5, r1, #1
 801143a:	1e6a      	subs	r2, r5, #1
 801143c:	429a      	cmp	r2, r3
 801143e:	d31c      	bcc.n	801147a <powf+0x16a>
 8011440:	2900      	cmp	r1, #0
 8011442:	ee20 0a00 	vmul.f32	s0, s0, s0
 8011446:	da0f      	bge.n	8011468 <powf+0x158>
 8011448:	ee10 0a90 	vmov	r0, s1
 801144c:	f7ff ff48 	bl	80112e0 <checkint>
 8011450:	2801      	cmp	r0, #1
 8011452:	d109      	bne.n	8011468 <powf+0x158>
 8011454:	eeb1 0a40 	vneg.f32	s0, s0
 8011458:	b945      	cbnz	r5, 801146c <powf+0x15c>
 801145a:	2c00      	cmp	r4, #0
 801145c:	dac8      	bge.n	80113f0 <powf+0xe0>
 801145e:	b003      	add	sp, #12
 8011460:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8011464:	f000 b8d8 	b.w	8011618 <__math_divzerof>
 8011468:	2000      	movs	r0, #0
 801146a:	e7f5      	b.n	8011458 <powf+0x148>
 801146c:	2c00      	cmp	r4, #0
 801146e:	dabf      	bge.n	80113f0 <powf+0xe0>
 8011470:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8011474:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8011478:	e7ba      	b.n	80113f0 <powf+0xe0>
 801147a:	2900      	cmp	r1, #0
 801147c:	da1e      	bge.n	80114bc <powf+0x1ac>
 801147e:	ee10 0a90 	vmov	r0, s1
 8011482:	f7ff ff2d 	bl	80112e0 <checkint>
 8011486:	b920      	cbnz	r0, 8011492 <powf+0x182>
 8011488:	b003      	add	sp, #12
 801148a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801148e:	f000 b8d5 	b.w	801163c <__math_invalidf>
 8011492:	1e43      	subs	r3, r0, #1
 8011494:	4258      	negs	r0, r3
 8011496:	4158      	adcs	r0, r3
 8011498:	0400      	lsls	r0, r0, #16
 801149a:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 801149e:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 80114a2:	f4bf af49 	bcs.w	8011338 <powf+0x28>
 80114a6:	ed9f 7a45 	vldr	s14, [pc, #276]	; 80115bc <powf+0x2ac>
 80114aa:	ee27 0a87 	vmul.f32	s0, s15, s14
 80114ae:	ee10 3a10 	vmov	r3, s0
 80114b2:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80114b6:	f1a3 6138 	sub.w	r1, r3, #192937984	; 0xb800000
 80114ba:	e73d      	b.n	8011338 <powf+0x28>
 80114bc:	2000      	movs	r0, #0
 80114be:	e7ee      	b.n	801149e <powf+0x18e>
 80114c0:	ed9f 7b37 	vldr	d7, [pc, #220]	; 80115a0 <powf+0x290>
 80114c4:	eeb4 6bc7 	vcmpe.f64	d6, d7
 80114c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80114cc:	dd10      	ble.n	80114f0 <powf+0x1e0>
 80114ce:	f04f 534c 	mov.w	r3, #855638016	; 0x33000000
 80114d2:	2800      	cmp	r0, #0
 80114d4:	d158      	bne.n	8011588 <powf+0x278>
 80114d6:	9300      	str	r3, [sp, #0]
 80114d8:	eddd 7a00 	vldr	s15, [sp]
 80114dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80114e0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80114e4:	eef4 7a47 	vcmp.f32	s15, s14
 80114e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80114ec:	f47f af6f 	bne.w	80113ce <powf+0xbe>
 80114f0:	ed9f 7b2d 	vldr	d7, [pc, #180]	; 80115a8 <powf+0x298>
 80114f4:	eeb4 6bc7 	vcmpe.f64	d6, d7
 80114f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80114fc:	d804      	bhi.n	8011508 <powf+0x1f8>
 80114fe:	b003      	add	sp, #12
 8011500:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8011504:	f000 b876 	b.w	80115f4 <__math_uflowf>
 8011508:	ed9f 7b29 	vldr	d7, [pc, #164]	; 80115b0 <powf+0x2a0>
 801150c:	eeb4 6bc7 	vcmpe.f64	d6, d7
 8011510:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011514:	d504      	bpl.n	8011520 <powf+0x210>
 8011516:	b003      	add	sp, #12
 8011518:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801151c:	f000 b870 	b.w	8011600 <__math_may_uflowf>
 8011520:	4b27      	ldr	r3, [pc, #156]	; (80115c0 <powf+0x2b0>)
 8011522:	eeb7 0b00 	vmov.f64	d0, #112	; 0x3f800000  1.0
 8011526:	ed93 5b40 	vldr	d5, [r3, #256]	; 0x100
 801152a:	ee36 7b05 	vadd.f64	d7, d6, d5
 801152e:	ee17 2a10 	vmov	r2, s14
 8011532:	ee37 7b45 	vsub.f64	d7, d7, d5
 8011536:	f002 011f 	and.w	r1, r2, #31
 801153a:	ee36 7b47 	vsub.f64	d7, d6, d7
 801153e:	ed93 5b42 	vldr	d5, [r3, #264]	; 0x108
 8011542:	ee27 4b07 	vmul.f64	d4, d7, d7
 8011546:	ed93 6b44 	vldr	d6, [r3, #272]	; 0x110
 801154a:	eb03 05c1 	add.w	r5, r3, r1, lsl #3
 801154e:	f853 4031 	ldr.w	r4, [r3, r1, lsl #3]
 8011552:	eea7 6b05 	vfma.f64	d6, d7, d5
 8011556:	686d      	ldr	r5, [r5, #4]
 8011558:	ed93 5b46 	vldr	d5, [r3, #280]	; 0x118
 801155c:	1882      	adds	r2, r0, r2
 801155e:	2300      	movs	r3, #0
 8011560:	1918      	adds	r0, r3, r4
 8011562:	eb05 31c2 	add.w	r1, r5, r2, lsl #15
 8011566:	eea7 0b05 	vfma.f64	d0, d7, d5
 801156a:	ec41 0b17 	vmov	d7, r0, r1
 801156e:	eea6 0b04 	vfma.f64	d0, d6, d4
 8011572:	ee20 0b07 	vmul.f64	d0, d0, d7
 8011576:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
 801157a:	e739      	b.n	80113f0 <powf+0xe0>
 801157c:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8011580:	e736      	b.n	80113f0 <powf+0xe0>
 8011582:	ed9f 0a10 	vldr	s0, [pc, #64]	; 80115c4 <powf+0x2b4>
 8011586:	e733      	b.n	80113f0 <powf+0xe0>
 8011588:	9301      	str	r3, [sp, #4]
 801158a:	eddd 7a01 	vldr	s15, [sp, #4]
 801158e:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 8011592:	ee77 7a67 	vsub.f32	s15, s14, s15
 8011596:	e7a5      	b.n	80114e4 <powf+0x1d4>
 8011598:	ffd1d571 	.word	0xffd1d571
 801159c:	405fffff 	.word	0x405fffff
 80115a0:	ffa3aae2 	.word	0xffa3aae2
 80115a4:	405fffff 	.word	0x405fffff
 80115a8:	00000000 	.word	0x00000000
 80115ac:	c062c000 	.word	0xc062c000
 80115b0:	00000000 	.word	0x00000000
 80115b4:	c062a000 	.word	0xc062a000
 80115b8:	08036dc0 	.word	0x08036dc0
 80115bc:	4b000000 	.word	0x4b000000
 80115c0:	08036c78 	.word	0x08036c78
 80115c4:	00000000 	.word	0x00000000

080115c8 <with_errnof>:
 80115c8:	b513      	push	{r0, r1, r4, lr}
 80115ca:	4604      	mov	r4, r0
 80115cc:	ed8d 0a01 	vstr	s0, [sp, #4]
 80115d0:	f7fe f982 	bl	800f8d8 <__errno>
 80115d4:	ed9d 0a01 	vldr	s0, [sp, #4]
 80115d8:	6004      	str	r4, [r0, #0]
 80115da:	b002      	add	sp, #8
 80115dc:	bd10      	pop	{r4, pc}

080115de <xflowf>:
 80115de:	b130      	cbz	r0, 80115ee <xflowf+0x10>
 80115e0:	eef1 7a40 	vneg.f32	s15, s0
 80115e4:	ee27 0a80 	vmul.f32	s0, s15, s0
 80115e8:	2022      	movs	r0, #34	; 0x22
 80115ea:	f7ff bfed 	b.w	80115c8 <with_errnof>
 80115ee:	eef0 7a40 	vmov.f32	s15, s0
 80115f2:	e7f7      	b.n	80115e4 <xflowf+0x6>

080115f4 <__math_uflowf>:
 80115f4:	ed9f 0a01 	vldr	s0, [pc, #4]	; 80115fc <__math_uflowf+0x8>
 80115f8:	f7ff bff1 	b.w	80115de <xflowf>
 80115fc:	10000000 	.word	0x10000000

08011600 <__math_may_uflowf>:
 8011600:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8011608 <__math_may_uflowf+0x8>
 8011604:	f7ff bfeb 	b.w	80115de <xflowf>
 8011608:	1a200000 	.word	0x1a200000

0801160c <__math_oflowf>:
 801160c:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8011614 <__math_oflowf+0x8>
 8011610:	f7ff bfe5 	b.w	80115de <xflowf>
 8011614:	70000000 	.word	0x70000000

08011618 <__math_divzerof>:
 8011618:	ed9f 0a07 	vldr	s0, [pc, #28]	; 8011638 <__math_divzerof+0x20>
 801161c:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8011620:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011624:	2800      	cmp	r0, #0
 8011626:	f04f 0022 	mov.w	r0, #34	; 0x22
 801162a:	fe47 7a27 	vseleq.f32	s15, s14, s15
 801162e:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8011632:	f7ff bfc9 	b.w	80115c8 <with_errnof>
 8011636:	bf00      	nop
 8011638:	00000000 	.word	0x00000000

0801163c <__math_invalidf>:
 801163c:	eef0 7a40 	vmov.f32	s15, s0
 8011640:	ee30 7a40 	vsub.f32	s14, s0, s0
 8011644:	eef4 7a67 	vcmp.f32	s15, s15
 8011648:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801164c:	ee87 0a07 	vdiv.f32	s0, s14, s14
 8011650:	d602      	bvs.n	8011658 <__math_invalidf+0x1c>
 8011652:	2021      	movs	r0, #33	; 0x21
 8011654:	f7ff bfb8 	b.w	80115c8 <with_errnof>
 8011658:	4770      	bx	lr
	...

0801165c <_close>:
 801165c:	4b02      	ldr	r3, [pc, #8]	; (8011668 <_close+0xc>)
 801165e:	2258      	movs	r2, #88	; 0x58
 8011660:	601a      	str	r2, [r3, #0]
 8011662:	f04f 30ff 	mov.w	r0, #4294967295
 8011666:	4770      	bx	lr
 8011668:	2001da0c 	.word	0x2001da0c

0801166c <_fstat>:
 801166c:	4b02      	ldr	r3, [pc, #8]	; (8011678 <_fstat+0xc>)
 801166e:	2258      	movs	r2, #88	; 0x58
 8011670:	601a      	str	r2, [r3, #0]
 8011672:	f04f 30ff 	mov.w	r0, #4294967295
 8011676:	4770      	bx	lr
 8011678:	2001da0c 	.word	0x2001da0c

0801167c <_getpid>:
 801167c:	4b02      	ldr	r3, [pc, #8]	; (8011688 <_getpid+0xc>)
 801167e:	2258      	movs	r2, #88	; 0x58
 8011680:	601a      	str	r2, [r3, #0]
 8011682:	f04f 30ff 	mov.w	r0, #4294967295
 8011686:	4770      	bx	lr
 8011688:	2001da0c 	.word	0x2001da0c

0801168c <_isatty>:
 801168c:	4b02      	ldr	r3, [pc, #8]	; (8011698 <_isatty+0xc>)
 801168e:	2258      	movs	r2, #88	; 0x58
 8011690:	601a      	str	r2, [r3, #0]
 8011692:	2000      	movs	r0, #0
 8011694:	4770      	bx	lr
 8011696:	bf00      	nop
 8011698:	2001da0c 	.word	0x2001da0c

0801169c <_kill>:
 801169c:	4b02      	ldr	r3, [pc, #8]	; (80116a8 <_kill+0xc>)
 801169e:	2258      	movs	r2, #88	; 0x58
 80116a0:	601a      	str	r2, [r3, #0]
 80116a2:	f04f 30ff 	mov.w	r0, #4294967295
 80116a6:	4770      	bx	lr
 80116a8:	2001da0c 	.word	0x2001da0c

080116ac <_lseek>:
 80116ac:	4b02      	ldr	r3, [pc, #8]	; (80116b8 <_lseek+0xc>)
 80116ae:	2258      	movs	r2, #88	; 0x58
 80116b0:	601a      	str	r2, [r3, #0]
 80116b2:	f04f 30ff 	mov.w	r0, #4294967295
 80116b6:	4770      	bx	lr
 80116b8:	2001da0c 	.word	0x2001da0c

080116bc <_read>:
 80116bc:	4b02      	ldr	r3, [pc, #8]	; (80116c8 <_read+0xc>)
 80116be:	2258      	movs	r2, #88	; 0x58
 80116c0:	601a      	str	r2, [r3, #0]
 80116c2:	f04f 30ff 	mov.w	r0, #4294967295
 80116c6:	4770      	bx	lr
 80116c8:	2001da0c 	.word	0x2001da0c

080116cc <_exit>:
 80116cc:	e7fe      	b.n	80116cc <_exit>
	...

080116d0 <_init>:
 80116d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80116d2:	bf00      	nop
 80116d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80116d6:	bc08      	pop	{r3}
 80116d8:	469e      	mov	lr, r3
 80116da:	4770      	bx	lr

080116dc <_fini>:
 80116dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80116de:	bf00      	nop
 80116e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80116e2:	bc08      	pop	{r3}
 80116e4:	469e      	mov	lr, r3
 80116e6:	4770      	bx	lr
